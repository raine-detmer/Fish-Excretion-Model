(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   4048331,      79764]
NotebookOptionsPosition[   4021103,      79338]
NotebookOutlinePosition[   4021554,      79356]
CellTagsIndexPosition[   4021511,      79353]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
This Mathematica notebook contains the code to produce the supplemental \
figures for \[OpenCurlyDoubleQuote]Fertilization by coral-dwelling fish \
promotes coral growth but can exacerbate bleaching response\
\[CloseCurlyDoubleQuote] by A.R. Detmer, R. Cunning, F. Pfab, A.L. Brown, A. \
C. Stier, R.M. Nisbet, and H.V. Moeller. 

Note that external irradiance is denoted with an L in the following code; \
this is equivalent to  I in the main text\
\>", "Text",
 CellChangeTimes->{
  3.8442942521713247`*^9, {3.844466194062128*^9, 3.844466264883626*^9}, {
   3.844508353450482*^9, 3.844508381897818*^9}, {3.8445084701820717`*^9, 
   3.844508497422714*^9}, 3.8445090512381973`*^9, {3.844511186057412*^9, 
   3.844511210730481*^9}, {3.844784750364674*^9, 3.844784754446656*^9}, {
   3.8456423786940193`*^9, 3.84564250907224*^9}, {3.846161601738906*^9, 
   3.846161624858417*^9}, 3.846189278729723*^9, {3.854027223332443*^9, 
   3.854027225268868*^9}, {3.85402729395805*^9, 
   3.854027369547091*^9}},ExpressionUUID->"6c32be59-30d3-4a59-be01-\
4b2f9822d692"],

Cell[CellGroupData[{

Cell["Define constant parameters (run this first)", "Section",
 CellChangeTimes->{{3.8311382767249193`*^9, 3.831138282408691*^9}, {
  3.8311383762657843`*^9, 3.831138383655119*^9}, {3.831805381179727*^9, 
  3.831805381496282*^9}, {3.831988625229391*^9, 3.8319886374777718`*^9}, {
  3.842183583169731*^9, 3.8421836050658493`*^9}, {3.846189281593994*^9, 
  3.8461893169735117`*^9}},ExpressionUUID->"2764d1fa-bce8-464b-a525-\
a75c0552fb59"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "list", " ", "of", " ", "parameters", " ", "and", " ", "expressions", " ",
      "that", " ", 
     RowBox[{"don", "'"}], "t", " ", "change"}], ",", " ", 
    RowBox[{
    "run", " ", "this", " ", "before", " ", "running", " ", "any", " ", "of", 
     " ", "the", " ", "other", " ", "code"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "values", " ", "that", " ", "were", " ", "varied", " ", "in", " ", "the", 
    " ", "model", " ", "simulations", " ", "are", " ", "commented", " ", 
    "out", " ", "here"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "parameters", " ", "from", " ", "original", " ", "Cunning", " ", "et", " ", 
    RowBox[{"al", ".", " ", "2017"}], " ", "model", " ", 
    RowBox[{"(", 
     RowBox[{
     "see", " ", "Table", " ", "2", " ", "of", " ", "Cunning", " ", "et", " ", 
      RowBox[{"al", ".", " ", "2017"}]}], ")"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nNH", "=", ".18"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"N", ":", 
     RowBox[{
     "C", " ", "molar", " ", "ratio", " ", "in", " ", "host", " ", 
      "biomass"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nNS", "=", ".13"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"N", ":", 
     RowBox[{
     "C", " ", "molar", " ", "ratio", " ", "in", " ", "symbiont", " ", 
      "biomass"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nNX", "=", ".2"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"N", ":", 
     RowBox[{
     "C", " ", "molar", " ", "ratio", " ", "in", " ", "prey", " ", 
      "biomass"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"j0HT", "=", ".03"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "maintenance", " ", "rate", " ", "of", " ", "host", " ", "biomass"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"j0ST", "=", ".03"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "maintenance", " ", "rate", " ", "of", " ", "symbiont", " ", "biomass"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]NH", "=", ".9"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "proportion", " ", "of", " ", "N", " ", "turnover", " ", "recycled", " ", 
     "in", " ", "host"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]CH", "=", ".1"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "proportion", " ", "host", " ", "metabolic", " ", "CO2", " ", "recycled", 
     " ", "to", " ", "photosynthesis"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]NS", "=", ".9"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "proportion", " ", "of", " ", "N", " ", "turnover", " ", "recycled", " ", 
     "in", " ", "symbiont"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]CS", "=", ".9"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "proportion", " ", "symbiont", " ", "metabolic", " ", "CO2", " ", 
     "recycled", " ", "to", " ", "photosynthesis"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jXm", "=", ".13"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "maximum", " ", "prey", " ", "assimilation", " ", "rate", " ", "from", 
     " ", "host", " ", "feeding"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KX", "=", 
     SuperscriptBox["10", 
      RowBox[{"-", "6"}]]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"half", "-", 
     RowBox[{
     "saturation", " ", "constant", " ", "for", " ", "prey", " ", 
      "assimilation"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jNm", "=", ".035"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"maximum", " ", "host", " ", "DIN", " ", "uptake", " ", "rate"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KN", "=", 
     RowBox[{"1.5", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"half", "-", 
     RowBox[{
     "saturation", " ", "constant", " ", "for", " ", "host", " ", "DIN", " ", 
      "uptake"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kCO2", "=", "10"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "efficacy", " ", "of", " ", "CO2", " ", "delivery", " ", "to", " ", 
     "photosynthesis", " ", "by", " ", "host", " ", "carbon", " ", 
     "concentrating", " ", "mechanisms"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jHGm", "=", "1"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "maximum", " ", "specific", " ", "growth", " ", "rate", " ", "of", " ", 
     "host"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"yCL", "=", ".1"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"quantum", " ", "yield", " ", "of", " ", "photosynthesis"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"yC", "=", ".8"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "yield", " ", "of", " ", "biomass", " ", "formation", " ", "from", " ", 
     "carbon"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"astar", "=", "1.34"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"effective", " ", "light"}], "-", 
     RowBox[{"absorbing", " ", "cross"}], "-", 
     RowBox[{"section", " ", "of", " ", "symbiont"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kNPQ", "=", "112"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"non", "-", 
     RowBox[{"photochemical", " ", "quenching", " ", 
      RowBox[{"(", "NPQ", ")"}], " ", "capacity", " ", "of", " ", 
      "symbiont"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kROS", "=", "80"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "excess", " ", "photon", " ", "energy", " ", "that", " ", "doubles", " ", 
     "ROS", " ", "production", " ", "relative", " ", "to", " ", "baseline", 
     " ", "levels"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jCPm", "=", "2.8"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "maximum", " ", "specific", " ", "photosynthesis", " ", "rate", " ", "of",
      " ", "symbiont"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jSGm", "=", "0.25"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "maximum", " ", "specific", " ", "growth", " ", "rate", " ", "of", " ", 
     "symbiont"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", "=", "5"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "scaling", " ", "parameter", " ", "for", " ", "bleaching", " ", 
     "response"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"X", "=", "0"}], ";"}], "*)"}], 
   RowBox[{"(*", 
    RowBox[{
    "concentration", " ", "of", " ", "prey", " ", "in", " ", "environment"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"\[CapitalNu]", "=", 
      RowBox[{"1", "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "7"}]]}]}], ";"}], "*)"}], 
   RowBox[{"(*", " ", 
    RowBox[{
    "ambient", " ", "concetration", " ", "of", " ", "nitrogen", " ", "in", 
     " ", "external", " ", "environment"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L", "=", "15"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"external", " ", "irradiance"}], ",", " ", 
     RowBox[{
     "ATTENTION", " ", "this", " ", "is", " ", "I", " ", "in", " ", "the", 
      " ", "main", " ", "text"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]", "=", "50"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"Pfab", " ", "et", " ", 
     RowBox[{"al", ".", " ", 
      RowBox[{
       RowBox[{"(", "submitted", ")"}], "'"}]}], "s", " ", "lambda", " ", 
     "parameter", " ", "for", " ", "simulating", " ", "fluxes", " ", "as", 
     " ", "ODEs", " ", 
     RowBox[{"(", 
      RowBox[{
      "continuous", " ", "time", " ", "approximation", " ", "method", " ", 
       "for", " ", "simulating", " ", "the", " ", "system"}], ")"}]}], " ", 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"parameters", " ", "for", " ", "host", " ", "volume"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kv", "=", "16.9"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"liters", " ", "per", " ", "C"}], "-", 
     RowBox[{"mol", " ", "H"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vi", "=", "0.7"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "fraction", " ", "of", " ", "coral", " ", "volume", " ", "occupied", " ",
       "by", " ", "water"}], ";", " ", 
     RowBox[{"based", " ", "on", " ", "Zawada", " ", "et", " ", 
      RowBox[{"al", ".", " ", "P", ".", " ", "damicornis"}], " ", "data"}], 
     ";", " ", 
     RowBox[{"see", " ", "supplement", " ", "for", " ", "details"}]}], " ", 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"parameters", " ", "for", " ", "fish"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kp", "=", "210"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "scales", " ", "fish", " ", "carrying", " ", "capacity", " ", "with", 
      " ", "biomass", " ", "of", " ", "host"}], ",", " ", 
     RowBox[{
      RowBox[{"calculated", " ", "using", " ", "kv"}], "=", 
      RowBox[{
       RowBox[{"16.9", " ", "C"}], "-", 
       RowBox[{"mol", "/", "L"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rp", "=", "0.05"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"intrinsic", " ", "growth", " ", "rate"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Bp", " ", "=", " ", "1"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"intraspecific", " ", "competition", " ", "coefficient"}], "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ep", "=", 
     RowBox[{"1.5", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "5"}]}]}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"damselfish", " ", "excretion", " ", "rate", " ", 
      RowBox[{"(", 
       RowBox[{
       "total", " ", "mols", " ", "N", " ", "per", " ", "g", " ", "per", " ", 
        "d"}], ")"}]}], ";", " ", 
     RowBox[{"calculated", " ", "using", " ", "data", " ", "on", " ", 
      RowBox[{"D", ".", " ", "flavicaudus"}]}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"parameters", " ", "for", " ", "nitrogen", " ", "equations"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]", " ", "=", " ", "0.23"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "proportion", " ", "of", " ", "coral", " ", "tissue", " ", "in", " ", 
     "direct", " ", "contact", " ", "with", " ", "the", " ", "external", " ", 
     "environment"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"flushing", " ", "rate"}], ",", " ", 
     RowBox[{"units", " ", "of", " ", 
      RowBox[{"1", "/", "days"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Zeta]", " ", "=", "1"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "fraction", " ", "of", " ", "waste", " ", "N", " ", "released", " ", "by",
      " ", "the", " ", "symbiont", " ", "that", " ", "is", " ", 
     "bioavailable", " ", "to", " ", "the", " ", "coral"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"derived", " ", "parameters"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"jX", "=", 
      FractionBox[
       RowBox[{"jXm", " ", "X"}], 
       RowBox[{"X", "+", "KX"}]]}], ";"}], "*)"}], 
   RowBox[{"(*", " ", 
    RowBox[{"prey", " ", "uptake", " ", "from", " ", "environment"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"jN", "=", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "*)"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"N", " ", "uptake", " ", "from", " ", "environment"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jHT", "=", "j0HT"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"rate", " ", "of", " ", "host", " ", "biomass", " ", "turnover"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rNS", "=", 
     RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "nitrogen", " ", "recycled", " ", "from", " ", "symbiont", " ", "biomass",
      " ", "turnover"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"initial", " ", "conditions"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H0", "=", "1"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"intial", " ", "host", " ", "biomass"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S0", "=", "0.3"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"initial", " ", "symbiont", " ", "biomass"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jCP0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Rho]C0", "=", " ", "1"}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"healthy", " ", 
       RowBox[{"state", ":", " ", 
        RowBox[{"jCP0", " ", "and", " ", "\[Rho]C"}]}]}], "=", 
      RowBox[{"jCPm", " ", "or", " ", "1"}]}], ",", " ", 
     RowBox[{
      RowBox[{"bleached", " ", 
       RowBox[{"state", ":", " ", 
        RowBox[{"jCP0", " ", "and", " ", "\[Rho]C"}]}]}], "=", "0"}]}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"VH0", "=", 
     RowBox[{"kv", "*", "H0"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"initial", " ", "host", " ", "volume"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"jNi0", " ", "=", " ", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"jNw0", "=", " ", 
      RowBox[{
       FractionBox[
        RowBox[{"jNm", "*", "\[CapitalNu]"}], 
        RowBox[{"\[CapitalNu]", "+", "KN"}]], "*", 
       RowBox[{"H0", "/", "S0"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"P0", "=", "0"}], ";"}], "*)"}], 
   RowBox[{"(*", 
    RowBox[{"kp", "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H0"}], "*)"}], 
   RowBox[{"(*", 
    RowBox[{
    "change", " ", "P0", " ", "depending", " ", "on", " ", "whether", " ", 
     "or", " ", "not", " ", "fish", " ", "are", " ", "present"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "function", " ", "to", " ", "remove", " ", "identifiers", " ", "from", 
     " ", "simulations", " ", "run", " ", "in", " ", 
     RowBox[{"Module", "[", "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"str", "[", "expr_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"ToString", "[", 
          RowBox[{"expr", ",", 
           RowBox[{"FormatType", "\[Rule]", "StandardForm"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"c", ":", "WordCharacter"}], "~~", "\"\<$\>\"", "~~", 
           RowBox[{"DigitCharacter", ".."}]}], "\[RuleDelayed]", "c"}]}], 
        "]"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8311383585474453`*^9, 3.831138367785331*^9}, {
   3.83113894099996*^9, 3.831139014847781*^9}, {3.8311390450291033`*^9, 
   3.831139066865962*^9}, {3.8311391164107027`*^9, 3.831139173526503*^9}, {
   3.83113946711919*^9, 3.831139676727804*^9}, {3.831140997888796*^9, 
   3.8311410507752323`*^9}, {3.831545417385912*^9, 3.831545417732181*^9}, {
   3.831545448286868*^9, 3.8315454551081963`*^9}, {3.831545490673456*^9, 
   3.831545908609331*^9}, {3.831545938761093*^9, 3.831545960803578*^9}, {
   3.831546058361369*^9, 3.8315460648646727`*^9}, {3.831546115988411*^9, 
   3.831546127832762*^9}, {3.831546171473267*^9, 3.8315461839117928`*^9}, {
   3.831546218925294*^9, 3.831546262576211*^9}, {3.831546351626198*^9, 
   3.83154637922687*^9}, {3.8315464900489388`*^9, 3.831546491316042*^9}, {
   3.831546530312615*^9, 3.8315465644185543`*^9}, {3.831546604947377*^9, 
   3.831546660987114*^9}, {3.831546696965485*^9, 3.831546739663084*^9}, {
   3.8316746405299253`*^9, 3.831674653565072*^9}, {3.831675449320999*^9, 
   3.831675450138834*^9}, {3.831676812446929*^9, 3.8316768346415157`*^9}, {
   3.831925920241293*^9, 3.831925942189641*^9}, {3.831926156163259*^9, 
   3.831926156702281*^9}, {3.831926194119972*^9, 3.831926194527254*^9}, {
   3.835886878018375*^9, 3.835886881997559*^9}, {3.835887022397422*^9, 
   3.835887102628106*^9}, {3.835887187184772*^9, 3.835887239435013*^9}, 
   3.835887279166039*^9, {3.835887323895143*^9, 3.835887493026189*^9}, {
   3.836145496857283*^9, 3.8361455173065147`*^9}, {3.836562737278612*^9, 
   3.836562739142735*^9}, {3.8365730310627193`*^9, 3.83657304986204*^9}, {
   3.843241720602089*^9, 3.843241892296892*^9}, {3.843241930060936*^9, 
   3.843241976478909*^9}, {3.843242010042067*^9, 3.843242127728862*^9}, {
   3.844204443287408*^9, 3.844204445222144*^9}, {3.8442044954495687`*^9, 
   3.844204502050164*^9}, {3.8444485056881437`*^9, 3.8444485539271307`*^9}, {
   3.844508516503415*^9, 3.844508573779632*^9}, {3.854024811355853*^9, 
   3.854024816133975*^9}, {3.8540271915568247`*^9, 3.854027210993177*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"6171eb7e-af10-4d0b-b81d-74296c8745b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Fig. S1: Bifurcation diagrams of waste N and fish excretions as a function of \
prey availability\
\>", "Section",
 CellChangeTimes->{{3.8428179602341337`*^9, 3.842817976030444*^9}, {
  3.84437875522964*^9, 3.8443787710475397`*^9}, {3.8456439530554*^9, 
  3.845643960418023*^9}},ExpressionUUID->"07cb2725-2f59-4803-82ef-\
475a240717da"],

Cell[CellGroupData[{

Cell["Run simulations and format results", "Subsection",
 CellChangeTimes->{{3.8428179894670563`*^9, 3.842817994782044*^9}, {
  3.84282151015024*^9, 3.842821513632374*^9}, {3.8433101436943502`*^9, 
  3.8433101478800163`*^9}},ExpressionUUID->"819e8f45-687e-4c2d-9647-\
50240e06fa7f"],

Cell[CellGroupData[{

Cell["check that steady state is reached", "Subsubsection",
 CellChangeTimes->{{3.836915599006907*^9, 3.836915602739443*^9}, {
  3.841441354820907*^9, 3.8414413581009083`*^9}, {3.8433101524909277`*^9, 
  3.8433101536666107`*^9}, {3.8443788974833593`*^9, 
  3.844378901408293*^9}},ExpressionUUID->"0ff9fa4c-0698-4e41-9c2d-\
9b4494fbdbe6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh", ",", 
    "LfunH"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.831830789369714*^9, 3.8318307905412607`*^9}, {
   3.835995882215592*^9, 3.83599588299831*^9}, {3.8363089619914494`*^9, 
   3.836308970966587*^9}, {3.836309185335792*^9, 3.8363091870313787`*^9}, 
   3.8363138138722897`*^9, {3.842185022809176*^9, 3.8421850232165318`*^9}},
 CellLabel->
  "In[555]:=",ExpressionUUID->"1fa86d39-1d50-4434-8d0d-2f1f3a4461c3"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"environment", ":", " ", 
    RowBox[{"flushing", " ", "rate", " ", "and", " ", "N", " ", "level"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jN", "=", 
     FractionBox[
      RowBox[{"jNm", " ", "\[CapitalNu]"}], 
      RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jNi0", " ", "=", " ", 
     FractionBox[
      RowBox[{"jNm", " ", "\[CapitalNu]"}], 
      RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "800"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X2BifurRuns1", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"jX", "=", 
              FractionBox[
               RowBox[{"jXm", " ", "X"}], 
               RowBox[{"X", "+", "KX"}]]}], ",", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{"jN", "=", 
                FractionBox[
                 RowBox[{"jNm", " ", "\[CapitalNu]"}], 
                 RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ","}], "*)"}], 
             RowBox[{"jHT", "=", "j0HT"}], ",", 
             RowBox[{"rNS", "=", 
              RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
             RowBox[{"VH0", "=", 
              RowBox[{"kv", "*", "H0"}]}], ",", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
               RowBox[{"jNi0", " ", "=", " ", 
                FractionBox[
                 RowBox[{"jNm", " ", "\[CapitalNu]"}], 
                 RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ","}], "*)"}], 
             "states", ",", " ", "rNH", ",", " ", "S", ",", "H", ",", "VH", 
             ",", "P", ",", "Ni", ",", "jNi", ",", "\[Rho]C", ",", " ", "jCP",
              ",", " ", "jHG", ",", "\[Rho]N", ",", "jeC", ",", "jCO2", ",", 
             "A", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
             ",", "cROS1", ",", "jSG", ",", "jST", ",", "jNw", ",", "F", ",", 
             "fh", ",", "tsolve", ",", " ", "addtimetostatevars", ",", "eqs", 
             ",", "inis", ",", "sol", ",", "t", ",", "maketmax", ",", " ", 
             "steadyNi", ",", "steadyHGrowth", ",", "steadySH", ",", 
             "steadyjNw", ",", "steadyep"}], 
            RowBox[{"(*", 
             RowBox[{
             "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
              "intermediate", " ", "output", " ", "values", " ", "in", " ", 
              "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
              RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
             FractionBox[
              RowBox[{"A", " ", "B", " ", 
               RowBox[{"(", 
                RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
              RowBox[{
               RowBox[{
                SuperscriptBox["A", "2"], " ", "B"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox["B", "2"]}], "+", 
               RowBox[{
                SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
               RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
               RowBox[{
                SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
            RowBox[{"(*", 
             RowBox[{"same", " ", "as", " ", 
              FractionBox["1", 
               RowBox[{
                FractionBox["1", "\[Rho]"], "+", 
                FractionBox["1", "A"], "+", 
                FractionBox["1", "B"], "-", 
                FractionBox["1", 
                 RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fh", "[", 
              RowBox[{
               RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
             RowBox[{"Piecewise", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", 
                  RowBox[{"y", "<", "0"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"kv", " ", "*", "y"}], ",", 
                  RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
              "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", "Calculations", " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"jHG", "=", 
             RowBox[{
              RowBox[{"F", "[", "jHGm", "]"}], "[", 
              RowBox[{
               RowBox[{"yC", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Rho]C", " ", 
                   RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                  
                  RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                  RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                SuperscriptBox["nNH", 
                 RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"jSG", "=", 
             RowBox[{
              RowBox[{"F", "[", "jSGm", "]"}], "[", 
              RowBox[{
               RowBox[{"jCP", " ", "yC"}], ",", 
               FractionBox[
                RowBox[{"rNS", "+", 
                 FractionBox[
                  RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"\[Rho]N", "=", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
                RowBox[{"nNH", " ", "jHG"}]}], " ", 
               RowBox[{"(*", 
                SuperscriptBox["yN", 
                 RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jeC", "=", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"jX", "-", 
                FractionBox["jHG", "yC"], "+", 
                FractionBox[
                 RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], 
            ";", " ", "\[IndentingNewLine]", 
            RowBox[{"jCO2", "=", 
             RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jL", "=", 
             RowBox[{"A", " ", "astar", " ", "L"}]}], " ", ";", 
            "\[IndentingNewLine]", 
            RowBox[{"rCH", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"jHT", "+", 
                FractionBox[
                 RowBox[{"jHG", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
              "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"rCS", "=", 
             RowBox[{"\[Sigma]CS", 
              RowBox[{"(", 
               RowBox[{"j0ST", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
                 SuperscriptBox["yC", 
                  RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jeL", "=", 
             RowBox[{"jL", "-", 
              FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jNPQ", "=", 
             FractionBox["1", 
              RowBox[{
               FractionBox["1", "jeL"], "+", 
               FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
            RowBox[{"cROS1", "=", 
             FractionBox[
              RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jST", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"rNH", "=", 
             RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"A", "=", 
             RowBox[{"1.256307", "+", 
              RowBox[{"1.385969", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "6.479055"}], " ", 
                 RowBox[{"S", "/", "H"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jNw", "=", " ", 
             RowBox[{
              RowBox[{"\[Rho]N", "*", 
               RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
              RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"tsolve", "=", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Rho]C", ",", 
                 RowBox[{"jCP", "-", 
                  RowBox[{"jSG", " ", 
                   SuperscriptBox["yC", 
                    RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"jCP", ",", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"F", "[", "jCPm", "]"}], "[", 
                   RowBox[{
                    RowBox[{"jL", " ", "yCL"}], ",", 
                    RowBox[{"rCS", "+", 
                    FractionBox[
                    RowBox[{"H", " ", 
                    RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
                  RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"jNi", ",", " ", 
                 FractionBox[
                  RowBox[{"jNm", " ", "*", "Ni"}], 
                  RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
              "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"states", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"tsolve", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
                "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"addtimetostatevars", "=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"#", "\[Rule]", 
                  RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", 
               "states"}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
            RowBox[{"eqs", "=", 
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
                   "\[Equal]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Lambda]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
                "tsolve"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"S", 
                    RowBox[{"(", 
                    RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"H", 
                    RowBox[{"(", 
                    RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                  RowBox[{"fh", "[", 
                   RowBox[{"t", ",", 
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"d", "*", 
                    RowBox[{"(", " ", 
                    RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                    " ", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                    ")"}], "/", 
                    RowBox[{"(", " ", 
                    RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
                  
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"P", "*", 
                    RowBox[{"(", 
                    RowBox[{"rp", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                    ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
                "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"inis", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], 
                   "\[Equal]", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
                "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"sol", "=", 
             RowBox[{
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Join", "[", 
                  RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"#", "&"}], "/@", "states"}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
                RowBox[{"Method", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<EquationSimplification\>\"", "\[Rule]", 
                   "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "change", " ", "in", " ", "Ni", " ", "over", " ", "the", " ", 
              "last", " ", "50", " ", "days", " ", "of", " ", "the", " ", 
              "simulation"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"steadyNi", "=", 
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{"Ni", "[", "tmax", "]"}], "/.", "sol"}], "]"}], 
                 "-", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{"Ni", "[", 
                    RowBox[{"tmax", "-", "50"}], "]"}], "/.", "sol"}], 
                  "]"}]}], ")"}], "/", 
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{"Ni", "[", 
                  RowBox[{"tmax", "-", "50"}], "]"}], "/.", "sol"}], "]"}]}], 
              "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"change", " ", "in", " ", "host", " ", "growth"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"steadyHGrowth", "=", 
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
                    RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], 
                 "-", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"H", "'"}], "[", 
                    RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                    RowBox[{"H", "[", 
                    RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], 
                  "]"}]}], ")"}], "/", 
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"H", "'"}], "[", 
                   RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                  RowBox[{"H", "[", 
                   RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], 
                "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"change", " ", "in", " ", 
              RowBox[{"S", "/", "H"}]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"steadySH", "=", 
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"S", "[", "tmax", "]"}], "/", 
                    RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], 
                 "-", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"S", "[", 
                    RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                    RowBox[{"H", "[", 
                    RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], 
                  "]"}]}], ")"}], "/", 
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"S", "[", 
                   RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                  RowBox[{"H", "[", 
                   RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], 
                "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
             "}"}]}]}], 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
            "record", " ", "the", " ", "changes", " ", "in", " ", "Ni"}], ",",
             " ", 
            RowBox[{"H", " ", "growth"}], ",", " ", 
            RowBox[{"and", " ", 
             RowBox[{"S", "/", "H"}], " ", "values", " ", "as", " ", 
             "output"}]}], "*)"}], "]"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"P0", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", 
             RowBox[{"kp", "*", 
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H0"}]}], "}"}]}], 
          "}"}]}], "]"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "iterate", " ", "the", " ", "above", " ", "once", " ", "with", " ", 
         "no", " ", "fish", " ", 
         RowBox[{"(", 
          RowBox[{"P0", "=", "0"}], ")"}], " ", "and", " ", "once", " ", 
         "with", " ", "fish", " ", 
         RowBox[{"(", 
          RowBox[{"P0", "=", 
           RowBox[{"kp", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H0"}]}], ")"}]}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"X", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"0.1", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"0.25", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"0.5", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"0.75", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1.25", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1.5", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1.75", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", " ", 
           RowBox[{"2", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}]}], "}"}]}], "}"}]}], 
      RowBox[{"(*", 
       RowBox[{"different", " ", "levels", " ", "of", " ", "prey"}], "*)"}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836576641311953*^9, 3.836576745811816*^9}, {3.8365767807913227`*^9, 
   3.836576796666417*^9}, {3.83690984159394*^9, 3.8369098642372837`*^9}, {
   3.8369099504464817`*^9, 3.836909992597097*^9}, {3.836910066716194*^9, 
   3.836910181553328*^9}, {3.8369102578063707`*^9, 3.836910390882205*^9}, {
   3.8369104221261673`*^9, 3.8369104445293837`*^9}, {3.836910588258913*^9, 
   3.836910603839734*^9}, {3.83691170755369*^9, 3.836911723135646*^9}, 
   3.836916782182846*^9, {3.836925532408095*^9, 3.836925559814872*^9}, {
   3.836925635646242*^9, 3.836925651385313*^9}, {3.8369257592761383`*^9, 
   3.836925766396386*^9}, {3.836925803476535*^9, 3.836925803607955*^9}, {
   3.8369258387388363`*^9, 3.8369258392626963`*^9}, {3.8369275914785147`*^9, 
   3.836927592143552*^9}, {3.8369281052958*^9, 3.8369281055248833`*^9}, {
   3.836928144604047*^9, 3.836928145018083*^9}, {3.836928338450294*^9, 
   3.836928353792881*^9}, {3.837018889743607*^9, 3.837018921301309*^9}, {
   3.837018963934004*^9, 3.8370190673895197`*^9}, {3.837019103683463*^9, 
   3.837019145242859*^9}, {3.837020901834002*^9, 3.837020937828723*^9}, {
   3.837021267184713*^9, 3.837021394810358*^9}, {3.837021431354228*^9, 
   3.837021443860634*^9}, {3.83711466872926*^9, 3.8371146861974154`*^9}, {
   3.837115401754525*^9, 3.837115415698612*^9}, 3.841441369608135*^9, {
   3.841441408277194*^9, 3.8414414297621326`*^9}, {3.842185066963443*^9, 
   3.842185069648076*^9}, 3.843924998075695*^9, {3.844378779477378*^9, 
   3.8443788725007563`*^9}, {3.854024833392497*^9, 3.854024870769471*^9}},
 CellLabel->
  "In[556]:=",ExpressionUUID->"c2f3158f-62d9-49f0-a8a4-3b35ce92c83f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", "X2BifurRuns1", "]"}], ",", " ", 
    RowBox[{
     RowBox[{"#", ">", 
      RowBox[{"1", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "4"}]}]}]}], "&"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"nothing", " ", "is", " ", "greater", " ", "than", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "4"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8414411429815903`*^9, 3.841441146445889*^9}, {
  3.841441308667336*^9, 3.841441312527545*^9}, {3.8414414720350313`*^9, 
  3.8414414762482567`*^9}, {3.8433014669511137`*^9, 3.843301495023656*^9}, {
  3.8445090939194736`*^9, 3.8445090949608507`*^9}},
 CellLabel->
  "In[563]:=",ExpressionUUID->"d33c1776-b4f5-4c6e-abf3-50ce664208d2"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.8414414918036823`*^9, 3.843301499391221*^9, 
  3.844509096539289*^9, 3.854026372553931*^9},
 CellLabel->
  "Out[563]=",ExpressionUUID->"ca8e961d-af60-44cd-93aa-99d372bb7959"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Run the simulations", "Subsubsection",
 CellChangeTimes->{{3.836915599006907*^9, 
  3.836915602739443*^9}},ExpressionUUID->"8a2bd38b-8fe2-4633-bd56-\
fa87b0d8a2ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh", ",", 
    "LfunH"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.831830789369714*^9, 3.8318307905412607`*^9}, {
   3.835995882215592*^9, 3.83599588299831*^9}, {3.8363089619914494`*^9, 
   3.836308970966587*^9}, {3.836309185335792*^9, 3.8363091870313787`*^9}, 
   3.8363138138722897`*^9, {3.842185082074585*^9, 3.842185082812756*^9}},
 CellLabel->
  "In[564]:=",ExpressionUUID->"0340add1-053f-4abb-b9b2-71e0464697e9"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"environment", ":", " ", 
    RowBox[{"flushing", " ", "rate", " ", "and", " ", "N", " ", "level"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jN", "=", 
     FractionBox[
      RowBox[{"jNm", " ", "\[CapitalNu]"}], 
      RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jNi0", " ", "=", " ", 
     FractionBox[
      RowBox[{"jNm", " ", "\[CapitalNu]"}], 
      RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "800"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X2BifurRuns", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"jX", "=", 
              FractionBox[
               RowBox[{"jXm", " ", "X"}], 
               RowBox[{"X", "+", "KX"}]]}], ",", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{"jN", "=", 
                FractionBox[
                 RowBox[{"jNm", " ", "\[CapitalNu]"}], 
                 RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ","}], "*)"}], 
             RowBox[{"jHT", "=", "j0HT"}], ",", 
             RowBox[{"rNS", "=", 
              RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
             RowBox[{"VH0", "=", 
              RowBox[{"kv", "*", "H0"}]}], ",", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
               RowBox[{"jNi0", " ", "=", " ", 
                FractionBox[
                 RowBox[{"jNm", " ", "\[CapitalNu]"}], 
                 RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ","}], "*)"}], 
             "states", ",", " ", "rNH", ",", " ", "S", ",", "H", ",", "VH", 
             ",", "P", ",", "Ni", ",", "jNi", ",", "\[Rho]C", ",", " ", "jCP",
              ",", " ", "jHG", ",", "\[Rho]N", ",", "jeC", ",", "jCO2", ",", 
             "A", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
             ",", "cROS1", ",", "jSG", ",", "jST", ",", "jNw", ",", "F", ",", 
             "fh", ",", "tsolve", ",", " ", "addtimetostatevars", ",", "eqs", 
             ",", "inis", ",", "sol", ",", "t", ",", "maketmax", ",", " ", 
             "steadyNi", ",", "steadyHGrowth", ",", "steadySH", ",", 
             "steadyjNw", ",", "steadyep"}], 
            RowBox[{"(*", 
             RowBox[{
             "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
              "intermediate", " ", "output", " ", "values", " ", "in", " ", 
              "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
              RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
             FractionBox[
              RowBox[{"A", " ", "B", " ", 
               RowBox[{"(", 
                RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
              RowBox[{
               RowBox[{
                SuperscriptBox["A", "2"], " ", "B"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox["B", "2"]}], "+", 
               RowBox[{
                SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
               RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
               RowBox[{
                SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
            RowBox[{"(*", 
             RowBox[{"same", " ", "as", " ", 
              FractionBox["1", 
               RowBox[{
                FractionBox["1", "\[Rho]"], "+", 
                FractionBox["1", "A"], "+", 
                FractionBox["1", "B"], "-", 
                FractionBox["1", 
                 RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fh", "[", 
              RowBox[{
               RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
             RowBox[{"Piecewise", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", 
                  RowBox[{"y", "<", "0"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"kv", " ", "*", "y"}], ",", 
                  RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
              "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", "Calculations", " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"jHG", "=", 
             RowBox[{
              RowBox[{"F", "[", "jHGm", "]"}], "[", 
              RowBox[{
               RowBox[{"yC", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Rho]C", " ", 
                   RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                  
                  RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                  RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                SuperscriptBox["nNH", 
                 RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"jSG", "=", 
             RowBox[{
              RowBox[{"F", "[", "jSGm", "]"}], "[", 
              RowBox[{
               RowBox[{"jCP", " ", "yC"}], ",", 
               FractionBox[
                RowBox[{"rNS", "+", 
                 FractionBox[
                  RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"\[Rho]N", "=", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
                RowBox[{"nNH", " ", "jHG"}]}], " ", 
               RowBox[{"(*", 
                SuperscriptBox["yN", 
                 RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jeC", "=", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"jX", "-", 
                FractionBox["jHG", "yC"], "+", 
                FractionBox[
                 RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], 
            ";", " ", "\[IndentingNewLine]", 
            RowBox[{"jCO2", "=", 
             RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jL", "=", 
             RowBox[{"A", " ", "astar", " ", "L"}]}], " ", ";", 
            "\[IndentingNewLine]", 
            RowBox[{"rCH", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"jHT", "+", 
                FractionBox[
                 RowBox[{"jHG", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
              "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"rCS", "=", 
             RowBox[{"\[Sigma]CS", 
              RowBox[{"(", 
               RowBox[{"j0ST", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
                 SuperscriptBox["yC", 
                  RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jeL", "=", 
             RowBox[{"jL", "-", 
              FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jNPQ", "=", 
             FractionBox["1", 
              RowBox[{
               FractionBox["1", "jeL"], "+", 
               FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
            RowBox[{"cROS1", "=", 
             FractionBox[
              RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jST", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"rNH", "=", 
             RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"A", "=", 
             RowBox[{"1.256307", "+", 
              RowBox[{"1.385969", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "6.479055"}], " ", 
                 RowBox[{"S", "/", "H"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jNw", "=", " ", 
             RowBox[{
              RowBox[{"\[Rho]N", "*", 
               RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
              RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"tsolve", "=", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Rho]C", ",", 
                 RowBox[{"jCP", "-", 
                  RowBox[{"jSG", " ", 
                   SuperscriptBox["yC", 
                    RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"jCP", ",", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"F", "[", "jCPm", "]"}], "[", 
                   RowBox[{
                    RowBox[{"jL", " ", "yCL"}], ",", 
                    RowBox[{"rCS", "+", 
                    FractionBox[
                    RowBox[{"H", " ", 
                    RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
                  RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"jNi", ",", " ", 
                 FractionBox[
                  RowBox[{"jNm", " ", "*", "Ni"}], 
                  RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
              "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"states", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"tsolve", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
                "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"addtimetostatevars", "=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"#", "\[Rule]", 
                  RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", 
               "states"}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
            RowBox[{"eqs", "=", 
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
                   "\[Equal]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Lambda]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
                "tsolve"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"S", 
                    RowBox[{"(", 
                    RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"H", 
                    RowBox[{"(", 
                    RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                  RowBox[{"fh", "[", 
                   RowBox[{"t", ",", " ", 
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"d", "*", 
                    RowBox[{"(", " ", 
                    RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                    " ", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                    ")"}], "/", 
                    RowBox[{"(", " ", 
                    RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
                  
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"P", "*", 
                    RowBox[{"(", 
                    RowBox[{"rp", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                    ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
                "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"inis", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], 
                   "\[Equal]", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
                "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"sol", "=", 
             RowBox[{
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Join", "[", 
                  RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"#", "&"}], "/@", "states"}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
                RowBox[{"Method", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<EquationSimplification\>\"", "\[Rule]", 
                   "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"steady", " ", "state", " ", "Ni"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"steadyNi", "=", 
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"Ni", "[", "tmax", "]"}], "/.", "sol"}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"steady", " ", "state", " ", "host", " ", "growth"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"steadyHGrowth", "=", 
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
                RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}]}], 
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"steady", " ", "state", " ", 
              RowBox[{"S", "/", "H"}]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"steadySH", "=", 
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"S", "[", "tmax", "]"}], "/", 
                RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}]}], 
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"symbiont", " ", "waste", " ", "nitrogen"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "need", " ", "to", " ", "add", " ", "tmax", " ", "to", " ", 
              "the", " ", "state", " ", "variables", " ", "involved", " ", 
              "in", " ", "the", " ", "calculation", " ", "of", " ", "jNw", 
              " ", 
              RowBox[{"(", 
               RowBox[{
               "S", " ", "and", " ", "VH", " ", "need", " ", "to", " ", "be", 
                " ", "changed", " ", "to", " ", 
                RowBox[{"S", "[", "t", "]"}], " ", "and", " ", 
                RowBox[{"VH", "[", "t", "]"}]}], ")"}]}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"maketmax", "=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"#", "\[Rule]", 
                  RowBox[{"#", "[", "tmax", "]"}]}], ")"}], "&"}], "/@", 
               "states"}], ")"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"steadyjNw", "=", 
             RowBox[{"Evaluate", "@", 
              RowBox[{"Flatten", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], ")"}], "/", 
                   RowBox[{"(", " ", 
                    RowBox[{"vi", "*", "VH"}], ")"}]}], "/.", "maketmax"}], "/.",
                  "sol"}], "}"}]}]}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"fish", " ", "excretion"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"steadyep", "=", 
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"ep", "*", 
                   RowBox[{"P", "[", "tmax", "]"}]}], ")"}], "/", 
                 RowBox[{"(", " ", 
                  RowBox[{"vi", "*", 
                   RowBox[{"VH", "[", "tmax", "]"}]}], ")"}]}], "}"}], "/.", 
               "sol"}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
             "steadyNi", ",", "steadyHGrowth", ",", "steadySH", ",", 
              "steadyjNw", ",", "steadyep"}], "}"}]}]}], 
          RowBox[{"(*", 
           RowBox[{
           "the", " ", "steady", " ", "state", " ", "values", " ", "as", " ", 
            "output"}], "*)"}], "]"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"P0", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", 
             RowBox[{"kp", "*", 
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H0"}]}], "}"}]}], 
          "}"}]}], "]"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "iterate", " ", "the", " ", "above", " ", "once", " ", "with", " ", 
         "no", " ", "fish", " ", 
         RowBox[{"(", 
          RowBox[{"P0", "=", "0"}], ")"}], " ", "and", " ", "once", " ", 
         "with", " ", "fish", " ", 
         RowBox[{"(", 
          RowBox[{"P0", "=", 
           RowBox[{"kp", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H0"}]}], ")"}]}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"X", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"0.1", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"0.25", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"0.5", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"0.75", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1.25", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1.5", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1.75", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", " ", 
           RowBox[{"2", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}]}], "}"}]}], "}"}]}], 
      RowBox[{"(*", 
       RowBox[{"different", " ", "levels", " ", "of", " ", "prey"}], "*)"}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836576641311953*^9, 3.836576745811816*^9}, {3.8365767807913227`*^9, 
   3.836576796666417*^9}, {3.83690984159394*^9, 3.8369098642372837`*^9}, {
   3.8369099504464817`*^9, 3.836909992597097*^9}, {3.836910066716194*^9, 
   3.836910181553328*^9}, {3.8369102578063707`*^9, 3.836910390882205*^9}, {
   3.8369104221261673`*^9, 3.8369104445293837`*^9}, {3.836910588258913*^9, 
   3.836910603839734*^9}, {3.83691170755369*^9, 3.836911723135646*^9}, 
   3.836916782182846*^9, {3.836925532408095*^9, 3.836925559814872*^9}, {
   3.836925635646242*^9, 3.836925651385313*^9}, {3.8369257592761383`*^9, 
   3.836925766396386*^9}, {3.836925803476535*^9, 3.836925803607955*^9}, {
   3.8369258387388363`*^9, 3.8369258392626963`*^9}, {3.8369275914785147`*^9, 
   3.836927592143552*^9}, {3.8369281052958*^9, 3.8369281055248833`*^9}, {
   3.836928144604047*^9, 3.836928145018083*^9}, {3.836928338450294*^9, 
   3.836928353792881*^9}, {3.837018889743607*^9, 3.837018921301309*^9}, {
   3.837018963934004*^9, 3.8370190673895197`*^9}, {3.837019103683463*^9, 
   3.837019145242859*^9}, {3.837020901834002*^9, 3.837020937828723*^9}, {
   3.837021267184713*^9, 3.837021394810358*^9}, {3.837021431354228*^9, 
   3.837021443860634*^9}, {3.83711466872926*^9, 3.8371146861974154`*^9}, {
   3.837115401754525*^9, 3.837115415698612*^9}, {3.842185088578429*^9, 
   3.842185095613703*^9}, 3.843925010244046*^9, {3.844378907469839*^9, 
   3.8443790126109333`*^9}, {3.854024885214533*^9, 3.854024895300198*^9}},
 CellLabel->
  "In[565]:=",ExpressionUUID->"494281f2-c0bd-41bc-b8c6-8acc1e54142f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "storing", " ", "these", " ", "simulations", " ", "so", " ", "Mathematica",
     " ", "saves", " ", "them", " ", "when", " ", "this", " ", "notebook", 
    " ", "is", " ", "closed"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<SXBifur\>\"", ",", "X2BifurRuns"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.842184304742968*^9, 3.8421843147321568`*^9}, {
   3.842184494581761*^9, 3.8421844998344917`*^9}, {3.842184749550542*^9, 
   3.8421847535057917`*^9}, {3.842185128921167*^9, 3.842185142514827*^9}, 
   3.844509165064293*^9},
 CellLabel->
  "In[572]:=",ExpressionUUID->"f0e797d5-583f-4eb4-9a6e-42f7890553e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"reload", " ", "the", " ", 
    RowBox[{"runs", ":", " ", 
     RowBox[{
      RowBox[{
      "need", " ", "to", " ", "do", " ", "this", " ", "each", " ", "time", 
       " ", "this", " ", "notebook", " ", "gets", " ", "re"}], "-", 
      "opened"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Get", "[", "\"\<SXBifur\>\"", "]"}], ";"}]}]], "Input",
 CellChangeTimes->{
  3.842184322303043*^9, {3.842184510291582*^9, 3.842184511225511*^9}, {
   3.842184756213563*^9, 3.842184757201247*^9}, {3.842185134473529*^9, 
   3.8421851354517603`*^9}, 3.8445091663945*^9},
 CellLabel->
  "In[573]:=",ExpressionUUID->"a74eb60a-ca06-41be-9357-91090a7f15fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get the results in the correct form to plot", "Subsubsection",
 CellChangeTimes->{{3.836915635258505*^9, 
  3.836915645073258*^9}},ExpressionUUID->"ba8c7a5b-ea99-4a20-ae9c-\
97018a226f45"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"getting", " ", "the", " ", "lists", " ", "to", " ", "plot", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"have", " ", "2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"fish", "/", "no"}], " ", "fish"}], ")"}], " ", "for", " ", 
       "each", " ", "of", " ", "the", " ", "5", " ", "outputs"}], ",", " ", 
      RowBox[{"so", " ", "10", " ", "lists", " ", "total"}]}]}]}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "transpose", " ", "this", " ", "to", " ", "change", " ", "the", " ", 
    "nested", " ", "list", " ", "from", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"P1", " ", "at", " ", "X1"}], ",", " ", 
        RowBox[{"P2", " ", "at", " ", "X1"}]}], "}"}], ",", " ", 
      RowBox[{"{", "X2", "}"}], ",", " ", 
      RowBox[{"...", 
       RowBox[{"{", "Xn", "}"}]}]}], "}"}], " ", "to", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"X1", ",", " ", "X2", ",", " ", 
        RowBox[{"...", " ", "Xn", " ", "at", " ", "P1"}]}], "}"}], ",", " ", 
      RowBox[{"{", "P2", "}"}]}], "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"XseparatePX", "=", 
     RowBox[{"Transpose", "[", "X2BifurRuns", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"prey", " ", "no", " ", "fish"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XBifurNoPX", "=", 
     RowBox[{"XseparatePX", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"separateXNoPX", "=", 
     RowBox[{"Transpose", "[", "XBifurNoPX", "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"group", " ", "each", " ", "output", " ", "together"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XBifurNoPXNi", "=", 
     RowBox[{"separateXNoPX", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "Ni", " ", "values", " ", "at", " ", "each", " ", "prey", " ", "level", 
     " ", "for", " ", "no", " ", "fish"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XBifurNoPXgrowth", "=", 
     RowBox[{"separateXNoPX", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"dH", "/", "Hdt"}], " ", "values", " ", "at", " ", "each", " ", 
     "prey", " ", "level", " ", "for", " ", "no", " ", "fish"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XBifurNoPXSH", "=", 
     RowBox[{"separateXNoPX", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"S", "/", "H"}], " ", "values", " ", "at", " ", "each", " ", 
     "prey", " ", "level", " ", "for", " ", "no", " ", "fish"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "symbiont", " ", "excretion", " ", "values", " ", "at", " ", "each", " ",
       "prey", " ", "level", " ", "for", " ", "no", " ", "fish"}], ",", " ", 
     RowBox[{
     "need", " ", "to", " ", "flatten", " ", "out", " ", "the", " ", "list", 
      " ", "of", " ", "values"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XBifurNoPXjNw", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"separateXNoPX", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "fish", " ", "excretion", " ", "values", " ", "at", " ", "each", " ", 
      "prey", " ", "level", " ", "for", " ", "no", " ", "fish"}], ",", " ", 
     RowBox[{
     "need", " ", "to", " ", "flatten", " ", "out", " ", "the", " ", "list", 
      " ", "of", " ", "values"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XBifurNoPXep", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"separateXNoPX", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"prey", " ", "with", " ", "fish"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XBifurPX", "=", 
     RowBox[{"XseparatePX", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"separateXPX", "=", 
     RowBox[{"Transpose", "[", "XBifurPX", "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"group", " ", "each", " ", "output", " ", "together"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XBifurPXNi", "=", 
     RowBox[{"separateXPX", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "Ni", " ", "values", " ", "at", " ", "each", " ", "prey", " ", "level", 
     " ", "with", " ", "fish"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XBifurPXgrowth", "=", 
     RowBox[{"separateXPX", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"dH", "/", "Hdt"}], " ", "values", " ", "at", " ", "each", " ", 
     "prey", " ", "level", " ", "with", " ", "fish"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XBifurPXSH", "=", 
     RowBox[{"separateXPX", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"S", "/", "H"}], " ", "values", " ", "at", " ", "each", " ", 
     "prey", " ", "level", " ", "with", " ", "fish"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "symbiont", " ", "excretion", " ", "values", " ", "at", " ", "each", " ", 
     "prey", " ", "level", " ", "with", " ", "fish"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XBifurPXjNw", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"separateXPX", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", 
    RowBox[{
    "fish", " ", "excretion", " ", "values", " ", "at", " ", "each", " ", 
     "prey", " ", "level", " ", "with", " ", "fish"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XBifurPXep", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"separateXPX", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"list", " ", "of", " ", "X", " ", "values"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XVals", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"0.1", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"0.25", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"0.5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"0.75", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"1", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"1.25", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"1.5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"1.75", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", " ", 
       RowBox[{"2", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "to", " ", "add", " ", "Nenv", " ", "to", " ", "the", " ", "plots"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XNenvVal", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"\[CapitalNu]", ",", 
       RowBox[{"Length", "[", "XVals", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XBifurNenvLine", "=", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{"XVals", ",", "XNenvVal"}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "make", " ", "list", " ", "of", " ", "the", " ", "no", " ", "prey", " ", 
     "values", " ", "to", " ", "plot", " ", "as", " ", "reference", " ", 
     "lines"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"noXnoPNiList", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"XBifurNoPXNi", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"Length", "[", "XVals", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"noXPNiList", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"XBifurPXNi", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"Length", "[", "XVals", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"noXnoPgrowthList", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"XBifurNoPXgrowth", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"Length", "[", "XVals", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"noXPgrowthList", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"XBifurPXgrowth", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"Length", "[", "XVals", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"noXnoPSHList", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"XBifurNoPXSH", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"Length", "[", "XVals", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"noXPSHList", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"XBifurPXSH", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"Length", "[", "XVals", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"noXnoPjNwList", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"XBifurNoPXjNw", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"Length", "[", "XVals", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"noXPjNwList", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"XBifurPXjNw", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"Length", "[", "XVals", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"noXnoPepList", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{
        RowBox[{"XBifurNoPXep", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"Length", "[", "XVals", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"noXPepList", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{
        RowBox[{"XBifurPXep", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"Length", "[", "XVals", "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "use", " ", "Table", " ", "to", " ", "get", " ", "the", " ", "lists", " ",
      "in", " ", "the", " ", "form", " ", "to", " ", "plot"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XBifurLists", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "PlotList", "}"}], ",", 
         RowBox[{
          RowBox[{"PlotList", "=", 
           RowBox[{"Transpose", "@", 
            RowBox[{"{", 
             RowBox[{"XVals", ",", "list"}], "}"}]}]}], ";", " ", 
          "PlotList"}]}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"list", ",", " ", 
         RowBox[{"{", 
          RowBox[{
          "noXnoPNiList", ",", "noXPNiList", ",", "XBifurNoPXNi", ",", 
           "XBifurPXNi", ",", "noXnoPgrowthList", ",", "noXPgrowthList", ",", 
           "XBifurNoPXgrowth", ",", "XBifurPXgrowth", ",", 
           RowBox[{"(*", 
            RowBox[{
            "noXnoPSHList", ",", "noXPSHList", ",", "XBifurNoPXSH", ",", 
             "XBifurPXSH", ","}], "*)"}], "noXnoPjNwList", ",", "noXPjNwList",
            ",", "XBifurNoPXjNw", ",", "XBifurPXjNw", ",", "noXnoPepList", 
           ",", "noXPepList", ",", "XBifurNoPXep", ",", "XBifurPXep"}], 
          "}"}]}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8369129531410427`*^9, 3.836913008973792*^9}, {
   3.836913091490144*^9, 3.8369130922671757`*^9}, {3.83691317151867*^9, 
   3.8369131987122173`*^9}, {3.836913230715218*^9, 3.8369133075790777`*^9}, {
   3.836913339555049*^9, 3.8369134469392967`*^9}, 3.836913583655624*^9, {
   3.8369141531939917`*^9, 3.836914213205305*^9}, {3.8369152684721603`*^9, 
   3.836915406389106*^9}, {3.8369154677176*^9, 3.8369154915523663`*^9}, {
   3.83692587158399*^9, 3.836926014594379*^9}, {3.836926060460184*^9, 
   3.836926127689941*^9}, {3.8369276861419353`*^9, 3.836927748673893*^9}, {
   3.837019181125844*^9, 3.8370191975006647`*^9}, {3.8370194166090097`*^9, 
   3.837019449918641*^9}, {3.8370195834248877`*^9, 3.837019586852767*^9}, {
   3.837019747487743*^9, 3.8370197636144876`*^9}, {3.8370199516054173`*^9, 
   3.8370199708271227`*^9}, {3.8370207765894957`*^9, 3.837020793926944*^9}, {
   3.8370214814550123`*^9, 3.83702152538756*^9}, 3.8371154239745903`*^9, {
   3.842185177154716*^9, 3.8421852024423122`*^9}, 3.8428183742867393`*^9, {
   3.844379038656632*^9, 3.844379206554351*^9}, {3.844379241915977*^9, 
   3.8443792448749437`*^9}, {3.845816087384173*^9, 3.845816093480589*^9}},
 CellLabel->
  "In[574]:=",ExpressionUUID->"7f99454f-9a65-4a03-b97c-e48951f6bab4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot the results", "Subsection",
 CellChangeTimes->{{3.842818218341001*^9, 
  3.842818222252689*^9}},ExpressionUUID->"baa768b3-d7f2-458f-b071-\
3a19f74701c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"padding", " ", "for", " ", "the", " ", "plot", " ", "margins"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"paddingS1", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"80", 
         RowBox[{"(*", "left", "*)"}], ",", "15"}], 
        RowBox[{"(*", "right", "*)"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"50", 
         RowBox[{"(*", "bottom", "*)"}], ",", "10"}], 
        RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Ni", " ", "vs", " ", "prey"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotS1a", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"XBifurLists", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"XBifurLists", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"XBifurLists", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
         RowBox[{"XBifurLists", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", "XBifurNenvLine"}], "}"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<a) Interstitial nitrogen\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"Black", ",", "14"}], "}"}]}], "]"}], ",", 
          RowBox[{"Offset", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"5", 
              RowBox[{"(*", 
               RowBox[{"right", " ", "from", " ", "top", " ", "left"}], 
               "*)"}], ",", 
              RowBox[{"-", "5.5"}]}], 
             RowBox[{"(*", 
              RowBox[{"down", " ", "from", " ", "top", " ", "left"}], "*)"}], 
             "}"}], ",", 
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
          RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
          " ", "12"}], 
         RowBox[{"(*", 
          RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", "  ", 
       RowBox[{"ImagePadding", "\[Rule]", "paddingS1"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Full", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", 
            RowBox[{"1.4", "*", 
             RowBox[{"10", "^", 
              RowBox[{"-", "7"}]}]}]}], "}"}]}], "}"}]}], 
       RowBox[{"(*", "Full", "*)"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"Dashing", "[", "Large", "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"Dashing", "[", "Large", "]"}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"GrayLevel", "[", "0.73", "]"}], 
           RowBox[{"(*", 
            RowBox[{",", " ", "Thin"}], "*)"}], "]"}]}], "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", 
            RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
           RowBox[{"(*", "right", "*)"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", 
            RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
           RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"(*", "True", "*)"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"4", "*", 
                 SuperscriptBox["10", 
                  RowBox[{"-", "8"}]]}], ",", " ", 
                "\"\<4*\!\(\*SuperscriptBox[\(10\), \(-8\)]\)\>\""}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"8", "*", 
                 SuperscriptBox["10", 
                  RowBox[{"-", "8"}]]}], ",", " ", 
                "\"\<8*\!\(\*SuperscriptBox[\(10\), \(-8\)]\)\>\""}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1.2", "*", 
                 SuperscriptBox["10", 
                  RowBox[{"-", "7"}]]}], ",", " ", 
                "\"\<1.2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], 
               "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"(*", "None", "*)"}], 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "*", 
                 SuperscriptBox["10", 
                  RowBox[{"-", "7"}]]}], ",", " ", 
                "\"\<1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"2", "*", 
                 SuperscriptBox["10", 
                  RowBox[{"-", "7"}]]}], ",", " ", 
                "\"\<2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], "}"}]}],
              "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<mol N \!\(\*SuperscriptBox[\(L\), \(-1\)]\)\>\"", ",", 
            "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "10"}], 
         RowBox[{"(*", 
          RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
       " ", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "14"}], "]"}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], ",", " ", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "GoldenRatio"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"dH", "/", "Hdt"}], " ", "vs", " ", "prey"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotS1b", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"XBifurLists", "[", 
          RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
         RowBox[{"XBifurLists", "[", 
          RowBox[{"[", "6", "]"}], "]"}], ",", 
         RowBox[{"XBifurLists", "[", 
          RowBox[{"[", "7", "]"}], "]"}], ",", " ", 
         RowBox[{"XBifurLists", "[", 
          RowBox[{"[", "8", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<b) Host specific growth rate\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"Black", ",", "14"}], "}"}]}], "]"}], ",", 
          RowBox[{"Offset", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"5", 
              RowBox[{"(*", 
               RowBox[{"right", " ", "from", " ", "top", " ", "left"}], 
               "*)"}], ",", 
              RowBox[{"-", "6.5"}]}], 
             RowBox[{"(*", 
              RowBox[{"down", " ", "from", " ", "top", " ", "left"}], "*)"}], 
             "}"}], ",", 
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
          RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
          " ", "12"}], 
         RowBox[{"(*", 
          RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", "  ", 
       RowBox[{"ImagePadding", "\[Rule]", "paddingS1"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Full", ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0.028"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"Dashing", "[", "Large", "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"Dashing", "[", "Large", "]"}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", 
            RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
           RowBox[{"(*", "right", "*)"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", 
            RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
           RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"(*", "True", "*)"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "0.01", ",", "0.02"}], "}"}], ",", 
            "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"(*", "None", "*)"}], 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "*", 
                 SuperscriptBox["10", 
                  RowBox[{"-", "7"}]]}], ",", " ", 
                "\"\<1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"2", "*", 
                 SuperscriptBox["10", 
                  RowBox[{"-", "7"}]]}], ",", " ", 
                "\"\<2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], "}"}]}],
              "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<C-mol H C-mol \!\(\*SuperscriptBox[\(H\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(d\), \(-1\)]\) \>\"", ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Prey (C-mol \!\(\*SuperscriptBox[\(L\), \(-1\)]\))\>\"", ",", 
            "None"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "10"}], 
         RowBox[{"(*", 
          RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
       " ", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "14"}], "]"}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], ",", " ", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "GoldenRatio"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"symbiont", " ", "waste", " ", "N", " ", 
     RowBox[{"vs", ".", " ", "prey"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotS1c", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"XBifurLists", "[", 
          RowBox[{"[", "9", "]"}], "]"}], ",", " ", 
         RowBox[{"XBifurLists", "[", 
          RowBox[{"[", "10", "]"}], "]"}], ",", 
         RowBox[{"XBifurLists", "[", 
          RowBox[{"[", "11", "]"}], "]"}], ",", " ", 
         RowBox[{"XBifurLists", "[", 
          RowBox[{"[", "12", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<c) Waste nitrogen per volume\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"Black", ",", "14"}], "}"}]}], "]"}], ",", 
          RowBox[{"Offset", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"5", 
              RowBox[{"(*", 
               RowBox[{"right", " ", "from", " ", "top", " ", "left"}], 
               "*)"}], ",", 
              RowBox[{"-", "6"}]}], 
             RowBox[{"(*", 
              RowBox[{"down", " ", "from", " ", "top", " ", "left"}], "*)"}], 
             "}"}], ",", 
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
          RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
          " ", "12"}], 
         RowBox[{"(*", 
          RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", "  ", 
       RowBox[{"ImagePadding", "\[Rule]", "paddingS1"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Full", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", 
            RowBox[{"3.5", "*", 
             RowBox[{"10", "^", 
              RowBox[{"-", "5"}]}]}]}], "}"}]}], "}"}]}], 
       RowBox[{"(*", "Full", "*)"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"Dashing", "[", "Large", "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"Dashing", "[", "Large", "]"}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", " ", "Thin"}], "]"}]}], "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", 
            RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
           RowBox[{"(*", "right", "*)"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", 
            RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
           RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"(*", "True", "*)"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "*", 
                 SuperscriptBox["10", 
                  RowBox[{"-", "5"}]]}], ",", " ", 
                "\"\<1*\!\(\*SuperscriptBox[\(10\), \(-5\)]\)\>\""}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"2", "*", 
                 SuperscriptBox["10", 
                  RowBox[{"-", "5"}]]}], ",", " ", 
                "\"\<2*\!\(\*SuperscriptBox[\(10\), \(-5\)]\)\>\""}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"3", "*", 
                 SuperscriptBox["10", 
                  RowBox[{"-", "5"}]]}], ",", " ", 
                "\"\<3*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], "}"}]}],
              "}"}], ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"(*", "None", "*)"}], 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "*", 
                 SuperscriptBox["10", 
                  RowBox[{"-", "7"}]]}], ",", " ", 
                "\"\<1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"2", "*", 
                 SuperscriptBox["10", 
                  RowBox[{"-", "7"}]]}], ",", " ", 
                "\"\<2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], "}"}]}],
              "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<mol N \!\(\*SuperscriptBox[\(L\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(d\), \(-1\)]\)\>\"", ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "10"}], 
         RowBox[{"(*", 
          RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
       " ", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "14"}], "]"}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], ",", " ", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "GoldenRatio"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"fish", " ", "excretions", " ", 
     RowBox[{"vs", ".", " ", "prey"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotS1d", "=", " ", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"XBifurLists", "[", 
          RowBox[{"[", "13", "]"}], "]"}], ",", " ", 
         RowBox[{"XBifurLists", "[", 
          RowBox[{"[", "14", "]"}], "]"}], ",", 
         RowBox[{"XBifurLists", "[", 
          RowBox[{"[", "15", "]"}], "]"}], ",", " ", 
         RowBox[{"XBifurLists", "[", 
          RowBox[{"[", "16", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<d) Fish excretions per volume\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"Black", ",", "14"}], "}"}]}], "]"}], ",", 
          RowBox[{"Offset", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"5", 
              RowBox[{"(*", 
               RowBox[{"right", " ", "from", " ", "top", " ", "left"}], 
               "*)"}], ",", 
              RowBox[{"-", "5.5"}]}], 
             RowBox[{"(*", 
              RowBox[{"down", " ", "from", " ", "top", " ", "left"}], "*)"}], 
             "}"}], ",", 
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
          RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
          " ", "12"}], 
         RowBox[{"(*", 
          RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", "  ", 
       RowBox[{"ImagePadding", "\[Rule]", "paddingS1"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Full", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0.0002"}], "}"}]}], "}"}]}], 
       RowBox[{"(*", "Full", "*)"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"Dashing", "[", "Large", "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"Dashing", "[", "Large", "]"}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", " ", "Thin"}], "]"}]}], "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", 
            RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
           RowBox[{"(*", "right", "*)"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", 
            RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
           RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"(*", "True", "*)"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.00005", ",", " ", "0.0001", ",", " ", "0.00015"}], 
             "}"}], ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"(*", "None", "*)"}], 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "*", 
                 SuperscriptBox["10", 
                  RowBox[{"-", "7"}]]}], ",", " ", 
                "\"\<1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"2", "*", 
                 SuperscriptBox["10", 
                  RowBox[{"-", "7"}]]}], ",", " ", 
                "\"\<2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], "}"}]}],
              "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<mol N \!\(\*SuperscriptBox[\(L\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(d\), \(-1\)]\)\>\"", ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Prey (C-mol \!\(\*SuperscriptBox[\(L\), \(-1\)]\))\>\"", ",", 
            "None"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "10"}], 
         RowBox[{"(*", 
          RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
       " ", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "14"}], "]"}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], ",", " ", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "GoldenRatio"}]}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8428182753122463`*^9, 3.8428183562726593`*^9}, {
   3.8428184902989798`*^9, 3.8428185260561743`*^9}, {3.8428185667453613`*^9, 
   3.842818760534404*^9}, {3.842818805339775*^9, 3.842818993427059*^9}, {
   3.842819023648609*^9, 3.842819047256012*^9}, {3.842819142959321*^9, 
   3.84281918420816*^9}, {3.8428192610736227`*^9, 3.842819267752697*^9}, {
   3.842819313305325*^9, 3.842819637049745*^9}, 3.8428213668084583`*^9, {
   3.844379258216833*^9, 3.844379361504095*^9}, {3.8456440798031397`*^9, 
   3.845644092291295*^9}, 3.8456441397501307`*^9},
 CellLabel->
  "In[604]:=",ExpressionUUID->"c0f9f592-787c-4db0-99a8-54b87ec32912"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"make", " ", "the", " ", "plot", " ", "legend"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"BifurLeg", "=", 
     RowBox[{"LineLegend", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"Dashing", "[", "Large", "]"}]}], "}"}], ",", "  ", 
         RowBox[{
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"Dashing", "[", "Large", "]"}]}], "}"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<No fish, with prey\>\"", ",", "\"\<No fish, no prey\>\"", ",", 
         "\"\<With fish, with prey\>\"", ",", "\"\<With fish, no prey\>\""}], 
        "}"}], ",", " ", 
       RowBox[{"LegendLayout", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Row\>\"", ",", "1"}], "}"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"make", " ", "the", " ", "figure"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"SBifurFig", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Legended", "[", 
       RowBox[{
        RowBox[{"GraphicsGrid", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"plotS1a", ",", " ", "plotS1c"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"plotS1b", ",", " ", "plotS1d"}], "}"}]}], "}"}], ",", 
          " ", 
          RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
          RowBox[{"(*", 
           RowBox[{"Spacings", "\[Rule]", 
            RowBox[{"{", " ", 
             RowBox[{"0", 
              RowBox[{"(*", 
               RowBox[{"left", " ", "to", " ", "right"}], "*)"}], ",", 
              RowBox[{"-", "20"}]}], 
             RowBox[{"(*", 
              RowBox[{"Scaled", "[", "0.1", "]"}], "*)"}], 
             RowBox[{"(*", 
              RowBox[{"top", " ", "to", " ", "bottom"}], "*)"}], "}"}]}], 
           "*)"}], 
          RowBox[{"Spacings", "\[Rule]", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", 
               RowBox[{"(*", 
                RowBox[{"left", "?"}], "*)"}], ",", 
               RowBox[{"-", "20"}]}], " ", 
              RowBox[{"(*", 
               RowBox[{"labels", " ", "and", " ", "left", " ", "col"}], 
               "*)"}], 
              RowBox[{"(*", 
               RowBox[{"left", " ", "to", " ", "right"}], "*)"}], "}"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"0", 
               RowBox[{"(*", 
                RowBox[{"top", "?"}], "*)"}], ",", 
               RowBox[{"-", "20"}]}], 
              RowBox[{"(*", 
               RowBox[{"middle", " ", "2", " ", "rows"}], "*)"}], " ", 
              RowBox[{"(*", 
               RowBox[{"labels", " ", "and", " ", "bottom"}], "*)"}], 
              RowBox[{"(*", 
               RowBox[{"top", " ", "to", " ", "bottom"}], "*)"}], "}"}]}], 
            "}"}]}], ",", " ", 
          RowBox[{"Frame", "\[Rule]", "False"}], 
          RowBox[{"(*", 
           RowBox[{",", " ", 
            RowBox[{"AspectRatio", "\[Rule]", 
             RowBox[{"1", "/", "GoldenRatio"}]}]}], "*)"}], ",", " ", 
          RowBox[{"Alignment", "\[Rule]", " ", "Bottom"}]}], " ", 
         RowBox[{"(*", 
          RowBox[{
          "align", " ", "the", " ", "grid", " ", "at", " ", "the", " ", 
           "bottom", " ", "of", " ", "its", " ", "frame"}], "*)"}], "]"}], 
        ",", 
        RowBox[{"Placed", "[", 
         RowBox[{"BifurLeg", ",", 
          RowBox[{"(*", "Bottom", "*)"}], 
          RowBox[{"{", 
           RowBox[{"Center", 
            RowBox[{"(*", 
             RowBox[{
             "left", " ", "to", " ", "right", " ", "position", " ", "is", " ",
               "in", " ", "the", " ", "center"}], "*)"}], ",", " ", "0"}], 
           RowBox[{"(*", 
            RowBox[{"top", " ", "to", " ", "bottom", " ", "position"}], 
            "*)"}], "}"}]}], "]"}]}], "]"}], ",", " ", 
      RowBox[{"Graphics", "[", 
       RowBox[{"Text", "[", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(N\), \(i\)]\) = \!\(\*SubscriptBox[\(N\), \
\(env\)]\)\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"80", " ", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"more", " ", "pos"}], "=", 
             RowBox[{"farther", " ", "right"}]}], "*)"}], ",", 
           RowBox[{"-", "54"}]}], 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"more", " ", "neg"}], "=", 
            RowBox[{"further", " ", "down"}]}], "*)"}], "}"}]}], "]"}], 
       "]"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8423931222503767`*^9, 3.84239316496241*^9}, {
   3.842393215100142*^9, 3.842393216777321*^9}, {3.842393374652343*^9, 
   3.842393391545878*^9}, {3.8423934890524607`*^9, 3.842393497687471*^9}, {
   3.842393730079791*^9, 3.842393798313652*^9}, {3.842393943389686*^9, 
   3.842393951838909*^9}, {3.842394074587543*^9, 3.842394101523737*^9}, {
   3.842394132276989*^9, 3.842394132509925*^9}, {3.842394166205171*^9, 
   3.842394170706992*^9}, {3.842394221603158*^9, 3.842394231620736*^9}, {
   3.842394379746133*^9, 3.842394423908218*^9}, {3.842394561020013*^9, 
   3.842394619149837*^9}, {3.842394723548203*^9, 3.842394730014339*^9}, {
   3.84239493520739*^9, 3.842395012141183*^9}, {3.842395114713894*^9, 
   3.842395134539666*^9}, {3.842395264566277*^9, 3.842395317044787*^9}, {
   3.8423958755109577`*^9, 3.842395906360956*^9}, {3.84239594453514*^9, 
   3.84239598472083*^9}, {3.842396103941513*^9, 3.8423961992794323`*^9}, 
   3.8426349594828863`*^9, {3.842634996999845*^9, 3.8426350301339397`*^9}, {
   3.842635083339452*^9, 3.8426351228360977`*^9}, {3.842738228856474*^9, 
   3.842738279641489*^9}, {3.842738325164055*^9, 3.8427383885729227`*^9}, {
   3.84273848759693*^9, 3.842738586958469*^9}, {3.842819678185298*^9, 
   3.842819712829331*^9}, {3.842819757762548*^9, 3.842819862828858*^9}, {
   3.844379385612887*^9, 3.84437939360334*^9}, {3.844511160853435*^9, 
   3.844511162722329*^9}, {3.8447857778667927`*^9, 3.8447857789885178`*^9}, {
   3.844785986395392*^9, 3.844785986634933*^9}, {3.8447860194011993`*^9, 
   3.8447860279555817`*^9}, {3.845644060558223*^9, 3.8456440610442038`*^9}},
 CellLabel->
  "In[609]:=",ExpressionUUID->"b97f52cc-2deb-4ed7-ac9d-1116817bb29d"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {{InsetBox[
         GraphicsBox[{{}, {{}, {}, 
            {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
              NCache[
               Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
             1.6], Dashing[Large], 
             LineBox[{{0., 5.6289651463744564`*^-8}, {1.*^-8, 
              5.6289651463744564`*^-8}, {2.5*^-8, 5.6289651463744564`*^-8}, {
              5.*^-8, 5.6289651463744564`*^-8}, {7.5*^-8, 
              5.6289651463744564`*^-8}, {1.*^-7, 5.6289651463744564`*^-8}, {
              1.25*^-7, 5.6289651463744564`*^-8}, {1.5*^-7, 
              5.6289651463744564`*^-8}, {1.75*^-7, 5.6289651463744564`*^-8}, {
              2.*^-7, 5.6289651463744564`*^-8}}]}, 
            {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
              NCache[
               Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
             1.6], Dashing[Large], 
             LineBox[{{0., 1.1505180313899185`*^-7}, {1.*^-8, 
              1.1505180313899185`*^-7}, {2.5*^-8, 1.1505180313899185`*^-7}, {
              5.*^-8, 1.1505180313899185`*^-7}, {7.5*^-8, 
              1.1505180313899185`*^-7}, {1.*^-7, 1.1505180313899185`*^-7}, {
              1.25*^-7, 1.1505180313899185`*^-7}, {1.5*^-7, 
              1.1505180313899185`*^-7}, {1.75*^-7, 1.1505180313899185`*^-7}, {
              2.*^-7, 1.1505180313899185`*^-7}}]}, 
            {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
              NCache[
               Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
             1.6], LineBox[{{0., 5.6289651463744564`*^-8}, {1.*^-8, 
              5.65228341481491*^-8}, {2.5*^-8, 5.68900421146113*^-8}, {5.*^-8,
               5.7542466056006424`*^-8}, {7.5*^-8, 5.823834848771852*^-8}, {
              1.*^-7, 5.8971478516693386`*^-8}, {1.25*^-7, 
              5.973678197770414*^-8}, {1.5*^-7, 6.052988211124302*^-8}, {
              1.75*^-7, 6.134690747421196*^-8}, {2.*^-7, 
              6.218439320697944*^-8}}]}, 
            {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
              NCache[
               Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
             1.6], 
             LineBox[{{0., 1.1505180313899185`*^-7}, {1.*^-8, 
              1.1378185098457897`*^-7}, {2.5*^-8, 1.1195566475522428`*^-7}, {
              5.*^-8, 1.0910873306874248`*^-7}, {7.5*^-8, 
              1.0648802617969534`*^-7}, {1.*^-7, 1.0407318892506522`*^-7}, {
              1.25*^-7, 1.0184605808159476`*^-7}, {1.5*^-7, 
              9.979037217149967*^-8}, {1.75*^-7, 9.78915187546418*^-8}, {
              2.*^-7, 9.613634856668751*^-8}}]}, 
            {GrayLevel[0.73], PointSize[
              NCache[
               Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
             1.6], LineBox[{{0., 1.*^-7}, {1.*^-8, 1.*^-7}, {2.5*^-8, 
              1.*^-7}, {5.*^-8, 1.*^-7}, {7.5*^-8, 1.*^-7}, {1.*^-7, 
              1.*^-7}, {1.25*^-7, 1.*^-7}, {1.5*^-7, 1.*^-7}, {1.75*^-7, 
              1.*^-7}, {2.*^-7, 1.*^-7}}]}}, {{}, {}}},
          AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
          Axes->{True, True},
          AxesLabel->{None, None},
          AxesOrigin->{0, 0},
          DisplayFunction->Identity,
          Epilog->InsetBox[
            FormBox[
             StyleBox["\"a) Interstitial nitrogen\"", {
               GrayLevel[0], 14}, StripOnInput -> False], TraditionalForm], 
            Offset[{5, -5.5}, 
             Scaled[{0, 1}]], 
            ImageScaled[{0, 
              Rational[1, 2]}]],
          Frame->{{True, False}, {True, False}},
          FrameLabel->{{
             FormBox[
             "\"mol N \\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\)\"", 
              TraditionalForm], None}, {None, None}},
          FrameStyle->Directive[
            GrayLevel[0], 14],
          FrameTicks->{{{{
               NCache[
                Rational[1, 25000000], 4.*^-8], 
               FormBox[
               "\"4*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-8\\)]\\)\"", 
                TraditionalForm]}, {
               NCache[
                Rational[1, 12500000], 8.*^-8], 
               FormBox[
               "\"8*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-8\\)]\\)\"", 
                TraditionalForm]}, {1.2*^-7, 
               FormBox[
               "\"1.2*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
                TraditionalForm]}}, None}, {{{0, 
               FormBox["\"0\"", TraditionalForm]}, {
               NCache[
                Rational[1, 10000000], 1.*^-7], 
               FormBox[
               "\"1*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
                TraditionalForm]}, {
               NCache[
                Rational[1, 5000000], 2.*^-7], 
               FormBox[
               "\"2*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
                TraditionalForm]}}, None}},
          FrameTicksStyle->Directive[
            GrayLevel[0], 10],
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImagePadding->{{80, 15}, {50, 10}},
          
          LabelStyle->Directive[
           FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
          
          Method->{
           "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& )}},
          PlotRange->{{0, 2.*^-7}, {0., 1.3999999999999998`*^-7}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {0, 0}},
          Ticks->{Automatic, Automatic}], {180, -222.49223594996212}, 
         ImageScaled[{0.5, 0}], {360, 222.49223594996212}], InsetBox[
         GraphicsBox[{{}, {{}, {}, 
            {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
              NCache[
               Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
             1.6], Dashing[Large], 
             LineBox[{{0., 9.83796470017213*^-6}, {1.*^-8, 
              9.83796470017213*^-6}, {2.5*^-8, 9.83796470017213*^-6}, {5.*^-8,
               9.83796470017213*^-6}, {7.5*^-8, 9.83796470017213*^-6}, {
              1.*^-7, 9.83796470017213*^-6}, {1.25*^-7, 
              9.83796470017213*^-6}, {1.5*^-7, 9.83796470017213*^-6}, {
              1.75*^-7, 9.83796470017213*^-6}, {2.*^-7, 
              9.83796470017213*^-6}}]}, 
            {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
              NCache[
               Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
             1.6], Dashing[Large], 
             LineBox[{{0., 0.00001274650359983121}, {1.*^-8, 
              0.00001274650359983121}, {2.5*^-8, 0.00001274650359983121}, {
              5.*^-8, 0.00001274650359983121}, {7.5*^-8, 
              0.00001274650359983121}, {1.*^-7, 0.00001274650359983121}, {
              1.25*^-7, 0.00001274650359983121}, {1.5*^-7, 
              0.00001274650359983121}, {1.75*^-7, 0.00001274650359983121}, {
              2.*^-7, 0.00001274650359983121}}]}, 
            {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
              NCache[
               Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
             1.6], LineBox[{{0., 9.83796470017213*^-6}, {1.*^-8, 
              0.000010553987210317094`}, {2.5*^-8, 0.00001168135465851878}, {
              5.*^-8, 0.00001368376323681108}, {7.5*^-8, 
              0.00001581870536996024}, {1.*^-7, 0.00001806697519364545}, {
              1.25*^-7, 0.000020412876786011098`}, {1.5*^-7, 
              0.00002284287113599182}, {1.75*^-7, 0.000025344987376637554`}, {
              2.*^-7, 0.00002790851890279739}}]}, 
            {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
              NCache[
               Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
             1.6], LineBox[{{0., 0.00001274650359983121}, {1.*^-8, 
              0.000013539935005557647`}, {2.5*^-8, 
              0.000014766228082688653`}, {5.*^-8, 0.00001689624117440736}, {
              7.5*^-8, 0.000019119902711834402`}, {1.*^-7, 
              0.00002142325764698846}, {1.25*^-7, 0.000023794182260831576`}, {
              1.5*^-7, 0.000026221966476418625`}, {1.75*^-7, 
              0.000028697072254079872`}, {2.*^-7, 
              0.00003121097518515666}}]}}, {{}, {}}},
          AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
          Axes->{True, True},
          AxesLabel->{None, None},
          AxesOrigin->{0, 0},
          DisplayFunction->Identity,
          Epilog->InsetBox[
            FormBox[
             StyleBox["\"c) Waste nitrogen per volume\"", {
               GrayLevel[0], 14}, StripOnInput -> False], TraditionalForm], 
            Offset[{5, -6}, 
             Scaled[{0, 1}]], 
            ImageScaled[{0, 
              Rational[1, 2]}]],
          Frame->{{True, False}, {True, False}},
          FrameLabel->{{
             FormBox[
             "\"mol N \\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(d\\), \\(-1\\)]\\)\"", TraditionalForm], None}, {
            None, None}},
          FrameStyle->Directive[
            GrayLevel[0], 14],
          FrameTicks->{{{{
               NCache[
                Rational[1, 100000], 0.00001], 
               FormBox[
               "\"1*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-5\\)]\\)\"", 
                TraditionalForm]}, {
               NCache[
                Rational[1, 50000], 0.00002], 
               FormBox[
               "\"2*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-5\\)]\\)\"", 
                TraditionalForm]}, {
               NCache[
                Rational[3, 100000], 0.00003], 
               FormBox[
               "\"3*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
                TraditionalForm]}}, None}, {{{0, 
               FormBox["\"0\"", TraditionalForm]}, {
               NCache[
                Rational[1, 10000000], 1.*^-7], 
               FormBox[
               "\"1*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
                TraditionalForm]}, {
               NCache[
                Rational[1, 5000000], 2.*^-7], 
               FormBox[
               "\"2*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
                TraditionalForm]}}, None}},
          FrameTicksStyle->Directive[
            GrayLevel[0], 10],
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImagePadding->{{80, 15}, {50, 10}},
          
          LabelStyle->Directive[
           FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
          
          Method->{
           "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& )}},
          PlotRange->{{0, 2.*^-7}, {0., 0.000035000000000000004`}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {0, 0}},
          Ticks->{Automatic, Automatic}], {520., -222.49223594996212}, 
         ImageScaled[{0.5, 0}], {360., 222.49223594996212}]}, {InsetBox[
         GraphicsBox[{{}, {{}, {}, 
            {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
              NCache[
               Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
             1.6], Dashing[Large], 
             LineBox[{{0., 0.0029864387934975685`}, {1.*^-8, 
              0.0029864387934975685`}, {2.5*^-8, 0.0029864387934975685`}, {
              5.*^-8, 0.0029864387934975685`}, {7.5*^-8, 
              0.0029864387934975685`}, {1.*^-7, 0.0029864387934975685`}, {
              1.25*^-7, 0.0029864387934975685`}, {1.5*^-7, 
              0.0029864387934975685`}, {1.75*^-7, 0.0029864387934975685`}, {
              2.*^-7, 0.0029864387934975685`}}]}, 
            {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
              NCache[
               Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
             1.6], Dashing[Large], 
             LineBox[{{0., 0.007438955189713734}, {1.*^-8, 
              0.007438955189713734}, {2.5*^-8, 0.007438955189713734}, {5.*^-8,
               0.007438955189713734}, {7.5*^-8, 0.007438955189713734}, {
              1.*^-7, 0.007438955189713734}, {1.25*^-7, 
              0.007438955189713734}, {1.5*^-7, 0.007438955189713734}, {
              1.75*^-7, 0.007438955189713734}, {2.*^-7, 
              0.007438955189713734}}]}, 
            {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
              NCache[
               Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
             1.6], LineBox[{{0., 0.0029864387934975685`}, {1.*^-8, 
              0.004231975461829319}, {2.5*^-8, 0.006046733828364502}, {5.*^-8,
               0.008935496943097372}, {7.5*^-8, 0.011665725060242639`}, {
              1.*^-7, 0.01424969739178875}, {1.25*^-7, 
              0.016698666534627062`}, {1.5*^-7, 0.019022845857647217`}, {
              1.75*^-7, 0.021231478223211808`}, {2.*^-7, 
              0.023332940145188042`}}]}, 
            {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
              NCache[
               Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
             1.6], LineBox[{{0., 0.007438955189713734}, {1.*^-8, 
              0.008552593689051046}, {2.5*^-8, 0.010175932246269889`}, {
              5.*^-8, 0.012762525776201367`}, {7.5*^-8, 
              0.015210557029747036`}, {1.*^-7, 0.01753076066082253}, {
              1.25*^-7, 0.0197328396727222}, {1.5*^-7, 
              0.021825565665702294`}, {1.75*^-7, 0.023816868022311505`}, {
              2.*^-7, 0.025713936589534806`}}]}}, {{}, {}}},
          AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
          Axes->{True, True},
          AxesLabel->{None, None},
          AxesOrigin->{0, 0},
          DisplayFunction->Identity,
          Epilog->InsetBox[
            FormBox[
             StyleBox["\"b) Host specific growth rate\"", {
               GrayLevel[0], 14}, StripOnInput -> False], TraditionalForm], 
            Offset[{5, -6.5}, 
             Scaled[{0, 1}]], 
            ImageScaled[{0, 
              Rational[1, 2]}]],
          Frame->{{True, False}, {True, False}},
          FrameLabel->{{
             FormBox[
             "\"C-mol H C-mol \\!\\(\\*SuperscriptBox[\\(H\\), \\(-1\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(d\\), \\(-1\\)]\\) \"", TraditionalForm], None}, {
             FormBox[
             "\"Prey (C-mol \\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\))\"",
               TraditionalForm], None}},
          FrameStyle->Directive[
            GrayLevel[0], 14],
          FrameTicks->{{{{0, 
               FormBox["0", TraditionalForm]}, {0.01, 
               FormBox["0.01`", TraditionalForm]}, {0.02, 
               FormBox["0.02`", TraditionalForm]}}, None}, {{{0, 
               FormBox["\"0\"", TraditionalForm]}, {
               NCache[
                Rational[1, 10000000], 1.*^-7], 
               FormBox[
               "\"1*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
                TraditionalForm]}, {
               NCache[
                Rational[1, 5000000], 2.*^-7], 
               FormBox[
               "\"2*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
                TraditionalForm]}}, None}},
          FrameTicksStyle->Directive[
            GrayLevel[0], 10],
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImagePadding->{{80, 15}, {50, 10}},
          
          LabelStyle->Directive[
           FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
          
          Method->{
           "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& )}},
          PlotRange->{{0, 2.*^-7}, {0., 0.028}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {0, 0}},
          Ticks->{Automatic, Automatic}], {180, -424.98447189992424}, 
         ImageScaled[{0.5, 0}], {360, 222.49223594996212}], InsetBox[
         GraphicsBox[{{}, {{}, {}, 
            {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
              NCache[
               Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
             1.6], Dashing[Large], 
             LineBox[{{0., 0.}, {1.*^-8, 0.}, {2.5*^-8, 0.}, {5.*^-8, 0.}, {
              7.5*^-8, 0.}, {1.*^-7, 0.}, {1.25*^-7, 0.}, {1.5*^-7, 0.}, {
              1.75*^-7, 0.}, {2.*^-7, 0.}}]}, 
            {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
              NCache[
               Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
             1.6], Dashing[Large], 
             LineBox[{{0., 0.0001745254677322176}, {1.*^-8, 
              0.0001745254677322176}, {2.5*^-8, 0.0001745254677322176}, {
              5.*^-8, 0.0001745254677322176}, {7.5*^-8, 
              0.0001745254677322176}, {1.*^-7, 0.0001745254677322176}, {
              1.25*^-7, 0.0001745254677322176}, {1.5*^-7, 
              0.0001745254677322176}, {1.75*^-7, 0.0001745254677322176}, {
              2.*^-7, 0.0001745254677322176}}]}, 
            {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
              NCache[
               Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
             1.6], LineBox[{{0., 0.}, {1.*^-8, 0.}, {2.5*^-8, 0.}, {5.*^-8, 
              0.}, {7.5*^-8, 0.}, {1.*^-7, 0.}, {1.25*^-7, 0.}, {1.5*^-7, 
              0.}, {1.75*^-7, 0.}, {2.*^-7, 0.}}]}, 
            {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
              NCache[
               Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
             1.6], LineBox[{{0., 0.0001745254677322176}, {1.*^-8, 
              0.000169958888465859}, {2.5*^-8, 0.00016330223944688966`}, {
              5.*^-8, 0.00015269567823170544`}, {7.5*^-8, 
              0.00014265730052426788`}, {1.*^-7, 0.000133143093456897}, {
              1.25*^-7, 0.0001241132620213567}, {1.5*^-7, 
              0.00011553185364051597`}, {1.75*^-7, 0.00010736633205250573`}, {
              2.*^-7, 0.00009958722709683805}}]}}, {{}, {}}},
          AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
          Axes->{True, True},
          AxesLabel->{None, None},
          AxesOrigin->{0, 0},
          DisplayFunction->Identity,
          Epilog->InsetBox[
            FormBox[
             StyleBox["\"d) Fish excretions per volume\"", {
               GrayLevel[0], 14}, StripOnInput -> False], TraditionalForm], 
            Offset[{5, -5.5}, 
             Scaled[{0, 1}]], 
            ImageScaled[{0, 
              Rational[1, 2]}]],
          Frame->{{True, False}, {True, False}},
          FrameLabel->{{
             FormBox[
             "\"mol N \\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(d\\), \\(-1\\)]\\)\"", TraditionalForm], None}, {
             FormBox[
             "\"Prey (C-mol \\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\))\"",
               TraditionalForm], None}},
          FrameStyle->Directive[
            GrayLevel[0], 14],
          FrameTicks->{{{{0.00005, 
               FormBox["0.00005`", TraditionalForm]}, {0.0001, 
               FormBox["0.0001`", TraditionalForm]}, {0.00015, 
               FormBox["0.00015`", TraditionalForm]}}, None}, {{{0, 
               FormBox["\"0\"", TraditionalForm]}, {
               NCache[
                Rational[1, 10000000], 1.*^-7], 
               FormBox[
               "\"1*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
                TraditionalForm]}, {
               NCache[
                Rational[1, 5000000], 2.*^-7], 
               FormBox[
               "\"2*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
                TraditionalForm]}}, None}},
          FrameTicksStyle->Directive[
            GrayLevel[0], 10],
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImagePadding->{{80, 15}, {50, 10}},
          
          LabelStyle->Directive[
           FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
          
          Method->{
           "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& )}},
          PlotRange->{{0, 2.*^-7}, {0., 0.0002}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {0, 0}},
          Ticks->{Automatic, Automatic}], {520., -424.98447189992424}, 
         ImageScaled[{0.5, 0}], {360., 222.49223594996212}]}}, {}}, 
     InsetBox["\<\"\\!\\(\\*SubscriptBox[\\(N\\), \\(i\\)]\\) = \
\\!\\(\\*SubscriptBox[\\(N\\), \\(env\\)]\\)\"\>", {80, -54}]}, InsetBox[
     TemplateBox[{
      "\"No fish, with prey\"", "\"No fish, no prey\"", 
       "\"With fish, with prey\"", "\"With fish, no prey\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Dashing[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Dashing[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[FontSize -> 14], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               
               TemplateBox[<|
                "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                "RGBColorSwatchTemplate"], ",", 
               RowBox[{"{", 
                 RowBox[{
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Dashing", "[", "Large", "]"}]}], "}"}], ",", 
               
               TemplateBox[<|
                "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                "RGBColorSwatchTemplate"], ",", 
               RowBox[{"{", 
                 RowBox[{
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Dashing", "[", "Large", "]"}]}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Row\"", ",", "1"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}]}], "]"}]& )], 
     Scaled[{0.5, 0}], ImageScaled[{0.5, 1}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   DisplayFunction->Identity,
   ImageSize->Full,
   PlotRangePadding->{6, 5}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {{
         Inset[
          Graphics[{{}, {{{}, {}, {
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                AbsoluteThickness[1.6], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                Dashing[Large]], 
               
               Line[{{0., 5.6289651463744564`*^-8}, {1.*^-8, 
                5.6289651463744564`*^-8}, {2.5*^-8, 
                5.6289651463744564`*^-8}, {5.*^-8, 5.6289651463744564`*^-8}, {
                7.5*^-8, 5.6289651463744564`*^-8}, {1.*^-7, 
                5.6289651463744564`*^-8}, {1.25*^-7, 
                5.6289651463744564`*^-8}, {1.5*^-7, 
                5.6289651463744564`*^-8}, {1.75*^-7, 
                5.6289651463744564`*^-8}, {2.*^-7, 
                5.6289651463744564`*^-8}}]}, {
               Hue[0.9060679774997897, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                AbsoluteThickness[1.6], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                Dashing[Large]], 
               
               Line[{{0., 1.1505180313899185`*^-7}, {1.*^-8, 
                1.1505180313899185`*^-7}, {2.5*^-8, 
                1.1505180313899185`*^-7}, {5.*^-8, 1.1505180313899185`*^-7}, {
                7.5*^-8, 1.1505180313899185`*^-7}, {1.*^-7, 
                1.1505180313899185`*^-7}, {1.25*^-7, 
                1.1505180313899185`*^-7}, {1.5*^-7, 
                1.1505180313899185`*^-7}, {1.75*^-7, 
                1.1505180313899185`*^-7}, {2.*^-7, 
                1.1505180313899185`*^-7}}]}, {
               Hue[0.1421359549995791, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                AbsoluteThickness[1.6], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
               
               Line[{{0., 5.6289651463744564`*^-8}, {1.*^-8, 
                5.65228341481491*^-8}, {2.5*^-8, 5.68900421146113*^-8}, {
                5.*^-8, 5.7542466056006424`*^-8}, {7.5*^-8, 
                5.823834848771852*^-8}, {1.*^-7, 5.8971478516693386`*^-8}, {
                1.25*^-7, 5.973678197770414*^-8}, {1.5*^-7, 
                6.052988211124302*^-8}, {1.75*^-7, 6.134690747421196*^-8}, {
                2.*^-7, 6.218439320697944*^-8}}]}, {
               Hue[0.37820393249936934`, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                AbsoluteThickness[1.6], 
                RGBColor[0.880722, 0.611041, 0.142051]], 
               
               Line[{{0., 1.1505180313899185`*^-7}, {1.*^-8, 
                1.1378185098457897`*^-7}, {2.5*^-8, 
                1.1195566475522428`*^-7}, {5.*^-8, 1.0910873306874248`*^-7}, {
                7.5*^-8, 1.0648802617969534`*^-7}, {1.*^-7, 
                1.0407318892506522`*^-7}, {1.25*^-7, 
                1.0184605808159476`*^-7}, {1.5*^-7, 9.979037217149967*^-8}, {
                1.75*^-7, 9.78915187546418*^-8}, {2.*^-7, 
                9.613634856668751*^-8}}]}, {
               Hue[0.6142719099991583, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                AbsoluteThickness[1.6], 
                GrayLevel[0.73]], 
               
               Line[{{0., 1.*^-7}, {1.*^-8, 1.*^-7}, {2.5*^-8, 1.*^-7}, {
                5.*^-8, 1.*^-7}, {7.5*^-8, 1.*^-7}, {1.*^-7, 1.*^-7}, {
                1.25*^-7, 1.*^-7}, {1.5*^-7, 1.*^-7}, {1.75*^-7, 1.*^-7}, {
                2.*^-7, 1.*^-7}}]}}}, {{}, {}}}, {
           DisplayFunction -> Identity, DisplayFunction -> Identity, 
            AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
            AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
            Identity, Epilog -> Text[
              Style["a) Interstitial nitrogen", {
                GrayLevel[0], 14}], 
              Offset[{5, -5.5}, 
               Scaled[{0, 1}]], {-1, 0}], 
            Frame -> {{True, False}, {True, False}}, 
            FrameLabel -> {{
              "mol N \!\(\*SuperscriptBox[\(L\), \(-1\)]\)", None}, {
              None, None}}, FrameStyle -> Directive[
              GrayLevel[0], 14], FrameTicks -> {{{{
                 Rational[1, 25000000], 
                 "4*\!\(\*SuperscriptBox[\(10\), \(-8\)]\)"}, {
                 Rational[1, 12500000], 
                 "8*\!\(\*SuperscriptBox[\(10\), \(-8\)]\)"}, {
                1.2*^-7, "1.2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}}, 
               None}, {{{0, "0"}, {
                 Rational[1, 10000000], 
                 "1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, {
                 Rational[1, 5000000], 
                 "2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}}, None}}, 
            FrameTicksStyle -> Directive[
              GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
            Directive[
              GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {50, 10}}, 
            LabelStyle -> 
            Directive[
             FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
            Method -> {
             "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
              "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& )}}, 
            PlotRange -> {{0, 2.*^-7}, {0., 1.3999999999999998`*^-7}}, 
            PlotRangeClipping -> True, PlotRangePadding -> {{
               Scaled[0.02], 
               Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], {
          180, -222.49223594996212`}, 
          ImageScaled[{0.5, 0}], {360, 222.49223594996212`}], 
         Inset[
          Graphics[{{}, {{{}, {}, {
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[7, 360]], 
                AbsoluteThickness[1.6], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                Dashing[Large]], 
               
               Line[{{0., 9.83796470017213*^-6}, {1.*^-8, 
                9.83796470017213*^-6}, {2.5*^-8, 9.83796470017213*^-6}, {
                5.*^-8, 9.83796470017213*^-6}, {7.5*^-8, 
                9.83796470017213*^-6}, {1.*^-7, 9.83796470017213*^-6}, {
                1.25*^-7, 9.83796470017213*^-6}, {1.5*^-7, 
                9.83796470017213*^-6}, {1.75*^-7, 9.83796470017213*^-6}, {
                2.*^-7, 9.83796470017213*^-6}}]}, {
               Hue[0.9060679774997897, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[7, 360]], 
                AbsoluteThickness[1.6], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                Dashing[Large]], 
               
               Line[{{0., 0.00001274650359983121}, {1.*^-8, 
                0.00001274650359983121}, {2.5*^-8, 0.00001274650359983121}, {
                5.*^-8, 0.00001274650359983121}, {7.5*^-8, 
                0.00001274650359983121}, {1.*^-7, 0.00001274650359983121}, {
                1.25*^-7, 0.00001274650359983121}, {1.5*^-7, 
                0.00001274650359983121}, {1.75*^-7, 0.00001274650359983121}, {
                2.*^-7, 0.00001274650359983121}}]}, {
               Hue[0.1421359549995791, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[7, 360]], 
                AbsoluteThickness[1.6], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
               
               Line[{{0., 9.83796470017213*^-6}, {1.*^-8, 
                0.000010553987210317094`}, {2.5*^-8, 
                0.00001168135465851878}, {5.*^-8, 0.00001368376323681108}, {
                7.5*^-8, 0.00001581870536996024}, {1.*^-7, 
                0.00001806697519364545}, {1.25*^-7, 
                0.000020412876786011098`}, {1.5*^-7, 
                0.00002284287113599182}, {1.75*^-7, 
                0.000025344987376637554`}, {2.*^-7, 
                0.00002790851890279739}}]}, {
               Hue[0.37820393249936934`, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[7, 360]], 
                AbsoluteThickness[1.6], 
                RGBColor[0.880722, 0.611041, 0.142051]], 
               
               Line[{{0., 0.00001274650359983121}, {1.*^-8, 
                0.000013539935005557647`}, {2.5*^-8, 
                0.000014766228082688653`}, {5.*^-8, 0.00001689624117440736}, {
                7.5*^-8, 0.000019119902711834402`}, {1.*^-7, 
                0.00002142325764698846}, {1.25*^-7, 
                0.000023794182260831576`}, {1.5*^-7, 
                0.000026221966476418625`}, {1.75*^-7, 
                0.000028697072254079872`}, {2.*^-7, 
                0.00003121097518515666}}]}}}, {{}, {}}}, {
           DisplayFunction -> Identity, DisplayFunction -> Identity, 
            AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
            AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
            Identity, Epilog -> Text[
              Style["c) Waste nitrogen per volume", {
                GrayLevel[0], 14}], 
              Offset[{5, -6}, 
               Scaled[{0, 1}]], {-1, 0}], 
            Frame -> {{True, False}, {True, False}}, 
            FrameLabel -> {{
              "mol N \!\(\*SuperscriptBox[\(L\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(d\), \(-1\)]\)", None}, {None, None}}, FrameStyle -> 
            Directive[
              GrayLevel[0], 14], FrameTicks -> {{{{
                 Rational[1, 100000], 
                 "1*\!\(\*SuperscriptBox[\(10\), \(-5\)]\)"}, {
                 Rational[1, 50000], 
                 "2*\!\(\*SuperscriptBox[\(10\), \(-5\)]\)"}, {
                 Rational[3, 100000], 
                 "3*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}}, 
               None}, {{{0, "0"}, {
                 Rational[1, 10000000], 
                 "1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, {
                 Rational[1, 5000000], 
                 "2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}}, None}}, 
            FrameTicksStyle -> Directive[
              GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
            Directive[
              GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {50, 10}}, 
            LabelStyle -> 
            Directive[
             FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
            Method -> {
             "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
              "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& )}}, 
            PlotRange -> {{0, 2.*^-7}, {0., 0.000035000000000000004`}}, 
            PlotRangeClipping -> True, PlotRangePadding -> {{
               Scaled[0.02], 
               Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], {
          520., -222.49223594996212`}, 
          ImageScaled[{0.5, 0}], {360., 222.49223594996212`}]}, {
         Inset[
          Graphics[{{}, {{{}, {}, {
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[7, 360]], 
                AbsoluteThickness[1.6], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                Dashing[Large]], 
               
               Line[{{0., 0.0029864387934975685`}, {1.*^-8, 
                0.0029864387934975685`}, {2.5*^-8, 0.0029864387934975685`}, {
                5.*^-8, 0.0029864387934975685`}, {7.5*^-8, 
                0.0029864387934975685`}, {1.*^-7, 0.0029864387934975685`}, {
                1.25*^-7, 0.0029864387934975685`}, {1.5*^-7, 
                0.0029864387934975685`}, {1.75*^-7, 0.0029864387934975685`}, {
                2.*^-7, 0.0029864387934975685`}}]}, {
               Hue[0.9060679774997897, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[7, 360]], 
                AbsoluteThickness[1.6], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                Dashing[Large]], 
               
               Line[{{0., 0.007438955189713734}, {1.*^-8, 
                0.007438955189713734}, {2.5*^-8, 0.007438955189713734}, {
                5.*^-8, 0.007438955189713734}, {7.5*^-8, 
                0.007438955189713734}, {1.*^-7, 0.007438955189713734}, {
                1.25*^-7, 0.007438955189713734}, {1.5*^-7, 
                0.007438955189713734}, {1.75*^-7, 0.007438955189713734}, {
                2.*^-7, 0.007438955189713734}}]}, {
               Hue[0.1421359549995791, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[7, 360]], 
                AbsoluteThickness[1.6], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
               
               Line[{{0., 0.0029864387934975685`}, {1.*^-8, 
                0.004231975461829319}, {2.5*^-8, 0.006046733828364502}, {
                5.*^-8, 0.008935496943097372}, {7.5*^-8, 
                0.011665725060242639`}, {1.*^-7, 0.01424969739178875}, {
                1.25*^-7, 0.016698666534627062`}, {1.5*^-7, 
                0.019022845857647217`}, {1.75*^-7, 0.021231478223211808`}, {
                2.*^-7, 0.023332940145188042`}}]}, {
               Hue[0.37820393249936934`, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[7, 360]], 
                AbsoluteThickness[1.6], 
                RGBColor[0.880722, 0.611041, 0.142051]], 
               
               Line[{{0., 0.007438955189713734}, {1.*^-8, 
                0.008552593689051046}, {2.5*^-8, 0.010175932246269889`}, {
                5.*^-8, 0.012762525776201367`}, {7.5*^-8, 
                0.015210557029747036`}, {1.*^-7, 0.01753076066082253}, {
                1.25*^-7, 0.0197328396727222}, {1.5*^-7, 
                0.021825565665702294`}, {1.75*^-7, 0.023816868022311505`}, {
                2.*^-7, 0.025713936589534806`}}]}}}, {{}, {}}}, {
           DisplayFunction -> Identity, DisplayFunction -> Identity, 
            AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
            AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
            Identity, Epilog -> Text[
              Style["b) Host specific growth rate", {
                GrayLevel[0], 14}], 
              Offset[{5, -6.5}, 
               Scaled[{0, 1}]], {-1, 0}], 
            Frame -> {{True, False}, {True, False}}, 
            FrameLabel -> {{
              "C-mol H C-mol \!\(\*SuperscriptBox[\(H\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(d\), \(-1\)]\) ", None}, {
              "Prey (C-mol \!\(\*SuperscriptBox[\(L\), \(-1\)]\))", None}}, 
            FrameStyle -> Directive[
              GrayLevel[0], 14], 
            FrameTicks -> {{{0, 0.01, 0.02}, None}, {{{0, "0"}, {
                 Rational[1, 10000000], 
                 "1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, {
                 Rational[1, 5000000], 
                 "2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}}, None}}, 
            FrameTicksStyle -> Directive[
              GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
            Directive[
              GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {50, 10}}, 
            LabelStyle -> 
            Directive[
             FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
            Method -> {
             "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
              "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& )}}, PlotRange -> {{0, 2.*^-7}, {0., 0.028}},
             PlotRangeClipping -> True, PlotRangePadding -> {{
               Scaled[0.02], 
               Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], {
          180, -424.98447189992424`}, 
          ImageScaled[{0.5, 0}], {360, 222.49223594996212`}], 
         Inset[
          Graphics[{{}, {{{}, {}, {
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[7, 360]], 
                AbsoluteThickness[1.6], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                Dashing[Large]], 
               
               Line[{{0., 0.}, {1.*^-8, 0.}, {2.5*^-8, 0.}, {5.*^-8, 0.}, {
                7.5*^-8, 0.}, {1.*^-7, 0.}, {1.25*^-7, 0.}, {1.5*^-7, 0.}, {
                1.75*^-7, 0.}, {2.*^-7, 0.}}]}, {
               Hue[0.9060679774997897, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[7, 360]], 
                AbsoluteThickness[1.6], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                Dashing[Large]], 
               
               Line[{{0., 0.0001745254677322176}, {1.*^-8, 
                0.0001745254677322176}, {2.5*^-8, 0.0001745254677322176}, {
                5.*^-8, 0.0001745254677322176}, {7.5*^-8, 
                0.0001745254677322176}, {1.*^-7, 0.0001745254677322176}, {
                1.25*^-7, 0.0001745254677322176}, {1.5*^-7, 
                0.0001745254677322176}, {1.75*^-7, 0.0001745254677322176}, {
                2.*^-7, 0.0001745254677322176}}]}, {
               Hue[0.1421359549995791, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[7, 360]], 
                AbsoluteThickness[1.6], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
               
               Line[{{0., 0.}, {1.*^-8, 0.}, {2.5*^-8, 0.}, {5.*^-8, 0.}, {
                7.5*^-8, 0.}, {1.*^-7, 0.}, {1.25*^-7, 0.}, {1.5*^-7, 0.}, {
                1.75*^-7, 0.}, {2.*^-7, 0.}}]}, {
               Hue[0.37820393249936934`, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[7, 360]], 
                AbsoluteThickness[1.6], 
                RGBColor[0.880722, 0.611041, 0.142051]], 
               
               Line[{{0., 0.0001745254677322176}, {1.*^-8, 
                0.000169958888465859}, {2.5*^-8, 0.00016330223944688966`}, {
                5.*^-8, 0.00015269567823170544`}, {7.5*^-8, 
                0.00014265730052426788`}, {1.*^-7, 0.000133143093456897}, {
                1.25*^-7, 0.0001241132620213567}, {1.5*^-7, 
                0.00011553185364051597`}, {1.75*^-7, 
                0.00010736633205250573`}, {2.*^-7, 
                0.00009958722709683805}}]}}}, {{}, {}}}, {
           DisplayFunction -> Identity, DisplayFunction -> Identity, 
            AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
            AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
            Identity, Epilog -> Text[
              Style["d) Fish excretions per volume", {
                GrayLevel[0], 14}], 
              Offset[{5, -5.5}, 
               Scaled[{0, 1}]], {-1, 0}], 
            Frame -> {{True, False}, {True, False}}, 
            FrameLabel -> {{
              "mol N \!\(\*SuperscriptBox[\(L\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(d\), \(-1\)]\)", None}, {
              "Prey (C-mol \!\(\*SuperscriptBox[\(L\), \(-1\)]\))", None}}, 
            FrameStyle -> Directive[
              GrayLevel[0], 14], 
            FrameTicks -> {{{0.00005, 0.0001, 0.00015}, None}, {{{0, "0"}, {
                 Rational[1, 10000000], 
                 "1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, {
                 Rational[1, 5000000], 
                 "2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}}, None}}, 
            FrameTicksStyle -> Directive[
              GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
            Directive[
              GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {50, 10}}, 
            LabelStyle -> 
            Directive[
             FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
            Method -> {
             "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
              "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& )}}, 
            PlotRange -> {{0, 2.*^-7}, {0., 0.0002}}, PlotRangeClipping -> 
            True, PlotRangePadding -> {{
               Scaled[0.02], 
               Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], {
          520., -424.98447189992424`}, 
          ImageScaled[{0.5, 0}], {360., 222.49223594996212`}]}}, {}}, 
      Text[
      "\!\(\*SubscriptBox[\(N\), \(i\)]\) = \!\(\*SubscriptBox[\(N\), \
\(env\)]\)", {80, -54}]}, {
     ImageSize -> Full, PlotRangePadding -> {6, 5}, ImageSize -> Full}], 
    Placed[
     Unevaluated[
      LineLegend[{
        RGBColor[0.368417, 0.506779, 0.709798], {
         RGBColor[0.368417, 0.506779, 0.709798], 
         Dashing[Large]}, 
        RGBColor[0.880722, 0.611041, 0.142051], {
         RGBColor[0.880722, 0.611041, 0.142051], 
         Dashing[Large]}}, {
       "No fish, with prey", "No fish, no prey", "With fish, with prey", 
        "With fish, no prey"}, LegendLayout -> {"Row", 1}, LabelStyle -> 
       Directive[FontSize -> 14]]], {Center, 0}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.842819737840366*^9, 3.842819864489057*^9}, {
   3.844509139407716*^9, 3.844509148990398*^9}, 3.844511167746522*^9, {
   3.844785972907206*^9, 3.844785987792798*^9}, {3.8447860214272213`*^9, 
   3.844786028992649*^9}, 3.845644016517377*^9, 3.845644096898717*^9, 
   3.845644144140851*^9, 3.854026421188933*^9},
 CellLabel->
  "Out[610]=",ExpressionUUID->"05e40cf0-8b1c-4bef-897c-53eb0042c254"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fig. S2: Bifurcation heat maps", "Section",
 CellChangeTimes->{{3.842902809949767*^9, 3.842902819468471*^9}, 
   3.8443794336614*^9, {3.845644330417534*^9, 
   3.845644332891179*^9}},ExpressionUUID->"1e36d3d1-d745-482b-86fd-\
c359e6dfb1d0"],

Cell[CellGroupData[{

Cell["Run simulations and format results", "Subsection",
 CellChangeTimes->{{3.84290305453109*^9, 3.842903060050498*^9}, {
  3.8433101906675863`*^9, 
  3.84331019859833*^9}},ExpressionUUID->"cca91fce-096f-4e6b-91c1-\
82146bdb4223"],

Cell[CellGroupData[{

Cell["Check steady state for Nenv vs prey simulations", "Subsubsection",
 CellChangeTimes->{{3.837016020648465*^9, 3.837016022823328*^9}, {
  3.842903144115148*^9, 3.842903147916192*^9}, {3.843301524471611*^9, 
  3.843301554062662*^9}},ExpressionUUID->"87c06244-1b30-4cb2-9bb5-\
0eca90b7b647"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.831830789369714*^9, 3.8318307905412607`*^9}, {
   3.835995882215592*^9, 3.83599588299831*^9}, {3.8363089619914494`*^9, 
   3.836308970966587*^9}, {3.836309185335792*^9, 3.8363091870313787`*^9}, 
   3.8363138138722897`*^9, 3.842903491237357*^9},
 CellLabel->
  "In[210]:=",ExpressionUUID->"e8d92b18-1915-46ba-a010-4bcd8f60079c"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"environment", ":", " ", 
    RowBox[{"flushing", " ", "rate", " ", "and", " ", "N", " ", "level"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"jN", "=", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"jNi0", " ", "=", " ", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "1500"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NXRunsTest", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"jX", "=", 
                FractionBox[
                 RowBox[{"jXm", " ", "X"}], 
                 RowBox[{"X", "+", "KX"}]]}], ",", " ", 
               RowBox[{"jN", "=", 
                FractionBox[
                 RowBox[{"jNm", " ", "\[CapitalNu]"}], 
                 RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", 
               RowBox[{"jHT", "=", "j0HT"}], ",", 
               RowBox[{"rNS", "=", 
                RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
               RowBox[{"VH0", "=", 
                RowBox[{"kv", "*", "H0"}]}], ",", " ", 
               RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
               RowBox[{"jNi0", " ", "=", " ", 
                FractionBox[
                 RowBox[{"jNm", " ", "\[CapitalNu]"}], 
                 RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", "states", ",", 
               " ", "rNH", ",", " ", "S", ",", "H", ",", "VH", ",", "P", ",", 
               "Ni", ",", "jNi", ",", "\[Rho]C", ",", " ", "jCP", ",", " ", 
               "jHG", ",", "\[Rho]N", ",", "jeC", ",", "jCO2", ",", "A", ",", 
               "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", ",", 
               "cROS1", ",", "jSG", ",", "jST", ",", "jNw", ",", "F", ",", 
               "fh", ",", "tsolve", ",", " ", "addtimetostatevars", ",", 
               "eqs", ",", "inis", ",", "sol", ",", "t", ",", "steadyNi", ",",
                "steadyHGrowth", ",", "steadySH"}], 
              RowBox[{"(*", 
               RowBox[{
               "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
                "intermediate", " ", "output", " ", "values", " ", "in", " ", 
                "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
                RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
               FractionBox[
                RowBox[{"A", " ", "B", " ", 
                 RowBox[{"(", 
                  RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["A", "2"], " ", "B"}], "+", 
                 RowBox[{"A", " ", 
                  SuperscriptBox["B", "2"]}], "+", 
                 RowBox[{
                  SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
                 RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
                 RowBox[{
                  SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
              RowBox[{"(*", 
               RowBox[{"same", " ", "as", " ", 
                FractionBox["1", 
                 RowBox[{
                  FractionBox["1", "\[Rho]"], "+", 
                  FractionBox["1", "A"], "+", 
                  FractionBox["1", "B"], "-", 
                  FractionBox["1", 
                   RowBox[{"A", "+", "B"}]]}]]}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"fh", "[", 
                RowBox[{
                 RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
               RowBox[{"Piecewise", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", " ", 
                    RowBox[{"y", "<", "0"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"kv", " ", "*", "y"}], ",", 
                    RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
                "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", "Calculations", " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"jHG", "=", 
               RowBox[{
                RowBox[{"F", "[", "jHGm", "]"}], "[", 
                RowBox[{
                 RowBox[{"yC", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Rho]C", " ", 
                    RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                    
                    RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                    RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                  SuperscriptBox["nNH", 
                   RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
              "\[IndentingNewLine]", 
              RowBox[{"jSG", "=", 
               RowBox[{
                RowBox[{"F", "[", "jSGm", "]"}], "[", 
                RowBox[{
                 RowBox[{"jCP", " ", "yC"}], ",", 
                 FractionBox[
                  RowBox[{"rNS", "+", 
                   FractionBox[
                    RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"\[Rho]N", "=", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                  
                  RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                  RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
                  RowBox[{"nNH", " ", "jHG"}]}], " ", 
                 RowBox[{"(*", 
                  SuperscriptBox["yN", 
                   RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"jeC", "=", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{"jX", "-", 
                  FractionBox["jHG", "yC"], "+", 
                  FractionBox[
                   RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}],
               ";", " ", "\[IndentingNewLine]", 
              RowBox[{"jCO2", "=", 
               RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"jL", "=", 
               RowBox[{"A", " ", "astar", " ", "L"}]}], " ", ";", 
              "\[IndentingNewLine]", 
              RowBox[{"rCH", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"jHT", "+", 
                  FractionBox[
                   RowBox[{"jHG", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
                "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"rCS", "=", 
               RowBox[{"\[Sigma]CS", 
                RowBox[{"(", 
                 RowBox[{"j0ST", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
                   SuperscriptBox["yC", 
                    RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"jeL", "=", 
               RowBox[{"jL", "-", 
                FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"jNPQ", "=", 
               FractionBox["1", 
                RowBox[{
                 FractionBox["1", "jeL"], "+", 
                 FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
              RowBox[{"cROS1", "=", 
               FractionBox[
                RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"jST", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"rNH", "=", 
               RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"A", "=", 
               RowBox[{"1.256307", "+", 
                RowBox[{"1.385969", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "6.479055"}], " ", 
                   RowBox[{"S", "/", "H"}]}]]}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"jNw", "=", " ", 
               RowBox[{
                RowBox[{"\[Rho]N", "*", 
                 RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
                RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"tsolve", "=", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[Rho]C", ",", 
                   RowBox[{"jCP", "-", 
                    RowBox[{"jSG", " ", 
                    SuperscriptBox["yC", 
                    RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"jCP", ",", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"F", "[", "jCPm", "]"}], "[", 
                    RowBox[{
                    RowBox[{"jL", " ", "yCL"}], ",", 
                    RowBox[{"rCS", "+", 
                    FractionBox[
                    RowBox[{"H", " ", 
                    RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
                    RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"jNi", ",", " ", 
                   FractionBox[
                    RowBox[{"jNm", " ", "*", "Ni"}], 
                    RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
                "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"states", "=", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"tsolve", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
                  "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"addtimetostatevars", "=", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"#", "\[Rule]", 
                    RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", 
                 "states"}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
              RowBox[{"eqs", "=", 
               RowBox[{"Join", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
                    "\[Equal]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Lambda]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
                  "tsolve"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"S", 
                    RowBox[{"(", 
                    RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"H", 
                    RowBox[{"(", 
                    RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                    RowBox[{"fh", "[", 
                    RowBox[{"t", ",", " ", 
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"d", "*", 
                    RowBox[{"(", " ", 
                    RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                    " ", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                    ")"}], "/", 
                    RowBox[{"(", " ", 
                    RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"P", "*", 
                    RowBox[{"(", 
                    RowBox[{"rp", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                    ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
                  "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"inis", "=", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], 
                   ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}],
                  ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], 
                    "\[Equal]", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
                  "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"sol", "=", 
               RowBox[{
                RowBox[{"NDSolve", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Join", "[", 
                    RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
                  RowBox[{
                   RowBox[{"#", "&"}], "/@", "states"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
                  RowBox[{"Method", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<EquationSimplification\>\"", "\[Rule]", 
                    "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"change", " ", "in", " ", "Ni"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"steadyNi", "=", 
               RowBox[{"Abs", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"Ni", "[", "tmax", "]"}], "/.", "sol"}], "]"}], 
                   "-", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"Ni", "[", 
                    RowBox[{"tmax", "-", "50"}], "]"}], "/.", "sol"}], 
                    "]"}]}], ")"}], "/", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{"Ni", "[", 
                    RowBox[{"tmax", "-", "50"}], "]"}], "/.", "sol"}], 
                  "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"change", " ", "in", " ", "host", " ", "growth"}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{"steadyHGrowth", "=", 
               RowBox[{"Abs", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
                    RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], 
                   "-", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"H", "'"}], "[", 
                    RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                    RowBox[{"H", "[", 
                    RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], 
                    "]"}]}], ")"}], "/", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"H", "'"}], "[", 
                    RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                    RowBox[{"H", "[", 
                    RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], 
                  "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"change", " ", "in", " ", 
                RowBox[{"S", "/", "H"}]}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"steadySH", "=", 
               RowBox[{"Abs", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"S", "[", "tmax", "]"}], "/", 
                    RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], 
                   "-", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"S", "[", 
                    RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                    RowBox[{"H", "[", 
                    RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], 
                    "]"}]}], ")"}], "/", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"S", "[", 
                    RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                    RowBox[{"H", "[", 
                    RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], 
                  "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
               "}"}]}]}], 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
              "record", " ", "the", " ", "changes", " ", "in", " ", "Ni"}], 
              ",", " ", 
              RowBox[{"H", " ", "growth"}], ",", " ", 
              RowBox[{"and", " ", 
               RowBox[{"S", "/", "H"}], " ", "as", " ", "output"}]}], "*)"}], 
            "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"X", ",", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"0.1", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "7"}]}]}], ",", 
               RowBox[{"0.25", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "7"}]}]}], ",", 
               RowBox[{"0.5", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "7"}]}]}], ",", 
               RowBox[{"0.75", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "7"}]}]}], ",", 
               RowBox[{"1", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "7"}]}]}], ",", 
               RowBox[{"1.25", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "7"}]}]}], ",", 
               RowBox[{"1.5", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "7"}]}]}], ",", 
               RowBox[{"1.75", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "7"}]}]}], ",", " ", 
               RowBox[{"2", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "7"}]}]}]}], "}"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{
          "repeat", " ", "all", " ", "this", " ", "for", " ", "different", 
           " ", "levels", " ", "of", " ", "prey"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"\[CapitalNu]", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"0.1", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "7"}]}]}], ",", 
             RowBox[{"0.25", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "7"}]}]}], ",", 
             RowBox[{"0.5", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "7"}]}]}], ",", 
             RowBox[{"0.75", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "7"}]}]}], ",", 
             RowBox[{"1", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "7"}]}]}], ",", 
             RowBox[{"2.5", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "7"}]}]}], ",", 
             RowBox[{"5", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "7"}]}]}], ",", 
             RowBox[{"7.5", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "7"}]}]}], ",", 
             RowBox[{"10", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "7"}]}]}]}], "}"}]}], "}"}]}], 
        RowBox[{"(*", 
         RowBox[{
         "repeat", " ", "all", " ", "this", " ", "for", " ", "different", " ",
           "Nenv", " ", "values"}], "*)"}], "\[IndentingNewLine]", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"P0", ",", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", 
           RowBox[{"kp", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H0"}]}], "}"}]}], 
        "}"}]}], 
      RowBox[{"(*", 
       RowBox[{
       "run", " ", "everything", " ", "once", " ", "with", " ", "no", " ", 
        "fish", " ", 
        RowBox[{"(", 
         RowBox[{"P0", "=", "0"}], ")"}], " ", "and", " ", "once", " ", 
        "with", " ", "fish", " ", 
        RowBox[{"(", 
         RowBox[{"P0", "=", 
          RowBox[{"kp", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H0"}]}], ")"}]}], 
       "*)"}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836576641311953*^9, 3.836576745811816*^9}, {3.8365767807913227`*^9, 
   3.836576796666417*^9}, {3.83690984159394*^9, 3.8369098642372837`*^9}, {
   3.8369099504464817`*^9, 3.836909992597097*^9}, {3.836910066716194*^9, 
   3.836910181553328*^9}, {3.8369102578063707`*^9, 3.836910390882205*^9}, {
   3.8369104221261673`*^9, 3.8369104445293837`*^9}, {3.836910588258913*^9, 
   3.836910603839734*^9}, {3.83691170755369*^9, 3.836911723135646*^9}, 
   3.836916782182846*^9, {3.8369173444379473`*^9, 3.836917364496358*^9}, {
   3.836917449889654*^9, 3.836917475981286*^9}, {3.837016270499617*^9, 
   3.837016319257697*^9}, {3.837016380938163*^9, 3.8370163826278067`*^9}, {
   3.8370168011807423`*^9, 3.837016810077647*^9}, {3.8371085820269213`*^9, 
   3.837108583101288*^9}, {3.837108840396078*^9, 3.837108865421579*^9}, 
   3.837108912868581*^9, {3.837109110867063*^9, 3.8371091757163563`*^9}, {
   3.837109206071288*^9, 3.837109212492094*^9}, {3.837113041761157*^9, 
   3.837113114895767*^9}, {3.837113921213895*^9, 3.837113921643626*^9}, {
   3.842903496660693*^9, 3.84290349946566*^9}, {3.8433015938650293`*^9, 
   3.843301594548778*^9}, 3.8433016731607533`*^9, {3.843302827075327*^9, 
   3.843302827467216*^9}, {3.843303331848271*^9, 3.8433033320126657`*^9}, 
   3.843925025364253*^9, {3.844379452090578*^9, 3.8443795688688374`*^9}, {
   3.85402492288415*^9, 3.854024932186943*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"f2b28e77-5488-461e-add4-17d235466052"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", "NXRunsTest", "]"}], ",", " ", 
    RowBox[{
     RowBox[{"#", ">", 
      RowBox[{"1", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "4"}]}]}]}], "&"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "see", " ", "whether", " ", "any", " ", "outputs", " ", "are", " ", 
    "greater", " ", "than", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "4"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"no", " ", "fish", " ", 
    RowBox[{"case", ":", " ", 
     RowBox[{
     "some", " ", "simulations", " ", "did", " ", "not", " ", "reach", " ", 
      "the", " ", "steady", " ", "state", " ", 
      RowBox[{"(", 
       RowBox[{"changes", " ", "were", " ", "greater", " ", "than", " ", 
        RowBox[{"10", "^", 
         RowBox[{"-", "4"}]}]}], ")"}]}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"NXRunsTest", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", 
    RowBox[{
     RowBox[{"#", ">", 
      RowBox[{"1", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "4"}]}]}]}], "&"}]}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"with", " ", "fish", " ", 
    RowBox[{"case", ":", " ", 
     RowBox[{
     "all", " ", "simulations", " ", "reached", " ", "the", " ", "steady", 
      " ", "state"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"NXRunsTest", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", " ", 
   RowBox[{
    RowBox[{"#", ">", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "4"}]}]}]}], "&"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8414411429815903`*^9, 3.841441146445889*^9}, {
   3.841441308667336*^9, 3.841441312527545*^9}, {3.8414414720350313`*^9, 
   3.8414414762482567`*^9}, {3.8433014669511137`*^9, 3.843301495023656*^9}, 
   3.8433017610690813`*^9, {3.8433018338897*^9, 3.843301857234819*^9}, {
   3.8433028862284317`*^9, 3.843302889954226*^9}, {3.843303457715599*^9, 
   3.8433034663505793`*^9}, {3.844379578587377*^9, 3.844379586491214*^9}, {
   3.844379621662763*^9, 3.8443796805502996`*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"ee57551a-d511-4f8b-82fa-bf6e1137d4e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.0008267527350871222`", ",", "0.00023303512641435138`", ",", 
   "0.0025931885457040216`", ",", "0.0012039484279492841`", ",", 
   "0.0007732101420822199`", ",", "0.00492070857995971`", ",", 
   "0.004056634485973444`", ",", "0.005454491572902342`", ",", 
   "0.00011213134711540592`", ",", "0.005004714719132809`", ",", 
   "0.015811084147254167`", ",", "0.0020019983241566022`", ",", 
   "0.043938258838332814`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8414414918036823`*^9, 3.843301499391221*^9, 3.8433017645536127`*^9, 
   3.843301859585557*^9, {3.8433028665498*^9, 3.843302890667099*^9}, 
   3.8433033767944527`*^9, 3.843303466957698*^9, 3.844509237509082*^9, 
   3.854043951324749*^9},
 CellLabel->
  "Out[215]=",ExpressionUUID->"4ddbb397-861f-47ee-a654-58b9a0018a06"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.0008267527350871222`", ",", "0.00023303512641435138`", ",", 
   "0.0025931885457040216`", ",", "0.0012039484279492841`", ",", 
   "0.0007732101420822199`", ",", "0.00492070857995971`", ",", 
   "0.004056634485973444`", ",", "0.005454491572902342`", ",", 
   "0.00011213134711540592`", ",", "0.005004714719132809`", ",", 
   "0.015811084147254167`", ",", "0.0020019983241566022`", ",", 
   "0.043938258838332814`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8414414918036823`*^9, 3.843301499391221*^9, 3.8433017645536127`*^9, 
   3.843301859585557*^9, {3.8433028665498*^9, 3.843302890667099*^9}, 
   3.8433033767944527`*^9, 3.843303466957698*^9, 3.844509237509082*^9, 
   3.8540439513266153`*^9},
 CellLabel->
  "Out[216]=",ExpressionUUID->"d7bc8f7c-9a97-41d7-b687-5c6380376af7"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.8414414918036823`*^9, 3.843301499391221*^9, 3.8433017645536127`*^9, 
   3.843301859585557*^9, {3.8433028665498*^9, 3.843302890667099*^9}, 
   3.8433033767944527`*^9, 3.843303466957698*^9, 3.844509237509082*^9, 
   3.854043951329012*^9},
 CellLabel->
  "Out[217]=",ExpressionUUID->"bcd5de48-092b-472b-bd2c-d77a4e79513a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "check", " ", "to", " ", "see", " ", "which", " ", "simulations", " ", 
    "did", " ", "not", " ", "reach", " ", "the", " ", "steady", " ", 
    "state"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"host", " ", "growth"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"NXgrowthnoPdiff", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"NXRunsTest", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", "1"}], "]"}], "]"}], "[", 
      
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "Ni", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NXNinoPdiff", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"NXRunsTest", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", "1"}], "]"}], "]"}], "[", 
      
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "put", " ", "the", " ", "results", " ", "in", " ", "matrix", " ", 
     "form"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixNXnoPgrowth", "=", 
     RowBox[{"ArrayReshape", "[", 
      RowBox[{"NXgrowthnoPdiff", ",", " ", 
       RowBox[{"{", 
        RowBox[{"9", ",", " ", "10"}], "}"}]}], "]"}]}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixNXnoPNi", "=", 
     RowBox[{"ArrayReshape", "[", 
      RowBox[{"NXNinoPdiff", ",", " ", 
       RowBox[{"{", 
        RowBox[{"9", ",", " ", "10"}], "}"}]}], "]"}]}], " ", ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "check", " ", "which", " ", "positions", " ", "of", " ", "these", " ", 
     "matrices", " ", "had", " ", "changes", " ", "greater", " ", "than", " ", 
     RowBox[{"10", "^", 
      RowBox[{"-", "4"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Position", "[", 
    RowBox[{"MatrixNXnoPgrowth", ",", 
     RowBox[{"_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", ">", 
         RowBox[{"1", "*", 
          RowBox[{"10", "^", 
           RowBox[{"-", "4"}]}]}]}], "&"}], ")"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Position", "[", 
    RowBox[{"MatrixNXnoPNi", ",", 
     RowBox[{"_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", ">", 
         RowBox[{"1", "*", 
          RowBox[{"10", "^", 
           RowBox[{"-", "4"}]}]}]}], "&"}], ")"}]}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.84330212814843*^9, 3.8433022135276003`*^9}, {
  3.8433022746949673`*^9, 3.843302364676696*^9}, {3.8433024261287613`*^9, 
  3.843302562650989*^9}, {3.843302593011009*^9, 3.8433026084848833`*^9}, {
  3.843302692320304*^9, 3.843302692857813*^9}, {3.8433027376739492`*^9, 
  3.843302742293036*^9}, {3.843303481588513*^9, 3.843303523184314*^9}, {
  3.84330362363099*^9, 3.8433036447620277`*^9}, {3.8433037284948587`*^9, 
  3.843303733074224*^9}, {3.843303922737811*^9, 3.8433039644953537`*^9}, {
  3.843304032048215*^9, 3.843304101304356*^9}, {3.843308785241042*^9, 
  3.843308786396041*^9}, {3.844379700213277*^9, 3.8443797587279577`*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"c7d30d6d-9861-471f-89ff-9c6def78a0c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.843302563439539*^9, 3.843302609715685*^9, 3.843302694130061*^9, 
   3.843302902836183*^9, 3.8433033844735126`*^9, {3.8433034964165087`*^9, 
   3.843303523909794*^9}, 3.843303646021125*^9, 3.84330396834804*^9, 
   3.843304033242899*^9, 3.843304102168029*^9, 3.844509245960011*^9, 
   3.854043956086911*^9},
 CellLabel->
  "Out[222]=",ExpressionUUID->"84cab9a4-f2ca-4a2f-8c45-b9427da881c9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.843302563439539*^9, 3.843302609715685*^9, 3.843302694130061*^9, 
   3.843302902836183*^9, 3.8433033844735126`*^9, {3.8433034964165087`*^9, 
   3.843303523909794*^9}, 3.843303646021125*^9, 3.84330396834804*^9, 
   3.843304033242899*^9, 3.843304102168029*^9, 3.844509245960011*^9, 
   3.854043956088581*^9},
 CellLabel->
  "Out[223]=",ExpressionUUID->"cc49729c-ec10-41b3-94c0-2118f5c80def"]
}, Open  ]],

Cell[TextData[{
 "There are 6 cases where the steady state is not reached: at positions 1, 2, \
and 3 of the first column (corresponding to the 3 lowest values of Nenv with \
0 prey), at positions 1 and 2 of the second column (corresponding to the 2 \
lowest values of Nenv with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"prey", "=", 
    RowBox[{"0.1", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "7"}]]}]}], TraditionalForm]],ExpressionUUID->
  "42807e2c-bca7-4169-aa78-123e3cc38925"],
 ", and at position 2 of the third column (corresponding to the lowest value \
of Nenv with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"prey", "=", 
    RowBox[{"0.25", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "7"}]]}]}], TraditionalForm]],ExpressionUUID->
  "fc827775-7ab2-4279-81a1-7a3aa0dca279"],
 ").  All of these different situations are run individually in the following \
code chunks. \n"
}], "Text",
 CellChangeTimes->{{3.8433041341512337`*^9, 3.84330417149079*^9}, {
  3.843304201678121*^9, 3.843304346663086*^9}, {3.8433047530102*^9, 
  3.843304802791806*^9}, {3.843304842687357*^9, 3.843304861540609*^9}, {
  3.843304924251441*^9, 3.843304941145849*^9}, {3.843305039118946*^9, 
  3.8433050495048428`*^9}, {3.8433051286431217`*^9, 3.843305136269969*^9}, {
  3.8433051816161003`*^9, 3.843305188052916*^9}, {3.843305297402441*^9, 
  3.843305302350671*^9}, {3.84330939826525*^9, 3.8433094742524977`*^9}, {
  3.843309524873782*^9, 3.843309533358739*^9}, {3.8433096143446608`*^9, 
  3.8433097019155188`*^9}, {3.843309782130231*^9, 3.843309796289936*^9}, {
  3.8443797674470797`*^9, 3.8443797851934566`*^9}, {3.844379870909164*^9, 
  3.8443799304632683`*^9}},ExpressionUUID->"27564d5a-1081-405a-9142-\
84656d82f51e"],

Cell[TextData[{
 "1. NO PREY, Nenv= ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0.1", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "7"}]]}], TraditionalForm]],ExpressionUUID->
  "d7a66980-873a-47d3-a428-22e7cac3da63"]
}], "Text",
 CellChangeTimes->{{3.843308926040612*^9, 3.84330892661322*^9}, 
   3.843309800448368*^9, {3.843309946025127*^9, 3.843309952042384*^9}, {
   3.843310226782174*^9, 3.843310247287489*^9}, {3.843310307283135*^9, 
   3.843310316089974*^9}, {3.8443799481162567`*^9, 
   3.8443799484414167`*^9}},ExpressionUUID->"f1a1eb4a-ccac-4c08-bb8e-\
5ea9dbcf5dd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh", ",", 
    "LfunH"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.831830789369714*^9, 3.8318307905412607`*^9}, {
   3.835995882215592*^9, 3.83599588299831*^9}, {3.8363089619914494`*^9, 
   3.836308970966587*^9}, {3.836309185335792*^9, 3.8363091870313787`*^9}, 
   3.8363138138722897`*^9, 3.843143007434424*^9, {3.843146366303069*^9, 
   3.843146366755385*^9}, {3.843310218149005*^9, 3.843310222743376*^9}},
 CellLabel->
  "In[224]:=",ExpressionUUID->"aedab591-395a-42af-877b-0988f0f3b1b1"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "8"}]}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"jN", "=", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"jNi0", " ", "=", " ", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "2500"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NXnoXlowestN", "=", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"jX", "=", 
          FractionBox[
           RowBox[{"jXm", " ", "X"}], 
           RowBox[{"X", "+", "KX"}]]}], ",", " ", 
         RowBox[{"jN", "=", 
          FractionBox[
           RowBox[{"jNm", " ", "\[CapitalNu]"}], 
           RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", 
         RowBox[{"jHT", "=", "j0HT"}], ",", 
         RowBox[{"rNS", "=", 
          RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
         RowBox[{"VH0", "=", 
          RowBox[{"kv", "*", "H0"}]}], ",", " ", 
         RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
         RowBox[{"jNi0", " ", "=", " ", 
          FractionBox[
           RowBox[{"jNm", " ", "\[CapitalNu]"}], 
           RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", "states", ",", " ", 
         "rNH", ",", " ", "S", ",", "H", ",", "VH", ",", "P", ",", "Ni", ",", 
         "jNi", ",", "\[Rho]C", ",", " ", "jCP", ",", " ", "jHG", ",", 
         "\[Rho]N", ",", "jeC", ",", "jCO2", ",", "A", ",", "jL", ",", "rCH", 
         ",", "rCS", ",", "jeL", ",", "jNPQ", ",", "cROS1", ",", "jSG", ",", 
         "jST", ",", "jNw", ",", "F", ",", "fh", ",", "tsolve", ",", " ", 
         "addtimetostatevars", ",", "eqs", ",", "inis", ",", "sol", ",", "t", 
         ",", "steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
        RowBox[{"(*", 
         RowBox[{
         "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
          "intermediate", " ", "output", " ", "values", " ", "in", " ", 
          "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"light", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"LfunH", "=", 
         RowBox[{"L", "+", " ", 
          RowBox[{"LHigh", "*", 
           RowBox[{"HeavisideTheta", "[", 
            RowBox[{"t", "-", "tStartStress"}], "]"}]}], " ", "-", "  ", 
          RowBox[{"LHigh", "*", 
           RowBox[{"HeavisideTheta", "[", 
            RowBox[{"t", "-", 
             RowBox[{"(", 
              RowBox[{"tStartStress", "+", "tHigh"}], ")"}]}], "]"}]}]}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
          RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
         FractionBox[
          RowBox[{"A", " ", "B", " ", 
           RowBox[{"(", 
            RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
          RowBox[{
           RowBox[{
            SuperscriptBox["A", "2"], " ", "B"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox["B", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
           RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
           RowBox[{
            SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
        RowBox[{"(*", 
         RowBox[{"same", " ", "as", " ", 
          FractionBox["1", 
           RowBox[{
            FractionBox["1", "\[Rho]"], "+", 
            FractionBox["1", "A"], "+", 
            FractionBox["1", "B"], "-", 
            FractionBox["1", 
             RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"fh", "[", 
          RowBox[{
           RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
         RowBox[{"Piecewise", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", 
              RowBox[{"y", "<", "0"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kv", " ", "*", "y"}], ",", 
              RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", "Calculations", " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"jHG", "=", 
         RowBox[{
          RowBox[{"F", "[", "jHGm", "]"}], "[", 
          RowBox[{
           RowBox[{"yC", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]C", " ", 
               RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
              RowBox[{"\[Alpha]", "*", "jN"}], "+", 
              RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
            SuperscriptBox["nNH", 
             RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"jSG", "=", 
         RowBox[{
          RowBox[{"F", "[", "jSGm", "]"}], "[", 
          RowBox[{
           RowBox[{"jCP", " ", "yC"}], ",", 
           FractionBox[
            RowBox[{"rNS", "+", 
             FractionBox[
              RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Rho]N", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
            RowBox[{"\[Alpha]", "*", "jN"}], "+", 
            RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
            RowBox[{"nNH", " ", "jHG"}]}], " ", 
           RowBox[{"(*", 
            SuperscriptBox["yN", 
             RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"jeC", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"jX", "-", 
            FractionBox["jHG", "yC"], "+", 
            FractionBox[
             RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], ";", 
        " ", "\[IndentingNewLine]", 
        RowBox[{"jCO2", "=", 
         RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jL", "=", 
         RowBox[{"A", " ", "astar", " ", "L"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rCH", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"jHT", "+", 
            FractionBox[
             RowBox[{"jHG", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
          "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rCS", "=", 
         RowBox[{"\[Sigma]CS", 
          RowBox[{"(", 
           RowBox[{"j0ST", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
             SuperscriptBox["yC", 
              RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"jeL", "=", 
         RowBox[{"jL", "-", 
          FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jNPQ", "=", 
         FractionBox["1", 
          RowBox[{
           FractionBox["1", "jeL"], "+", 
           FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
        RowBox[{"cROS1", "=", 
         FractionBox[
          RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jST", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rNH", "=", 
         RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"A", "=", 
         RowBox[{"1.256307", "+", 
          RowBox[{"1.385969", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "6.479055"}], " ", 
             RowBox[{"S", "/", "H"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jNw", "=", " ", 
         RowBox[{
          RowBox[{"\[Rho]N", "*", 
           RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
          RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"tsolve", "=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Rho]C", ",", 
             RowBox[{"jCP", "-", 
              RowBox[{"jSG", " ", 
               SuperscriptBox["yC", 
                RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jCP", ",", 
             FractionBox[
              RowBox[{
               RowBox[{"F", "[", "jCPm", "]"}], "[", 
               RowBox[{
                RowBox[{"jL", " ", "yCL"}], ",", 
                RowBox[{"rCS", "+", 
                 FractionBox[
                  RowBox[{"H", " ", 
                   RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
              RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jNi", ",", " ", 
             FractionBox[
              RowBox[{"jNm", " ", "*", "Ni"}], 
              RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
          "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"states", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"tsolve", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
            "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"addtimetostatevars", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "\[Rule]", 
              RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", "states"}], 
          ")"}]}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"eqs", "=", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
               "\[Equal]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Lambda]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                 "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
            "tsolve"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"S", 
                 RowBox[{"(", 
                  RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"H", 
                 RowBox[{"(", 
                  RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
              RowBox[{"fh", "[", 
               RowBox[{"t", ",", " ", 
                RowBox[{
                 RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"d", "*", 
                  RowBox[{"(", " ", 
                   RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                 " ", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                   ")"}], "/", 
                  RowBox[{"(", " ", 
                   RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"P", "*", 
                 RowBox[{"(", 
                  RowBox[{"rp", "*", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                  ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
            "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"inis", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], "\[Equal]", 
               
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
            "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{
          RowBox[{"NDSolve", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Join", "[", 
              RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
            RowBox[{
             RowBox[{"#", "&"}], "/@", "states"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
            RowBox[{"Method", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<EquationSimplification\>\"", "\[Rule]", 
               "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"change", " ", "in", " ", "Ni"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"steadyNi", "=", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"Ni", "[", "tmax", "]"}], "/.", "sol"}], "]"}], "-", 
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"Ni", "[", 
                RowBox[{"tmax", "-", "50"}], "]"}], "/.", "sol"}], "]"}]}], 
            ")"}], "/", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"Ni", "[", 
              RowBox[{"tmax", "-", "50"}], "]"}], "/.", "sol"}], "]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"change", " ", "in", " ", "host", " ", "growth"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"steadyHGrowth", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Chop", "[", 
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
                 RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], 
              "]"}], "==", "0"}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Chop", "[", 
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "'"}], "[", 
                  RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                 RowBox[{"H", "[", 
                  RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], "]"}], 
              "]"}], "==", "0"}]}], ",", " ", "0", ",", 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
                  RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], 
               "-", 
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"H", "'"}], "[", 
                   RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                  RowBox[{"H", "[", 
                   RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], 
                "]"}]}], ")"}], "/", 
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"H", "'"}], "[", 
                 RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                RowBox[{"H", "[", 
                 RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], "]"}]}],
             "]"}]}], " ", "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"Chop", "[", "]"}], " ", "approximates", " ", "numbers", 
           " ", "that", " ", "are", " ", "less", " ", "than", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], " ", "as", " ", "0"}], ",", " ", 
          RowBox[{"so", " ", "in", " ", "this", " ", "case"}], ",", " ", 
          RowBox[{
          "if", " ", "host", " ", "growth", " ", "rate", " ", "is", " ", 
           "asymptotically", " ", "approaching", " ", "0"}], ",", " ", 
          RowBox[{
          "so", " ", "if", " ", "it", " ", "is", " ", "less", " ", "than", 
           " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], " ", "at", " ", "the", " ", "end", " ", 
           "of", " ", "the", " ", "time", " ", "step", " ", "say", " ", 
           "that", " ", "the", " ", "percent", " ", "change", " ", "is", " ", 
           "equal", " ", "to", " ", "zero"}]}], "*)"}], "\[IndentingNewLine]",
         "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"change", " ", "in", " ", 
          RowBox[{"S", "/", "H"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"steadySH", "=", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"S", "[", "tmax", "]"}], "/", 
                RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], "-", 
             
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"S", "[", 
                 RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                RowBox[{"H", "[", 
                 RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], "]"}]}],
             ")"}], "/", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"S", "[", 
               RowBox[{"tmax", "-", "50"}], "]"}], "/", 
              RowBox[{"H", "[", 
               RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], "]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
         "}"}]}]}], 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"record", " ", "the", " ", "change", " ", "in", " ", "Ni"}], 
        ",", " ", 
        RowBox[{"H", " ", "growth"}], ",", " ", 
        RowBox[{"and", " ", 
         RowBox[{"S", "/", "H"}], " ", "as", " ", "output"}]}], "*)"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836576641311953*^9, 3.836576745811816*^9}, {3.8365767807913227`*^9, 
   3.836576796666417*^9}, {3.83690984159394*^9, 3.8369098642372837`*^9}, {
   3.8369099504464817`*^9, 3.836909992597097*^9}, {3.836910066716194*^9, 
   3.836910181553328*^9}, {3.8369102578063707`*^9, 3.836910390882205*^9}, {
   3.8369104221261673`*^9, 3.8369104445293837`*^9}, {3.836910588258913*^9, 
   3.836910603839734*^9}, {3.83691170755369*^9, 3.836911723135646*^9}, 
   3.836916782182846*^9, {3.8369173444379473`*^9, 3.836917364496358*^9}, {
   3.836917449889654*^9, 3.836917475981286*^9}, {3.8369183517345324`*^9, 
   3.836918406414919*^9}, {3.837107692096567*^9, 3.837107693627658*^9}, {
   3.837115072644342*^9, 3.837115084746319*^9}, {3.841441086035733*^9, 
   3.841441106951355*^9}, {3.842184406440856*^9, 3.842184412972148*^9}, {
   3.8431426260245256`*^9, 3.843142626525084*^9}, {3.843142667219924*^9, 
   3.843142667609748*^9}, {3.843142754481592*^9, 3.8431427683750477`*^9}, 
   3.843142971054339*^9, 3.8431430016942453`*^9, {3.843145957205802*^9, 
   3.8431459574026003`*^9}, {3.843145989259967*^9, 3.84314599933941*^9}, {
   3.8431462181377773`*^9, 3.843146245454053*^9}, {3.843146338320209*^9, 
   3.843146341462634*^9}, {3.843146387398436*^9, 3.843146399278995*^9}, 
   3.843146503008917*^9, {3.843146876297696*^9, 3.843146962197328*^9}, {
   3.843146997278645*^9, 3.843147003592553*^9}, {3.84314707645168*^9, 
   3.843147133700138*^9}, {3.843147193224696*^9, 3.84314723201825*^9}, {
   3.843147265412475*^9, 3.843147430673661*^9}, {3.8431482767099943`*^9, 
   3.843148277393372*^9}, {3.843305501160633*^9, 3.843305505999219*^9}, {
   3.8433071545117292`*^9, 3.843307213807313*^9}, {3.843307246872377*^9, 
   3.8433072502382803`*^9}, {3.8433072953436604`*^9, 3.843307328438794*^9}, {
   3.843307398106471*^9, 3.843307437582745*^9}, {3.843307480023155*^9, 
   3.843307525437388*^9}, {3.843307585032434*^9, 3.8433076481856003`*^9}, 
   3.843307880435197*^9, {3.843310013493511*^9, 3.8433100458317966`*^9}, 
   3.843925037892045*^9, {3.844379937026037*^9, 3.844380035545233*^9}, {
   3.844380181793544*^9, 3.844380194211913*^9}, {3.8540249438109493`*^9, 
   3.854024953854499*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"ac2dd14d-0691-48b8-81c9-e1a65fc69009"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", "NXnoXlowestN", "]"}], ",", " ", 
    RowBox[{
     RowBox[{"#", ">", 
      RowBox[{"1", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "4"}]}]}]}], "&"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"nothing", " ", "is", " ", "greater", " ", "than", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "4"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8414411429815903`*^9, 3.841441146445889*^9}, {
   3.841441308667336*^9, 3.841441312527545*^9}, {3.8414414720350313`*^9, 
   3.8414414762482567`*^9}, {3.8433014669511137`*^9, 3.843301495023656*^9}, 
   3.8433017610690813`*^9, {3.8433018338897*^9, 3.843301857234819*^9}, {
   3.8433028862284317`*^9, 3.843302889954226*^9}, {3.843303457715599*^9, 
   3.8433034663505793`*^9}, {3.843310066329883*^9, 3.843310071144806*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"1c582f71-de51-4288-b583-b50b3eb49acb"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.843310073812332*^9, 3.844509259547473*^9, 
  3.854043969380908*^9},
 CellLabel->
  "Out[231]=",ExpressionUUID->"e313334e-852b-47dc-8bf0-ea9c26a5e17d"]
}, Open  ]],

Cell[TextData[{
 "2. NO PREY, Nenv= ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0.25", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "7"}]]}], TraditionalForm]],ExpressionUUID->
  "c8373a57-1af2-4a4d-b2af-9310fbaaf1cd"]
}], "Text",
 CellChangeTimes->{{3.8433102590814753`*^9, 3.843310287008872*^9}, {
  3.844380043257237*^9, 
  3.8443800437662983`*^9}},ExpressionUUID->"813862d6-d7fe-4ac0-bf6c-\
84b9a8e5fa8b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh", ",", 
    "LfunH"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.831830789369714*^9, 3.8318307905412607`*^9}, {
   3.835995882215592*^9, 3.83599588299831*^9}, {3.8363089619914494`*^9, 
   3.836308970966587*^9}, {3.836309185335792*^9, 3.8363091870313787`*^9}, 
   3.8363138138722897`*^9, 3.843143007434424*^9, {3.843146366303069*^9, 
   3.843146366755385*^9}},
 CellLabel->
  "In[232]:=",ExpressionUUID->"04a677ee-8ccd-45e4-a57c-7c5d5fa551ce"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"2.5", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "8"}]}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"jN", "=", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"jNi0", " ", "=", " ", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "5000"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NXnoXsecLowN", "=", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"jX", "=", 
          FractionBox[
           RowBox[{"jXm", " ", "X"}], 
           RowBox[{"X", "+", "KX"}]]}], ",", " ", 
         RowBox[{"jN", "=", 
          FractionBox[
           RowBox[{"jNm", " ", "\[CapitalNu]"}], 
           RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", 
         RowBox[{"jHT", "=", "j0HT"}], ",", 
         RowBox[{"rNS", "=", 
          RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
         RowBox[{"VH0", "=", 
          RowBox[{"kv", "*", "H0"}]}], ",", " ", 
         RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
         RowBox[{"jNi0", " ", "=", " ", 
          FractionBox[
           RowBox[{"jNm", " ", "\[CapitalNu]"}], 
           RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", "states", ",", " ", 
         "rNH", ",", " ", "S", ",", "H", ",", "VH", ",", "P", ",", "Ni", ",", 
         "jNi", ",", "\[Rho]C", ",", " ", "jCP", ",", " ", "jHG", ",", 
         "\[Rho]N", ",", "jeC", ",", "jCO2", ",", "A", ",", "jL", ",", "rCH", 
         ",", "rCS", ",", "jeL", ",", "jNPQ", ",", "cROS1", ",", "jSG", ",", 
         "jST", ",", "jNw", ",", "F", ",", "fh", ",", "tsolve", ",", " ", 
         "addtimetostatevars", ",", "eqs", ",", "inis", ",", "sol", ",", "t", 
         ",", "steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
        RowBox[{"(*", 
         RowBox[{
         "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
          "intermediate", " ", "output", " ", "values", " ", "in", " ", 
          "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
          RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
         FractionBox[
          RowBox[{"A", " ", "B", " ", 
           RowBox[{"(", 
            RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
          RowBox[{
           RowBox[{
            SuperscriptBox["A", "2"], " ", "B"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox["B", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
           RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
           RowBox[{
            SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
        RowBox[{"(*", 
         RowBox[{"same", " ", "as", " ", 
          FractionBox["1", 
           RowBox[{
            FractionBox["1", "\[Rho]"], "+", 
            FractionBox["1", "A"], "+", 
            FractionBox["1", "B"], "-", 
            FractionBox["1", 
             RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"fh", "[", 
          RowBox[{
           RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
         RowBox[{"Piecewise", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", 
              RowBox[{"y", "<", "0"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kv", " ", "*", "y"}], ",", 
              RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", "Calculations", " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"jHG", "=", 
         RowBox[{
          RowBox[{"F", "[", "jHGm", "]"}], "[", 
          RowBox[{
           RowBox[{"yC", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]C", " ", 
               RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
              RowBox[{"\[Alpha]", "*", "jN"}], "+", 
              RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
            SuperscriptBox["nNH", 
             RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"jSG", "=", 
         RowBox[{
          RowBox[{"F", "[", "jSGm", "]"}], "[", 
          RowBox[{
           RowBox[{"jCP", " ", "yC"}], ",", 
           FractionBox[
            RowBox[{"rNS", "+", 
             FractionBox[
              RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Rho]N", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
            RowBox[{"\[Alpha]", "*", "jN"}], "+", 
            RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
            RowBox[{"nNH", " ", "jHG"}]}], " ", 
           RowBox[{"(*", 
            SuperscriptBox["yN", 
             RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"jeC", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"jX", "-", 
            FractionBox["jHG", "yC"], "+", 
            FractionBox[
             RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], ";", 
        " ", "\[IndentingNewLine]", 
        RowBox[{"jCO2", "=", 
         RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jL", "=", 
         RowBox[{"A", " ", "astar", " ", "L"}]}], " ", 
        RowBox[{"(*", "Lfun9", "*)"}], ";", "\[IndentingNewLine]", 
        RowBox[{"rCH", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"jHT", "+", 
            FractionBox[
             RowBox[{"jHG", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
          "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rCS", "=", 
         RowBox[{"\[Sigma]CS", 
          RowBox[{"(", 
           RowBox[{"j0ST", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
             SuperscriptBox["yC", 
              RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"jeL", "=", 
         RowBox[{"jL", "-", 
          FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jNPQ", "=", 
         FractionBox["1", 
          RowBox[{
           FractionBox["1", "jeL"], "+", 
           FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
        RowBox[{"cROS1", "=", 
         FractionBox[
          RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jST", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rNH", "=", 
         RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"A", "=", 
         RowBox[{"1.256307", "+", 
          RowBox[{"1.385969", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "6.479055"}], " ", 
             RowBox[{"S", "/", "H"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jNw", "=", " ", 
         RowBox[{
          RowBox[{"\[Rho]N", "*", 
           RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
          RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"tsolve", "=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Rho]C", ",", 
             RowBox[{"jCP", "-", 
              RowBox[{"jSG", " ", 
               SuperscriptBox["yC", 
                RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jCP", ",", 
             FractionBox[
              RowBox[{
               RowBox[{"F", "[", "jCPm", "]"}], "[", 
               RowBox[{
                RowBox[{"jL", " ", "yCL"}], ",", 
                RowBox[{"rCS", "+", 
                 FractionBox[
                  RowBox[{"H", " ", 
                   RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
              RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jNi", ",", " ", 
             FractionBox[
              RowBox[{"jNm", " ", "*", "Ni"}], 
              RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
          "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"states", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"tsolve", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
            "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"addtimetostatevars", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "\[Rule]", 
              RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", "states"}], 
          ")"}]}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"eqs", "=", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
               "\[Equal]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Lambda]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                 "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
            "tsolve"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"S", 
                 RowBox[{"(", 
                  RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"H", 
                 RowBox[{"(", 
                  RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
              RowBox[{"fh", "[", 
               RowBox[{"t", ",", " ", 
                RowBox[{
                 RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"d", "*", 
                  RowBox[{"(", " ", 
                   RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                 " ", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                   ")"}], "/", 
                  RowBox[{"(", " ", 
                   RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"P", "*", 
                 RowBox[{"(", 
                  RowBox[{"rp", "*", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                  ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
            "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"inis", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], "\[Equal]", 
               
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
            "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{
          RowBox[{"NDSolve", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Join", "[", 
              RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
            RowBox[{
             RowBox[{"#", "&"}], "/@", "states"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
            RowBox[{"Method", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<EquationSimplification\>\"", "\[Rule]", 
               "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"change", " ", "in", " ", "Ni"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"steadyNi", "=", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"Ni", "[", "tmax", "]"}], "/.", "sol"}], "]"}], "-", 
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"Ni", "[", 
                RowBox[{"tmax", "-", "50"}], "]"}], "/.", "sol"}], "]"}]}], 
            ")"}], "/", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"Ni", "[", 
              RowBox[{"tmax", "-", "50"}], "]"}], "/.", "sol"}], "]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"change", " ", "in", " ", "host", " ", "growth"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"steadyHGrowth", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Chop", "[", 
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
                 RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], 
              "]"}], "==", "0"}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Chop", "[", 
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "'"}], "[", 
                  RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                 RowBox[{"H", "[", 
                  RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], "]"}], 
              "]"}], "==", "0"}]}], ",", " ", "0", ",", 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
                  RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], 
               "-", 
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"H", "'"}], "[", 
                   RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                  RowBox[{"H", "[", 
                   RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], 
                "]"}]}], ")"}], "/", 
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"H", "'"}], "[", 
                 RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                RowBox[{"H", "[", 
                 RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], "]"}]}],
             "]"}]}], " ", "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"Chop", "[", "]"}], " ", "approximates", " ", "numbers", 
           " ", "that", " ", "are", " ", "less", " ", "than", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], " ", "as", " ", "0"}], ",", " ", 
          RowBox[{"so", " ", "in", " ", "this", " ", "case"}], ",", " ", 
          RowBox[{
          "if", " ", "host", " ", "growth", " ", "rate", " ", "is", " ", 
           "less", " ", "than", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], " ", "at", " ", "the", " ", "end", " ", 
           "of", " ", "the", " ", "time", " ", "step", " ", "say", " ", 
           "that", " ", "the", " ", "percent", " ", "change", " ", "is", " ", 
           "equal", " ", "to", " ", "zero"}]}], "*)"}], "\[IndentingNewLine]",
         "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"percent", " ", "change", " ", "in", " ", 
          RowBox[{"S", "/", "H"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"steadySH", "=", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"S", "[", "tmax", "]"}], "/", 
                RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], "-", 
             
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"S", "[", 
                 RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                RowBox[{"H", "[", 
                 RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], "]"}]}],
             ")"}], "/", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"S", "[", 
               RowBox[{"tmax", "-", "50"}], "]"}], "/", 
              RowBox[{"H", "[", 
               RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], "]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
         "}"}]}]}], 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"record", " ", "the", " ", "change", " ", "in", " ", "Ni"}], 
        ",", " ", 
        RowBox[{"H", " ", "growth"}], ",", " ", 
        RowBox[{"and", " ", 
         RowBox[{"S", "/", "H"}], " ", "as", " ", "output"}]}], "*)"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836576641311953*^9, 3.836576745811816*^9}, {3.8365767807913227`*^9, 
   3.836576796666417*^9}, {3.83690984159394*^9, 3.8369098642372837`*^9}, {
   3.8369099504464817`*^9, 3.836909992597097*^9}, {3.836910066716194*^9, 
   3.836910181553328*^9}, {3.8369102578063707`*^9, 3.836910390882205*^9}, {
   3.8369104221261673`*^9, 3.8369104445293837`*^9}, {3.836910588258913*^9, 
   3.836910603839734*^9}, {3.83691170755369*^9, 3.836911723135646*^9}, 
   3.836916782182846*^9, {3.8369173444379473`*^9, 3.836917364496358*^9}, {
   3.836917449889654*^9, 3.836917475981286*^9}, {3.8369183517345324`*^9, 
   3.836918406414919*^9}, {3.837107692096567*^9, 3.837107693627658*^9}, {
   3.837115072644342*^9, 3.837115084746319*^9}, {3.841441086035733*^9, 
   3.841441106951355*^9}, {3.842184406440856*^9, 3.842184412972148*^9}, {
   3.8431426260245256`*^9, 3.843142626525084*^9}, {3.843142667219924*^9, 
   3.843142667609748*^9}, {3.843142754481592*^9, 3.8431427683750477`*^9}, 
   3.843142971054339*^9, 3.8431430016942453`*^9, {3.843145957205802*^9, 
   3.8431459574026003`*^9}, {3.843145989259967*^9, 3.84314599933941*^9}, {
   3.8431462181377773`*^9, 3.843146245454053*^9}, {3.843146338320209*^9, 
   3.843146341462634*^9}, {3.843146387398436*^9, 3.843146399278995*^9}, 
   3.843146503008917*^9, {3.843146876297696*^9, 3.843146962197328*^9}, {
   3.843146997278645*^9, 3.843147003592553*^9}, {3.84314707645168*^9, 
   3.843147133700138*^9}, {3.843147193224696*^9, 3.84314723201825*^9}, {
   3.843147265412475*^9, 3.843147430673661*^9}, {3.8431482767099943`*^9, 
   3.843148277393372*^9}, {3.843305501160633*^9, 3.843305505999219*^9}, {
   3.8433071545117292`*^9, 3.843307213807313*^9}, {3.843307246872377*^9, 
   3.8433072502382803`*^9}, {3.8433072953436604`*^9, 3.843307328438794*^9}, {
   3.843307398106471*^9, 3.843307437582745*^9}, {3.843307480023155*^9, 
   3.843307525437388*^9}, {3.843307585032434*^9, 3.8433076481856003`*^9}, 
   3.843307880435197*^9, {3.843310013493511*^9, 3.8433100458317966`*^9}, {
   3.843310292604933*^9, 3.843310294576*^9}, {3.8433103308549223`*^9, 
   3.843310407351481*^9}, 3.843925045964652*^9, {3.844380052457245*^9, 
   3.844380092888357*^9}, 3.844380209247777*^9, {3.8540249642088947`*^9, 
   3.854024974886611*^9}},
 CellLabel->
  "In[233]:=",ExpressionUUID->"018a8c4e-26cc-44f1-a1f3-bb8dfdaeac9b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", "NXnoXsecLowN", "]"}], ",", " ", 
    RowBox[{
     RowBox[{"#", ">", 
      RowBox[{"1", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "4"}]}]}]}], "&"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"nothing", " ", "is", " ", "greater", " ", "than", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "4"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8414411429815903`*^9, 3.841441146445889*^9}, {
   3.841441308667336*^9, 3.841441312527545*^9}, {3.8414414720350313`*^9, 
   3.8414414762482567`*^9}, {3.8433014669511137`*^9, 3.843301495023656*^9}, 
   3.8433017610690813`*^9, {3.8433018338897*^9, 3.843301857234819*^9}, {
   3.8433028862284317`*^9, 3.843302889954226*^9}, {3.843303457715599*^9, 
   3.8433034663505793`*^9}, {3.843310066329883*^9, 3.843310071144806*^9}, 
   3.843310380783451*^9},
 CellLabel->
  "In[239]:=",ExpressionUUID->"27d80e75-d787-4033-a2e7-d85ae2e49d63"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.8433103822875547`*^9, 3.843310412710759*^9}, 
   3.844509267703265*^9, 3.854043981471095*^9},
 CellLabel->
  "Out[239]=",ExpressionUUID->"00884648-64d8-44e7-b983-c4b736e5f9c8"]
}, Open  ]],

Cell[TextData[{
 "3. NO PREY, Nenv=",
 Cell[BoxData[
  FormBox[
   RowBox[{"0.5", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "7"}]]}], TraditionalForm]],ExpressionUUID->
  "49ab630b-1de3-40fd-897c-22ce8fc08053"]
}], "Text",
 CellChangeTimes->{{3.843310422438862*^9, 3.843310441303938*^9}, {
  3.844380104176901*^9, 
  3.844380104465108*^9}},ExpressionUUID->"2845ad29-9f80-4eb7-85b2-\
1ac957c0a722"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh", ",", 
    "LfunH"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.831830789369714*^9, 3.8318307905412607`*^9}, {
   3.835995882215592*^9, 3.83599588299831*^9}, {3.8363089619914494`*^9, 
   3.836308970966587*^9}, {3.836309185335792*^9, 3.8363091870313787`*^9}, 
   3.8363138138722897`*^9, 3.843143007434424*^9, {3.843146366303069*^9, 
   3.843146366755385*^9}},
 CellLabel->
  "In[240]:=",ExpressionUUID->"068eecc1-53ac-4633-800f-d3c56a05ff72"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"5", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "8"}]}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"jN", "=", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"jNi0", " ", "=", " ", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "50000"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NXnoXlowestN", "=", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"jX", "=", 
          FractionBox[
           RowBox[{"jXm", " ", "X"}], 
           RowBox[{"X", "+", "KX"}]]}], ",", " ", 
         RowBox[{"jN", "=", 
          FractionBox[
           RowBox[{"jNm", " ", "\[CapitalNu]"}], 
           RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", 
         RowBox[{"jHT", "=", "j0HT"}], ",", 
         RowBox[{"rNS", "=", 
          RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
         RowBox[{"VH0", "=", 
          RowBox[{"kv", "*", "H0"}]}], ",", " ", 
         RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
         RowBox[{"jNi0", " ", "=", " ", 
          FractionBox[
           RowBox[{"jNm", " ", "\[CapitalNu]"}], 
           RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", "states", ",", " ", 
         "rNH", ",", " ", "S", ",", "H", ",", "VH", ",", "P", ",", "Ni", ",", 
         "jNi", ",", "\[Rho]C", ",", " ", "jCP", ",", " ", "jHG", ",", 
         "\[Rho]N", ",", "jeC", ",", "jCO2", ",", "A", ",", "jL", ",", "rCH", 
         ",", "rCS", ",", "jeL", ",", "jNPQ", ",", "cROS1", ",", "jSG", ",", 
         "jST", ",", "jNw", ",", "F", ",", "fh", ",", "tsolve", ",", " ", 
         "addtimetostatevars", ",", "eqs", ",", "inis", ",", "sol", ",", "t", 
         ",", "steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
        RowBox[{"(*", 
         RowBox[{
         "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
          "intermediate", " ", "output", " ", "values", " ", "in", " ", 
          "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
          RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
         FractionBox[
          RowBox[{"A", " ", "B", " ", 
           RowBox[{"(", 
            RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
          RowBox[{
           RowBox[{
            SuperscriptBox["A", "2"], " ", "B"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox["B", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
           RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
           RowBox[{
            SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
        RowBox[{"(*", 
         RowBox[{"same", " ", "as", " ", 
          FractionBox["1", 
           RowBox[{
            FractionBox["1", "\[Rho]"], "+", 
            FractionBox["1", "A"], "+", 
            FractionBox["1", "B"], "-", 
            FractionBox["1", 
             RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"fh", "[", 
          RowBox[{
           RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
         RowBox[{"Piecewise", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", 
              RowBox[{"y", "<", "0"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kv", " ", "*", "y"}], ",", 
              RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", "Calculations", " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"jHG", "=", 
         RowBox[{
          RowBox[{"F", "[", "jHGm", "]"}], "[", 
          RowBox[{
           RowBox[{"yC", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]C", " ", 
               RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
              RowBox[{"\[Alpha]", "*", "jN"}], "+", 
              RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
            SuperscriptBox["nNH", 
             RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"jSG", "=", 
         RowBox[{
          RowBox[{"F", "[", "jSGm", "]"}], "[", 
          RowBox[{
           RowBox[{"jCP", " ", "yC"}], ",", 
           FractionBox[
            RowBox[{"rNS", "+", 
             FractionBox[
              RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Rho]N", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
            RowBox[{"\[Alpha]", "*", "jN"}], "+", 
            RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
            RowBox[{"nNH", " ", "jHG"}]}], " ", 
           RowBox[{"(*", 
            SuperscriptBox["yN", 
             RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"jeC", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"jX", "-", 
            FractionBox["jHG", "yC"], "+", 
            FractionBox[
             RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], ";", 
        " ", "\[IndentingNewLine]", 
        RowBox[{"jCO2", "=", 
         RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jL", "=", 
         RowBox[{"A", " ", "astar", " ", "L"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rCH", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"jHT", "+", 
            FractionBox[
             RowBox[{"jHG", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
          "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rCS", "=", 
         RowBox[{"\[Sigma]CS", 
          RowBox[{"(", 
           RowBox[{"j0ST", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
             SuperscriptBox["yC", 
              RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"jeL", "=", 
         RowBox[{"jL", "-", 
          FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jNPQ", "=", 
         FractionBox["1", 
          RowBox[{
           FractionBox["1", "jeL"], "+", 
           FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
        RowBox[{"cROS1", "=", 
         FractionBox[
          RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jST", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rNH", "=", 
         RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"A", "=", 
         RowBox[{"1.256307", "+", 
          RowBox[{"1.385969", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "6.479055"}], " ", 
             RowBox[{"S", "/", "H"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jNw", "=", " ", 
         RowBox[{
          RowBox[{"\[Rho]N", "*", 
           RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
          RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"tsolve", "=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Rho]C", ",", 
             RowBox[{"jCP", "-", 
              RowBox[{"jSG", " ", 
               SuperscriptBox["yC", 
                RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jCP", ",", 
             FractionBox[
              RowBox[{
               RowBox[{"F", "[", "jCPm", "]"}], "[", 
               RowBox[{
                RowBox[{"jL", " ", "yCL"}], ",", 
                RowBox[{"rCS", "+", 
                 FractionBox[
                  RowBox[{"H", " ", 
                   RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
              RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jNi", ",", " ", 
             FractionBox[
              RowBox[{"jNm", " ", "*", "Ni"}], 
              RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
          "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"states", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"tsolve", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
            "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"addtimetostatevars", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "\[Rule]", 
              RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", "states"}], 
          ")"}]}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"eqs", "=", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
               "\[Equal]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Lambda]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                 "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
            "tsolve"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"S", 
                 RowBox[{"(", 
                  RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"H", 
                 RowBox[{"(", 
                  RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
              RowBox[{"fh", "[", 
               RowBox[{"t", ",", " ", 
                RowBox[{
                 RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"d", "*", 
                  RowBox[{"(", " ", 
                   RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                 " ", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                   ")"}], "/", 
                  RowBox[{"(", " ", 
                   RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"P", "*", 
                 RowBox[{"(", 
                  RowBox[{"rp", "*", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                  ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
            "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"inis", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], "\[Equal]", 
               
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
            "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{
          RowBox[{"NDSolve", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Join", "[", 
              RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
            RowBox[{
             RowBox[{"#", "&"}], "/@", "states"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
            RowBox[{"Method", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<EquationSimplification\>\"", "\[Rule]", 
               "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"change", " ", "in", " ", "Ni"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"steadyNi", "=", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"Ni", "[", "tmax", "]"}], "/.", "sol"}], "]"}], "-", 
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"Ni", "[", 
                RowBox[{"tmax", "-", "50"}], "]"}], "/.", "sol"}], "]"}]}], 
            ")"}], "/", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"Ni", "[", 
              RowBox[{"tmax", "-", "50"}], "]"}], "/.", "sol"}], "]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"change", " ", "in", " ", "host", " ", "growth"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"steadyHGrowth", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Chop", "[", 
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
                 RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], 
              "]"}], "==", "0"}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Chop", "[", 
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "'"}], "[", 
                  RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                 RowBox[{"H", "[", 
                  RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], "]"}], 
              "]"}], "==", "0"}]}], ",", " ", "0", ",", 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
                  RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], 
               "-", 
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"H", "'"}], "[", 
                   RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                  RowBox[{"H", "[", 
                   RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], 
                "]"}]}], ")"}], "/", 
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"H", "'"}], "[", 
                 RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                RowBox[{"H", "[", 
                 RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], "]"}]}],
             "]"}]}], " ", "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"Chop", "[", "]"}], " ", "approximates", " ", "numbers", 
           " ", "that", " ", "are", " ", "less", " ", "than", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], " ", "as", " ", "0"}], ",", " ", 
          RowBox[{"so", " ", "in", " ", "this", " ", "case"}], ",", " ", 
          RowBox[{
          "if", " ", "host", " ", "growth", " ", "rate", " ", "is", " ", 
           "less", " ", "than", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], " ", "at", " ", "the", " ", "end", " ", 
           "of", " ", "the", " ", "time", " ", "step", " ", "say", " ", 
           "that", " ", "the", " ", "percent", " ", "change", " ", "is", " ", 
           "equal", " ", "to", " ", "zero"}]}], "*)"}], "\[IndentingNewLine]",
         "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"change", " ", "in", " ", 
          RowBox[{"S", "/", "H"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"steadySH", "=", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"S", "[", "tmax", "]"}], "/", 
                RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], "-", 
             
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"S", "[", 
                 RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                RowBox[{"H", "[", 
                 RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], "]"}]}],
             ")"}], "/", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"S", "[", 
               RowBox[{"tmax", "-", "50"}], "]"}], "/", 
              RowBox[{"H", "[", 
               RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], "]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
         "}"}]}]}], 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"record", " ", "the", " ", "change", " ", "in", " ", "Ni"}], 
        ",", " ", 
        RowBox[{"H", " ", "growth"}], ",", " ", 
        RowBox[{"and", " ", 
         RowBox[{"S", "/", "H"}], " ", "as", " ", "output"}]}], "*)"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836576641311953*^9, 3.836576745811816*^9}, {3.8365767807913227`*^9, 
   3.836576796666417*^9}, {3.83690984159394*^9, 3.8369098642372837`*^9}, {
   3.8369099504464817`*^9, 3.836909992597097*^9}, {3.836910066716194*^9, 
   3.836910181553328*^9}, {3.8369102578063707`*^9, 3.836910390882205*^9}, {
   3.8369104221261673`*^9, 3.8369104445293837`*^9}, {3.836910588258913*^9, 
   3.836910603839734*^9}, {3.83691170755369*^9, 3.836911723135646*^9}, 
   3.836916782182846*^9, {3.8369173444379473`*^9, 3.836917364496358*^9}, {
   3.836917449889654*^9, 3.836917475981286*^9}, {3.8369183517345324`*^9, 
   3.836918406414919*^9}, {3.837107692096567*^9, 3.837107693627658*^9}, {
   3.837115072644342*^9, 3.837115084746319*^9}, {3.841441086035733*^9, 
   3.841441106951355*^9}, {3.842184406440856*^9, 3.842184412972148*^9}, {
   3.8431426260245256`*^9, 3.843142626525084*^9}, {3.843142667219924*^9, 
   3.843142667609748*^9}, {3.843142754481592*^9, 3.8431427683750477`*^9}, 
   3.843142971054339*^9, 3.8431430016942453`*^9, {3.843145957205802*^9, 
   3.8431459574026003`*^9}, {3.843145989259967*^9, 3.84314599933941*^9}, {
   3.8431462181377773`*^9, 3.843146245454053*^9}, {3.843146338320209*^9, 
   3.843146341462634*^9}, {3.843146387398436*^9, 3.843146399278995*^9}, 
   3.843146503008917*^9, {3.843146876297696*^9, 3.843146962197328*^9}, {
   3.843146997278645*^9, 3.843147003592553*^9}, {3.84314707645168*^9, 
   3.843147133700138*^9}, {3.843147193224696*^9, 3.84314723201825*^9}, {
   3.843147265412475*^9, 3.843147430673661*^9}, {3.8431482767099943`*^9, 
   3.843148277393372*^9}, {3.843305501160633*^9, 3.843305505999219*^9}, {
   3.8433071545117292`*^9, 3.843307213807313*^9}, {3.843307246872377*^9, 
   3.8433072502382803`*^9}, {3.8433072953436604`*^9, 3.843307328438794*^9}, {
   3.843307398106471*^9, 3.843307437582745*^9}, {3.843307480023155*^9, 
   3.843307525437388*^9}, {3.843307585032434*^9, 3.8433076481856003`*^9}, 
   3.843307880435197*^9, {3.843310013493511*^9, 3.8433100458317966`*^9}, {
   3.843310450169931*^9, 3.843310483136478*^9}, {3.8439250564488564`*^9, 
   3.8439250615219088`*^9}, {3.8443801150937*^9, 3.844380162990939*^9}, 
   3.8443802206206913`*^9, {3.854024981114396*^9, 3.8540249920970697`*^9}},
 CellLabel->
  "In[241]:=",ExpressionUUID->"4a98a527-9a7e-4441-a63b-e8dc08ea9245"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", "NXnoXlowestN", "]"}], ",", " ", 
    RowBox[{
     RowBox[{"#", ">", 
      RowBox[{"1", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "4"}]}]}]}], "&"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"nothing", " ", "is", " ", "greater", " ", "than", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "4"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8414411429815903`*^9, 3.841441146445889*^9}, {
   3.841441308667336*^9, 3.841441312527545*^9}, {3.8414414720350313`*^9, 
   3.8414414762482567`*^9}, {3.8433014669511137`*^9, 3.843301495023656*^9}, 
   3.8433017610690813`*^9, {3.8433018338897*^9, 3.843301857234819*^9}, {
   3.8433028862284317`*^9, 3.843302889954226*^9}, {3.843303457715599*^9, 
   3.8433034663505793`*^9}, {3.843310066329883*^9, 3.843310071144806*^9}},
 CellLabel->
  "In[247]:=",ExpressionUUID->"985da0f0-b645-47fc-9243-38a37aee5d4b"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.843310491981934*^9, 3.84450927892375*^9, 
  3.8540439913010063`*^9},
 CellLabel->
  "Out[247]=",ExpressionUUID->"a072abf5-3fde-4dfc-851c-fe82e2ff07a3"]
}, Open  ]],

Cell[TextData[{
 "4. PREY=",
 Cell[BoxData[
  FormBox[
   RowBox[{"0.1", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "7"}]]}], TraditionalForm]],ExpressionUUID->
  "4cdc1b99-0266-42a2-8b25-d0bfb96cf2a0"],
 ", Nenv=",
 Cell[BoxData[
  FormBox[
   RowBox[{"0.1", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "7"}]]}], TraditionalForm]],ExpressionUUID->
  "ac240338-d1fe-48e5-a952-d95d4c87c410"]
}], "Text",
 CellChangeTimes->{{3.843310516318933*^9, 3.843310535638468*^9}, {
  3.844380231562728*^9, 
  3.844380232134457*^9}},ExpressionUUID->"777c07b8-0c9b-43ea-9f27-\
b77e60800e6e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh", ",", 
    "LfunH"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.831830789369714*^9, 3.8318307905412607`*^9}, {
   3.835995882215592*^9, 3.83599588299831*^9}, {3.8363089619914494`*^9, 
   3.836308970966587*^9}, {3.836309185335792*^9, 3.8363091870313787`*^9}, 
   3.8363138138722897`*^9, 3.843143007434424*^9, {3.843146366303069*^9, 
   3.843146366755385*^9}},
 CellLabel->
  "In[248]:=",ExpressionUUID->"751942f8-cf14-443d-b048-ba11556a2336"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "8"}]}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "8"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"jN", "=", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"jNi0", " ", "=", " ", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "5000"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NXlowestXlowestN", "=", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"jX", "=", 
          FractionBox[
           RowBox[{"jXm", " ", "X"}], 
           RowBox[{"X", "+", "KX"}]]}], ",", " ", 
         RowBox[{"jN", "=", 
          FractionBox[
           RowBox[{"jNm", " ", "\[CapitalNu]"}], 
           RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", 
         RowBox[{"jHT", "=", "j0HT"}], ",", 
         RowBox[{"rNS", "=", 
          RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
         RowBox[{"VH0", "=", 
          RowBox[{"kv", "*", "H0"}]}], ",", " ", 
         RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
         RowBox[{"jNi0", " ", "=", " ", 
          FractionBox[
           RowBox[{"jNm", " ", "\[CapitalNu]"}], 
           RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", "states", ",", " ", 
         "rNH", ",", " ", "S", ",", "H", ",", "VH", ",", "P", ",", "Ni", ",", 
         "jNi", ",", "\[Rho]C", ",", " ", "jCP", ",", " ", "jHG", ",", 
         "\[Rho]N", ",", "jeC", ",", "jCO2", ",", "A", ",", "jL", ",", "rCH", 
         ",", "rCS", ",", "jeL", ",", "jNPQ", ",", "cROS1", ",", "jSG", ",", 
         "jST", ",", "jNw", ",", "F", ",", "fh", ",", "tsolve", ",", " ", 
         "addtimetostatevars", ",", "eqs", ",", "inis", ",", "sol", ",", "t", 
         ",", "steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
        RowBox[{"(*", 
         RowBox[{
         "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
          "intermediate", " ", "output", " ", "values", " ", "in", " ", 
          "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
          RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
         FractionBox[
          RowBox[{"A", " ", "B", " ", 
           RowBox[{"(", 
            RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
          RowBox[{
           RowBox[{
            SuperscriptBox["A", "2"], " ", "B"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox["B", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
           RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
           RowBox[{
            SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
        RowBox[{"(*", 
         RowBox[{"same", " ", "as", " ", 
          FractionBox["1", 
           RowBox[{
            FractionBox["1", "\[Rho]"], "+", 
            FractionBox["1", "A"], "+", 
            FractionBox["1", "B"], "-", 
            FractionBox["1", 
             RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"fh", "[", 
          RowBox[{
           RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
         RowBox[{"Piecewise", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", 
              RowBox[{"y", "<", "0"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kv", " ", "*", "y"}], ",", 
              RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", "Calculations", " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"jHG", "=", 
         RowBox[{
          RowBox[{"F", "[", "jHGm", "]"}], "[", 
          RowBox[{
           RowBox[{"yC", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]C", " ", 
               RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
              RowBox[{"\[Alpha]", "*", "jN"}], "+", 
              RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
            SuperscriptBox["nNH", 
             RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"jSG", "=", 
         RowBox[{
          RowBox[{"F", "[", "jSGm", "]"}], "[", 
          RowBox[{
           RowBox[{"jCP", " ", "yC"}], ",", 
           FractionBox[
            RowBox[{"rNS", "+", 
             FractionBox[
              RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Rho]N", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
            RowBox[{"\[Alpha]", "*", "jN"}], "+", 
            RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
            RowBox[{"nNH", " ", "jHG"}]}], " ", 
           RowBox[{"(*", 
            SuperscriptBox["yN", 
             RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"jeC", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"jX", "-", 
            FractionBox["jHG", "yC"], "+", 
            FractionBox[
             RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], ";", 
        " ", "\[IndentingNewLine]", 
        RowBox[{"jCO2", "=", 
         RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jL", "=", 
         RowBox[{"A", " ", "astar", " ", "L"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rCH", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"jHT", "+", 
            FractionBox[
             RowBox[{"jHG", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
          "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rCS", "=", 
         RowBox[{"\[Sigma]CS", 
          RowBox[{"(", 
           RowBox[{"j0ST", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
             SuperscriptBox["yC", 
              RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"jeL", "=", 
         RowBox[{"jL", "-", 
          FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jNPQ", "=", 
         FractionBox["1", 
          RowBox[{
           FractionBox["1", "jeL"], "+", 
           FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
        RowBox[{"cROS1", "=", 
         FractionBox[
          RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jST", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rNH", "=", 
         RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"A", "=", 
         RowBox[{"1.256307", "+", 
          RowBox[{"1.385969", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "6.479055"}], " ", 
             RowBox[{"S", "/", "H"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jNw", "=", " ", 
         RowBox[{
          RowBox[{"\[Rho]N", "*", 
           RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
          RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"tsolve", "=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Rho]C", ",", 
             RowBox[{"jCP", "-", 
              RowBox[{"jSG", " ", 
               SuperscriptBox["yC", 
                RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jCP", ",", 
             FractionBox[
              RowBox[{
               RowBox[{"F", "[", "jCPm", "]"}], "[", 
               RowBox[{
                RowBox[{"jL", " ", "yCL"}], ",", 
                RowBox[{"rCS", "+", 
                 FractionBox[
                  RowBox[{"H", " ", 
                   RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
              RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jNi", ",", " ", 
             FractionBox[
              RowBox[{"jNm", " ", "*", "Ni"}], 
              RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
          "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"states", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"tsolve", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
            "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"addtimetostatevars", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "\[Rule]", 
              RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", "states"}], 
          ")"}]}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"eqs", "=", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
               "\[Equal]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Lambda]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                 "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
            "tsolve"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"S", 
                 RowBox[{"(", 
                  RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"H", 
                 RowBox[{"(", 
                  RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
              RowBox[{"fh", "[", 
               RowBox[{"t", ",", 
                RowBox[{
                 RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"d", "*", 
                  RowBox[{"(", " ", 
                   RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                 " ", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                   ")"}], "/", 
                  RowBox[{"(", " ", 
                   RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"P", "*", 
                 RowBox[{"(", 
                  RowBox[{"rp", "*", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                  ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
            "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"inis", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], "\[Equal]", 
               
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
            "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{
          RowBox[{"NDSolve", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Join", "[", 
              RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
            RowBox[{
             RowBox[{"#", "&"}], "/@", "states"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
            RowBox[{"Method", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<EquationSimplification\>\"", "\[Rule]", 
               "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"change", " ", "in", " ", "Ni"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"steadyNi", "=", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"Ni", "[", "tmax", "]"}], "/.", "sol"}], "]"}], "-", 
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"Ni", "[", 
                RowBox[{"tmax", "-", "50"}], "]"}], "/.", "sol"}], "]"}]}], 
            ")"}], "/", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"Ni", "[", 
              RowBox[{"tmax", "-", "50"}], "]"}], "/.", "sol"}], "]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"change", " ", "in", " ", "host", " ", "growth"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"steadyHGrowth", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Chop", "[", 
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
                 RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], 
              "]"}], "==", "0"}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Chop", "[", 
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "'"}], "[", 
                  RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                 RowBox[{"H", "[", 
                  RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], "]"}], 
              "]"}], "==", "0"}]}], ",", " ", "0", ",", 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
                  RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], 
               "-", 
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"H", "'"}], "[", 
                   RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                  RowBox[{"H", "[", 
                   RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], 
                "]"}]}], ")"}], "/", 
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"H", "'"}], "[", 
                 RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                RowBox[{"H", "[", 
                 RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], "]"}]}],
             "]"}]}], " ", "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"Chop", "[", "]"}], " ", "approximates", " ", "numbers", 
           " ", "that", " ", "are", " ", "less", " ", "than", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], " ", "as", " ", "0"}], ",", " ", 
          RowBox[{"so", " ", "in", " ", "this", " ", "case"}], ",", " ", 
          RowBox[{
          "if", " ", "host", " ", "growth", " ", "rate", " ", "is", " ", 
           "less", " ", "than", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], " ", "at", " ", "the", " ", "end", " ", 
           "of", " ", "the", " ", "time", " ", "step", " ", 
           RowBox[{"(", 
            RowBox[{"asymptotically", " ", "approaching", " ", "0"}], ")"}]}],
           ",", " ", 
          RowBox[{
          "say", " ", "that", " ", "the", " ", "percent", " ", "change", " ", 
           "is", " ", "equal", " ", "to", " ", "zero"}]}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"change", " ", "in", " ", 
          RowBox[{"S", "/", "H"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"steadySH", "=", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"S", "[", "tmax", "]"}], "/", 
                RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], "-", 
             
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"S", "[", 
                 RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                RowBox[{"H", "[", 
                 RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], "]"}]}],
             ")"}], "/", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"S", "[", 
               RowBox[{"tmax", "-", "50"}], "]"}], "/", 
              RowBox[{"H", "[", 
               RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], "]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
         "}"}]}]}], 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"record", " ", "the", " ", "change", " ", "in", " ", "Ni"}], 
        ",", " ", 
        RowBox[{"H", " ", "growth"}], ",", " ", 
        RowBox[{"and", " ", 
         RowBox[{"S", "/", "H"}], " ", "as", " ", "output"}]}], "*)"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836576641311953*^9, 3.836576745811816*^9}, {3.8365767807913227`*^9, 
   3.836576796666417*^9}, {3.83690984159394*^9, 3.8369098642372837`*^9}, {
   3.8369099504464817`*^9, 3.836909992597097*^9}, {3.836910066716194*^9, 
   3.836910181553328*^9}, {3.8369102578063707`*^9, 3.836910390882205*^9}, {
   3.8369104221261673`*^9, 3.8369104445293837`*^9}, {3.836910588258913*^9, 
   3.836910603839734*^9}, {3.83691170755369*^9, 3.836911723135646*^9}, 
   3.836916782182846*^9, {3.8369173444379473`*^9, 3.836917364496358*^9}, {
   3.836917449889654*^9, 3.836917475981286*^9}, {3.8369183517345324`*^9, 
   3.836918406414919*^9}, {3.837107692096567*^9, 3.837107693627658*^9}, {
   3.837115072644342*^9, 3.837115084746319*^9}, {3.841441086035733*^9, 
   3.841441106951355*^9}, {3.842184406440856*^9, 3.842184412972148*^9}, {
   3.8431426260245256`*^9, 3.843142626525084*^9}, {3.843142667219924*^9, 
   3.843142667609748*^9}, {3.843142754481592*^9, 3.8431427683750477`*^9}, 
   3.843142971054339*^9, 3.8431430016942453`*^9, {3.843145957205802*^9, 
   3.8431459574026003`*^9}, {3.843145989259967*^9, 3.84314599933941*^9}, {
   3.8431462181377773`*^9, 3.843146245454053*^9}, {3.843146338320209*^9, 
   3.843146341462634*^9}, {3.843146387398436*^9, 3.843146399278995*^9}, 
   3.843146503008917*^9, {3.843146876297696*^9, 3.843146962197328*^9}, {
   3.843146997278645*^9, 3.843147003592553*^9}, {3.84314707645168*^9, 
   3.843147133700138*^9}, {3.843147193224696*^9, 3.84314723201825*^9}, {
   3.843147265412475*^9, 3.843147430673661*^9}, {3.8431482767099943`*^9, 
   3.843148277393372*^9}, {3.843305501160633*^9, 3.843305505999219*^9}, {
   3.8433071545117292`*^9, 3.843307213807313*^9}, {3.843307246872377*^9, 
   3.8433072502382803`*^9}, {3.8433072953436604`*^9, 3.843307328438794*^9}, {
   3.843307398106471*^9, 3.843307437582745*^9}, {3.843307480023155*^9, 
   3.843307525437388*^9}, {3.843307585032434*^9, 3.8433076481856003`*^9}, 
   3.843307880435197*^9, {3.843310013493511*^9, 3.8433100458317966`*^9}, {
   3.843310540237137*^9, 3.843310542712282*^9}, {3.843310599233745*^9, 
   3.843310619165328*^9}, {3.843925069862994*^9, 3.8439250702040873`*^9}, {
   3.844380225531349*^9, 3.8443802814744987`*^9}, {3.8540249978359013`*^9, 
   3.854025006868435*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"64b6823d-76c4-4afa-9b27-d2f27e8bc049"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", "NXlowestXlowestN", "]"}], ",", " ", 
    RowBox[{
     RowBox[{"#", ">", 
      RowBox[{"1", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "4"}]}]}]}], "&"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"nothing", " ", "is", " ", "greater", " ", "than", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "4"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8414411429815903`*^9, 3.841441146445889*^9}, {
   3.841441308667336*^9, 3.841441312527545*^9}, {3.8414414720350313`*^9, 
   3.8414414762482567`*^9}, {3.8433014669511137`*^9, 3.843301495023656*^9}, 
   3.8433017610690813`*^9, {3.8433018338897*^9, 3.843301857234819*^9}, {
   3.8433028862284317`*^9, 3.843302889954226*^9}, {3.843303457715599*^9, 
   3.8433034663505793`*^9}, {3.843310066329883*^9, 3.843310071144806*^9}, 
   3.843310558600569*^9},
 CellLabel->
  "In[255]:=",ExpressionUUID->"4b8ff15f-245e-4e87-9771-2352f03cf0fb"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.843310637059823*^9, 3.844509290316454*^9, 
  3.854044003786544*^9},
 CellLabel->
  "Out[255]=",ExpressionUUID->"2cb9a029-675f-40e2-8b7b-49393cc6b7a7"]
}, Open  ]],

Cell[TextData[{
 "5. PREY=",
 Cell[BoxData[
  FormBox[
   RowBox[{"0.1", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "7"}]]}], TraditionalForm]],ExpressionUUID->
  "ece61f33-5cfc-419d-aadd-ecf36ab0701a"],
 ", Nenv=",
 Cell[BoxData[
  FormBox[
   RowBox[{"2.5", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "8"}]]}], TraditionalForm]],ExpressionUUID->
  "7a596d10-ad55-43d6-95ce-8810090fe5a1"]
}], "Text",
 CellChangeTimes->{{3.843310664868745*^9, 3.843310670607024*^9}, {
  3.844380291650498*^9, 3.844380291892619*^9}, {3.844381145074692*^9, 
  3.8443811457443132`*^9}},ExpressionUUID->"4d4a8f96-47eb-494e-b7e0-\
e9ed15d4dc25"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh", ",", 
    "LfunH"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.831830789369714*^9, 3.8318307905412607`*^9}, {
   3.835995882215592*^9, 3.83599588299831*^9}, {3.8363089619914494`*^9, 
   3.836308970966587*^9}, {3.836309185335792*^9, 3.8363091870313787`*^9}, 
   3.8363138138722897`*^9, 3.843143007434424*^9, {3.843146366303069*^9, 
   3.843146366755385*^9}},
 CellLabel->
  "In[256]:=",ExpressionUUID->"28c75d1e-9dfe-4819-b410-7b2d58a0e5d2"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "1660"}], 
    RowBox[{"(*", "10", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"2.5", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "8"}]}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", "=", 
     FormBox[
      RowBox[{"1", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "8"}]}]}],
      TraditionalForm]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"jN", "=", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"jNi0", " ", "=", " ", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "50000"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NXlowestXseclowestN", "=", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"jX", "=", 
          FractionBox[
           RowBox[{"jXm", " ", "X"}], 
           RowBox[{"X", "+", "KX"}]]}], ",", " ", 
         RowBox[{"jN", "=", 
          FractionBox[
           RowBox[{"jNm", " ", "\[CapitalNu]"}], 
           RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", 
         RowBox[{"jHT", "=", "j0HT"}], ",", 
         RowBox[{"rNS", "=", 
          RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
         RowBox[{"VH0", "=", 
          RowBox[{"kv", "*", "H0"}]}], ",", " ", 
         RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
         RowBox[{"jNi0", " ", "=", " ", 
          FractionBox[
           RowBox[{"jNm", " ", "\[CapitalNu]"}], 
           RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", "states", ",", " ", 
         "rNH", ",", " ", "S", ",", "H", ",", "VH", ",", "P", ",", "Ni", ",", 
         "jNi", ",", "\[Rho]C", ",", " ", "jCP", ",", " ", "jHG", ",", 
         "\[Rho]N", ",", "jeC", ",", "jCO2", ",", "A", ",", "jL", ",", "rCH", 
         ",", "rCS", ",", "jeL", ",", "jNPQ", ",", "cROS1", ",", "jSG", ",", 
         "jST", ",", "jNw", ",", "F", ",", "fh", ",", "tsolve", ",", " ", 
         "addtimetostatevars", ",", "eqs", ",", "inis", ",", "sol", ",", "t", 
         ",", "steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
        RowBox[{"(*", 
         RowBox[{
         "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
          "intermediate", " ", "output", " ", "values", " ", "in", " ", 
          "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
          RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
         FractionBox[
          RowBox[{"A", " ", "B", " ", 
           RowBox[{"(", 
            RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
          RowBox[{
           RowBox[{
            SuperscriptBox["A", "2"], " ", "B"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox["B", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
           RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
           RowBox[{
            SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
        RowBox[{"(*", 
         RowBox[{"same", " ", "as", " ", 
          FractionBox["1", 
           RowBox[{
            FractionBox["1", "\[Rho]"], "+", 
            FractionBox["1", "A"], "+", 
            FractionBox["1", "B"], "-", 
            FractionBox["1", 
             RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"fh", "[", 
          RowBox[{
           RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
         RowBox[{"Piecewise", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", 
              RowBox[{"y", "<", "0"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kv", " ", "*", "y"}], ",", 
              RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", "Calculations", " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"jHG", "=", 
         RowBox[{
          RowBox[{"F", "[", "jHGm", "]"}], "[", 
          RowBox[{
           RowBox[{"yC", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]C", " ", 
               RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
              RowBox[{"\[Alpha]", "*", "jN"}], "+", 
              RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
            SuperscriptBox["nNH", 
             RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"jSG", "=", 
         RowBox[{
          RowBox[{"F", "[", "jSGm", "]"}], "[", 
          RowBox[{
           RowBox[{"jCP", " ", "yC"}], ",", 
           FractionBox[
            RowBox[{"rNS", "+", 
             FractionBox[
              RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Rho]N", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
            RowBox[{"\[Alpha]", "*", "jN"}], "+", 
            RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
            RowBox[{"nNH", " ", "jHG"}]}], " ", 
           RowBox[{"(*", 
            SuperscriptBox["yN", 
             RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"jeC", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"jX", "-", 
            FractionBox["jHG", "yC"], "+", 
            FractionBox[
             RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], ";", 
        " ", "\[IndentingNewLine]", 
        RowBox[{"jCO2", "=", 
         RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jL", "=", 
         RowBox[{"A", " ", "astar", " ", "L"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rCH", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"jHT", "+", 
            FractionBox[
             RowBox[{"jHG", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
          "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rCS", "=", 
         RowBox[{"\[Sigma]CS", 
          RowBox[{"(", 
           RowBox[{"j0ST", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
             SuperscriptBox["yC", 
              RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"jeL", "=", 
         RowBox[{"jL", "-", 
          FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jNPQ", "=", 
         FractionBox["1", 
          RowBox[{
           FractionBox["1", "jeL"], "+", 
           FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
        RowBox[{"cROS1", "=", 
         FractionBox[
          RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jST", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rNH", "=", 
         RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"A", "=", 
         RowBox[{"1.256307", "+", 
          RowBox[{"1.385969", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "6.479055"}], " ", 
             RowBox[{"S", "/", "H"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jNw", "=", " ", 
         RowBox[{
          RowBox[{"\[Rho]N", "*", 
           RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
          RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"tsolve", "=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Rho]C", ",", 
             RowBox[{"jCP", "-", 
              RowBox[{"jSG", " ", 
               SuperscriptBox["yC", 
                RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jCP", ",", 
             FractionBox[
              RowBox[{
               RowBox[{"F", "[", "jCPm", "]"}], "[", 
               RowBox[{
                RowBox[{"jL", " ", "yCL"}], ",", 
                RowBox[{"rCS", "+", 
                 FractionBox[
                  RowBox[{"H", " ", 
                   RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
              RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jNi", ",", " ", 
             FractionBox[
              RowBox[{"jNm", " ", "*", "Ni"}], 
              RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
          "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"states", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"tsolve", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
            "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"addtimetostatevars", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "\[Rule]", 
              RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", "states"}], 
          ")"}]}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"eqs", "=", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
               "\[Equal]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Lambda]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                 "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
            "tsolve"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"S", 
                 RowBox[{"(", 
                  RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"H", 
                 RowBox[{"(", 
                  RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
              RowBox[{"fh", "[", 
               RowBox[{"t", ",", "  ", 
                RowBox[{
                 RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"d", "*", 
                  RowBox[{"(", " ", 
                   RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                 " ", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                   ")"}], "/", 
                  RowBox[{"(", " ", 
                   RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"P", "*", 
                 RowBox[{"(", 
                  RowBox[{"rp", "*", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                  ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
            "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"inis", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], "\[Equal]", 
               
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
            "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{
          RowBox[{"NDSolve", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Join", "[", 
              RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
            RowBox[{
             RowBox[{"#", "&"}], "/@", "states"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
            RowBox[{"Method", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<EquationSimplification\>\"", "\[Rule]", 
               "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"change", " ", "in", " ", "Ni"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"steadyNi", "=", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"Ni", "[", "tmax", "]"}], "/.", "sol"}], "]"}], "-", 
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"Ni", "[", 
                RowBox[{"tmax", "-", "50"}], "]"}], "/.", "sol"}], "]"}]}], 
            ")"}], "/", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"Ni", "[", 
              RowBox[{"tmax", "-", "50"}], "]"}], "/.", "sol"}], "]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"change", " ", "in", " ", "host", " ", "growth"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"steadyHGrowth", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Chop", "[", 
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
                 RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], 
              "]"}], "==", "0"}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Chop", "[", 
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "'"}], "[", 
                  RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                 RowBox[{"H", "[", 
                  RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], "]"}], 
              "]"}], "==", "0"}]}], ",", " ", "0", ",", 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
                  RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], 
               "-", 
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"H", "'"}], "[", 
                   RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                  RowBox[{"H", "[", 
                   RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], 
                "]"}]}], ")"}], "/", 
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"H", "'"}], "[", 
                 RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                RowBox[{"H", "[", 
                 RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], "]"}]}],
             "]"}]}], " ", "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"Chop", "[", "]"}], " ", "approximates", " ", "numbers", 
           " ", "that", " ", "are", " ", "less", " ", "than", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], " ", "as", " ", "0"}], ",", " ", 
          RowBox[{"so", " ", "in", " ", "this", " ", "case"}], ",", " ", 
          RowBox[{
          "if", " ", "host", " ", "growth", " ", "rate", " ", "is", " ", 
           "less", " ", "than", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], " ", "at", " ", "the", " ", "end", " ", 
           "of", " ", "the", " ", "time", " ", "step", " ", "say", " ", 
           "that", " ", "the", " ", "percent", " ", "change", " ", "is", " ", 
           "equal", " ", "to", " ", "zero"}]}], "*)"}], "\[IndentingNewLine]",
         "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"change", " ", "in", " ", 
          RowBox[{"S", "/", "H"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"steadySH", "=", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"S", "[", "tmax", "]"}], "/", 
                RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], "-", 
             
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"S", "[", 
                 RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                RowBox[{"H", "[", 
                 RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], "]"}]}],
             ")"}], "/", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"S", "[", 
               RowBox[{"tmax", "-", "50"}], "]"}], "/", 
              RowBox[{"H", "[", 
               RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], "]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
         "}"}]}]}], 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"record", " ", "the", " ", "change", " ", "in", " ", "Ni"}], 
        ",", " ", 
        RowBox[{"H", " ", "growth"}], ",", " ", 
        RowBox[{"and", " ", 
         RowBox[{"S", "/", "H"}], " ", "as", " ", "output"}]}], "*)"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836576641311953*^9, 3.836576745811816*^9}, {3.8365767807913227`*^9, 
   3.836576796666417*^9}, {3.83690984159394*^9, 3.8369098642372837`*^9}, {
   3.8369099504464817`*^9, 3.836909992597097*^9}, {3.836910066716194*^9, 
   3.836910181553328*^9}, {3.8369102578063707`*^9, 3.836910390882205*^9}, {
   3.8369104221261673`*^9, 3.8369104445293837`*^9}, {3.836910588258913*^9, 
   3.836910603839734*^9}, {3.83691170755369*^9, 3.836911723135646*^9}, 
   3.836916782182846*^9, {3.8369173444379473`*^9, 3.836917364496358*^9}, {
   3.836917449889654*^9, 3.836917475981286*^9}, {3.8369183517345324`*^9, 
   3.836918406414919*^9}, {3.837107692096567*^9, 3.837107693627658*^9}, {
   3.837115072644342*^9, 3.837115084746319*^9}, {3.841441086035733*^9, 
   3.841441106951355*^9}, {3.842184406440856*^9, 3.842184412972148*^9}, {
   3.8431426260245256`*^9, 3.843142626525084*^9}, {3.843142667219924*^9, 
   3.843142667609748*^9}, {3.843142754481592*^9, 3.8431427683750477`*^9}, 
   3.843142971054339*^9, 3.8431430016942453`*^9, {3.843145957205802*^9, 
   3.8431459574026003`*^9}, {3.843145989259967*^9, 3.84314599933941*^9}, {
   3.8431462181377773`*^9, 3.843146245454053*^9}, {3.843146338320209*^9, 
   3.843146341462634*^9}, {3.843146387398436*^9, 3.843146399278995*^9}, 
   3.843146503008917*^9, {3.843146876297696*^9, 3.843146962197328*^9}, {
   3.843146997278645*^9, 3.843147003592553*^9}, {3.84314707645168*^9, 
   3.843147133700138*^9}, {3.843147193224696*^9, 3.84314723201825*^9}, {
   3.843147265412475*^9, 3.843147430673661*^9}, {3.8431482767099943`*^9, 
   3.843148277393372*^9}, {3.843305501160633*^9, 3.843305505999219*^9}, {
   3.8433071545117292`*^9, 3.843307213807313*^9}, {3.843307246872377*^9, 
   3.8433072502382803`*^9}, {3.8433072953436604`*^9, 3.843307328438794*^9}, {
   3.843307398106471*^9, 3.843307437582745*^9}, {3.843307480023155*^9, 
   3.843307525437388*^9}, {3.843307585032434*^9, 3.8433076481856003`*^9}, 
   3.843307880435197*^9, {3.843310013493511*^9, 3.8433100458317966`*^9}, {
   3.8433106808706837`*^9, 3.843310695180346*^9}, {3.843310737452052*^9, 
   3.843310772701826*^9}, {3.843310816937285*^9, 3.843310817442298*^9}, 
   3.843925079076563*^9, {3.8443802990579567`*^9, 3.844380361138153*^9}, {
   3.854025013096418*^9, 3.8540250220925913`*^9}},
 CellLabel->
  "In[257]:=",ExpressionUUID->"9e08ada2-0a0a-4404-b7ec-a9e9e76941a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", "NXlowestXseclowestN", "]"}], ",", " ", 
    RowBox[{
     RowBox[{"#", ">", 
      RowBox[{"1", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "4"}]}]}]}], "&"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"nothing", " ", "is", " ", "greater", " ", "than", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "4"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8414411429815903`*^9, 3.841441146445889*^9}, {
   3.841441308667336*^9, 3.841441312527545*^9}, {3.8414414720350313`*^9, 
   3.8414414762482567`*^9}, {3.8433014669511137`*^9, 3.843301495023656*^9}, 
   3.8433017610690813`*^9, {3.8433018338897*^9, 3.843301857234819*^9}, {
   3.8433028862284317`*^9, 3.843302889954226*^9}, {3.843303457715599*^9, 
   3.8433034663505793`*^9}, {3.843310066329883*^9, 3.843310071144806*^9}, 
   3.843310783994277*^9, {3.843310821016327*^9, 3.843310821704439*^9}},
 CellLabel->
  "In[263]:=",ExpressionUUID->"f96b76a1-a4b9-4635-bff5-2895a3d03087"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.843310833230226*^9, 3.844509299425276*^9, 
  3.8540440143811073`*^9},
 CellLabel->
  "Out[263]=",ExpressionUUID->"e82534b2-e395-4faf-9d8d-46ba0b5413c4"]
}, Open  ]],

Cell[TextData[{
 "6. PREY=",
 Cell[BoxData[
  FormBox[
   RowBox[{"2.5", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "8"}]]}], TraditionalForm]],ExpressionUUID->
  "bf94ceb5-5a67-4931-a16e-e01eee535858"],
 ", Nenv=",
 Cell[BoxData[
  FormBox[
   RowBox[{"0.1", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "7"}]]}], TraditionalForm]],ExpressionUUID->
  "c3b0950a-f636-4334-9714-7280091601e2"]
}], "Text",
 CellChangeTimes->{{3.843310854949744*^9, 3.843310876305982*^9}, {
  3.844380366344273*^9, 
  3.84438039088068*^9}},ExpressionUUID->"5d8753af-1ddf-437a-b8f6-\
9912e86a480c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh", ",", 
    "LfunH"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.831830789369714*^9, 3.8318307905412607`*^9}, {
   3.835995882215592*^9, 3.83599588299831*^9}, {3.8363089619914494`*^9, 
   3.836308970966587*^9}, {3.836309185335792*^9, 3.8363091870313787`*^9}, 
   3.8363138138722897`*^9, 3.843143007434424*^9, {3.843146366303069*^9, 
   3.843146366755385*^9}},
 CellLabel->
  "In[264]:=",ExpressionUUID->"f1619759-409b-4108-96dc-0fdc37d186c0"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "8"}]}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", "=", 
     RowBox[{"2.5", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "8"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"jN", "=", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"jNi0", " ", "=", " ", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "250000"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NXseclowestXlowestN", "=", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"jX", "=", 
          FractionBox[
           RowBox[{"jXm", " ", "X"}], 
           RowBox[{"X", "+", "KX"}]]}], ",", " ", 
         RowBox[{"jN", "=", 
          FractionBox[
           RowBox[{"jNm", " ", "\[CapitalNu]"}], 
           RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", 
         RowBox[{"jHT", "=", "j0HT"}], ",", 
         RowBox[{"rNS", "=", 
          RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
         RowBox[{"VH0", "=", 
          RowBox[{"kv", "*", "H0"}]}], ",", " ", 
         RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
         RowBox[{"jNi0", " ", "=", " ", 
          FractionBox[
           RowBox[{"jNm", " ", "\[CapitalNu]"}], 
           RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", "states", ",", " ", 
         "rNH", ",", " ", "S", ",", "H", ",", "VH", ",", "P", ",", "Ni", ",", 
         "jNi", ",", "\[Rho]C", ",", " ", "jCP", ",", " ", "jHG", ",", 
         "\[Rho]N", ",", "jeC", ",", "jCO2", ",", "A", ",", "jL", ",", "rCH", 
         ",", "rCS", ",", "jeL", ",", "jNPQ", ",", "cROS1", ",", "jSG", ",", 
         "jST", ",", "jNw", ",", "F", ",", "fh", ",", "tsolve", ",", " ", 
         "addtimetostatevars", ",", "eqs", ",", "inis", ",", "sol", ",", "t", 
         ",", "steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
        RowBox[{"(*", 
         RowBox[{
         "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
          "intermediate", " ", "output", " ", "values", " ", "in", " ", 
          "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
          RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
         FractionBox[
          RowBox[{"A", " ", "B", " ", 
           RowBox[{"(", 
            RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
          RowBox[{
           RowBox[{
            SuperscriptBox["A", "2"], " ", "B"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox["B", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
           RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
           RowBox[{
            SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
        RowBox[{"(*", 
         RowBox[{"same", " ", "as", " ", 
          FractionBox["1", 
           RowBox[{
            FractionBox["1", "\[Rho]"], "+", 
            FractionBox["1", "A"], "+", 
            FractionBox["1", "B"], "-", 
            FractionBox["1", 
             RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"fh", "[", 
          RowBox[{
           RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
         RowBox[{"Piecewise", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", 
              RowBox[{"y", "<", "0"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kv", " ", "*", "y"}], ",", 
              RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", "Calculations", " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"jHG", "=", 
         RowBox[{
          RowBox[{"F", "[", "jHGm", "]"}], "[", 
          RowBox[{
           RowBox[{"yC", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]C", " ", 
               RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
              RowBox[{"\[Alpha]", "*", "jN"}], "+", 
              RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
            SuperscriptBox["nNH", 
             RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"jSG", "=", 
         RowBox[{
          RowBox[{"F", "[", "jSGm", "]"}], "[", 
          RowBox[{
           RowBox[{"jCP", " ", "yC"}], ",", 
           FractionBox[
            RowBox[{"rNS", "+", 
             FractionBox[
              RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Rho]N", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
            RowBox[{"\[Alpha]", "*", "jN"}], "+", 
            RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
            RowBox[{"nNH", " ", "jHG"}]}], " ", 
           RowBox[{"(*", 
            SuperscriptBox["yN", 
             RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"jeC", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"jX", "-", 
            FractionBox["jHG", "yC"], "+", 
            FractionBox[
             RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], ";", 
        " ", "\[IndentingNewLine]", 
        RowBox[{"jCO2", "=", 
         RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jL", "=", 
         RowBox[{"A", " ", "astar", " ", "L"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rCH", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"jHT", "+", 
            FractionBox[
             RowBox[{"jHG", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
          "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rCS", "=", 
         RowBox[{"\[Sigma]CS", 
          RowBox[{"(", 
           RowBox[{"j0ST", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
             SuperscriptBox["yC", 
              RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"jeL", "=", 
         RowBox[{"jL", "-", 
          FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jNPQ", "=", 
         FractionBox["1", 
          RowBox[{
           FractionBox["1", "jeL"], "+", 
           FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
        RowBox[{"cROS1", "=", 
         FractionBox[
          RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jST", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rNH", "=", 
         RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"A", "=", 
         RowBox[{"1.256307", "+", 
          RowBox[{"1.385969", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "6.479055"}], " ", 
             RowBox[{"S", "/", "H"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jNw", "=", " ", 
         RowBox[{
          RowBox[{"\[Rho]N", "*", 
           RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
          RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"tsolve", "=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Rho]C", ",", 
             RowBox[{"jCP", "-", 
              RowBox[{"jSG", " ", 
               SuperscriptBox["yC", 
                RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jCP", ",", 
             FractionBox[
              RowBox[{
               RowBox[{"F", "[", "jCPm", "]"}], "[", 
               RowBox[{
                RowBox[{"jL", " ", "yCL"}], ",", 
                RowBox[{"rCS", "+", 
                 FractionBox[
                  RowBox[{"H", " ", 
                   RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
              RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jNi", ",", " ", 
             FractionBox[
              RowBox[{"jNm", " ", "*", "Ni"}], 
              RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
          "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"states", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"tsolve", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
            "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"addtimetostatevars", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "\[Rule]", 
              RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", "states"}], 
          ")"}]}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"eqs", "=", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
               "\[Equal]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Lambda]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                 "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
            "tsolve"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"S", 
                 RowBox[{"(", 
                  RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"H", 
                 RowBox[{"(", 
                  RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
              RowBox[{"fh", "[", 
               RowBox[{"t", ",", "  ", 
                RowBox[{
                 RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"d", "*", 
                  RowBox[{"(", " ", 
                   RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                 " ", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                   ")"}], "/", 
                  RowBox[{"(", " ", 
                   RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"P", "*", 
                 RowBox[{"(", 
                  RowBox[{"rp", "*", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                  ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
            "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"inis", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], "\[Equal]", 
               
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
            "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{
          RowBox[{"NDSolve", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Join", "[", 
              RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
            RowBox[{
             RowBox[{"#", "&"}], "/@", "states"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
            RowBox[{"Method", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<EquationSimplification\>\"", "\[Rule]", 
               "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"change", " ", "in", " ", "Ni"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"steadyNi", "=", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"Ni", "[", "tmax", "]"}], "/.", "sol"}], "]"}], "-", 
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"Ni", "[", 
                RowBox[{"tmax", "-", "50"}], "]"}], "/.", "sol"}], "]"}]}], 
            ")"}], "/", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"Ni", "[", 
              RowBox[{"tmax", "-", "50"}], "]"}], "/.", "sol"}], "]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"change", " ", "in", " ", "host", " ", "growth"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"steadyHGrowth", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Chop", "[", 
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
                 RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], 
              "]"}], "==", "0"}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Chop", "[", 
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "'"}], "[", 
                  RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                 RowBox[{"H", "[", 
                  RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], "]"}], 
              "]"}], "==", "0"}]}], ",", " ", "0", ",", 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
                  RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], 
               "-", 
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"H", "'"}], "[", 
                   RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                  RowBox[{"H", "[", 
                   RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], 
                "]"}]}], ")"}], "/", 
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"H", "'"}], "[", 
                 RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                RowBox[{"H", "[", 
                 RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], "]"}]}],
             "]"}]}], " ", "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"Chop", "[", "]"}], " ", "approximates", " ", "numbers", 
           " ", "that", " ", "are", " ", "less", " ", "than", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], " ", "as", " ", "0"}], ",", " ", 
          RowBox[{"so", " ", "in", " ", "this", " ", "case"}], ",", " ", 
          RowBox[{
          "if", " ", "host", " ", "growth", " ", "rate", " ", "is", " ", 
           "less", " ", "than", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], " ", "at", " ", "the", " ", "end", " ", 
           "of", " ", "the", " ", "time", " ", "step", " ", "say", " ", 
           "that", " ", "the", " ", "percent", " ", "change", " ", "is", " ", 
           "equal", " ", "to", " ", "zero"}]}], "*)"}], "\[IndentingNewLine]",
         "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"change", " ", "in", " ", 
          RowBox[{"S", "/", "H"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"steadySH", "=", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"S", "[", "tmax", "]"}], "/", 
                RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], "-", 
             
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"S", "[", 
                 RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                RowBox[{"H", "[", 
                 RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], "]"}]}],
             ")"}], "/", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"S", "[", 
               RowBox[{"tmax", "-", "50"}], "]"}], "/", 
              RowBox[{"H", "[", 
               RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], "]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
         "}"}]}]}], 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"record", " ", "the", " ", "change", " ", "in", " ", "Ni"}], 
        ",", " ", 
        RowBox[{"H", " ", "growth"}], ",", " ", 
        RowBox[{"and", " ", 
         RowBox[{"S", "/", "H"}], " ", "as", " ", "output"}]}], "*)"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836576641311953*^9, 3.836576745811816*^9}, {3.8365767807913227`*^9, 
   3.836576796666417*^9}, {3.83690984159394*^9, 3.8369098642372837`*^9}, {
   3.8369099504464817`*^9, 3.836909992597097*^9}, {3.836910066716194*^9, 
   3.836910181553328*^9}, {3.8369102578063707`*^9, 3.836910390882205*^9}, {
   3.8369104221261673`*^9, 3.8369104445293837`*^9}, {3.836910588258913*^9, 
   3.836910603839734*^9}, {3.83691170755369*^9, 3.836911723135646*^9}, 
   3.836916782182846*^9, {3.8369173444379473`*^9, 3.836917364496358*^9}, {
   3.836917449889654*^9, 3.836917475981286*^9}, {3.8369183517345324`*^9, 
   3.836918406414919*^9}, {3.837107692096567*^9, 3.837107693627658*^9}, {
   3.837115072644342*^9, 3.837115084746319*^9}, {3.841441086035733*^9, 
   3.841441106951355*^9}, {3.842184406440856*^9, 3.842184412972148*^9}, {
   3.8431426260245256`*^9, 3.843142626525084*^9}, {3.843142667219924*^9, 
   3.843142667609748*^9}, {3.843142754481592*^9, 3.8431427683750477`*^9}, 
   3.843142971054339*^9, 3.8431430016942453`*^9, {3.843145957205802*^9, 
   3.8431459574026003`*^9}, {3.843145989259967*^9, 3.84314599933941*^9}, {
   3.8431462181377773`*^9, 3.843146245454053*^9}, {3.843146338320209*^9, 
   3.843146341462634*^9}, {3.843146387398436*^9, 3.843146399278995*^9}, 
   3.843146503008917*^9, {3.843146876297696*^9, 3.843146962197328*^9}, {
   3.843146997278645*^9, 3.843147003592553*^9}, {3.84314707645168*^9, 
   3.843147133700138*^9}, {3.843147193224696*^9, 3.84314723201825*^9}, {
   3.843147265412475*^9, 3.843147430673661*^9}, {3.8431482767099943`*^9, 
   3.843148277393372*^9}, {3.843305501160633*^9, 3.843305505999219*^9}, {
   3.8433071545117292`*^9, 3.843307213807313*^9}, {3.843307246872377*^9, 
   3.8433072502382803`*^9}, {3.8433072953436604`*^9, 3.843307328438794*^9}, {
   3.843307398106471*^9, 3.843307437582745*^9}, {3.843307480023155*^9, 
   3.843307525437388*^9}, {3.843307585032434*^9, 3.8433076481856003`*^9}, 
   3.843307880435197*^9, {3.843310013493511*^9, 3.8433100458317966`*^9}, {
   3.84331088141785*^9, 3.843310915103774*^9}, {3.8433109734261417`*^9, 
   3.843311082342039*^9}, 3.843925088311591*^9, {3.844380373006825*^9, 
   3.844380376879058*^9}, {3.844380415104576*^9, 3.8443804794604397`*^9}, {
   3.854025033721299*^9, 3.8540250500828953`*^9}},
 CellLabel->
  "In[265]:=",ExpressionUUID->"e927dee1-75b5-4e32-bf62-abb5127ce85f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", "NXseclowestXlowestN", "]"}], ",", " ", 
    RowBox[{
     RowBox[{"#", ">", 
      RowBox[{"1", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "4"}]}]}]}], "&"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"nothing", " ", "is", " ", "greater", " ", "than", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "4"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8414411429815903`*^9, 3.841441146445889*^9}, {
   3.841441308667336*^9, 3.841441312527545*^9}, {3.8414414720350313`*^9, 
   3.8414414762482567`*^9}, {3.8433014669511137`*^9, 3.843301495023656*^9}, 
   3.8433017610690813`*^9, {3.8433018338897*^9, 3.843301857234819*^9}, {
   3.8433028862284317`*^9, 3.843302889954226*^9}, {3.843303457715599*^9, 
   3.8433034663505793`*^9}, {3.843310066329883*^9, 3.843310071144806*^9}, 
   3.843310928906714*^9},
 CellLabel->
  "In[271]:=",ExpressionUUID->"e08ad796-11bb-4cf2-9a18-ebccc70e386f"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.843311015255144*^9, 3.843311088994392*^9}, 
   3.8445093101198597`*^9, 3.854044026646867*^9},
 CellLabel->
  "Out[271]=",ExpressionUUID->"bde130a9-870d-4770-9364-eaa2df13b978"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulations for Nenv vs. prey", "Subsubsection",
 CellChangeTimes->{{3.837016020648465*^9, 3.837016022823328*^9}, {
  3.842903144115148*^9, 3.842903147916192*^9}, {3.843301524471611*^9, 
  3.843301539283156*^9}},ExpressionUUID->"50ebd006-43ff-4d3b-8cf3-\
54bb32160ba4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.831830789369714*^9, 3.8318307905412607`*^9}, {
   3.835995882215592*^9, 3.83599588299831*^9}, {3.8363089619914494`*^9, 
   3.836308970966587*^9}, {3.836309185335792*^9, 3.8363091870313787`*^9}, 
   3.8363138138722897`*^9, 3.842903491237357*^9},
 CellLabel->
  "In[272]:=",ExpressionUUID->"c3283197-6b6f-4dfb-b100-784d51b8081a"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"jN", "=", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"jNi0", " ", "=", " ", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "1500"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NXRuns", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"jX", "=", 
                FractionBox[
                 RowBox[{"jXm", " ", "X"}], 
                 RowBox[{"X", "+", "KX"}]]}], ",", " ", 
               RowBox[{"jN", "=", 
                FractionBox[
                 RowBox[{"jNm", " ", "\[CapitalNu]"}], 
                 RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", 
               RowBox[{"jHT", "=", "j0HT"}], ",", 
               RowBox[{"rNS", "=", 
                RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
               RowBox[{"VH0", "=", 
                RowBox[{"kv", "*", "H0"}]}], ",", " ", 
               RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
               RowBox[{"jNi0", " ", "=", " ", 
                FractionBox[
                 RowBox[{"jNm", " ", "\[CapitalNu]"}], 
                 RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", "states", ",", 
               " ", "rNH", ",", " ", "S", ",", "H", ",", "VH", ",", "P", ",", 
               "Ni", ",", "jNi", ",", "\[Rho]C", ",", " ", "jCP", ",", " ", 
               "jHG", ",", "\[Rho]N", ",", "jeC", ",", "jCO2", ",", "A", ",", 
               "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", ",", 
               "cROS1", ",", "jSG", ",", "jST", ",", "jNw", ",", "F", ",", 
               "fh", ",", "tsolve", ",", " ", "addtimetostatevars", ",", 
               "eqs", ",", "inis", ",", "sol", ",", "t", ",", "steadyNi", ",",
                "steadyHGrowth", ",", "steadySH"}], 
              RowBox[{"(*", 
               RowBox[{
               "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
                "intermediate", " ", "output", " ", "values", " ", "in", " ", 
                "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
                RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
               FractionBox[
                RowBox[{"A", " ", "B", " ", 
                 RowBox[{"(", 
                  RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["A", "2"], " ", "B"}], "+", 
                 RowBox[{"A", " ", 
                  SuperscriptBox["B", "2"]}], "+", 
                 RowBox[{
                  SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
                 RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
                 RowBox[{
                  SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
              RowBox[{"(*", 
               RowBox[{"same", " ", "as", " ", 
                FractionBox["1", 
                 RowBox[{
                  FractionBox["1", "\[Rho]"], "+", 
                  FractionBox["1", "A"], "+", 
                  FractionBox["1", "B"], "-", 
                  FractionBox["1", 
                   RowBox[{"A", "+", "B"}]]}]]}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"fh", "[", 
                RowBox[{
                 RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
               RowBox[{"Piecewise", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", " ", 
                    RowBox[{"y", "<", "0"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"kv", " ", "*", "y"}], ",", 
                    RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
                "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", "Calculations", " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"jHG", "=", 
               RowBox[{
                RowBox[{"F", "[", "jHGm", "]"}], "[", 
                RowBox[{
                 RowBox[{"yC", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Rho]C", " ", 
                    RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                    
                    RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                    RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                  SuperscriptBox["nNH", 
                   RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
              "\[IndentingNewLine]", 
              RowBox[{"jSG", "=", 
               RowBox[{
                RowBox[{"F", "[", "jSGm", "]"}], "[", 
                RowBox[{
                 RowBox[{"jCP", " ", "yC"}], ",", 
                 FractionBox[
                  RowBox[{"rNS", "+", 
                   FractionBox[
                    RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"\[Rho]N", "=", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                  
                  RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                  RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
                  RowBox[{"nNH", " ", "jHG"}]}], " ", 
                 RowBox[{"(*", 
                  SuperscriptBox["yN", 
                   RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"jeC", "=", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{"jX", "-", 
                  FractionBox["jHG", "yC"], "+", 
                  FractionBox[
                   RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}],
               ";", " ", "\[IndentingNewLine]", 
              RowBox[{"jCO2", "=", 
               RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"jL", "=", 
               RowBox[{"A", " ", "astar", " ", "L"}]}], " ", ";", 
              "\[IndentingNewLine]", 
              RowBox[{"rCH", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"jHT", "+", 
                  FractionBox[
                   RowBox[{"jHG", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
                "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"rCS", "=", 
               RowBox[{"\[Sigma]CS", 
                RowBox[{"(", 
                 RowBox[{"j0ST", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
                   SuperscriptBox["yC", 
                    RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"jeL", "=", 
               RowBox[{"jL", "-", 
                FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"jNPQ", "=", 
               FractionBox["1", 
                RowBox[{
                 FractionBox["1", "jeL"], "+", 
                 FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
              RowBox[{"cROS1", "=", 
               FractionBox[
                RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"jST", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"rNH", "=", 
               RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"A", "=", 
               RowBox[{"1.256307", "+", 
                RowBox[{"1.385969", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "6.479055"}], " ", 
                   RowBox[{"S", "/", "H"}]}]]}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"jNw", "=", " ", 
               RowBox[{
                RowBox[{"\[Rho]N", "*", 
                 RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
                RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"tsolve", "=", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[Rho]C", ",", 
                   RowBox[{"jCP", "-", 
                    RowBox[{"jSG", " ", 
                    SuperscriptBox["yC", 
                    RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"jCP", ",", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"F", "[", "jCPm", "]"}], "[", 
                    RowBox[{
                    RowBox[{"jL", " ", "yCL"}], ",", 
                    RowBox[{"rCS", "+", 
                    FractionBox[
                    RowBox[{"H", " ", 
                    RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
                    RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"jNi", ",", " ", 
                   FractionBox[
                    RowBox[{"jNm", " ", "*", "Ni"}], 
                    RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
                "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"states", "=", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"tsolve", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
                  "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"addtimetostatevars", "=", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"#", "\[Rule]", 
                    RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", 
                 "states"}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
              RowBox[{"eqs", "=", 
               RowBox[{"Join", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
                    "\[Equal]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Lambda]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
                  "tsolve"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"S", 
                    RowBox[{"(", 
                    RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"H", 
                    RowBox[{"(", 
                    RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                    RowBox[{"fh", "[", 
                    RowBox[{"t", ",", " ", 
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"d", "*", 
                    RowBox[{"(", " ", 
                    RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                    " ", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                    ")"}], "/", 
                    RowBox[{"(", " ", 
                    RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"P", "*", 
                    RowBox[{"(", 
                    RowBox[{"rp", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                    ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
                  "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"inis", "=", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], 
                   ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}],
                  ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], 
                    "\[Equal]", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
                  "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"sol", "=", 
               RowBox[{
                RowBox[{"NDSolve", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Join", "[", 
                    RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
                  RowBox[{
                   RowBox[{"#", "&"}], "/@", "states"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
                  RowBox[{"Method", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<EquationSimplification\>\"", "\[Rule]", 
                    "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"steady", " ", "state", " ", "Ni"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"steadyNi", "=", 
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{"Ni", "[", "tmax", "]"}], "/.", "sol"}], "]"}]}], 
              ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"steady", " ", "state", " ", "host", " ", "growth"}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{"steadyHGrowth", "=", 
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
                  RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}]}], 
              ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"steady", " ", "state", " ", 
                RowBox[{"S", "/", "H"}]}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"steadySH", "=", 
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"S", "[", "tmax", "]"}], "/", 
                  RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}]}], 
              ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
               "}"}]}]}], 
            RowBox[{"(*", 
             RowBox[{
             "the", " ", "steady", " ", "state", " ", "values", " ", "as", 
              " ", "output"}], "*)"}], "]"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"X", ",", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"0.1", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "7"}]}]}], ",", 
               RowBox[{"0.25", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "7"}]}]}], ",", 
               RowBox[{"0.5", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "7"}]}]}], ",", 
               RowBox[{"0.75", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "7"}]}]}], ",", 
               RowBox[{"1", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "7"}]}]}], ",", 
               RowBox[{"1.25", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "7"}]}]}], ",", 
               RowBox[{"1.5", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "7"}]}]}], ",", 
               RowBox[{"1.75", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "7"}]}]}], ",", " ", 
               RowBox[{"2", "*", 
                RowBox[{"10", "^", 
                 RowBox[{"-", "7"}]}]}]}], "}"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{
          "repeat", " ", "this", " ", "for", " ", "different", " ", "levels", 
           " ", "of", " ", "prey"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"\[CapitalNu]", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"0.1", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "7"}]}]}], ",", 
             RowBox[{"0.25", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "7"}]}]}], ",", 
             RowBox[{"0.5", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "7"}]}]}], ",", 
             RowBox[{"0.75", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "7"}]}]}], ",", 
             RowBox[{"1", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "7"}]}]}], ",", 
             RowBox[{"2.5", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "7"}]}]}], ",", 
             RowBox[{"5", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "7"}]}]}], ",", 
             RowBox[{"7.5", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "7"}]}]}], ",", 
             RowBox[{"10", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "7"}]}]}]}], "}"}]}], "}"}]}], 
        RowBox[{"(*", 
         RowBox[{
         "repeat", " ", "this", " ", "for", " ", "different", " ", "values", 
          " ", "of", " ", "Nenv"}], "*)"}], "\[IndentingNewLine]", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"P0", ",", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", 
           RowBox[{"kp", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H0"}]}], "}"}]}], 
        "}"}]}], 
      RowBox[{"(*", 
       RowBox[{
       "repeat", " ", "this", " ", "with", " ", "no", " ", "fish", " ", 
        RowBox[{"(", 
         RowBox[{"P0", "=", "0"}], ")"}], " ", "and", " ", "with", " ", 
        "fish", " ", 
        RowBox[{"(", 
         RowBox[{"P0", "=", 
          RowBox[{"kp", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H0"}]}], ")"}]}], 
       "*)"}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836576641311953*^9, 3.836576745811816*^9}, {3.8365767807913227`*^9, 
   3.836576796666417*^9}, {3.83690984159394*^9, 3.8369098642372837`*^9}, {
   3.8369099504464817`*^9, 3.836909992597097*^9}, {3.836910066716194*^9, 
   3.836910181553328*^9}, {3.8369102578063707`*^9, 3.836910390882205*^9}, {
   3.8369104221261673`*^9, 3.8369104445293837`*^9}, {3.836910588258913*^9, 
   3.836910603839734*^9}, {3.83691170755369*^9, 3.836911723135646*^9}, 
   3.836916782182846*^9, {3.8369173444379473`*^9, 3.836917364496358*^9}, {
   3.836917449889654*^9, 3.836917475981286*^9}, {3.837016270499617*^9, 
   3.837016319257697*^9}, {3.837016380938163*^9, 3.8370163826278067`*^9}, {
   3.8370168011807423`*^9, 3.837016810077647*^9}, {3.8371085820269213`*^9, 
   3.837108583101288*^9}, {3.837108840396078*^9, 3.837108865421579*^9}, 
   3.837108912868581*^9, {3.837109110867063*^9, 3.8371091757163563`*^9}, {
   3.837109206071288*^9, 3.837109212492094*^9}, {3.837113041761157*^9, 
   3.837113114895767*^9}, {3.837113921213895*^9, 3.837113921643626*^9}, {
   3.842903496660693*^9, 3.84290349946566*^9}, {3.843311096238491*^9, 
   3.843311097050918*^9}, 3.8439251507402077`*^9, {3.844380508984025*^9, 
   3.844380581743623*^9}, {3.854025128496064*^9, 3.85402514006509*^9}},
 CellLabel->
  "In[273]:=",ExpressionUUID->"7a923940-6572-4a7b-9238-f4afcf7d81cc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"saving", " ", "the", " ", "output", " ", "of", " ", 
    RowBox[{"Table", "[", "]"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Save", "[", 
    RowBox[{"\"\<NRunsnoPnoX1\>\"", ",", "durationRunsnoPnoX1"}], " ", "]"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<NXRuns\>\"", ",", "NXRuns"}], " ", "]"}]}]], "Input",
 CellChangeTimes->{{3.83113622232788*^9, 3.831136248679153*^9}, {
   3.8318234468167353`*^9, 3.831823449545583*^9}, 3.8359586097157*^9, {
   3.836154389122551*^9, 3.836154393564563*^9}, {3.83632257065947*^9, 
   3.83632257593362*^9}, {3.837113193487657*^9, 3.837113200365985*^9}},
 CellLabel->
  "In[277]:=",ExpressionUUID->"b30aeff7-f482-4997-81aa-af09132f0f10"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"recover", " ", "this", " ", "output"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Get", "[", "\"\<NXRuns\>\"", " ", "]"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.83163971590628*^9, 3.83163977412131*^9}, {
   3.8318234549263887`*^9, 3.8318234562225523`*^9}, {3.835958613462501*^9, 
   3.8359586172547092`*^9}, 3.836155606287785*^9, 3.836322558169998*^9, 
   3.837113216566908*^9},
 CellLabel->
  "In[278]:=",ExpressionUUID->"08185b33-3fc6-4eec-be77-88f191346db3"],

Cell[TextData[{
 "Repeat this for the situations in which the system has not reached the \
steady state by tmax=1500:\n1. NO PREY, Nenv= ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0.1", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "7"}]]}], TraditionalForm]],ExpressionUUID->
  "adb34783-6dc8-445d-bc16-038d0f0c29c6"]
}], "Text",
 CellChangeTimes->{{3.844380595621469*^9, 3.8443806326065493`*^9}, {
  3.844380691065033*^9, 
  3.8443806925375423`*^9}},ExpressionUUID->"aa4234b0-0312-4d2a-96e0-\
65609c0c0d70"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh", ",", 
    "LfunH"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.831830789369714*^9, 3.8318307905412607`*^9}, {
   3.835995882215592*^9, 3.83599588299831*^9}, {3.8363089619914494`*^9, 
   3.836308970966587*^9}, {3.836309185335792*^9, 3.8363091870313787`*^9}, 
   3.8363138138722897`*^9, 3.843143007434424*^9, {3.843146366303069*^9, 
   3.843146366755385*^9}, {3.843310218149005*^9, 3.843310222743376*^9}},
 CellLabel->
  "In[279]:=",ExpressionUUID->"d6b9d2a1-4a94-4db9-968e-4ae57a62f3cf"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "8"}]}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"jN", "=", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"jNi0", " ", "=", " ", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "2500"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NXnoXlowestN2", "=", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"jX", "=", 
          FractionBox[
           RowBox[{"jXm", " ", "X"}], 
           RowBox[{"X", "+", "KX"}]]}], ",", " ", 
         RowBox[{"jN", "=", 
          FractionBox[
           RowBox[{"jNm", " ", "\[CapitalNu]"}], 
           RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", 
         RowBox[{"jHT", "=", "j0HT"}], ",", 
         RowBox[{"rNS", "=", 
          RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
         RowBox[{"VH0", "=", 
          RowBox[{"kv", "*", "H0"}]}], ",", " ", 
         RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
         RowBox[{"jNi0", " ", "=", " ", 
          FractionBox[
           RowBox[{"jNm", " ", "\[CapitalNu]"}], 
           RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", "states", ",", " ", 
         "rNH", ",", " ", "S", ",", "H", ",", "VH", ",", "P", ",", "Ni", ",", 
         "jNi", ",", "\[Rho]C", ",", " ", "jCP", ",", " ", "jHG", ",", 
         "\[Rho]N", ",", "jeC", ",", "jCO2", ",", "A", ",", "jL", ",", "rCH", 
         ",", "rCS", ",", "jeL", ",", "jNPQ", ",", "cROS1", ",", "jSG", ",", 
         "jST", ",", "jNw", ",", "F", ",", "fh", ",", "tsolve", ",", " ", 
         "addtimetostatevars", ",", "eqs", ",", "inis", ",", "sol", ",", "t", 
         ",", "steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
        RowBox[{"(*", 
         RowBox[{
         "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
          "intermediate", " ", "output", " ", "values", " ", "in", " ", 
          "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
          RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
         FractionBox[
          RowBox[{"A", " ", "B", " ", 
           RowBox[{"(", 
            RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
          RowBox[{
           RowBox[{
            SuperscriptBox["A", "2"], " ", "B"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox["B", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
           RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
           RowBox[{
            SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
        RowBox[{"(*", 
         RowBox[{"same", " ", "as", " ", 
          FractionBox["1", 
           RowBox[{
            FractionBox["1", "\[Rho]"], "+", 
            FractionBox["1", "A"], "+", 
            FractionBox["1", "B"], "-", 
            FractionBox["1", 
             RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"fh", "[", 
          RowBox[{
           RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
         RowBox[{"Piecewise", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", 
              RowBox[{"y", "<", "0"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kv", " ", "*", "y"}], ",", 
              RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", "Calculations", " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"jHG", "=", 
         RowBox[{
          RowBox[{"F", "[", "jHGm", "]"}], "[", 
          RowBox[{
           RowBox[{"yC", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]C", " ", 
               RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
              RowBox[{"\[Alpha]", "*", "jN"}], "+", 
              RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
            SuperscriptBox["nNH", 
             RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"jSG", "=", 
         RowBox[{
          RowBox[{"F", "[", "jSGm", "]"}], "[", 
          RowBox[{
           RowBox[{"jCP", " ", "yC"}], ",", 
           FractionBox[
            RowBox[{"rNS", "+", 
             FractionBox[
              RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Rho]N", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
            RowBox[{"\[Alpha]", "*", "jN"}], "+", 
            RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
            RowBox[{"nNH", " ", "jHG"}]}], " ", 
           RowBox[{"(*", 
            SuperscriptBox["yN", 
             RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"jeC", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"jX", "-", 
            FractionBox["jHG", "yC"], "+", 
            FractionBox[
             RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], ";", 
        " ", "\[IndentingNewLine]", 
        RowBox[{"jCO2", "=", 
         RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jL", "=", 
         RowBox[{"A", " ", "astar", " ", "L"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rCH", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"jHT", "+", 
            FractionBox[
             RowBox[{"jHG", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
          "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rCS", "=", 
         RowBox[{"\[Sigma]CS", 
          RowBox[{"(", 
           RowBox[{"j0ST", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
             SuperscriptBox["yC", 
              RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"jeL", "=", 
         RowBox[{"jL", "-", 
          FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jNPQ", "=", 
         FractionBox["1", 
          RowBox[{
           FractionBox["1", "jeL"], "+", 
           FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
        RowBox[{"cROS1", "=", 
         FractionBox[
          RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jST", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rNH", "=", 
         RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"A", "=", 
         RowBox[{"1.256307", "+", 
          RowBox[{"1.385969", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "6.479055"}], " ", 
             RowBox[{"S", "/", "H"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jNw", "=", " ", 
         RowBox[{
          RowBox[{"\[Rho]N", "*", 
           RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
          RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"tsolve", "=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Rho]C", ",", 
             RowBox[{"jCP", "-", 
              RowBox[{"jSG", " ", 
               SuperscriptBox["yC", 
                RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jCP", ",", 
             FractionBox[
              RowBox[{
               RowBox[{"F", "[", "jCPm", "]"}], "[", 
               RowBox[{
                RowBox[{"jL", " ", "yCL"}], ",", 
                RowBox[{"rCS", "+", 
                 FractionBox[
                  RowBox[{"H", " ", 
                   RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
              RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jNi", ",", " ", 
             FractionBox[
              RowBox[{"jNm", " ", "*", "Ni"}], 
              RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
          "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"states", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"tsolve", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
            "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"addtimetostatevars", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "\[Rule]", 
              RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", "states"}], 
          ")"}]}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"eqs", "=", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
               "\[Equal]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Lambda]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                 "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
            "tsolve"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"S", 
                 RowBox[{"(", 
                  RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"H", 
                 RowBox[{"(", 
                  RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
              RowBox[{"fh", "[", 
               RowBox[{"t", ",", " ", 
                RowBox[{
                 RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"d", "*", 
                  RowBox[{"(", " ", 
                   RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                 " ", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                   ")"}], "/", 
                  RowBox[{"(", " ", 
                   RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"P", "*", 
                 RowBox[{"(", 
                  RowBox[{"rp", "*", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                  ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
            "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"inis", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], "\[Equal]", 
               
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
            "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{
          RowBox[{"NDSolve", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Join", "[", 
              RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
            RowBox[{
             RowBox[{"#", "&"}], "/@", "states"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
            RowBox[{"Method", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<EquationSimplification\>\"", "\[Rule]", 
               "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"steady", " ", "state", " ", "Ni"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"steadyNi", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"Ni", "[", "tmax", "]"}], "/.", "sol"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"steady", " ", "state", " ", "host", " ", "growth"}], "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{"steadyHGrowth", "=", 
         RowBox[{"Chop", "[", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
             RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], "]"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"steady", " ", "state", " ", 
          RowBox[{"S", "/", "H"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"steadySH", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "tmax", "]"}], "/", 
            RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
         "}"}]}]}], 
      RowBox[{"(*", 
       RowBox[{
       "the", " ", "steady", " ", "state", " ", "values", " ", "as", " ", 
        "output"}], "*)"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Save", "[", 
    RowBox[{"\"\<noXlowestN2\>\"", ",", "NXnoXlowestN2"}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836576641311953*^9, 3.836576745811816*^9}, {3.8365767807913227`*^9, 
   3.836576796666417*^9}, {3.83690984159394*^9, 3.8369098642372837`*^9}, {
   3.8369099504464817`*^9, 3.836909992597097*^9}, {3.836910066716194*^9, 
   3.836910181553328*^9}, {3.8369102578063707`*^9, 3.836910390882205*^9}, {
   3.8369104221261673`*^9, 3.8369104445293837`*^9}, {3.836910588258913*^9, 
   3.836910603839734*^9}, {3.83691170755369*^9, 3.836911723135646*^9}, 
   3.836916782182846*^9, {3.8369173444379473`*^9, 3.836917364496358*^9}, {
   3.836917449889654*^9, 3.836917475981286*^9}, {3.8369183517345324`*^9, 
   3.836918406414919*^9}, {3.837107692096567*^9, 3.837107693627658*^9}, {
   3.837115072644342*^9, 3.837115084746319*^9}, {3.841441086035733*^9, 
   3.841441106951355*^9}, {3.842184406440856*^9, 3.842184412972148*^9}, {
   3.8431426260245256`*^9, 3.843142626525084*^9}, {3.843142667219924*^9, 
   3.843142667609748*^9}, {3.843142754481592*^9, 3.8431427683750477`*^9}, 
   3.843142971054339*^9, 3.8431430016942453`*^9, {3.843145957205802*^9, 
   3.8431459574026003`*^9}, {3.843145989259967*^9, 3.84314599933941*^9}, {
   3.8431462181377773`*^9, 3.843146245454053*^9}, {3.843146338320209*^9, 
   3.843146341462634*^9}, {3.843146387398436*^9, 3.843146399278995*^9}, 
   3.843146503008917*^9, {3.843146876297696*^9, 3.843146962197328*^9}, {
   3.843146997278645*^9, 3.843147003592553*^9}, {3.84314707645168*^9, 
   3.843147133700138*^9}, {3.843147193224696*^9, 3.84314723201825*^9}, {
   3.843147265412475*^9, 3.843147430673661*^9}, {3.8431482767099943`*^9, 
   3.843148277393372*^9}, {3.843305501160633*^9, 3.843305505999219*^9}, {
   3.8433071545117292`*^9, 3.843307213807313*^9}, {3.843307246872377*^9, 
   3.8433072502382803`*^9}, {3.8433072953436604`*^9, 3.843307328438794*^9}, {
   3.843307398106471*^9, 3.843307437582745*^9}, {3.843307480023155*^9, 
   3.843307525437388*^9}, {3.843307585032434*^9, 3.8433076481856003`*^9}, 
   3.843307880435197*^9, {3.843310013493511*^9, 3.8433100458317966`*^9}, {
   3.843311214192528*^9, 3.843311226657978*^9}, {3.8433113882661657`*^9, 
   3.843311405320795*^9}, 3.84392515835497*^9, {3.8443806370176153`*^9, 
   3.844380658313675*^9}, 3.844380767234906*^9, {3.844509392102425*^9, 
   3.844509402413459*^9}, {3.854025146098831*^9, 3.854025155335187*^9}},
 CellLabel->
  "In[280]:=",ExpressionUUID->"9960b40e-7ac1-455c-912e-07f84e08de56"],

Cell[TextData[{
 "2. NO PREY, Nenv= ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0.25", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "7"}]]}], TraditionalForm]],ExpressionUUID->
  "a9522d73-61f3-4db4-b9a8-89507b64aa3f"]
}], "Text",
 CellChangeTimes->{{3.8433102590814753`*^9, 3.843310287008872*^9}, {
  3.8443808322598352`*^9, 
  3.8443808325978947`*^9}},ExpressionUUID->"f0f087b4-bd42-4480-8340-\
9bed458b30dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh", ",", 
    "LfunH"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.831830789369714*^9, 3.8318307905412607`*^9}, {
   3.835995882215592*^9, 3.83599588299831*^9}, {3.8363089619914494`*^9, 
   3.836308970966587*^9}, {3.836309185335792*^9, 3.8363091870313787`*^9}, 
   3.8363138138722897`*^9, 3.843143007434424*^9, {3.843146366303069*^9, 
   3.843146366755385*^9}},
 CellLabel->
  "In[287]:=",ExpressionUUID->"a5226f94-0e29-40ed-af1f-f830c841c2ba"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"2.5", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "8"}]}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"jN", "=", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"jNi0", " ", "=", " ", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "5000"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NXnoXsecLowN2", "=", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"jX", "=", 
          FractionBox[
           RowBox[{"jXm", " ", "X"}], 
           RowBox[{"X", "+", "KX"}]]}], ",", " ", 
         RowBox[{"jN", "=", 
          FractionBox[
           RowBox[{"jNm", " ", "\[CapitalNu]"}], 
           RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", 
         RowBox[{"jHT", "=", "j0HT"}], ",", 
         RowBox[{"rNS", "=", 
          RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
         RowBox[{"VH0", "=", 
          RowBox[{"kv", "*", "H0"}]}], ",", " ", 
         RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
         RowBox[{"jNi0", " ", "=", " ", 
          FractionBox[
           RowBox[{"jNm", " ", "\[CapitalNu]"}], 
           RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", "states", ",", " ", 
         "rNH", ",", " ", "S", ",", "H", ",", "VH", ",", "P", ",", "Ni", ",", 
         "jNi", ",", "\[Rho]C", ",", " ", "jCP", ",", " ", "jHG", ",", 
         "\[Rho]N", ",", "jeC", ",", "jCO2", ",", "A", ",", "jL", ",", "rCH", 
         ",", "rCS", ",", "jeL", ",", "jNPQ", ",", "cROS1", ",", "jSG", ",", 
         "jST", ",", "jNw", ",", "F", ",", "fh", ",", "tsolve", ",", " ", 
         "addtimetostatevars", ",", "eqs", ",", "inis", ",", "sol", ",", "t", 
         ",", "steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
        RowBox[{"(*", 
         RowBox[{
         "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
          "intermediate", " ", "output", " ", "values", " ", "in", " ", 
          "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
          RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
         FractionBox[
          RowBox[{"A", " ", "B", " ", 
           RowBox[{"(", 
            RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
          RowBox[{
           RowBox[{
            SuperscriptBox["A", "2"], " ", "B"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox["B", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
           RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
           RowBox[{
            SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
        RowBox[{"(*", 
         RowBox[{"same", " ", "as", " ", 
          FractionBox["1", 
           RowBox[{
            FractionBox["1", "\[Rho]"], "+", 
            FractionBox["1", "A"], "+", 
            FractionBox["1", "B"], "-", 
            FractionBox["1", 
             RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"fh", "[", 
          RowBox[{
           RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
         RowBox[{"Piecewise", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", 
              RowBox[{"y", "<", "0"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kv", " ", "*", "y"}], ",", 
              RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", "Calculations", " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"jHG", "=", 
         RowBox[{
          RowBox[{"F", "[", "jHGm", "]"}], "[", 
          RowBox[{
           RowBox[{"yC", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]C", " ", 
               RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
              RowBox[{"\[Alpha]", "*", "jN"}], "+", 
              RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
            SuperscriptBox["nNH", 
             RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"jSG", "=", 
         RowBox[{
          RowBox[{"F", "[", "jSGm", "]"}], "[", 
          RowBox[{
           RowBox[{"jCP", " ", "yC"}], ",", 
           FractionBox[
            RowBox[{"rNS", "+", 
             FractionBox[
              RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Rho]N", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
            RowBox[{"\[Alpha]", "*", "jN"}], "+", 
            RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
            RowBox[{"nNH", " ", "jHG"}]}], " ", 
           RowBox[{"(*", 
            SuperscriptBox["yN", 
             RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"jeC", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"jX", "-", 
            FractionBox["jHG", "yC"], "+", 
            FractionBox[
             RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], ";", 
        " ", "\[IndentingNewLine]", 
        RowBox[{"jCO2", "=", 
         RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jL", "=", 
         RowBox[{"A", " ", "astar", " ", "L"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rCH", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"jHT", "+", 
            FractionBox[
             RowBox[{"jHG", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
          "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rCS", "=", 
         RowBox[{"\[Sigma]CS", 
          RowBox[{"(", 
           RowBox[{"j0ST", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
             SuperscriptBox["yC", 
              RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"jeL", "=", 
         RowBox[{"jL", "-", 
          FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jNPQ", "=", 
         FractionBox["1", 
          RowBox[{
           FractionBox["1", "jeL"], "+", 
           FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
        RowBox[{"cROS1", "=", 
         FractionBox[
          RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jST", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rNH", "=", 
         RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"A", "=", 
         RowBox[{"1.256307", "+", 
          RowBox[{"1.385969", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "6.479055"}], " ", 
             RowBox[{"S", "/", "H"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jNw", "=", " ", 
         RowBox[{
          RowBox[{"\[Rho]N", "*", 
           RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
          RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"tsolve", "=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Rho]C", ",", 
             RowBox[{"jCP", "-", 
              RowBox[{"jSG", " ", 
               SuperscriptBox["yC", 
                RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jCP", ",", 
             FractionBox[
              RowBox[{
               RowBox[{"F", "[", "jCPm", "]"}], "[", 
               RowBox[{
                RowBox[{"jL", " ", "yCL"}], ",", 
                RowBox[{"rCS", "+", 
                 FractionBox[
                  RowBox[{"H", " ", 
                   RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
              RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jNi", ",", " ", 
             FractionBox[
              RowBox[{"jNm", " ", "*", "Ni"}], 
              RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
          "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"states", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"tsolve", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
            "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"addtimetostatevars", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "\[Rule]", 
              RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", "states"}], 
          ")"}]}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"eqs", "=", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
               "\[Equal]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Lambda]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                 "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
            "tsolve"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"S", 
                 RowBox[{"(", 
                  RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"H", 
                 RowBox[{"(", 
                  RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
              RowBox[{"fh", "[", 
               RowBox[{"t", ",", " ", 
                RowBox[{
                 RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"d", "*", 
                  RowBox[{"(", " ", 
                   RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                 " ", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                   ")"}], "/", 
                  RowBox[{"(", " ", 
                   RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"P", "*", 
                 RowBox[{"(", 
                  RowBox[{"rp", "*", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                  ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
            "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"inis", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], "\[Equal]", 
               
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
            "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{
          RowBox[{"NDSolve", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Join", "[", 
              RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
            RowBox[{
             RowBox[{"#", "&"}], "/@", "states"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
            RowBox[{"Method", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<EquationSimplification\>\"", "\[Rule]", 
               "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"steady", " ", "state", " ", "Ni"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"steadyNi", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"Ni", "[", "tmax", "]"}], "/.", "sol"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"steady", " ", "state", " ", "host", " ", "growth"}], "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{"steadyHGrowth", "=", 
         RowBox[{"Chop", "[", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
             RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], "]"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"steady", " ", "state", " ", 
          RowBox[{"S", "/", "H"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"steadySH", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "tmax", "]"}], "/", 
            RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
         "}"}]}]}], 
      RowBox[{"(*", 
       RowBox[{
       "the", " ", "steady", " ", "state", " ", "values", " ", "as", " ", 
        "output"}], "*)"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Save", "[", 
    RowBox[{"\"\<noXsecLowN2\>\"", ",", "NXnoXsecLowN2"}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836576641311953*^9, 3.836576745811816*^9}, {3.8365767807913227`*^9, 
   3.836576796666417*^9}, {3.83690984159394*^9, 3.8369098642372837`*^9}, {
   3.8369099504464817`*^9, 3.836909992597097*^9}, {3.836910066716194*^9, 
   3.836910181553328*^9}, {3.8369102578063707`*^9, 3.836910390882205*^9}, {
   3.8369104221261673`*^9, 3.8369104445293837`*^9}, {3.836910588258913*^9, 
   3.836910603839734*^9}, {3.83691170755369*^9, 3.836911723135646*^9}, 
   3.836916782182846*^9, {3.8369173444379473`*^9, 3.836917364496358*^9}, {
   3.836917449889654*^9, 3.836917475981286*^9}, {3.8369183517345324`*^9, 
   3.836918406414919*^9}, {3.837107692096567*^9, 3.837107693627658*^9}, {
   3.837115072644342*^9, 3.837115084746319*^9}, {3.841441086035733*^9, 
   3.841441106951355*^9}, {3.842184406440856*^9, 3.842184412972148*^9}, {
   3.8431426260245256`*^9, 3.843142626525084*^9}, {3.843142667219924*^9, 
   3.843142667609748*^9}, {3.843142754481592*^9, 3.8431427683750477`*^9}, 
   3.843142971054339*^9, 3.8431430016942453`*^9, {3.843145957205802*^9, 
   3.8431459574026003`*^9}, {3.843145989259967*^9, 3.84314599933941*^9}, {
   3.8431462181377773`*^9, 3.843146245454053*^9}, {3.843146338320209*^9, 
   3.843146341462634*^9}, {3.843146387398436*^9, 3.843146399278995*^9}, 
   3.843146503008917*^9, {3.843146876297696*^9, 3.843146962197328*^9}, {
   3.843146997278645*^9, 3.843147003592553*^9}, {3.84314707645168*^9, 
   3.843147133700138*^9}, {3.843147193224696*^9, 3.84314723201825*^9}, {
   3.843147265412475*^9, 3.843147430673661*^9}, {3.8431482767099943`*^9, 
   3.843148277393372*^9}, {3.843305501160633*^9, 3.843305505999219*^9}, {
   3.8433071545117292`*^9, 3.843307213807313*^9}, {3.843307246872377*^9, 
   3.8433072502382803`*^9}, {3.8433072953436604`*^9, 3.843307328438794*^9}, {
   3.843307398106471*^9, 3.843307437582745*^9}, {3.843307480023155*^9, 
   3.843307525437388*^9}, {3.843307585032434*^9, 3.8433076481856003`*^9}, 
   3.843307880435197*^9, {3.843310013493511*^9, 3.8433100458317966`*^9}, {
   3.843310292604933*^9, 3.843310294576*^9}, {3.8433103308549223`*^9, 
   3.843310407351481*^9}, 3.8433112451247787`*^9, {3.84331142743502*^9, 
   3.843311449890785*^9}, 3.843928086473055*^9, {3.8443807743865747`*^9, 
   3.844380775241831*^9}, {3.844380836632637*^9, 3.8443808588641987`*^9}, {
   3.844509409211295*^9, 3.84450941773734*^9}, {3.854025160169282*^9, 
   3.854025169543789*^9}},
 CellLabel->
  "In[288]:=",ExpressionUUID->"787aa3f0-12e6-4e5f-8114-205792a632a4"],

Cell[TextData[{
 "3. NO PREY, Nenv=",
 Cell[BoxData[
  FormBox[
   RowBox[{"0.5", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "7"}]]}], TraditionalForm]],ExpressionUUID->
  "3bfb0f02-76b1-4c84-886b-e3a888bffa6e"]
}], "Text",
 CellChangeTimes->{{3.843310422438862*^9, 3.843310441303938*^9}, {
  3.8443808687098417`*^9, 
  3.844380869017954*^9}},ExpressionUUID->"ef7aebec-360d-4378-8ed6-\
7c0322e4b247"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh", ",", 
    "LfunH"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.831830789369714*^9, 3.8318307905412607`*^9}, {
   3.835995882215592*^9, 3.83599588299831*^9}, {3.8363089619914494`*^9, 
   3.836308970966587*^9}, {3.836309185335792*^9, 3.8363091870313787`*^9}, 
   3.8363138138722897`*^9, 3.843143007434424*^9, {3.843146366303069*^9, 
   3.843146366755385*^9}},
 CellLabel->
  "In[295]:=",ExpressionUUID->"680fdb46-6cf9-4f0b-b329-f27caeaf9fcc"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "1660"}], 
    RowBox[{"(*", "10", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"5", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "8"}]}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"jN", "=", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"jNi0", " ", "=", " ", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "50000"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NXnoXthirdLowN2", "=", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"jX", "=", 
          FractionBox[
           RowBox[{"jXm", " ", "X"}], 
           RowBox[{"X", "+", "KX"}]]}], ",", " ", 
         RowBox[{"jN", "=", 
          FractionBox[
           RowBox[{"jNm", " ", "\[CapitalNu]"}], 
           RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", 
         RowBox[{"jHT", "=", "j0HT"}], ",", 
         RowBox[{"rNS", "=", 
          RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
         RowBox[{"VH0", "=", 
          RowBox[{"kv", "*", "H0"}]}], ",", " ", 
         RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
         RowBox[{"jNi0", " ", "=", " ", 
          FractionBox[
           RowBox[{"jNm", " ", "\[CapitalNu]"}], 
           RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", "states", ",", " ", 
         "rNH", ",", " ", "S", ",", "H", ",", "VH", ",", "P", ",", "Ni", ",", 
         "jNi", ",", "\[Rho]C", ",", " ", "jCP", ",", " ", "jHG", ",", 
         "\[Rho]N", ",", "jeC", ",", "jCO2", ",", "A", ",", "jL", ",", "rCH", 
         ",", "rCS", ",", "jeL", ",", "jNPQ", ",", "cROS1", ",", "jSG", ",", 
         "jST", ",", "jNw", ",", "F", ",", "fh", ",", "tsolve", ",", " ", 
         "addtimetostatevars", ",", "eqs", ",", "inis", ",", "sol", ",", "t", 
         ",", "steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
        RowBox[{"(*", 
         RowBox[{
         "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
          "intermediate", " ", "output", " ", "values", " ", "in", " ", 
          "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
          RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
         FractionBox[
          RowBox[{"A", " ", "B", " ", 
           RowBox[{"(", 
            RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
          RowBox[{
           RowBox[{
            SuperscriptBox["A", "2"], " ", "B"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox["B", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
           RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
           RowBox[{
            SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
        RowBox[{"(*", 
         RowBox[{"same", " ", "as", " ", 
          FractionBox["1", 
           RowBox[{
            FractionBox["1", "\[Rho]"], "+", 
            FractionBox["1", "A"], "+", 
            FractionBox["1", "B"], "-", 
            FractionBox["1", 
             RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"fh", "[", 
          RowBox[{
           RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
         RowBox[{"Piecewise", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", 
              RowBox[{"y", "<", "0"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kv", " ", "*", "y"}], ",", 
              RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", "Calculations", " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"jHG", "=", 
         RowBox[{
          RowBox[{"F", "[", "jHGm", "]"}], "[", 
          RowBox[{
           RowBox[{"yC", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]C", " ", 
               RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
              RowBox[{"\[Alpha]", "*", "jN"}], "+", 
              RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
            SuperscriptBox["nNH", 
             RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"jSG", "=", 
         RowBox[{
          RowBox[{"F", "[", "jSGm", "]"}], "[", 
          RowBox[{
           RowBox[{"jCP", " ", "yC"}], ",", 
           FractionBox[
            RowBox[{"rNS", "+", 
             FractionBox[
              RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Rho]N", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
            RowBox[{"\[Alpha]", "*", "jN"}], "+", 
            RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
            RowBox[{"nNH", " ", "jHG"}]}], " ", 
           RowBox[{"(*", 
            SuperscriptBox["yN", 
             RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"jeC", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"jX", "-", 
            FractionBox["jHG", "yC"], "+", 
            FractionBox[
             RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], ";", 
        " ", "\[IndentingNewLine]", 
        RowBox[{"jCO2", "=", 
         RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jL", "=", 
         RowBox[{"A", " ", "astar", " ", "L"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rCH", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"jHT", "+", 
            FractionBox[
             RowBox[{"jHG", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
          "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rCS", "=", 
         RowBox[{"\[Sigma]CS", 
          RowBox[{"(", 
           RowBox[{"j0ST", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
             SuperscriptBox["yC", 
              RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"jeL", "=", 
         RowBox[{"jL", "-", 
          FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jNPQ", "=", 
         FractionBox["1", 
          RowBox[{
           FractionBox["1", "jeL"], "+", 
           FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
        RowBox[{"cROS1", "=", 
         FractionBox[
          RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jST", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rNH", "=", 
         RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"A", "=", 
         RowBox[{"1.256307", "+", 
          RowBox[{"1.385969", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "6.479055"}], " ", 
             RowBox[{"S", "/", "H"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jNw", "=", " ", 
         RowBox[{
          RowBox[{"\[Rho]N", "*", 
           RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
          RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"tsolve", "=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Rho]C", ",", 
             RowBox[{"jCP", "-", 
              RowBox[{"jSG", " ", 
               SuperscriptBox["yC", 
                RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jCP", ",", 
             FractionBox[
              RowBox[{
               RowBox[{"F", "[", "jCPm", "]"}], "[", 
               RowBox[{
                RowBox[{"jL", " ", "yCL"}], ",", 
                RowBox[{"rCS", "+", 
                 FractionBox[
                  RowBox[{"H", " ", 
                   RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
              RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jNi", ",", " ", 
             FractionBox[
              RowBox[{"jNm", " ", "*", "Ni"}], 
              RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
          "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"states", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"tsolve", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
            "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"addtimetostatevars", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "\[Rule]", 
              RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", "states"}], 
          ")"}]}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"eqs", "=", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
               "\[Equal]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Lambda]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                 "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
            "tsolve"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"S", 
                 RowBox[{"(", 
                  RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"H", 
                 RowBox[{"(", 
                  RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
              RowBox[{"fh", "[", 
               RowBox[{"t", ",", " ", 
                RowBox[{
                 RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"d", "*", 
                  RowBox[{"(", " ", 
                   RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                 " ", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                   ")"}], "/", 
                  RowBox[{"(", " ", 
                   RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"P", "*", 
                 RowBox[{"(", 
                  RowBox[{"rp", "*", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                  ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
            "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"inis", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], "\[Equal]", 
               
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
            "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{
          RowBox[{"NDSolve", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Join", "[", 
              RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
            RowBox[{
             RowBox[{"#", "&"}], "/@", "states"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
            RowBox[{"Method", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<EquationSimplification\>\"", "\[Rule]", 
               "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"steady", " ", "state", " ", "Ni"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"steadyNi", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"Ni", "[", "tmax", "]"}], "/.", "sol"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"steady", " ", "state", " ", "host", " ", "growth"}], "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{"steadyHGrowth", "=", 
         RowBox[{"Chop", "[", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
             RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], "]"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"steady", " ", "state", " ", 
          RowBox[{"S", "/", "H"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"steadySH", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "tmax", "]"}], "/", 
            RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
         "}"}]}]}], 
      RowBox[{"(*", 
       RowBox[{
       "the", " ", "steady", " ", "state", " ", "values", " ", "as", " ", 
        "output"}], "*)"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Save", "[", 
    RowBox[{"\"\<noXthirdLowN2\>\"", ",", "NXnoXthirdLowN2"}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836576641311953*^9, 3.836576745811816*^9}, {3.8365767807913227`*^9, 
   3.836576796666417*^9}, {3.83690984159394*^9, 3.8369098642372837`*^9}, {
   3.8369099504464817`*^9, 3.836909992597097*^9}, {3.836910066716194*^9, 
   3.836910181553328*^9}, {3.8369102578063707`*^9, 3.836910390882205*^9}, {
   3.8369104221261673`*^9, 3.8369104445293837`*^9}, {3.836910588258913*^9, 
   3.836910603839734*^9}, {3.83691170755369*^9, 3.836911723135646*^9}, 
   3.836916782182846*^9, {3.8369173444379473`*^9, 3.836917364496358*^9}, {
   3.836917449889654*^9, 3.836917475981286*^9}, {3.8369183517345324`*^9, 
   3.836918406414919*^9}, {3.837107692096567*^9, 3.837107693627658*^9}, {
   3.837115072644342*^9, 3.837115084746319*^9}, {3.841441086035733*^9, 
   3.841441106951355*^9}, {3.842184406440856*^9, 3.842184412972148*^9}, {
   3.8431426260245256`*^9, 3.843142626525084*^9}, {3.843142667219924*^9, 
   3.843142667609748*^9}, {3.843142754481592*^9, 3.8431427683750477`*^9}, 
   3.843142971054339*^9, 3.8431430016942453`*^9, {3.843145957205802*^9, 
   3.8431459574026003`*^9}, {3.843145989259967*^9, 3.84314599933941*^9}, {
   3.8431462181377773`*^9, 3.843146245454053*^9}, {3.843146338320209*^9, 
   3.843146341462634*^9}, {3.843146387398436*^9, 3.843146399278995*^9}, 
   3.843146503008917*^9, {3.843146876297696*^9, 3.843146962197328*^9}, {
   3.843146997278645*^9, 3.843147003592553*^9}, {3.84314707645168*^9, 
   3.843147133700138*^9}, {3.843147193224696*^9, 3.84314723201825*^9}, {
   3.843147265412475*^9, 3.843147430673661*^9}, {3.8431482767099943`*^9, 
   3.843148277393372*^9}, {3.843305501160633*^9, 3.843305505999219*^9}, {
   3.8433071545117292`*^9, 3.843307213807313*^9}, {3.843307246872377*^9, 
   3.8433072502382803`*^9}, {3.8433072953436604`*^9, 3.843307328438794*^9}, {
   3.843307398106471*^9, 3.843307437582745*^9}, {3.843307480023155*^9, 
   3.843307525437388*^9}, {3.843307585032434*^9, 3.8433076481856003`*^9}, 
   3.843307880435197*^9, {3.843310013493511*^9, 3.8433100458317966`*^9}, {
   3.843310450169931*^9, 3.843310483136478*^9}, 3.843311260132937*^9, {
   3.843311495450262*^9, 3.843311525224374*^9}, 3.843928093615714*^9, {
   3.844380788841428*^9, 3.8443807895553102`*^9}, {3.8443808730829687`*^9, 
   3.844380897713245*^9}, {3.8445094327962427`*^9, 3.844509439159915*^9}, {
   3.8540251764589787`*^9, 3.854025187257368*^9}},
 CellLabel->
  "In[296]:=",ExpressionUUID->"c6aa1fa3-8d3d-4715-be1f-46393cc0cc9e"],

Cell[TextData[{
 "4. PREY=",
 Cell[BoxData[
  FormBox[
   RowBox[{"0.1", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "7"}]]}], TraditionalForm]],ExpressionUUID->
  "03c0d068-0d14-4e15-a85e-afbb9f642e79"],
 ", Nenv=",
 Cell[BoxData[
  FormBox[
   RowBox[{"0.1", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "7"}]]}], TraditionalForm]],ExpressionUUID->
  "2e8c7dd9-a5f4-4fec-a0c4-1914540b3cad"]
}], "Text",
 CellChangeTimes->{{3.843310516318933*^9, 3.843310535638468*^9}, {
  3.844380909073606*^9, 
  3.844380909364792*^9}},ExpressionUUID->"2607bd97-db4c-42d3-a60b-\
73fe344fcc2d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh", ",", 
    "LfunH"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.831830789369714*^9, 3.8318307905412607`*^9}, {
   3.835995882215592*^9, 3.83599588299831*^9}, {3.8363089619914494`*^9, 
   3.836308970966587*^9}, {3.836309185335792*^9, 3.8363091870313787`*^9}, 
   3.8363138138722897`*^9, 3.843143007434424*^9, {3.843146366303069*^9, 
   3.843146366755385*^9}},
 CellLabel->
  "In[303]:=",ExpressionUUID->"a2e1268e-7e25-4e2f-a6bc-26df3319b3ad"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "8"}]}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "8"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"jN", "=", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"jNi0", " ", "=", " ", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "5000"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NXlowestXlowestN2", "=", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"jX", "=", 
          FractionBox[
           RowBox[{"jXm", " ", "X"}], 
           RowBox[{"X", "+", "KX"}]]}], ",", " ", 
         RowBox[{"jN", "=", 
          FractionBox[
           RowBox[{"jNm", " ", "\[CapitalNu]"}], 
           RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", 
         RowBox[{"jHT", "=", "j0HT"}], ",", 
         RowBox[{"rNS", "=", 
          RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
         RowBox[{"VH0", "=", 
          RowBox[{"kv", "*", "H0"}]}], ",", " ", 
         RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
         RowBox[{"jNi0", " ", "=", " ", 
          FractionBox[
           RowBox[{"jNm", " ", "\[CapitalNu]"}], 
           RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", "states", ",", " ", 
         "rNH", ",", " ", "S", ",", "H", ",", "VH", ",", "P", ",", "Ni", ",", 
         "jNi", ",", "\[Rho]C", ",", " ", "jCP", ",", " ", "jHG", ",", 
         "\[Rho]N", ",", "jeC", ",", "jCO2", ",", "A", ",", "jL", ",", "rCH", 
         ",", "rCS", ",", "jeL", ",", "jNPQ", ",", "cROS1", ",", "jSG", ",", 
         "jST", ",", "jNw", ",", "F", ",", "fh", ",", "tsolve", ",", " ", 
         "addtimetostatevars", ",", "eqs", ",", "inis", ",", "sol", ",", "t", 
         ",", "steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
        RowBox[{"(*", 
         RowBox[{
         "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
          "intermediate", " ", "output", " ", "values", " ", "in", " ", 
          "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
          RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
         FractionBox[
          RowBox[{"A", " ", "B", " ", 
           RowBox[{"(", 
            RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
          RowBox[{
           RowBox[{
            SuperscriptBox["A", "2"], " ", "B"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox["B", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
           RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
           RowBox[{
            SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
        RowBox[{"(*", 
         RowBox[{"same", " ", "as", " ", 
          FractionBox["1", 
           RowBox[{
            FractionBox["1", "\[Rho]"], "+", 
            FractionBox["1", "A"], "+", 
            FractionBox["1", "B"], "-", 
            FractionBox["1", 
             RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"fh", "[", 
          RowBox[{
           RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
         RowBox[{"Piecewise", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", 
              RowBox[{"y", "<", "0"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kv", " ", "*", "y"}], ",", 
              RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", "Calculations", " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"jHG", "=", 
         RowBox[{
          RowBox[{"F", "[", "jHGm", "]"}], "[", 
          RowBox[{
           RowBox[{"yC", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]C", " ", 
               RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
              RowBox[{"\[Alpha]", "*", "jN"}], "+", 
              RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
            SuperscriptBox["nNH", 
             RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"jSG", "=", 
         RowBox[{
          RowBox[{"F", "[", "jSGm", "]"}], "[", 
          RowBox[{
           RowBox[{"jCP", " ", "yC"}], ",", 
           FractionBox[
            RowBox[{"rNS", "+", 
             FractionBox[
              RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Rho]N", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
            RowBox[{"\[Alpha]", "*", "jN"}], "+", 
            RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
            RowBox[{"nNH", " ", "jHG"}]}], " ", 
           RowBox[{"(*", 
            SuperscriptBox["yN", 
             RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"jeC", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"jX", "-", 
            FractionBox["jHG", "yC"], "+", 
            FractionBox[
             RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], ";", 
        " ", "\[IndentingNewLine]", 
        RowBox[{"jCO2", "=", 
         RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jL", "=", 
         RowBox[{"A", " ", "astar", " ", "L"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rCH", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"jHT", "+", 
            FractionBox[
             RowBox[{"jHG", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
          "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rCS", "=", 
         RowBox[{"\[Sigma]CS", 
          RowBox[{"(", 
           RowBox[{"j0ST", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
             SuperscriptBox["yC", 
              RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"jeL", "=", 
         RowBox[{"jL", "-", 
          FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jNPQ", "=", 
         FractionBox["1", 
          RowBox[{
           FractionBox["1", "jeL"], "+", 
           FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
        RowBox[{"cROS1", "=", 
         FractionBox[
          RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jST", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rNH", "=", 
         RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"A", "=", 
         RowBox[{"1.256307", "+", 
          RowBox[{"1.385969", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "6.479055"}], " ", 
             RowBox[{"S", "/", "H"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jNw", "=", " ", 
         RowBox[{
          RowBox[{"\[Rho]N", "*", 
           RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
          RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"tsolve", "=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Rho]C", ",", 
             RowBox[{"jCP", "-", 
              RowBox[{"jSG", " ", 
               SuperscriptBox["yC", 
                RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jCP", ",", 
             FractionBox[
              RowBox[{
               RowBox[{"F", "[", "jCPm", "]"}], "[", 
               RowBox[{
                RowBox[{"jL", " ", "yCL"}], ",", 
                RowBox[{"rCS", "+", 
                 FractionBox[
                  RowBox[{"H", " ", 
                   RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
              RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jNi", ",", " ", 
             FractionBox[
              RowBox[{"jNm", " ", "*", "Ni"}], 
              RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
          "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"states", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"tsolve", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
            "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"addtimetostatevars", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "\[Rule]", 
              RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", "states"}], 
          ")"}]}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"eqs", "=", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
               "\[Equal]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Lambda]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                 "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
            "tsolve"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"S", 
                 RowBox[{"(", 
                  RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"H", 
                 RowBox[{"(", 
                  RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
              RowBox[{"fh", "[", 
               RowBox[{"t", ",", " ", 
                RowBox[{
                 RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"d", "*", 
                  RowBox[{"(", " ", 
                   RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                 " ", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                   ")"}], "/", 
                  RowBox[{"(", " ", 
                   RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"P", "*", 
                 RowBox[{"(", 
                  RowBox[{"rp", "*", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                  ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
            "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"inis", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], "\[Equal]", 
               
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
            "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{
          RowBox[{"NDSolve", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Join", "[", 
              RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
            RowBox[{
             RowBox[{"#", "&"}], "/@", "states"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
            RowBox[{"Method", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<EquationSimplification\>\"", "\[Rule]", 
               "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"steady", " ", "state", " ", "Ni"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"steadyNi", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"Ni", "[", "tmax", "]"}], "/.", "sol"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"steady", " ", "state", " ", "host", " ", "growth"}], "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{"steadyHGrowth", "=", 
         RowBox[{"Chop", "[", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
             RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], "]"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"steady", " ", "state", " ", 
          RowBox[{"S", "/", "H"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"steadySH", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "tmax", "]"}], "/", 
            RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
         "}"}]}]}], 
      RowBox[{"(*", 
       RowBox[{
       "the", " ", "steady", " ", "state", " ", "values", " ", "as", " ", 
        "output"}], "*)"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Save", "[", 
    RowBox[{"\"\<lowestXlowestN2\>\"", ",", "NXlowestXlowestN2"}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836576641311953*^9, 3.836576745811816*^9}, {3.8365767807913227`*^9, 
   3.836576796666417*^9}, {3.83690984159394*^9, 3.8369098642372837`*^9}, {
   3.8369099504464817`*^9, 3.836909992597097*^9}, {3.836910066716194*^9, 
   3.836910181553328*^9}, {3.8369102578063707`*^9, 3.836910390882205*^9}, {
   3.8369104221261673`*^9, 3.8369104445293837`*^9}, {3.836910588258913*^9, 
   3.836910603839734*^9}, {3.83691170755369*^9, 3.836911723135646*^9}, 
   3.836916782182846*^9, {3.8369173444379473`*^9, 3.836917364496358*^9}, {
   3.836917449889654*^9, 3.836917475981286*^9}, {3.8369183517345324`*^9, 
   3.836918406414919*^9}, {3.837107692096567*^9, 3.837107693627658*^9}, {
   3.837115072644342*^9, 3.837115084746319*^9}, {3.841441086035733*^9, 
   3.841441106951355*^9}, {3.842184406440856*^9, 3.842184412972148*^9}, {
   3.8431426260245256`*^9, 3.843142626525084*^9}, {3.843142667219924*^9, 
   3.843142667609748*^9}, {3.843142754481592*^9, 3.8431427683750477`*^9}, 
   3.843142971054339*^9, 3.8431430016942453`*^9, {3.843145957205802*^9, 
   3.8431459574026003`*^9}, {3.843145989259967*^9, 3.84314599933941*^9}, {
   3.8431462181377773`*^9, 3.843146245454053*^9}, {3.843146338320209*^9, 
   3.843146341462634*^9}, {3.843146387398436*^9, 3.843146399278995*^9}, 
   3.843146503008917*^9, {3.843146876297696*^9, 3.843146962197328*^9}, {
   3.843146997278645*^9, 3.843147003592553*^9}, {3.84314707645168*^9, 
   3.843147133700138*^9}, {3.843147193224696*^9, 3.84314723201825*^9}, {
   3.843147265412475*^9, 3.843147430673661*^9}, {3.8431482767099943`*^9, 
   3.843148277393372*^9}, {3.843305501160633*^9, 3.843305505999219*^9}, {
   3.8433071545117292`*^9, 3.843307213807313*^9}, {3.843307246872377*^9, 
   3.8433072502382803`*^9}, {3.8433072953436604`*^9, 3.843307328438794*^9}, {
   3.843307398106471*^9, 3.843307437582745*^9}, {3.843307480023155*^9, 
   3.843307525437388*^9}, {3.843307585032434*^9, 3.8433076481856003`*^9}, 
   3.843307880435197*^9, {3.843310013493511*^9, 3.8433100458317966`*^9}, {
   3.843310540237137*^9, 3.843310542712282*^9}, {3.843310599233745*^9, 
   3.843310619165328*^9}, 3.843311280030892*^9, {3.8433115409350452`*^9, 
   3.843311581098928*^9}, 3.8439280995551367`*^9, {3.844380796384535*^9, 
   3.844380797215324*^9}, {3.844380913098164*^9, 3.844380934395975*^9}, {
   3.8445094521297398`*^9, 3.8445094628850727`*^9}, {3.85402519495483*^9, 
   3.854025209024763*^9}},
 CellLabel->
  "In[304]:=",ExpressionUUID->"1f59c6c2-d2ff-4c1e-abbf-29b40dc242e0"],

Cell[TextData[{
 "5. PREY=",
 Cell[BoxData[
  FormBox[
   RowBox[{"0.1", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "7"}]]}], TraditionalForm]],ExpressionUUID->
  "d96e9dd1-2313-4966-b63e-96bc35935152"],
 ", Nenv=",
 Cell[BoxData[
  FormBox[
   RowBox[{"2.5", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "8"}]]}], TraditionalForm]],ExpressionUUID->
  "2d852c9b-4bff-4f76-b5d1-c160d7e53c2f"]
}], "Text",
 CellChangeTimes->{{3.843310664868745*^9, 3.843310670607024*^9}, {
  3.844380946612857*^9, 
  3.844380976853455*^9}},ExpressionUUID->"a7b80b81-788a-43cd-81fe-\
ed1f90d94cfb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh", ",", 
    "LfunH"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.831830789369714*^9, 3.8318307905412607`*^9}, {
   3.835995882215592*^9, 3.83599588299831*^9}, {3.8363089619914494`*^9, 
   3.836308970966587*^9}, {3.836309185335792*^9, 3.8363091870313787`*^9}, 
   3.8363138138722897`*^9, 3.843143007434424*^9, {3.843146366303069*^9, 
   3.843146366755385*^9}},
 CellLabel->
  "In[311]:=",ExpressionUUID->"33ea58a4-568f-43d4-86ee-e9d2054b66b2"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"2.5", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "8"}]}]}]}], " ", ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", "=", 
     FormBox[
      RowBox[{"1", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "8"}]}]}],
      TraditionalForm]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"jN", "=", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"jNi0", " ", "=", " ", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "50000"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NXlowestXseclowestN2", "=", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"jX", "=", 
          FractionBox[
           RowBox[{"jXm", " ", "X"}], 
           RowBox[{"X", "+", "KX"}]]}], ",", " ", 
         RowBox[{"jN", "=", 
          FractionBox[
           RowBox[{"jNm", " ", "\[CapitalNu]"}], 
           RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", 
         RowBox[{"jHT", "=", "j0HT"}], ",", 
         RowBox[{"rNS", "=", 
          RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
         RowBox[{"VH0", "=", 
          RowBox[{"kv", "*", "H0"}]}], ",", " ", 
         RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
         RowBox[{"jNi0", " ", "=", " ", 
          FractionBox[
           RowBox[{"jNm", " ", "\[CapitalNu]"}], 
           RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", "states", ",", " ", 
         "rNH", ",", " ", "S", ",", "H", ",", "VH", ",", "P", ",", "Ni", ",", 
         "jNi", ",", "\[Rho]C", ",", " ", "jCP", ",", " ", "jHG", ",", 
         "\[Rho]N", ",", "jeC", ",", "jCO2", ",", "A", ",", "jL", ",", "rCH", 
         ",", "rCS", ",", "jeL", ",", "jNPQ", ",", "cROS1", ",", "jSG", ",", 
         "jST", ",", "jNw", ",", "F", ",", "fh", ",", "tsolve", ",", " ", 
         "addtimetostatevars", ",", "eqs", ",", "inis", ",", "sol", ",", "t", 
         ",", "steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
        RowBox[{"(*", 
         RowBox[{
         "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
          "intermediate", " ", "output", " ", "values", " ", "in", " ", 
          "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
          RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
         FractionBox[
          RowBox[{"A", " ", "B", " ", 
           RowBox[{"(", 
            RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
          RowBox[{
           RowBox[{
            SuperscriptBox["A", "2"], " ", "B"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox["B", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
           RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
           RowBox[{
            SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
        RowBox[{"(*", 
         RowBox[{"same", " ", "as", " ", 
          FractionBox["1", 
           RowBox[{
            FractionBox["1", "\[Rho]"], "+", 
            FractionBox["1", "A"], "+", 
            FractionBox["1", "B"], "-", 
            FractionBox["1", 
             RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"fh", "[", 
          RowBox[{
           RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
         RowBox[{"Piecewise", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", 
              RowBox[{"y", "<", "0"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kv", " ", "*", "y"}], ",", 
              RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", "Calculations", " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"jHG", "=", 
         RowBox[{
          RowBox[{"F", "[", "jHGm", "]"}], "[", 
          RowBox[{
           RowBox[{"yC", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]C", " ", 
               RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
              RowBox[{"\[Alpha]", "*", "jN"}], "+", 
              RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
            SuperscriptBox["nNH", 
             RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"jSG", "=", 
         RowBox[{
          RowBox[{"F", "[", "jSGm", "]"}], "[", 
          RowBox[{
           RowBox[{"jCP", " ", "yC"}], ",", 
           FractionBox[
            RowBox[{"rNS", "+", 
             FractionBox[
              RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Rho]N", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
            RowBox[{"\[Alpha]", "*", "jN"}], "+", 
            RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
            RowBox[{"nNH", " ", "jHG"}]}], " ", 
           RowBox[{"(*", 
            SuperscriptBox["yN", 
             RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"jeC", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"jX", "-", 
            FractionBox["jHG", "yC"], "+", 
            FractionBox[
             RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], ";", 
        " ", "\[IndentingNewLine]", 
        RowBox[{"jCO2", "=", 
         RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jL", "=", 
         RowBox[{"A", " ", "astar", " ", "L"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rCH", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"jHT", "+", 
            FractionBox[
             RowBox[{"jHG", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
          "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rCS", "=", 
         RowBox[{"\[Sigma]CS", 
          RowBox[{"(", 
           RowBox[{"j0ST", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
             SuperscriptBox["yC", 
              RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"jeL", "=", 
         RowBox[{"jL", "-", 
          FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jNPQ", "=", 
         FractionBox["1", 
          RowBox[{
           FractionBox["1", "jeL"], "+", 
           FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
        RowBox[{"cROS1", "=", 
         FractionBox[
          RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jST", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rNH", "=", 
         RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"A", "=", 
         RowBox[{"1.256307", "+", 
          RowBox[{"1.385969", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "6.479055"}], " ", 
             RowBox[{"S", "/", "H"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jNw", "=", " ", 
         RowBox[{
          RowBox[{"\[Rho]N", "*", 
           RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
          RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"tsolve", "=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Rho]C", ",", 
             RowBox[{"jCP", "-", 
              RowBox[{"jSG", " ", 
               SuperscriptBox["yC", 
                RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jCP", ",", 
             FractionBox[
              RowBox[{
               RowBox[{"F", "[", "jCPm", "]"}], "[", 
               RowBox[{
                RowBox[{"jL", " ", "yCL"}], ",", 
                RowBox[{"rCS", "+", 
                 FractionBox[
                  RowBox[{"H", " ", 
                   RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
              RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jNi", ",", " ", 
             FractionBox[
              RowBox[{"jNm", " ", "*", "Ni"}], 
              RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
          "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"states", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"tsolve", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
            "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"addtimetostatevars", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "\[Rule]", 
              RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", "states"}], 
          ")"}]}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"eqs", "=", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
               "\[Equal]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Lambda]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                 "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
            "tsolve"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"S", 
                 RowBox[{"(", 
                  RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"H", 
                 RowBox[{"(", 
                  RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
              RowBox[{"fh", "[", 
               RowBox[{"t", ",", " ", 
                RowBox[{
                 RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"d", "*", 
                  RowBox[{"(", " ", 
                   RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                 " ", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                   ")"}], "/", 
                  RowBox[{"(", " ", 
                   RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"P", "*", 
                 RowBox[{"(", 
                  RowBox[{"rp", "*", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                  ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
            "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"inis", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], "\[Equal]", 
               
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
            "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{
          RowBox[{"NDSolve", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Join", "[", 
              RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
            RowBox[{
             RowBox[{"#", "&"}], "/@", "states"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
            RowBox[{"Method", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<EquationSimplification\>\"", "\[Rule]", 
               "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"steady", " ", "state", " ", "Ni"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"steadyNi", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"Ni", "[", "tmax", "]"}], "/.", "sol"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"steady", " ", "state", " ", "host", " ", "growth"}], "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{"steadyHGrowth", "=", 
         RowBox[{"Chop", "[", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
             RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], "]"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"steady", " ", "state", " ", 
          RowBox[{"S", "/", "H"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"steadySH", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "tmax", "]"}], "/", 
            RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
         "}"}]}]}], 
      RowBox[{"(*", 
       RowBox[{
       "the", " ", "steady", " ", "state", " ", "values", " ", "as", " ", 
        "output"}], "*)"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Save", "[", 
    RowBox[{"\"\<lowestXseclowestN2\>\"", ",", "NXlowestXseclowestN2"}], 
    "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836576641311953*^9, 3.836576745811816*^9}, {3.8365767807913227`*^9, 
   3.836576796666417*^9}, {3.83690984159394*^9, 3.8369098642372837`*^9}, {
   3.8369099504464817`*^9, 3.836909992597097*^9}, {3.836910066716194*^9, 
   3.836910181553328*^9}, {3.8369102578063707`*^9, 3.836910390882205*^9}, {
   3.8369104221261673`*^9, 3.8369104445293837`*^9}, {3.836910588258913*^9, 
   3.836910603839734*^9}, {3.83691170755369*^9, 3.836911723135646*^9}, 
   3.836916782182846*^9, {3.8369173444379473`*^9, 3.836917364496358*^9}, {
   3.836917449889654*^9, 3.836917475981286*^9}, {3.8369183517345324`*^9, 
   3.836918406414919*^9}, {3.837107692096567*^9, 3.837107693627658*^9}, {
   3.837115072644342*^9, 3.837115084746319*^9}, {3.841441086035733*^9, 
   3.841441106951355*^9}, {3.842184406440856*^9, 3.842184412972148*^9}, {
   3.8431426260245256`*^9, 3.843142626525084*^9}, {3.843142667219924*^9, 
   3.843142667609748*^9}, {3.843142754481592*^9, 3.8431427683750477`*^9}, 
   3.843142971054339*^9, 3.8431430016942453`*^9, {3.843145957205802*^9, 
   3.8431459574026003`*^9}, {3.843145989259967*^9, 3.84314599933941*^9}, {
   3.8431462181377773`*^9, 3.843146245454053*^9}, {3.843146338320209*^9, 
   3.843146341462634*^9}, {3.843146387398436*^9, 3.843146399278995*^9}, 
   3.843146503008917*^9, {3.843146876297696*^9, 3.843146962197328*^9}, {
   3.843146997278645*^9, 3.843147003592553*^9}, {3.84314707645168*^9, 
   3.843147133700138*^9}, {3.843147193224696*^9, 3.84314723201825*^9}, {
   3.843147265412475*^9, 3.843147430673661*^9}, {3.8431482767099943`*^9, 
   3.843148277393372*^9}, {3.843305501160633*^9, 3.843305505999219*^9}, {
   3.8433071545117292`*^9, 3.843307213807313*^9}, {3.843307246872377*^9, 
   3.8433072502382803`*^9}, {3.8433072953436604`*^9, 3.843307328438794*^9}, {
   3.843307398106471*^9, 3.843307437582745*^9}, {3.843307480023155*^9, 
   3.843307525437388*^9}, {3.843307585032434*^9, 3.8433076481856003`*^9}, 
   3.843307880435197*^9, {3.843310013493511*^9, 3.8433100458317966`*^9}, {
   3.8433106808706837`*^9, 3.843310695180346*^9}, {3.843310737452052*^9, 
   3.843310772701826*^9}, {3.843310816937285*^9, 3.843310817442298*^9}, 
   3.843311306936667*^9, {3.843311601588147*^9, 3.8433116233140373`*^9}, 
   3.8439281070019207`*^9, {3.8443809620694523`*^9, 3.84438100424574*^9}, {
   3.844509474172038*^9, 3.8445094829935226`*^9}, 3.8461499468078423`*^9, {
   3.8540252196878633`*^9, 3.854025236284011*^9}},
 CellLabel->
  "In[312]:=",ExpressionUUID->"13c158ec-8810-47d8-82ca-d72d66bb7ad2"],

Cell[TextData[{
 "6. PREY=",
 Cell[BoxData[
  FormBox[
   RowBox[{"2.5", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "8"}]]}], TraditionalForm]],ExpressionUUID->
  "2d661c59-9b16-4198-b7b0-b3088ec5d7dd"],
 ", Nenv=",
 Cell[BoxData[
  FormBox[
   RowBox[{"0.1", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "7"}]]}], TraditionalForm]],ExpressionUUID->
  "22b6cea4-f35d-464d-b431-9b8dea5ace12"]
}], "Text",
 CellChangeTimes->{{3.843310854949744*^9, 3.843310876305982*^9}, {
  3.8443810143859777`*^9, 
  3.84438102140248*^9}},ExpressionUUID->"f681edd0-290b-480a-9c7c-\
b11beaf6c5b1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh", ",", 
    "LfunH"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.831830789369714*^9, 3.8318307905412607`*^9}, {
   3.835995882215592*^9, 3.83599588299831*^9}, {3.8363089619914494`*^9, 
   3.836308970966587*^9}, {3.836309185335792*^9, 3.8363091870313787`*^9}, 
   3.8363138138722897`*^9, 3.843143007434424*^9, {3.843146366303069*^9, 
   3.843146366755385*^9}},
 CellLabel->
  "In[319]:=",ExpressionUUID->"dfddad52-2196-4d28-9b92-556ca0e6b48e"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "8"}]}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", "=", 
     RowBox[{"2.5", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "8"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"jN", "=", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"jNi0", " ", "=", " ", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "250000"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NXseclowestXlowestN2", "=", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"jX", "=", 
          FractionBox[
           RowBox[{"jXm", " ", "X"}], 
           RowBox[{"X", "+", "KX"}]]}], ",", " ", 
         RowBox[{"jN", "=", 
          FractionBox[
           RowBox[{"jNm", " ", "\[CapitalNu]"}], 
           RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", 
         RowBox[{"jHT", "=", "j0HT"}], ",", 
         RowBox[{"rNS", "=", 
          RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
         RowBox[{"VH0", "=", 
          RowBox[{"kv", "*", "H0"}]}], ",", " ", 
         RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
         RowBox[{"jNi0", " ", "=", " ", 
          FractionBox[
           RowBox[{"jNm", " ", "\[CapitalNu]"}], 
           RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", "states", ",", " ", 
         "rNH", ",", " ", "S", ",", "H", ",", "VH", ",", "P", ",", "Ni", ",", 
         "jNi", ",", "\[Rho]C", ",", " ", "jCP", ",", " ", "jHG", ",", 
         "\[Rho]N", ",", "jeC", ",", "jCO2", ",", "A", ",", "jL", ",", "rCH", 
         ",", "rCS", ",", "jeL", ",", "jNPQ", ",", "cROS1", ",", "jSG", ",", 
         "jST", ",", "jNw", ",", "F", ",", "fh", ",", "tsolve", ",", " ", 
         "addtimetostatevars", ",", "eqs", ",", "inis", ",", "sol", ",", "t", 
         ",", "steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
        RowBox[{"(*", 
         RowBox[{
         "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
          "intermediate", " ", "output", " ", "values", " ", "in", " ", 
          "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
          RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
         FractionBox[
          RowBox[{"A", " ", "B", " ", 
           RowBox[{"(", 
            RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
          RowBox[{
           RowBox[{
            SuperscriptBox["A", "2"], " ", "B"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox["B", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
           RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
           RowBox[{
            SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
        RowBox[{"(*", 
         RowBox[{"same", " ", "as", " ", 
          FractionBox["1", 
           RowBox[{
            FractionBox["1", "\[Rho]"], "+", 
            FractionBox["1", "A"], "+", 
            FractionBox["1", "B"], "-", 
            FractionBox["1", 
             RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"fh", "[", 
          RowBox[{
           RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
         RowBox[{"Piecewise", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", 
              RowBox[{"y", "<", "0"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"kv", " ", "*", "y"}], ",", 
              RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", "Calculations", " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"jHG", "=", 
         RowBox[{
          RowBox[{"F", "[", "jHGm", "]"}], "[", 
          RowBox[{
           RowBox[{"yC", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Rho]C", " ", 
               RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
              RowBox[{"\[Alpha]", "*", "jN"}], "+", 
              RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
            SuperscriptBox["nNH", 
             RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"jSG", "=", 
         RowBox[{
          RowBox[{"F", "[", "jSGm", "]"}], "[", 
          RowBox[{
           RowBox[{"jCP", " ", "yC"}], ",", 
           FractionBox[
            RowBox[{"rNS", "+", 
             FractionBox[
              RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Rho]N", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
            RowBox[{"\[Alpha]", "*", "jN"}], "+", 
            RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
            RowBox[{"nNH", " ", "jHG"}]}], " ", 
           RowBox[{"(*", 
            SuperscriptBox["yN", 
             RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"jeC", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"jX", "-", 
            FractionBox["jHG", "yC"], "+", 
            FractionBox[
             RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], ";", 
        " ", "\[IndentingNewLine]", 
        RowBox[{"jCO2", "=", 
         RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jL", "=", 
         RowBox[{"A", " ", "astar", " ", "L"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rCH", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"jHT", "+", 
            FractionBox[
             RowBox[{"jHG", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
          "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rCS", "=", 
         RowBox[{"\[Sigma]CS", 
          RowBox[{"(", 
           RowBox[{"j0ST", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
             SuperscriptBox["yC", 
              RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"jeL", "=", 
         RowBox[{"jL", "-", 
          FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jNPQ", "=", 
         FractionBox["1", 
          RowBox[{
           FractionBox["1", "jeL"], "+", 
           FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
        RowBox[{"cROS1", "=", 
         FractionBox[
          RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jST", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rNH", "=", 
         RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"A", "=", 
         RowBox[{"1.256307", "+", 
          RowBox[{"1.385969", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "6.479055"}], " ", 
             RowBox[{"S", "/", "H"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"jNw", "=", " ", 
         RowBox[{
          RowBox[{"\[Rho]N", "*", 
           RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
          RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"tsolve", "=", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Rho]C", ",", 
             RowBox[{"jCP", "-", 
              RowBox[{"jSG", " ", 
               SuperscriptBox["yC", 
                RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jCP", ",", 
             FractionBox[
              RowBox[{
               RowBox[{"F", "[", "jCPm", "]"}], "[", 
               RowBox[{
                RowBox[{"jL", " ", "yCL"}], ",", 
                RowBox[{"rCS", "+", 
                 FractionBox[
                  RowBox[{"H", " ", 
                   RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
              RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jNi", ",", " ", 
             FractionBox[
              RowBox[{"jNm", " ", "*", "Ni"}], 
              RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
          "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"states", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"tsolve", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
            "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"addtimetostatevars", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "\[Rule]", 
              RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", "states"}], 
          ")"}]}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"eqs", "=", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
               "\[Equal]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Lambda]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                 "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
            "tsolve"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"S", 
                 RowBox[{"(", 
                  RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"H", 
                 RowBox[{"(", 
                  RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
              RowBox[{"fh", "[", 
               RowBox[{"t", ",", " ", 
                RowBox[{
                 RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"d", "*", 
                  RowBox[{"(", " ", 
                   RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                 " ", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                   ")"}], "/", 
                  RowBox[{"(", " ", 
                   RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"P", "*", 
                 RowBox[{"(", 
                  RowBox[{"rp", "*", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                  ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
            "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"inis", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], "\[Equal]", 
               
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
            "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{
          RowBox[{"NDSolve", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Join", "[", 
              RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
            RowBox[{
             RowBox[{"#", "&"}], "/@", "states"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
            RowBox[{"Method", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<EquationSimplification\>\"", "\[Rule]", 
               "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"steady", " ", "state", " ", "Ni"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"steadyNi", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"Ni", "[", "tmax", "]"}], "/.", "sol"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"steady", " ", "state", " ", "host", " ", "growth"}], "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{"steadyHGrowth", "=", 
         RowBox[{"Chop", "[", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
             RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], "]"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"steady", " ", "state", " ", 
          RowBox[{"S", "/", "H"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"steadySH", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "tmax", "]"}], "/", 
            RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
         "}"}]}]}], 
      RowBox[{"(*", 
       RowBox[{
       "the", " ", "steady", " ", "state", " ", "values", " ", "as", " ", 
        "output"}], "*)"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Save", "[", 
    RowBox[{"\"\<seclowestXlowestN2\>\"", ",", "NXseclowestXlowestN2"}], 
    "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836576641311953*^9, 3.836576745811816*^9}, {3.8365767807913227`*^9, 
   3.836576796666417*^9}, {3.83690984159394*^9, 3.8369098642372837`*^9}, {
   3.8369099504464817`*^9, 3.836909992597097*^9}, {3.836910066716194*^9, 
   3.836910181553328*^9}, {3.8369102578063707`*^9, 3.836910390882205*^9}, {
   3.8369104221261673`*^9, 3.8369104445293837`*^9}, {3.836910588258913*^9, 
   3.836910603839734*^9}, {3.83691170755369*^9, 3.836911723135646*^9}, 
   3.836916782182846*^9, {3.8369173444379473`*^9, 3.836917364496358*^9}, {
   3.836917449889654*^9, 3.836917475981286*^9}, {3.8369183517345324`*^9, 
   3.836918406414919*^9}, {3.837107692096567*^9, 3.837107693627658*^9}, {
   3.837115072644342*^9, 3.837115084746319*^9}, {3.841441086035733*^9, 
   3.841441106951355*^9}, {3.842184406440856*^9, 3.842184412972148*^9}, {
   3.8431426260245256`*^9, 3.843142626525084*^9}, {3.843142667219924*^9, 
   3.843142667609748*^9}, {3.843142754481592*^9, 3.8431427683750477`*^9}, 
   3.843142971054339*^9, 3.8431430016942453`*^9, {3.843145957205802*^9, 
   3.8431459574026003`*^9}, {3.843145989259967*^9, 3.84314599933941*^9}, {
   3.8431462181377773`*^9, 3.843146245454053*^9}, {3.843146338320209*^9, 
   3.843146341462634*^9}, {3.843146387398436*^9, 3.843146399278995*^9}, 
   3.843146503008917*^9, {3.843146876297696*^9, 3.843146962197328*^9}, {
   3.843146997278645*^9, 3.843147003592553*^9}, {3.84314707645168*^9, 
   3.843147133700138*^9}, {3.843147193224696*^9, 3.84314723201825*^9}, {
   3.843147265412475*^9, 3.843147430673661*^9}, {3.8431482767099943`*^9, 
   3.843148277393372*^9}, {3.843305501160633*^9, 3.843305505999219*^9}, {
   3.8433071545117292`*^9, 3.843307213807313*^9}, {3.843307246872377*^9, 
   3.8433072502382803`*^9}, {3.8433072953436604`*^9, 3.843307328438794*^9}, {
   3.843307398106471*^9, 3.843307437582745*^9}, {3.843307480023155*^9, 
   3.843307525437388*^9}, {3.843307585032434*^9, 3.8433076481856003`*^9}, 
   3.843307880435197*^9, {3.843310013493511*^9, 3.8433100458317966`*^9}, {
   3.84331088141785*^9, 3.843310915103774*^9}, {3.8433109734261417`*^9, 
   3.843311082342039*^9}, 3.843311324773099*^9, {3.843311645855151*^9, 
   3.843311647163114*^9}, {3.843311715295032*^9, 3.843311740940639*^9}, 
   3.843928113322094*^9, {3.844381026819254*^9, 3.844381050600944*^9}, {
   3.844509492946658*^9, 3.844509512522719*^9}, {3.854025265525133*^9, 
   3.854025280322838*^9}},
 CellLabel->
  "In[320]:=",ExpressionUUID->"592fda28-5545-4909-a3d4-44744ae5163d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Get results for Nenv vs prey simulations in correct form to plot\
\>", "Subsubsection",
 CellChangeTimes->{{3.837016030830839*^9, 3.8370160385087233`*^9}, {
  3.842903153638976*^9, 3.842903156829101*^9}, {3.84438118391267*^9, 
  3.844381190221979*^9}},ExpressionUUID->"f940348f-5dfd-4df4-b88f-\
06ed4b014ac8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<NXRuns\>\"", " ", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<noXlowestN2\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<noXsecLowN2\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<noXthirdLowN2\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<lowestXlowestN2\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<lowestXseclowestN2\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<seclowestXlowestN2\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.843311751472889*^9, 3.843311840113769*^9}, {
  3.843311881488763*^9, 3.8433119987544537`*^9}, {3.844509534867927*^9, 
  3.844509540650695*^9}},
 CellLabel->
  "In[221]:=",ExpressionUUID->"6cd5acde-774c-4ba9-bef2-9116d5f6930a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"NXRuns", " ", "is", " ", "nested", " ", "list"}], ",", " ", 
    RowBox[{
    "innermost", " ", "is", " ", "all", " ", "3", " ", "outputs", " ", "for", 
     " ", 
     RowBox[{"{", 
      RowBox[{"X1", ",", " ", "X2", ",", " ", "..."}], "}"}]}], ",", " ", 
    RowBox[{
    "second", " ", "level", " ", "is", " ", "this", " ", "repeated", " ", 
     "for", " ", "each", " ", "Nenv", " ", 
     RowBox[{"{", 
      RowBox[{"N1", ",", " ", "N2", ",", " ", "..."}], "}"}]}], ",", " ", 
    RowBox[{"outer", " ", "levels", " ", "is", " ", "fish", " ", 
     RowBox[{"{", 
      RowBox[{"P1", ",", " ", "P2"}], "}"}]}], ","}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "so", " ", "first", " ", "seprate", " ", "the", " ", "fish", " ", "vs", 
    " ", "no", " ", "fish", " ", "cases"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"NXnoP", "=", 
     RowBox[{"NXRuns", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NXwithP", "=", 
     RowBox[{"NXRuns", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"separate", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"NXnoP", ",", " ", "1"}], "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "this", " ", "separates", " ", "all", " ", "3", " ", "response", " ", 
      "variables"}], ",", " ", 
     RowBox[{
     "but", " ", "need", " ", "to", " ", "know", " ", "that", " ", "in", " ", 
      "the", " ", "resulting", " ", "array"}], ",", " ", 
     RowBox[{
     "the", " ", "columns", " ", "are", " ", "the", " ", "X", " ", "values", 
      " ", 
      RowBox[{"(", 
       RowBox[{"outermost", " ", "parameter", " ", "tested"}], ")"}], " ", 
      "and", " ", "the", " ", "rows", " ", "are", " ", "the", " ", "N", " ", 
      "levels", " ", 
      RowBox[{"(", 
       RowBox[{"outermost", " ", "parameter", " ", "tested"}], ")"}]}], ",", 
     " ", 
     RowBox[{
     "so", " ", "if", " ", "n", " ", "X", " ", "values", " ", "are", " ", 
      "tested"}], ",", " ", 
     RowBox[{
     "the", " ", "first", " ", "n", " ", "values", " ", "are", " ", "the", 
      " ", "outputs", " ", "for", " ", "each", " ", "X", " ", "value", " ", 
      "at", " ", "the", " ", "first", " ", "N", " ", "value", " ", "tested"}],
      ",", " ", 
     RowBox[{
     "all", " ", "the", " ", "way", " ", "to", " ", "the", " ", "mth", " ", 
      "set", " ", "of", " ", "n", " ", "outputs", " ", "for", " ", "the", " ",
       "mth", " ", "N", " ", "value", " ", "tested"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"noPNi", "=", 
     RowBox[{"separate", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "could", " ", "combine", " ", "the", " ", "above", " ", "two", " ", 
     "lines", " ", "of", " ", "code"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"noPNi", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"NXnoP", ",", " ", "1"}], "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "want", " ", "the", " ", "differences", " ", "between", " ", "the", " ", 
     "P", " ", "and", " ", "no", " ", "P", " ", "case"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "Ni", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixNXNinoP1", "=", 
     RowBox[{"ArrayReshape", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"NXnoP", ",", " ", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"9", ",", " ", "10"}], "}"}]}], "]"}]}], " ", ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", " ", "m"}], "}"}], " ", "dimensions", " ", "are", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", " ", "outermost", " ", "par", " ", "values"}], ",", " ", 
       RowBox[{"#", " ", "innermost", " ", "par", " ", "values"}]}], "}"}]}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixNXNinoP", "=", 
     RowBox[{"ReplacePart", "[", 
      RowBox[{"MatrixNXNinoP1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", " ", 
          RowBox[{"NXnoXlowestN2", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", " ", 
          RowBox[{"NXnoXsecLowN2", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", " ", 
          RowBox[{"NXnoXthirdLowN2", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", " ", 
          RowBox[{"NXlowestXlowestN2", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", " ", 
          RowBox[{"NXlowestXseclowestN2", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3", ",", "1"}], "}"}], "\[Rule]", " ", 
          RowBox[{"NXseclowestXlowestN2", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"elements", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}]}], "}"}], " ", "of", " ", "the", " ", 
      "array", " ", "for", " ", "the", " ", "no", " ", "P", " ", "case", " ", 
      "had", " ", "not", " ", "reached", " ", "the", " ", "steady", " ", 
      "state"}], ",", " ", 
     RowBox[{
     "so", " ", "need", " ", "to", " ", "replace", " ", "these", " ", "with", 
      " ", "the", " ", "results", " ", "of", " ", "the", " ", "separately", 
      " ", "run", " ", "simulations"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixNXNiP", "=", 
     RowBox[{"ArrayReshape", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"NXwithP", ",", " ", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"9", ",", " ", "10"}], "}"}]}], "]"}]}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NXNidiff", "=", 
     RowBox[{"MatrixNXNiP", "-", "MatrixNXNinoP"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"repeat", " ", "for", " ", "host", " ", "growth", " ", "rates"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixNXgrowthnoP1", "=", 
     RowBox[{"ArrayReshape", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"NXnoP", ",", " ", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"9", ",", " ", "10"}], "}"}]}], "]"}]}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixNXgrowthnoP", "=", 
     RowBox[{"MatrixNXNinoP", "=", 
      RowBox[{"ReplacePart", "[", 
       RowBox[{"MatrixNXgrowthnoP1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", " ", 
           RowBox[{"NXnoXlowestN2", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", " ", 
           RowBox[{"NXnoXsecLowN2", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", " ", 
           RowBox[{"NXnoXthirdLowN2", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", " ", 
           RowBox[{"NXlowestXlowestN2", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", " ", 
           RowBox[{"NXlowestXseclowestN2", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "1"}], "}"}], "\[Rule]", " ", 
           RowBox[{"NXseclowestXlowestN2", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixNXgrowthP", "=", 
     RowBox[{"ArrayReshape", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"NXwithP", ",", " ", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"9", ",", " ", "10"}], "}"}]}], "]"}]}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NXgrowthdiff", "=", 
     RowBox[{"MatrixNXgrowthP", "-", "MatrixNXgrowthnoP"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"S", "/", "H"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixNXSHnoP1", "=", 
     RowBox[{"ArrayReshape", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"NXnoP", ",", " ", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"9", ",", " ", "10"}], "}"}]}], "]"}]}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixNXSHnoP", "=", 
     RowBox[{"MatrixNXNinoP", "=", 
      RowBox[{"ReplacePart", "[", 
       RowBox[{"MatrixNXSHnoP1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", " ", 
           RowBox[{"NXnoXlowestN2", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", " ", 
           RowBox[{"NXnoXsecLowN2", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", " ", 
           RowBox[{"NXnoXthirdLowN2", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", " ", 
           RowBox[{"NXlowestXlowestN2", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", " ", 
           RowBox[{"NXlowestXseclowestN2", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "1"}], "}"}], "\[Rule]", " ", 
           RowBox[{"NXseclowestXlowestN2", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixNXSHP", "=", 
     RowBox[{"ArrayReshape", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"NXwithP", ",", " ", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"9", ",", " ", "10"}], "}"}]}], "]"}]}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NXSHdiff", "=", 
     RowBox[{"MatrixNXSHP", "-", "MatrixNXSHnoP"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.837016635280414*^9, 3.837016734167446*^9}, {
   3.837016772402966*^9, 3.8370167832303247`*^9}, {3.837016835951674*^9, 
   3.837016859885375*^9}, {3.8370169338826237`*^9, 3.8370171609019737`*^9}, {
   3.837017213695936*^9, 3.83701733184233*^9}, {3.837017366533008*^9, 
   3.83701747572468*^9}, {3.837017586631283*^9, 3.8370176123951902`*^9}, {
   3.837090993209803*^9, 3.837091052422222*^9}, {3.837113227666905*^9, 
   3.837113231620425*^9}, {3.842903164298443*^9, 3.84290316562922*^9}, {
   3.8433120133321877`*^9, 3.843312014739684*^9}, {3.8433122678007317`*^9, 
   3.843312312003777*^9}, {3.843312538491662*^9, 3.8433125851976137`*^9}, {
   3.8433126225513363`*^9, 3.8433127157254333`*^9}, {3.8433127581261473`*^9, 
   3.8433129180007563`*^9}, {3.843317407883326*^9, 3.843317418484507*^9}, 
   3.843317464048957*^9, {3.843317507607705*^9, 3.843317685819962*^9}, {
   3.844381207823134*^9, 3.8443812915997267`*^9}, {3.844509550071086*^9, 
   3.844509626941086*^9}},
 CellLabel->
  "In[327]:=",ExpressionUUID->"6efaf84c-477d-4feb-a663-66f12685825a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Check steady state for flushing rate vs carrying capacity simulations\
\>", "Subsubsection",
 CellChangeTimes->{{3.8370890020143003`*^9, 3.837089003938897*^9}, {
  3.842903381888794*^9, 3.8429033915353127`*^9}, {3.843301570947122*^9, 
  3.8433015810093822`*^9}},ExpressionUUID->"15735ed0-ba64-48f8-8bd5-\
07b7b591c4bf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.831830789369714*^9, 3.8318307905412607`*^9}, {
   3.835995882215592*^9, 3.83599588299831*^9}, {3.8363089619914494`*^9, 
   3.836308970966587*^9}, {3.836309185335792*^9, 3.8363091870313787`*^9}, 
   3.8363138138722897`*^9, 3.842903474940238*^9},
 CellLabel->
  "In[344]:=",ExpressionUUID->"622208c3-8692-43ec-8f98-bd2e6c09a4b5"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"jN", "=", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"jNi0", " ", "=", " ", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "800"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kdRunsTest", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"jX", "=", 
                FractionBox[
                 RowBox[{"jXm", " ", "X"}], 
                 RowBox[{"X", "+", "KX"}]]}], ",", " ", 
               RowBox[{"jN", "=", 
                FractionBox[
                 RowBox[{"jNm", " ", "\[CapitalNu]"}], 
                 RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", 
               RowBox[{"jHT", "=", "j0HT"}], ",", 
               RowBox[{"rNS", "=", 
                RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
               RowBox[{"VH0", "=", 
                RowBox[{"kv", "*", "H0"}]}], ",", " ", 
               RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
               RowBox[{"jNi0", " ", "=", " ", 
                FractionBox[
                 RowBox[{"jNm", " ", "\[CapitalNu]"}], 
                 RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", "states", ",", 
               " ", "rNH", ",", " ", "S", ",", "H", ",", "VH", ",", "P", ",", 
               "Ni", ",", "jNi", ",", "\[Rho]C", ",", " ", "jCP", ",", " ", 
               "jHG", ",", "\[Rho]N", ",", "jeC", ",", "jCO2", ",", "A", ",", 
               "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", ",", 
               "cROS1", ",", "jSG", ",", "jST", ",", "jNw", ",", "F", ",", 
               "fh", ",", "tsolve", ",", " ", "addtimetostatevars", ",", 
               "eqs", ",", "inis", ",", "sol", ",", "t", ",", "steadyNi", ",",
                "steadyHGrowth", ",", "steadySH"}], 
              RowBox[{"(*", 
               RowBox[{
               "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
                "intermediate", " ", "output", " ", "values", " ", "in", " ", 
                "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
                RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
               FractionBox[
                RowBox[{"A", " ", "B", " ", 
                 RowBox[{"(", 
                  RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["A", "2"], " ", "B"}], "+", 
                 RowBox[{"A", " ", 
                  SuperscriptBox["B", "2"]}], "+", 
                 RowBox[{
                  SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
                 RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
                 RowBox[{
                  SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
              RowBox[{"(*", 
               RowBox[{"same", " ", "as", " ", 
                FractionBox["1", 
                 RowBox[{
                  FractionBox["1", "\[Rho]"], "+", 
                  FractionBox["1", "A"], "+", 
                  FractionBox["1", "B"], "-", 
                  FractionBox["1", 
                   RowBox[{"A", "+", "B"}]]}]]}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"fh", "[", 
                RowBox[{
                 RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
               RowBox[{"Piecewise", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", " ", 
                    RowBox[{"y", "<", "0"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"kv", " ", "*", "y"}], ",", 
                    RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
                "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", "Calculations", " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"jHG", "=", 
               RowBox[{
                RowBox[{"F", "[", "jHGm", "]"}], "[", 
                RowBox[{
                 RowBox[{"yC", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Rho]C", " ", 
                    RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                    
                    RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                    RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                  SuperscriptBox["nNH", 
                   RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
              "\[IndentingNewLine]", 
              RowBox[{"jSG", "=", 
               RowBox[{
                RowBox[{"F", "[", "jSGm", "]"}], "[", 
                RowBox[{
                 RowBox[{"jCP", " ", "yC"}], ",", 
                 FractionBox[
                  RowBox[{"rNS", "+", 
                   FractionBox[
                    RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"\[Rho]N", "=", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                  
                  RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                  RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
                  RowBox[{"nNH", " ", "jHG"}]}], " ", 
                 RowBox[{"(*", 
                  SuperscriptBox["yN", 
                   RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"jeC", "=", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{"jX", "-", 
                  FractionBox["jHG", "yC"], "+", 
                  FractionBox[
                   RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}],
               ";", " ", "\[IndentingNewLine]", 
              RowBox[{"jCO2", "=", 
               RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"jL", "=", 
               RowBox[{"A", " ", "astar", " ", "L"}]}], " ", ";", 
              "\[IndentingNewLine]", 
              RowBox[{"rCH", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"jHT", "+", 
                  FractionBox[
                   RowBox[{"jHG", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
                "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"rCS", "=", 
               RowBox[{"\[Sigma]CS", 
                RowBox[{"(", 
                 RowBox[{"j0ST", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
                   SuperscriptBox["yC", 
                    RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"jeL", "=", 
               RowBox[{"jL", "-", 
                FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"jNPQ", "=", 
               FractionBox["1", 
                RowBox[{
                 FractionBox["1", "jeL"], "+", 
                 FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
              RowBox[{"cROS1", "=", 
               FractionBox[
                RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"jST", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"rNH", "=", 
               RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"A", "=", 
               RowBox[{"1.256307", "+", 
                RowBox[{"1.385969", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "6.479055"}], " ", 
                   RowBox[{"S", "/", "H"}]}]]}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"jNw", "=", " ", 
               RowBox[{
                RowBox[{"\[Rho]N", "*", 
                 RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
                RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"tsolve", "=", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[Rho]C", ",", 
                   RowBox[{"jCP", "-", 
                    RowBox[{"jSG", " ", 
                    SuperscriptBox["yC", 
                    RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"jCP", ",", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"F", "[", "jCPm", "]"}], "[", 
                    RowBox[{
                    RowBox[{"jL", " ", "yCL"}], ",", 
                    RowBox[{"rCS", "+", 
                    FractionBox[
                    RowBox[{"H", " ", 
                    RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
                    RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"jNi", ",", " ", 
                   FractionBox[
                    RowBox[{"jNm", " ", "*", "Ni"}], 
                    RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
                "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"states", "=", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"tsolve", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
                  "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"addtimetostatevars", "=", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"#", "\[Rule]", 
                    RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", 
                 "states"}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
              RowBox[{"eqs", "=", 
               RowBox[{"Join", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
                    "\[Equal]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Lambda]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
                  "tsolve"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"S", 
                    RowBox[{"(", 
                    RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"H", 
                    RowBox[{"(", 
                    RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                    RowBox[{"fh", "[", 
                    RowBox[{"t", ",", "  ", 
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"d", "*", 
                    RowBox[{"(", " ", 
                    RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                    " ", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                    ")"}], "/", 
                    RowBox[{"(", " ", 
                    RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"P", "*", 
                    RowBox[{"(", 
                    RowBox[{"rp", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                    ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
                  "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"inis", "=", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], 
                   ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}],
                  ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], 
                    "\[Equal]", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
                  "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"sol", "=", 
               RowBox[{
                RowBox[{"NDSolve", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Join", "[", 
                    RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
                  RowBox[{
                   RowBox[{"#", "&"}], "/@", "states"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
                  RowBox[{"Method", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<EquationSimplification\>\"", "\[Rule]", 
                    "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{"change", " ", "in", " ", "Ni"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"steadyNi", "=", 
               RowBox[{"Abs", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"Ni", "[", "tmax", "]"}], "/.", "sol"}], "]"}], 
                   "-", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"Ni", "[", 
                    RowBox[{"tmax", "-", "50"}], "]"}], "/.", "sol"}], 
                    "]"}]}], ")"}], "/", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{"Ni", "[", 
                    RowBox[{"tmax", "-", "50"}], "]"}], "/.", "sol"}], 
                  "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{"change", " ", "in", " ", "host", " ", "growth"}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{"steadyHGrowth", "=", 
               RowBox[{"Abs", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
                    RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], 
                   "-", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"H", "'"}], "[", 
                    RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                    RowBox[{"H", "[", 
                    RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], 
                    "]"}]}], ")"}], "/", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"H", "'"}], "[", 
                    RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                    RowBox[{"H", "[", 
                    RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], 
                  "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"change", " ", "in", " ", 
                RowBox[{"S", "/", "H"}]}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"steadySH", "=", 
               RowBox[{"Abs", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"S", "[", "tmax", "]"}], "/", 
                    RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}], 
                   "-", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"S", "[", 
                    RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                    RowBox[{"H", "[", 
                    RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], 
                    "]"}]}], ")"}], "/", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"S", "[", 
                    RowBox[{"tmax", "-", "50"}], "]"}], "/", 
                    RowBox[{"H", "[", 
                    RowBox[{"tmax", "-", "50"}], "]"}]}], "/.", "sol"}], 
                  "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
               "}"}]}]}], 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
              "record", " ", "the", " ", "changes", " ", "in", " ", "Ni"}], 
              ",", " ", 
              RowBox[{"H", " ", "growth"}], ",", " ", 
              RowBox[{"and", " ", 
               RowBox[{"S", "/", "H"}], " ", "as", " ", "output"}]}], "*)"}], 
            "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"kp", ",", 
             RowBox[{"{", 
              RowBox[{
              "150", ",", "175", ",", "200", ",", "225", ",", "250", ",", 
               "275", ",", "300", ",", "325", ",", "350", ",", "375", ",", 
               "400"}], "}"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"repeat", " ", "for", " ", "all", " ", "the", " ", 
           RowBox[{"kp", "'"}], "s"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"d", ",", 
           RowBox[{"{", 
            RowBox[{
            "450", ",", "850", ",", "1250", ",", "1650", ",", "2050", ",", 
             "2450", ",", "2850", ",", "3250", ",", "3650", ",", "4050"}], 
            "}"}]}], "}"}]}], 
        RowBox[{"(*", 
         RowBox[{
         "repeat", " ", "for", " ", "all", " ", "the", " ", "flushing", " ", 
          "rates"}], "*)"}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"P0", ",", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", 
           RowBox[{"kp", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H0"}]}], "}"}]}], 
        "}"}]}], 
      RowBox[{"(*", 
       RowBox[{
       "repeat", " ", "the", " ", "above", " ", "with", " ", "no", " ", 
        "fish", " ", 
        RowBox[{"(", 
         RowBox[{"P0", "=", "0"}], ")"}], " ", "and", " ", "with", " ", 
        "fish", " ", 
        RowBox[{"(", 
         RowBox[{"P0", "=", 
          RowBox[{"kp", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H0"}]}], ")"}]}], 
       "*)"}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836576641311953*^9, 3.836576745811816*^9}, {3.8365767807913227`*^9, 
   3.836576796666417*^9}, {3.83690984159394*^9, 3.8369098642372837`*^9}, {
   3.8369099504464817`*^9, 3.836909992597097*^9}, {3.836910066716194*^9, 
   3.836910181553328*^9}, {3.8369102578063707`*^9, 3.836910390882205*^9}, {
   3.8369104221261673`*^9, 3.8369104445293837`*^9}, {3.836910588258913*^9, 
   3.836910603839734*^9}, {3.83691170755369*^9, 3.836911723135646*^9}, 
   3.836916782182846*^9, {3.8369173444379473`*^9, 3.836917364496358*^9}, {
   3.836917449889654*^9, 3.836917475981286*^9}, {3.837016270499617*^9, 
   3.837016319257697*^9}, {3.837016380938163*^9, 3.8370163826278067`*^9}, {
   3.8370168011807423`*^9, 3.837016810077647*^9}, {3.837089013377437*^9, 
   3.83708901504567*^9}, {3.837089075993669*^9, 3.83708910495259*^9}, {
   3.837089980100068*^9, 3.837089986867135*^9}, {3.842903480237673*^9, 
   3.842903483491846*^9}, 3.843318002987442*^9, {3.843318056776985*^9, 
   3.8433180573975153`*^9}, 3.8439281422440453`*^9, {3.844448608187998*^9, 
   3.844448613582831*^9}, {3.844448658283128*^9, 3.844448709265112*^9}, {
   3.844448745296864*^9, 3.844448809478801*^9}, {3.854025320360482*^9, 
   3.854025337832176*^9}},
 CellLabel->
  "In[345]:=",ExpressionUUID->"11334485-586f-4ccc-ba99-536f3fe32f8e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", "kdRunsTest", "]"}], ",", " ", 
    RowBox[{
     RowBox[{"#", ">", 
      RowBox[{"1", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "4"}]}]}]}], "&"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "check", " ", "that", " ", "nothing", " ", "is", " ", "greater", " ", 
    "than", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "4"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8414411429815903`*^9, 3.841441146445889*^9}, {
   3.841441308667336*^9, 3.841441312527545*^9}, {3.8414414720350313`*^9, 
   3.8414414762482567`*^9}, {3.8433014669511137`*^9, 3.843301495023656*^9}, 
   3.8433017610690813`*^9, {3.8433018338897*^9, 3.843301857234819*^9}, {
   3.8433028862284317`*^9, 3.843302889954226*^9}, {3.843303457715599*^9, 
   3.8433034663505793`*^9}, {3.843318066274235*^9, 3.843318073737403*^9}, {
   3.844448838294614*^9, 3.844448869043624*^9}},
 CellLabel->
  "In[350]:=",ExpressionUUID->"e8e34c6c-98e2-4bdf-8692-d17d07b27505"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.843318109041655*^9, 3.844509670049245*^9, 
  3.8540443244245996`*^9},
 CellLabel->
  "Out[350]=",ExpressionUUID->"bfdfa375-4469-4dbf-94ad-81eb8a47fd36"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulations for flushing rate vs carrying capacity", "Subsubsection",
 CellChangeTimes->{{3.8370890020143003`*^9, 3.837089003938897*^9}, {
  3.842903381888794*^9, 
  3.8429033915353127`*^9}},ExpressionUUID->"7c3eb843-a8a3-452c-9aae-\
0a8a38b92607"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.831830789369714*^9, 3.8318307905412607`*^9}, {
   3.835995882215592*^9, 3.83599588299831*^9}, {3.8363089619914494`*^9, 
   3.836308970966587*^9}, {3.836309185335792*^9, 3.8363091870313787`*^9}, 
   3.8363138138722897`*^9, 3.842903474940238*^9, 3.844448910052291*^9},
 CellLabel->
  "In[351]:=",ExpressionUUID->"5227dd74-bea7-4ffa-a79e-9ffc8de402b6"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"jN", "=", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"jNi0", " ", "=", " ", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "800"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kdRuns", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"jX", "=", 
                FractionBox[
                 RowBox[{"jXm", " ", "X"}], 
                 RowBox[{"X", "+", "KX"}]]}], ",", " ", 
               RowBox[{"jN", "=", 
                FractionBox[
                 RowBox[{"jNm", " ", "\[CapitalNu]"}], 
                 RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", 
               RowBox[{"jHT", "=", "j0HT"}], ",", 
               RowBox[{"rNS", "=", 
                RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
               RowBox[{"VH0", "=", 
                RowBox[{"kv", "*", "H0"}]}], ",", " ", 
               RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
               RowBox[{"jNi0", " ", "=", " ", 
                FractionBox[
                 RowBox[{"jNm", " ", "\[CapitalNu]"}], 
                 RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", "states", ",", 
               " ", "rNH", ",", " ", "S", ",", "H", ",", "VH", ",", "P", ",", 
               "Ni", ",", "jNi", ",", "\[Rho]C", ",", " ", "jCP", ",", " ", 
               "jHG", ",", "\[Rho]N", ",", "jeC", ",", "jCO2", ",", "A", ",", 
               "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", ",", 
               "cROS1", ",", "jSG", ",", "jST", ",", "jNw", ",", "F", ",", 
               "fh", ",", "tsolve", ",", " ", "addtimetostatevars", ",", 
               "eqs", ",", "inis", ",", "sol", ",", "t", ",", "steadyNi", ",",
                "steadyHGrowth", ",", "steadySH"}], 
              RowBox[{"(*", 
               RowBox[{
               "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
                "intermediate", " ", "output", " ", "values", " ", "in", " ", 
                "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
                RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
               FractionBox[
                RowBox[{"A", " ", "B", " ", 
                 RowBox[{"(", 
                  RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["A", "2"], " ", "B"}], "+", 
                 RowBox[{"A", " ", 
                  SuperscriptBox["B", "2"]}], "+", 
                 RowBox[{
                  SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
                 RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
                 RowBox[{
                  SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
              RowBox[{"(*", 
               RowBox[{"same", " ", "as", " ", 
                FractionBox["1", 
                 RowBox[{
                  FractionBox["1", "\[Rho]"], "+", 
                  FractionBox["1", "A"], "+", 
                  FractionBox["1", "B"], "-", 
                  FractionBox["1", 
                   RowBox[{"A", "+", "B"}]]}]]}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"fh", "[", 
                RowBox[{
                 RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
               RowBox[{"Piecewise", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", " ", 
                    RowBox[{"y", "<", "0"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"kv", " ", "*", "y"}], ",", 
                    RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
                "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", "Calculations", " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"jHG", "=", 
               RowBox[{
                RowBox[{"F", "[", "jHGm", "]"}], "[", 
                RowBox[{
                 RowBox[{"yC", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Rho]C", " ", 
                    RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                    
                    RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                    RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                  SuperscriptBox["nNH", 
                   RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
              "\[IndentingNewLine]", 
              RowBox[{"jSG", "=", 
               RowBox[{
                RowBox[{"F", "[", "jSGm", "]"}], "[", 
                RowBox[{
                 RowBox[{"jCP", " ", "yC"}], ",", 
                 FractionBox[
                  RowBox[{"rNS", "+", 
                   FractionBox[
                    RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"\[Rho]N", "=", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                  
                  RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                  RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
                  RowBox[{"nNH", " ", "jHG"}]}], " ", 
                 RowBox[{"(*", 
                  SuperscriptBox["yN", 
                   RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"jeC", "=", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{"jX", "-", 
                  FractionBox["jHG", "yC"], "+", 
                  FractionBox[
                   RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}],
               ";", " ", "\[IndentingNewLine]", 
              RowBox[{"jCO2", "=", 
               RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"jL", "=", 
               RowBox[{"A", " ", "astar", " ", "L"}]}], " ", ";", 
              "\[IndentingNewLine]", 
              RowBox[{"rCH", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"jHT", "+", 
                  FractionBox[
                   RowBox[{"jHG", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
                "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"rCS", "=", 
               RowBox[{"\[Sigma]CS", 
                RowBox[{"(", 
                 RowBox[{"j0ST", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
                   SuperscriptBox["yC", 
                    RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"jeL", "=", 
               RowBox[{"jL", "-", 
                FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"jNPQ", "=", 
               FractionBox["1", 
                RowBox[{
                 FractionBox["1", "jeL"], "+", 
                 FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
              RowBox[{"cROS1", "=", 
               FractionBox[
                RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"jST", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"rNH", "=", 
               RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"A", "=", 
               RowBox[{"1.256307", "+", 
                RowBox[{"1.385969", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", "6.479055"}], " ", 
                   RowBox[{"S", "/", "H"}]}]]}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"jNw", "=", " ", 
               RowBox[{
                RowBox[{"\[Rho]N", "*", 
                 RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
                RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"tsolve", "=", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[Rho]C", ",", 
                   RowBox[{"jCP", "-", 
                    RowBox[{"jSG", " ", 
                    SuperscriptBox["yC", 
                    RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"jCP", ",", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"F", "[", "jCPm", "]"}], "[", 
                    RowBox[{
                    RowBox[{"jL", " ", "yCL"}], ",", 
                    RowBox[{"rCS", "+", 
                    FractionBox[
                    RowBox[{"H", " ", 
                    RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
                    RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"jNi", ",", " ", 
                   FractionBox[
                    RowBox[{"jNm", " ", "*", "Ni"}], 
                    RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
                "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"states", "=", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"tsolve", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
                  "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"addtimetostatevars", "=", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"#", "\[Rule]", 
                    RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", 
                 "states"}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
              RowBox[{"eqs", "=", 
               RowBox[{"Join", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
                    "\[Equal]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Lambda]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
                  "tsolve"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"S", 
                    RowBox[{"(", 
                    RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"H", 
                    RowBox[{"(", 
                    RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                    RowBox[{"fh", "[", 
                    RowBox[{"t", ",", " ", 
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"d", "*", 
                    RowBox[{"(", " ", 
                    RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                    " ", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                    ")"}], "/", 
                    RowBox[{"(", " ", 
                    RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"P", "*", 
                    RowBox[{"(", 
                    RowBox[{"rp", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                    ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
                  "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"inis", "=", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], 
                   ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}],
                  ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], 
                    "\[Equal]", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
                  "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"sol", "=", 
               RowBox[{
                RowBox[{"NDSolve", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Join", "[", 
                    RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
                  RowBox[{
                   RowBox[{"#", "&"}], "/@", "states"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
                  RowBox[{"Method", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<EquationSimplification\>\"", "\[Rule]", 
                    "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"steady", " ", "state", " ", "Ni"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"steadyNi", "=", 
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{"Ni", "[", "tmax", "]"}], "/.", "sol"}], "]"}]}], 
              ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"steady", " ", "state", " ", "host", " ", "growth"}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{"steadyHGrowth", "=", 
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
                  RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}]}], 
              ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"steady", " ", "state", " ", 
                RowBox[{"S", "/", "H"}]}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"steadySH", "=", 
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"S", "[", "tmax", "]"}], "/", 
                  RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}]}], 
              ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"steadyNi", ",", "steadyHGrowth", ",", "steadySH"}], 
               "}"}]}]}], 
            RowBox[{"(*", 
             RowBox[{
             "record", " ", "the", " ", "steady", " ", "state", " ", "values",
               " ", "as", " ", "output"}], "*)"}], "]"}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"kp", ",", 
             RowBox[{"{", 
              RowBox[{
              "150", ",", "175", ",", "200", ",", "225", ",", "250", ",", 
               "275", ",", "300", ",", "325", ",", "350", ",", "375", ",", 
               "400"}], "}"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"repeat", " ", "for", " ", "the", " ", "different", " ", 
           RowBox[{"kp", "'"}], "s"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"d", ",", 
           RowBox[{"{", 
            RowBox[{
            "450", ",", "850", ",", "1250", ",", "1650", ",", "2050", ",", 
             "2450", ",", "2850", ",", "3250", ",", "3650", ",", "4050"}], 
            "}"}]}], "}"}]}], 
        RowBox[{"(*", 
         RowBox[{
         "repeat", " ", "for", " ", "the", " ", "different", " ", "flushing", 
          " ", "rates"}], "*)"}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"P0", ",", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", 
           RowBox[{"kp", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H0"}]}], "}"}]}], 
        "}"}]}], 
      RowBox[{"(*", 
       RowBox[{"repeat", " ", "with", " ", "no", " ", "fish", " ", 
        RowBox[{"(", 
         RowBox[{"P0", "=", "0"}], ")"}], " ", "and", " ", "with", " ", 
        "fish", " ", 
        RowBox[{"(", 
         RowBox[{"P0", "=", 
          RowBox[{"kp", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H0"}]}], ")"}]}], 
       "*)"}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836576641311953*^9, 3.836576745811816*^9}, {3.8365767807913227`*^9, 
   3.836576796666417*^9}, {3.83690984159394*^9, 3.8369098642372837`*^9}, {
   3.8369099504464817`*^9, 3.836909992597097*^9}, {3.836910066716194*^9, 
   3.836910181553328*^9}, {3.8369102578063707`*^9, 3.836910390882205*^9}, {
   3.8369104221261673`*^9, 3.8369104445293837`*^9}, {3.836910588258913*^9, 
   3.836910603839734*^9}, {3.83691170755369*^9, 3.836911723135646*^9}, 
   3.836916782182846*^9, {3.8369173444379473`*^9, 3.836917364496358*^9}, {
   3.836917449889654*^9, 3.836917475981286*^9}, {3.837016270499617*^9, 
   3.837016319257697*^9}, {3.837016380938163*^9, 3.8370163826278067`*^9}, {
   3.8370168011807423`*^9, 3.837016810077647*^9}, {3.837089013377437*^9, 
   3.83708901504567*^9}, {3.837089075993669*^9, 3.83708910495259*^9}, {
   3.837089980100068*^9, 3.837089986867135*^9}, {3.842903480237673*^9, 
   3.842903483491846*^9}, 3.8439281542044086`*^9, {3.8444488778894453`*^9, 
   3.844448882019981*^9}, {3.844448920044705*^9, 3.8444489346208153`*^9}, {
   3.844448970055285*^9, 3.844449033672879*^9}, 3.8461500329639072`*^9, {
   3.854025347467498*^9, 3.85402535797639*^9}},
 CellLabel->
  "In[352]:=",ExpressionUUID->"fa247435-e8ac-4610-9bd2-4852b72b720d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"saving", " ", "the", " ", "output", " ", "of", " ", 
    RowBox[{"Table", "[", "]"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<kpdRuns\>\"", ",", "kdRuns"}], " ", "]"}]}]], "Input",
 CellChangeTimes->{{3.83113622232788*^9, 3.831136248679153*^9}, {
   3.8318234468167353`*^9, 3.831823449545583*^9}, 3.8359586097157*^9, {
   3.836154389122551*^9, 3.836154393564563*^9}, {3.83632257065947*^9, 
   3.83632257593362*^9}, {3.837113193487657*^9, 3.837113200365985*^9}, {
   3.8429034490385437`*^9, 3.842903457917676*^9}, {3.8444490486182823`*^9, 
   3.8444490489687757`*^9}},
 CellLabel->
  "In[357]:=",ExpressionUUID->"c30e39f6-0f6c-4aeb-a4e9-234dfcc63db7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"recover", " ", "this", " ", "output"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Get", "[", "\"\<kpdRuns\>\"", " ", "]"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.83163971590628*^9, 3.83163977412131*^9}, {
   3.8318234549263887`*^9, 3.8318234562225523`*^9}, {3.835958613462501*^9, 
   3.8359586172547092`*^9}, 3.836155606287785*^9, 3.836322558169998*^9, 
   3.837113216566908*^9, {3.842903460475326*^9, 3.8429034624607153`*^9}},
 CellLabel->
  "In[358]:=",ExpressionUUID->"7fdfd805-f174-4494-a6ab-2c95d2574e6a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Get results for flushing rate vs carrying capacity correct form\
\>", "Subsubsection",
 CellChangeTimes->{{3.837016030830839*^9, 3.8370160385087233`*^9}, {
  3.8429033970851917`*^9, 
  3.842903407319805*^9}},ExpressionUUID->"df2bee65-4a8c-4d11-b456-\
c62a5f91bda1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"kdRuns", " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"nested", " ", "list"}], ",", " ", 
    RowBox[{
    "innermost", " ", "is", " ", "all", " ", "3", " ", "response", " ", 
     "variables", " ", "for", " ", 
     RowBox[{"{", 
      RowBox[{"kp1", ",", " ", "kp2", ",", " ", "..."}], "}"}]}], ",", " ", 
    RowBox[{
    "second", " ", "level", " ", "is", " ", "this", " ", "repeated", " ", 
     "for", " ", "each", " ", "flushing", " ", "rate", " ", 
     RowBox[{"{", 
      RowBox[{"d1", ",", " ", "d2", ",", " ", "..."}], "}"}]}], ",", " ", 
    RowBox[{"outer", " ", "levels", " ", "is", " ", "fish", " ", 
     RowBox[{"{", 
      RowBox[{"P1", ",", " ", "P2"}], "}"}]}], ","}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "so", " ", "first", " ", "seprate", " ", "the", " ", "fish", " ", "vs", 
    " ", "no", " ", "fish", " ", "cases"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kdnoP", "=", 
   RowBox[{"kdRuns", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kdwithP", "=", 
    RowBox[{"kdRuns", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "want", " ", "the", " ", "differences", " ", "between", " ", "the", " ", 
    "P", " ", "and", " ", "no", " ", "P", " ", "case"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "Ni", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kdNidiff", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"kdwithP", ",", " ", "1"}], "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "-", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"kdnoP", ",", " ", "1"}], "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"host", " ", "growth"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kdgrowthdiff", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"kdwithP", ",", " ", "1"}], "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "-", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"kdnoP", ",", " ", "1"}], "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"S", "/", "H"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kdSHdiff", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"kdwithP", ",", " ", "1"}], "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], "-", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"kdnoP", ",", " ", "1"}], "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "turn", " ", "the", " ", "results", " ", "into", " ", "matrices", " ", 
    "for", " ", "plotting"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MatrixkdNi", "=", 
    RowBox[{"ArrayReshape", "[", 
     RowBox[{"kdNidiff", ",", " ", 
      RowBox[{"{", 
       RowBox[{"10", ",", " ", "11"}], "}"}]}], "]"}]}], " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", " ", "m"}], "}"}], " ", "dimensions", " ", "are", " ", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"#", " ", "outermost", " ", "par", " ", "values"}], ",", " ", 
      RowBox[{"#", " ", "innermost", " ", "par", " ", "values"}]}], "}"}]}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Matrixkdgrowth", "=", 
   RowBox[{"ArrayReshape", "[", 
    RowBox[{"kdgrowthdiff", ",", " ", 
     RowBox[{"{", 
      RowBox[{"10", ",", " ", "11"}], "}"}]}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixkdSH", "=", 
   RowBox[{"ArrayReshape", "[", 
    RowBox[{"kdSHdiff", ",", " ", 
     RowBox[{"{", 
      RowBox[{"10", ",", " ", "11"}], "}"}]}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.837016635280414*^9, 3.837016734167446*^9}, {
  3.837016772402966*^9, 3.8370167832303247`*^9}, {3.837016835951674*^9, 
  3.837016859885375*^9}, {3.8370169338826237`*^9, 3.8370171609019737`*^9}, {
  3.837017213695936*^9, 3.83701733184233*^9}, {3.837017366533008*^9, 
  3.83701747572468*^9}, {3.837017586631283*^9, 3.8370176123951902`*^9}, {
  3.8370891671692467`*^9, 3.837089346958859*^9}, {3.837089388440878*^9, 
  3.837089398012844*^9}, {3.837089650949401*^9, 3.837089654224751*^9}, {
  3.837090928663484*^9, 3.8370909294587727`*^9}, {3.842903552383752*^9, 
  3.842903554100061*^9}, {3.8444490851685123`*^9, 3.844449128724587*^9}, {
  3.844449165806814*^9, 3.844449167241823*^9}, {3.8444491987353086`*^9, 
  3.844449208009457*^9}},
 CellLabel->
  "In[359]:=",ExpressionUUID->"6874b50f-d81d-45ac-82e0-855d9b657009"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.837017546578046*^9, 3.837017559915436*^9}, {
   3.837017629781115*^9, 3.8370176790768967`*^9}, {3.8370182803926373`*^9, 
   3.837018415453849*^9}, {3.837018445974326*^9, 3.837018527719405*^9}, {
   3.837018561693363*^9, 3.8370186691078577`*^9}, 3.837018828962762*^9, {
   3.83708941367445*^9, 3.837089451514551*^9}, {3.837089511593878*^9, 
   3.837089527441595*^9}, {3.837089597028479*^9, 3.837089646849782*^9}, 
   3.8429035506213207`*^9},ExpressionUUID->"67662155-cdbc-4e0f-bdfe-\
2340f5724d0e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot results", "Subsection",
 CellChangeTimes->{{3.842903224970702*^9, 
  3.842903228694862*^9}},ExpressionUUID->"92da41d3-b62f-4824-a867-\
4310726e2a0a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"paddingShm", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"80", 
        RowBox[{"(*", "left", "*)"}], ",", "15"}], 
       RowBox[{"(*", "right", "*)"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"50", 
        RowBox[{"(*", "bottom", "*)"}], ",", "0"}], 
       RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotShma", "=", 
    RowBox[{"MatrixPlot", "[", 
     RowBox[{
      RowBox[{"Reverse", "[", "NXgrowthdiff", "]"}], ",", " ", 
      RowBox[{"ImageSize", "\[Rule]", " ", "Full"}], ",", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ","}], " ", "*)"}], 
      RowBox[{"ColorFunction", "\[Rule]", 
       RowBox[{"(", 
        RowBox[{"ColorData", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<GrayTones\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"0", 
             RowBox[{"(*", 
              RowBox[{"Min", "[", "MatrixNXgrowth", "]"}], "*)"}], ",", 
             RowBox[{"Max", "[", "NXgrowthdiff", "]"}]}], "}"}]}], "}"}], 
         "]"}], ")"}]}], ",", 
      RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "need", " ", "to", " ", "specify", " ", "the", " ", "colorfunction", 
         " ", "to", " ", "match", " ", "the", " ", "legend", " ", "specified",
          " ", "by", " ", 
         RowBox[{"BarLegend", "[", "]"}]}], ",", " ", 
        RowBox[{
        "need", " ", "to", " ", "add", " ", "colorfunctionscaling", " ", 
         "false", " ", "to", " ", "make", " ", "the", " ", "plot", " ", 
         "colors", " ", "match", " ", "these", " ", "values"}]}], "*)"}], ",", 
      RowBox[{"Mesh", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"Frame", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"True", 
           RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
          RowBox[{"(*", "right", "*)"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"True", 
           RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
          RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<Prey (C-mol \!\(\*SuperscriptBox[\(L\), \(-1\)]\))\>\"", ",", 
           "None"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Ambient N (mol N \!\(\*SuperscriptBox[\(L\), \(-1\)]\))\>\"", 
           ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"FrameTicksStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "10"}], 
        RowBox[{"(*", 
         RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", " ", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "12"}], "]"}]}], ",", 
      RowBox[{"FrameTicks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "1", ",", " ", 
               "\"\<10\[Times]\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "2", ",", " ", 
               "\"\<7.5\[Times]\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "3", ",", " ", 
               "\"\<5\[Times]\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "4", ",", " ", 
               "\"\<2.5\[Times]\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "5", ",", " ", 
               "\"\<1\[Times]\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "6", ",", " ", 
               "\"\<0.75\[Times]\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}],
               "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "7", ",", " ", 
               "\"\<0.5\[Times]\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "8", ",", " ", 
               "\"\<0.25\[Times]\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}],
               "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "9", ",", " ", 
               "\"\<0.1\[Times]\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], 
              "}"}]}], "}"}], ",", " ", "None"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", " ", "0"}], "}"}], ",", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"2", ",", " ", "\"\<0.1*10^-7\>\""}], "}"}], ","}], 
              "*)"}], 
             RowBox[{"{", 
              RowBox[{
              "3", ",", " ", 
               "\"\<0.25\[Times]\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}],
               "}"}], ",", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"4", ",", " ", "\"\<0.5*10^-7\>\""}], "}"}], ","}], 
              "*)"}], 
             RowBox[{"{", 
              RowBox[{
              "5", ",", " ", 
               "\"\<0.75\[Times]\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}],
               "}"}], ",", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"6", ",", " ", "\"\<1*10^-7\>\""}], "}"}], ","}], 
              "*)"}], 
             RowBox[{"{", 
              RowBox[{
              "7", ",", " ", 
               "\"\<1.25\[Times]\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}],
               "}"}], ",", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"8", ",", " ", "\"\<1.5*10^-7\>\""}], "}"}], ","}], 
              "*)"}], 
             RowBox[{"{", 
              RowBox[{
              "9", ",", " ", 
               "\"\<1.75\[Times]\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}],
               "}"}]}], 
            RowBox[{"(*", 
             RowBox[{",", 
              RowBox[{"{", 
               RowBox[{"10", ",", " ", "\"\<2*10^-7\>\""}], "}"}]}], "*)"}], 
            "}"}], ",", " ", "None"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<a) dH/Hdt with fish-dH/Hdt without fish\>\""}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
         RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
         " ", "12"}], 
        RowBox[{"(*", 
         RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", "  ", 
      RowBox[{"ImagePadding", "\[Rule]", "paddingShm"}]}], "]"}]}], ";"}], 
  " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotShmb", "=", 
   RowBox[{"MatrixPlot", "[", 
    RowBox[{
     RowBox[{"Reverse", "[", "Matrixkdgrowth", "]"}], ",", " ", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"ColorData", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<GrayTones\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"Max", "[", "Matrixkdgrowth", "]"}]}], "}"}]}], "}"}], 
        "]"}], ")"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", " ", "Full"}], ",", 
     RowBox[{"Mesh", "\[Rule]", "True"}], ",", " ", 
     RowBox[{"Frame", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"True", 
          RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
         RowBox[{"(*", "right", "*)"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"True", 
          RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
         RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Fish:host biomass scalar (g C-mol \!\(\*SuperscriptBox[\(H\), \
\(-1\)]\))\>\"", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Flushing rate (\!\(\*SuperscriptBox[\(d\), \(-1\)]\))\>\"", ",",
           "None"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "10"}], 
       RowBox[{"(*", 
        RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", " ", 
     
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "12"}], "]"}]}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", " ", "\"\<4050\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", " ", "\"\<3650\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"3", ",", " ", "\"\<3250\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", " ", "\"\<2850\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"5", ",", " ", "\"\<2450\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"6", ",", " ", "\"\<2050\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"7", ",", " ", "\"\<1650\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"8", ",", " ", "\"\<1250\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"9", ",", " ", "\"\<850\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"10", ",", " ", "\"\<450\>\""}], "}"}]}], "}"}], ",", 
          " ", "None"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", " ", "150"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", " ", "175"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"3", ",", " ", "200"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", " ", "225"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"5", ",", " ", "250"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"6", ",", " ", "275"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"7", ",", " ", "300"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"8", ",", " ", "325"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"9", ",", " ", "350"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"10", ",", " ", "375"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"11", ",", " ", "400"}], "}"}]}], " ", "}"}], ",", " ", 
          "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<b) dH/Hdt with fish- dH/Hdt without fish\>\""}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
        RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", " ",
         "12"}], 
       RowBox[{"(*", 
        RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", "  ", 
     RowBox[{"ImagePadding", "\[Rule]", "paddingShm"}]}], "]"}]}], " ", 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8429035822366953`*^9, 3.842903583441298*^9}, {
   3.842904206600327*^9, 3.8429042573044243`*^9}, {3.84290432398429*^9, 
   3.8429043944434757`*^9}, {3.842904454331141*^9, 3.842904464132865*^9}, {
   3.842904501233018*^9, 3.842904502228657*^9}, {3.8429045563716927`*^9, 
   3.8429045999437637`*^9}, {3.8429046336780376`*^9, 3.84290464448175*^9}, {
   3.842904907438821*^9, 3.8429049675228167`*^9}, {3.842905038169599*^9, 
   3.8429051230404587`*^9}, {3.842905229632147*^9, 3.842905274559403*^9}, {
   3.8429054418738327`*^9, 3.842905449329023*^9}, {3.842905907799363*^9, 
   3.8429059249713793`*^9}, {3.8429059562074957`*^9, 3.842905957644535*^9}, {
   3.8429060072389393`*^9, 3.842906027788671*^9}, {3.842906139478606*^9, 
   3.8429061812845497`*^9}, {3.842907030149103*^9, 3.8429070340563917`*^9}, {
   3.8429071279724407`*^9, 3.842907195838606*^9}, {3.8429075447819357`*^9, 
   3.842907560641445*^9}, {3.8429079641265306`*^9, 3.842908003712195*^9}, {
   3.842908083786995*^9, 3.8429082072076263`*^9}, 3.842908262796365*^9, {
   3.8429083086034613`*^9, 3.842908315008457*^9}, {3.84290836319018*^9, 
   3.8429083717083473`*^9}, {3.842908404448694*^9, 3.842908407768424*^9}, {
   3.842908455152227*^9, 3.842908473722227*^9}, 3.842908945014471*^9, {
   3.842988679929413*^9, 3.842988701975931*^9}, {3.844449253109152*^9, 
   3.844449254216117*^9}, {3.844449321540365*^9, 3.844449328338998*^9}, {
   3.8445098254150457`*^9, 3.844509831807314*^9}, {3.846150068235626*^9, 
   3.846150078425345*^9}, {3.846150118998126*^9, 3.846150121191119*^9}},
 CellLabel->
  "In[368]:=",ExpressionUUID->"2bcc66f4-db6c-4799-920b-8ac6a710cc4e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotShmaLeg", "=", 
   RowBox[{"BarLegend", "[", 
    RowBox[{"{", 
     RowBox[{"GrayLevel", ",", 
      RowBox[{"{", 
       RowBox[{"0", 
        RowBox[{"(*", 
         RowBox[{"Min", "[", "MatrixNXgrowth", "]"}], "*)"}], ",", 
        RowBox[{"Max", "[", "NXgrowthdiff", "]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotShmbLeg", "=", 
    RowBox[{"BarLegend", "[", 
     RowBox[{"{", 
      RowBox[{"GrayLevel", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"Max", "[", "Matrixkdgrowth", "]"}]}], "}"}]}], "}"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Legended", "[", 
  RowBox[{
   RowBox[{"GraphicsGrid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"plotShma", ",", " ", "plotShmb"}], "}"}], "}"}], " ", ",", 
     RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"10", 
          RowBox[{"(*", "left", "*)"}], ",", "40"}], " ", 
         RowBox[{"(*", 
          RowBox[{"labels", " ", "and", " ", "left", " ", "col"}], "*)"}], 
         RowBox[{"(*", 
          RowBox[{"left", " ", "to", " ", "right"}], "*)"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", 
          RowBox[{"(*", "top", "*)"}], ",", "0"}], 
         RowBox[{"(*", 
          RowBox[{"labels", " ", "and", " ", "bottom"}], "*)"}], 
         RowBox[{"(*", 
          RowBox[{"top", " ", "to", " ", "bottom"}], "*)"}], "}"}]}], "}"}]}],
      ",", " ", 
     RowBox[{"Frame", "\[Rule]", "False"}]}], 
    RowBox[{"(*", 
     RowBox[{",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", 
       RowBox[{"1", "/", "GoldenRatio"}]}]}], "*)"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Placed", "[", 
      RowBox[{"plotShmaLeg", ",", 
       RowBox[{"(*", "Bottom", "*)"}], 
       RowBox[{"{", 
        RowBox[{"1.425", 
         RowBox[{"(*", 
          RowBox[{
          "left", " ", "to", " ", "right", " ", "position", " ", "is", " ", 
           "in", " ", "the", " ", "center"}], "*)"}], ",", " ", "0.5"}], 
        RowBox[{"(*", 
         RowBox[{"top", " ", "to", " ", "bottom", " ", "position"}], "*)"}], 
        "}"}]}], "]"}], ",", " ", 
     RowBox[{"Placed", "[", 
      RowBox[{"plotShmbLeg", ",", 
       RowBox[{"(*", "Bottom", "*)"}], 
       RowBox[{"{", 
        RowBox[{"0.5", 
         RowBox[{"(*", 
          RowBox[{
          "left", " ", "to", " ", "right", " ", "position", " ", "is", " ", 
           "in", " ", "the", " ", "center"}], "*)"}], ",", "0.5"}], 
        RowBox[{"(*", 
         RowBox[{"top", " ", "to", " ", "bottom", " ", "position"}], "*)"}], 
        "}"}]}], "]"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8429051571220007`*^9, 3.842905209791273*^9}, {
   3.8429052975237513`*^9, 3.842905335380907*^9}, 3.8429053673080893`*^9, {
   3.8429055003833313`*^9, 3.842905528994958*^9}, {3.842906216858356*^9, 
   3.842906222957034*^9}, {3.84290677357395*^9, 3.8429067782299633`*^9}, {
   3.842906814020844*^9, 3.842906863596396*^9}, {3.842908540460845*^9, 
   3.842908548972221*^9}, {3.842908695097097*^9, 3.842908745373764*^9}, {
   3.842908783775839*^9, 3.842908795949183*^9}, {3.8429088263553658`*^9, 
   3.842908916119298*^9}, {3.8429089665277443`*^9, 3.842908991828121*^9}, {
   3.844449339207369*^9, 3.8444494013799467`*^9}, 3.844509865372582*^9},
 CellLabel->
  "In[371]:=",ExpressionUUID->"22c3af70-d234-477f-9985-e80589d79f1d"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {InsetBox[
       GraphicsBox[{RasterBox[CompressedData["
1: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
MT6R/cvZlDzFVLH/B0U6TEo=
          "], {{0, 0}, {10, 9}}, {0, 1}], {
          {GrayLevel[
            NCache[-1 + GoldenRatio, 0.6180339887498949]], 
           
           StyleBox[
            LineBox[{{{0, 9}, {10, 9}}, {{0, 8}, {10, 8}}, {{0, 7}, {10, 
             7}}, {{0, 6}, {10, 6}}, {{0, 5}, {10, 5}}, {{0, 4}, {10, 4}}, {{
             0, 3}, {10, 3}}, {{0, 2}, {10, 2}}, {{0, 1}, {10, 1}}, {{0, 0}, {
             10, 0}}}],
            Antialiasing->False]}, 
          {GrayLevel[
            NCache[-1 + GoldenRatio, 0.6180339887498949]], 
           
           StyleBox[
            LineBox[{{{0, 0}, {0, 9}}, {{1, 0}, {1, 9}}, {{2, 0}, {2, 9}}, {{
             3, 0}, {3, 9}}, {{4, 0}, {4, 9}}, {{5, 0}, {5, 9}}, {{6, 0}, {6, 
             9}}, {{7, 0}, {7, 9}}, {{8, 0}, {8, 9}}, {{9, 0}, {9, 9}}, {{10, 
             0}, {10, 9}}}],
            Antialiasing->False]}}},
        DisplayFunction->Identity,
        Frame->{{True, False}, {True, False}},
        FrameLabel->{{
           FormBox[
           "\"Ambient N (mol N \\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\))\
\"", TraditionalForm], None}, {
           FormBox[
           "\"Prey (C-mol \\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\))\"", 
            TraditionalForm], None}},
        FrameStyle->Directive[
          GrayLevel[0], 12],
        FrameTicks->{{{{8.5, 
             FormBox[
             "\"10\[Times]\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
              TraditionalForm]}, {7.5, 
             FormBox[
             "\"7.5\[Times]\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
              TraditionalForm]}, {6.5, 
             FormBox[
             "\"5\[Times]\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
              TraditionalForm]}, {5.5, 
             FormBox[
             "\"2.5\[Times]\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
              TraditionalForm]}, {4.5, 
             FormBox[
             "\"1\[Times]\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
              TraditionalForm]}, {3.5, 
             FormBox[
             "\"0.75\[Times]\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"",
               TraditionalForm]}, {2.5, 
             FormBox[
             "\"0.5\[Times]\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
              TraditionalForm]}, {1.5, 
             FormBox[
             "\"0.25\[Times]\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"",
               TraditionalForm]}, {0.5, 
             FormBox[
             "\"0.1\[Times]\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
              TraditionalForm]}}, None}, {{{0.5, 
             FormBox["0", TraditionalForm]}, {2.5, 
             FormBox[
             "\"0.25\[Times]\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"",
               TraditionalForm]}, {4.5, 
             FormBox[
             "\"0.75\[Times]\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"",
               TraditionalForm]}, {6.5, 
             FormBox[
             "\"1.25\[Times]\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"",
               TraditionalForm]}, {8.5, 
             FormBox[
             "\"1.75\[Times]\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"",
               TraditionalForm]}}, None}},
        FrameTicksStyle->Directive[
          GrayLevel[0], 10],
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        ImagePadding->{{80.00000000000001, 14.999999999999886`}, {
         50.000000000000114`, 16.000000000000057`}},
        ImageSize->Full,
        LabelStyle->Directive[
         FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
        Method->{
         "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
          "RangePadding" -> Scaled[0.05]},
        PlotLabel->FormBox[
         "\"a) dH/Hdt with fish-dH/Hdt without fish\"", TraditionalForm]], 
       NCache[{Rational[941, 2], -422}, {470.5, -422}], 
       ImageScaled[{0.5, 0.5}], {931, 836}], InsetBox[
       GraphicsBox[{RasterBox[CompressedData["
1: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
f9VqHhinIiNCd2Rmho4W5zqbmTgm/gcK00VC
          "], {{0, 0}, {11, 10}}, {0, 
          1}], {
          {GrayLevel[
            NCache[-1 + GoldenRatio, 0.6180339887498949]], 
           
           StyleBox[
            LineBox[{{{0, 10}, {11, 10}}, {{0, 9}, {11, 9}}, {{0, 8}, {11, 
             8}}, {{0, 7}, {11, 7}}, {{0, 6}, {11, 6}}, {{0, 5}, {11, 5}}, {{
             0, 4}, {11, 4}}, {{0, 3}, {11, 3}}, {{0, 2}, {11, 2}}, {{0, 1}, {
             11, 1}}, {{0, 0}, {11, 0}}}],
            Antialiasing->False]}, 
          {GrayLevel[
            NCache[-1 + GoldenRatio, 0.6180339887498949]], 
           
           StyleBox[
            LineBox[{{{0, 0}, {0, 10}}, {{1, 0}, {1, 10}}, {{2, 0}, {2, 
             10}}, {{3, 0}, {3, 10}}, {{4, 0}, {4, 10}}, {{5, 0}, {5, 10}}, {{
             6, 0}, {6, 10}}, {{7, 0}, {7, 10}}, {{8, 0}, {8, 10}}, {{9, 0}, {
             9, 10}}, {{10, 0}, {10, 10}}, {{11, 0}, {11, 10}}}],
            Antialiasing->False]}}},
        DisplayFunction->Identity,
        Frame->{{True, False}, {True, False}},
        FrameLabel->{{
           FormBox[
           "\"Flushing rate (\\!\\(\\*SuperscriptBox[\\(d\\), \
\\(-1\\)]\\))\"", TraditionalForm], None}, {
           FormBox[
           "\"Fish:host biomass scalar (g C-mol \
\\!\\(\\*SuperscriptBox[\\(H\\), \\(-1\\)]\\))\"", TraditionalForm], None}},
        FrameStyle->Directive[
          GrayLevel[0], 12],
        FrameTicks->{{{{9.5, 
             FormBox["\"4050\"", TraditionalForm]}, {8.5, 
             FormBox["\"3650\"", TraditionalForm]}, {7.5, 
             FormBox["\"3250\"", TraditionalForm]}, {6.5, 
             FormBox["\"2850\"", TraditionalForm]}, {5.5, 
             FormBox["\"2450\"", TraditionalForm]}, {4.5, 
             FormBox["\"2050\"", TraditionalForm]}, {3.5, 
             FormBox["\"1650\"", TraditionalForm]}, {2.5, 
             FormBox["\"1250\"", TraditionalForm]}, {1.5, 
             FormBox["\"850\"", TraditionalForm]}, {0.5, 
             FormBox["\"450\"", TraditionalForm]}}, None}, {{{0.5, 
             FormBox["150", TraditionalForm]}, {1.5, 
             FormBox["175", TraditionalForm]}, {2.5, 
             FormBox["200", TraditionalForm]}, {3.5, 
             FormBox["225", TraditionalForm]}, {4.5, 
             FormBox["250", TraditionalForm]}, {5.5, 
             FormBox["275", TraditionalForm]}, {6.5, 
             FormBox["300", TraditionalForm]}, {7.5, 
             FormBox["325", TraditionalForm]}, {8.5, 
             FormBox["350", TraditionalForm]}, {9.5, 
             FormBox["375", TraditionalForm]}, {10.5, 
             FormBox["400", TraditionalForm]}}, None}},
        FrameTicksStyle->Directive[
          GrayLevel[0], 10],
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        ImagePadding->{{79.99999999999999, 15.000000000000227`}, {
         50.000000000000114`, 16.000000000000057`}},
        ImageSize->Full,
        LabelStyle->Directive[
         FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
        Method->{
         "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
          "RangePadding" -> Scaled[0.05]},
        PlotLabel->FormBox[
         "\"b) dH/Hdt with fish- dH/Hdt without fish\"", TraditionalForm]], {1441.5, -422},
        ImageScaled[{0.5, 0.5}], {931, 844}]}, {}}, {InsetBox[
      TemplateBox[{
        FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            GraphicsBox[{
              RasterBox[
              SparseArray[
               Automatic, {201, 1}, 0., {
                1, {{0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
                  31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
                  46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 
                  61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 
                  76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 
                  91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
                   105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
                   117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
                   129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
                   141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
                   153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
                   165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
                   177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
                   189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 
                  200}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}}}, CompressedData["
1:eJwt0jlMVFEUxvGxpYYWQ4c1tZ5SWqipTMRSTKywlVYoaLQgIZAYEzPBqBGN
GnBEhn32N/u8fV9sxtp5l/9NJrPdc873OzNzj54uP75TKBTKk8eL6eJDY/25
3D6/lMPZjWjp8BXvt+XNa3X4fEfipfzVLt/vy5S2t3Z/6i333sm9lc1f4/n3
3C/K/uRbbe+Aug+yoM5H6j9JaTw/qfhMny+yfFtIv69irOcXv9H3uzzL2639
oP9PKahzxJwjWVQFx8w7lrxqUsrckqgxWon5v+Vu3mb2hBwn8mQ1P3/Icyr5
reniKbnK8i+/Ni6T70weqIvn5DwX1W7jgryXcnWpDrmvZEY1vCb/tahrKzc4
Ksyp4Kkwr4Krytwqvirzazhr5KjhrZOnjrtOrgb+Bvka7KFJzib7aJK3xV5a
5G6xH438GnvScLRxtHG0cbRxdHB0cHRwdGVLObo4ujh6OHo4ejj6OPo4+jgG
OAY4BjiGOIY4hjhGOEY4Rjh05uh4dObpuHTm6vh05hs4DXIYeA3yGLgNcpn4
TfKZ/J4mOU32YZLXYi8WuS32Y5HfYk8WDhuHjcPGYeOwcdg4bBwODgeHg8PB
4eBwcLg4XBwuDheHi8PF4eHwcHg4PBweDg+Hj8PH4ePwcfg4fBw+jgBHgCPA
EeAIcAQ4QhwhjpD/ZYgjxBHiiHBEOCIcEY4IR4QjxhHjiHHEOGIcMY4YR4Ij
wZHgSHAkOBIcKY4UR4ojxZHiSHFkODIcGY4MR4Yjw/FX/gOtjRsg
                 "]}], {{
                
                 Rational[-15, 2], 
                 Rational[-225, 2]}, {
                 Rational[15, 2], 
                 Rational[225, 2]}}], {Antialiasing -> False, 
               AbsoluteThickness[0.1], 
               Directive[
                Opacity[0.3], 
                GrayLevel[0]], 
               LineBox[
                NCache[{{
                   Rational[15, 2], 
                   Rational[-225, 2]}, {
                   Rational[-15, 2], 
                   Rational[-225, 2]}, {
                   Rational[-15, 2], 
                   Rational[225, 2]}, {
                   Rational[15, 2], 
                   Rational[225, 2]}, {
                   Rational[15, 2], 
                   Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5,
                  112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
               CapForm[None], {}}, 
              StyleBox[{Antialiasing -> False, 
                StyleBox[
                 LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]]}, StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -67.5}, 
                    Offset[{4., 0}, {7.5, -67.5}]}, {{
                    7.5, -22.499999999999996`}, 
                    Offset[{4., 0}, {7.5, -22.499999999999996`}]}, {{7.5, 
                    22.500000000000007`}, 
                    Offset[{4., 0}, {7.5, 22.500000000000007`}]}, {{7.5, 
                    67.5}, 
                    Offset[{4., 0}, {7.5, 67.5}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -103.49999999999999`}, 
                    Offset[{2.5, 0.}, {7.5, -103.49999999999999`}]}, {{
                    7.5, -94.5}, 
                    Offset[{2.5, 0.}, {7.5, -94.5}]}, {{7.5, -85.5}, 
                    Offset[{2.5, 0.}, {7.5, -85.5}]}, {{
                    7.5, -76.49999999999999}, 
                    Offset[{2.5, 0.}, {7.5, -76.49999999999999}]}, {{
                    7.5, -58.50000000000001}, 
                    Offset[{2.5, 0.}, {7.5, -58.50000000000001}]}, {{
                    7.5, -49.5}, 
                    Offset[{2.5, 0.}, {7.5, -49.5}]}, {{
                    7.5, -40.49999999999999}, 
                    Offset[{2.5, 0.}, {7.5, -40.49999999999999}]}, {{
                    7.5, -31.500000000000007`}, 
                    Offset[{2.5, 0.}, {7.5, -31.500000000000007`}]}, {{
                    7.5, -13.49999999999999}, 
                    Offset[{2.5, 0.}, {7.5, -13.49999999999999}]}, {{
                    7.5, -4.500000000000015}, 
                    Offset[{2.5, 0.}, {7.5, -4.500000000000015}]}, {{7.5, 
                    4.499999999999993}, 
                    Offset[{2.5, 0.}, {7.5, 4.499999999999993}]}, {{7.5, 
                    13.5}, 
                    Offset[{2.5, 0.}, {7.5, 13.5}]}, {{7.5, 
                    31.500000000000018`}, 
                    Offset[{2.5, 0.}, {7.5, 31.500000000000018`}]}, {{7.5, 
                    40.49999999999998}, 
                    Offset[{2.5, 0.}, {7.5, 40.49999999999998}]}, {{7.5, 
                    49.499999999999986`}, 
                    Offset[{2.5, 0.}, {7.5, 49.499999999999986`}]}, {{7.5, 
                    58.5}, 
                    Offset[{2.5, 0.}, {7.5, 58.5}]}, {{7.5, 
                    76.49999999999999}, 
                    Offset[{2.5, 0.}, {7.5, 76.49999999999999}]}, {{7.5, 
                    85.50000000000001}, 
                    Offset[{2.5, 0.}, {7.5, 85.50000000000001}]}, {{7.5, 
                    94.49999999999999}, 
                    Offset[{2.5, 0.}, {7.5, 94.49999999999999}]}, {{7.5, 
                    103.49999999999997`}, 
                    Offset[{2.5, 0.}, {7.5, 103.49999999999997`}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.001\"", ShowStringCharacters -> False], 
                    0.001, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 3}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -67.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.002\"", ShowStringCharacters -> False], 
                    0.002, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 3}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -22.499999999999996`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.003\"", ShowStringCharacters -> False], 
                    0.003, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 3}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 22.500000000000007`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.004\"", ShowStringCharacters -> False], 
                    0.004, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 3}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 67.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.005\"", ShowStringCharacters -> False], 
                    0.005, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 3}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}}, StripOnInput -> False], {
                    "GraphicsLabel"}, StripOnInput -> False]}, {
                  "GraphicsTicks"}, StripOnInput -> False], {{
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}}, StripOnInput -> False]}, {
               "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
             Scaled[0.02], PlotRange -> All, Frame -> True, 
             FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
             Opacity[0], FrameTicksStyle -> Opacity[0], 
             ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
            Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]},
       "BarLegend",
       DisplayFunction->(#& ),
       InterpretationFunction:>(RowBox[{"BarLegend", "[", 
          RowBox[{"{", 
            RowBox[{"GrayLevel", ",", 
              RowBox[{"{", 
                RowBox[{"0", ",", "0.005054138361410313`"}], "}"}]}], "}"}], 
          "]"}]& )], Scaled[{1.425, 0.5}], ImageScaled[{0, 0.5}],
      BaseStyle->{FontSize -> Larger},
      FormatType->StandardForm], InsetBox[
      TemplateBox[{
        FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            GraphicsBox[{
              RasterBox[
              SparseArray[
               Automatic, {201, 1}, 0., {
                1, {{0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
                  31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
                  46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 
                  61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 
                  76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 
                  91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
                   105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
                   117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
                   129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
                   141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
                   153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
                   165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
                   177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
                   189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 
                  200}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                  1}}}, CompressedData["
1:eJwt0jlMVFEUxvGxpYYWQ4c1tZ5SWqipTMRSTKywlVYoaLQgIZAYEzPBqBGN
GnBEhn32N/u8fV9sxtp5l/9NJrPdc873OzNzj54uP75TKBTKk8eL6eJDY/25
3D6/lMPZjWjp8BXvt+XNa3X4fEfipfzVLt/vy5S2t3Z/6i333sm9lc1f4/n3
3C/K/uRbbe+Aug+yoM5H6j9JaTw/qfhMny+yfFtIv69irOcXv9H3uzzL2639
oP9PKahzxJwjWVQFx8w7lrxqUsrckqgxWon5v+Vu3mb2hBwn8mQ1P3/Icyr5
reniKbnK8i+/Ni6T70weqIvn5DwX1W7jgryXcnWpDrmvZEY1vCb/tahrKzc4
Ksyp4Kkwr4Krytwqvirzazhr5KjhrZOnjrtOrgb+Bvka7KFJzib7aJK3xV5a
5G6xH438GnvScLRxtHG0cbRxdHB0cHRwdGVLObo4ujh6OHo4ejj6OPo4+jgG
OAY4BjiGOIY4hjhGOEY4Rjh05uh4dObpuHTm6vh05hs4DXIYeA3yGLgNcpn4
TfKZ/J4mOU32YZLXYi8WuS32Y5HfYk8WDhuHjcPGYeOwcdg4bBwODgeHg8PB
4eBwcLg4XBwuDheHi8PF4eHwcHg4PBweDg+Hj8PH4ePwcfg4fBw+jgBHgCPA
EeAIcAQ4QhwhjpD/ZYgjxBHiiHBEOCIcEY4IR4QjxhHjiHHEOGIcMY4YR4Ij
wZHgSHAkOBIcKY4UR4ojxZHiSHFkODIcGY4MR4Yjw/FX/gOtjRsg
                 "]}], {{
                
                 Rational[-15, 2], 
                 Rational[-225, 2]}, {
                 Rational[15, 2], 
                 Rational[225, 2]}}], {Antialiasing -> False, 
               AbsoluteThickness[0.1], 
               Directive[
                Opacity[0.3], 
                GrayLevel[0]], 
               LineBox[
                NCache[{{
                   Rational[15, 2], 
                   Rational[-225, 2]}, {
                   Rational[-15, 2], 
                   Rational[-225, 2]}, {
                   Rational[-15, 2], 
                   Rational[225, 2]}, {
                   Rational[15, 2], 
                   Rational[225, 2]}, {
                   Rational[15, 2], 
                   Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5,
                  112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
               CapForm[None], {}}, 
              StyleBox[{Antialiasing -> False, 
                StyleBox[
                 LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]]}, StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{
                    7.5, -66.76829268292683}, 
                    Offset[{4., 0}, {7.5, -66.76829268292683}]}, {{
                    7.5, -21.03658536585366}, 
                    Offset[{4., 0}, {7.5, -21.03658536585366}]}, {{7.5, 
                    24.69512195121951}, 
                    Offset[{4., 0}, {7.5, 24.69512195121951}]}, {{7.5, 
                    70.42682926829268}, 
                    Offset[{4., 0}, {7.5, 70.42682926829268}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -103.35365853658536`}, 
                    Offset[{2.5, 0.}, {7.5, -103.35365853658536`}]}, {{
                    7.5, -94.20731707317073}, 
                    Offset[{2.5, 0.}, {7.5, -94.20731707317073}]}, {{
                    7.5, -85.0609756097561}, 
                    Offset[{2.5, 0.}, {7.5, -85.0609756097561}]}, {{
                    7.5, -75.91463414634147}, 
                    Offset[{2.5, 0.}, {7.5, -75.91463414634147}]}, {{
                    7.5, -57.62195121951219}, 
                    Offset[{2.5, 0.}, {7.5, -57.62195121951219}]}, {{
                    7.5, -48.47560975609756}, 
                    Offset[{2.5, 0.}, {7.5, -48.47560975609756}]}, {{
                    7.5, -39.329268292682926`}, 
                    Offset[{2.5, 0.}, {7.5, -39.329268292682926`}]}, {{
                    7.5, -30.182926829268297`}, 
                    Offset[{2.5, 0.}, {7.5, -30.182926829268297`}]}, {{
                    7.5, -11.89024390243904}, 
                    Offset[{2.5, 0.}, {7.5, -11.89024390243904}]}, {{
                    7.5, -2.7439024390243856`}, 
                    Offset[{2.5, 0.}, {7.5, -2.7439024390243856`}]}, {{7.5, 
                    6.402439024390233}, 
                    Offset[{2.5, 0.}, {7.5, 6.402439024390233}]}, {{7.5, 
                    15.548780487804871`}, 
                    Offset[{2.5, 0.}, {7.5, 15.548780487804871`}]}, {{7.5, 
                    33.84146341463415}, 
                    Offset[{2.5, 0.}, {7.5, 33.84146341463415}]}, {{7.5, 
                    42.987804878048784`}, 
                    Offset[{2.5, 0.}, {7.5, 42.987804878048784`}]}, {{7.5, 
                    52.1341463414634}, 
                    Offset[{2.5, 0.}, {7.5, 52.1341463414634}]}, {{7.5, 
                    61.28048780487802}, 
                    Offset[{2.5, 0.}, {7.5, 61.28048780487802}]}, {{7.5, 
                    79.57317073170734}, 
                    Offset[{2.5, 0.}, {7.5, 79.57317073170734}]}, {{7.5, 
                    88.71951219512192}, 
                    Offset[{2.5, 0.}, {7.5, 88.71951219512192}]}, {{7.5, 
                    97.86585365853657}, 
                    Offset[{2.5, 0.}, {7.5, 97.86585365853657}]}, {{7.5, 
                    107.01219512195122`}, 
                    Offset[{2.5, 0.}, {7.5, 107.01219512195122`}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0025\"", ShowStringCharacters -> False], 
                    0.0025, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 4}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -66.76829268292683}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0050\"", ShowStringCharacters -> False], 
                    0.005, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 4}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -21.03658536585366}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0075\"", ShowStringCharacters -> False], 
                    0.0075, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 4}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 24.69512195121951}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.0100\"", ShowStringCharacters -> False], 
                    0.01, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 4}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 70.42682926829268}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}}, StripOnInput -> False], {
                    "GraphicsLabel"}, StripOnInput -> False]}, {
                  "GraphicsTicks"}, StripOnInput -> False], {{
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}}, StripOnInput -> False]}, {
               "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
             Scaled[0.02], PlotRange -> All, Frame -> True, 
             FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
             Opacity[0], FrameTicksStyle -> Opacity[0], 
             ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
            Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]},
       "BarLegend",
       DisplayFunction->(#& ),
       InterpretationFunction:>(RowBox[{"BarLegend", "[", 
          RowBox[{"{", 
            RowBox[{"GrayLevel", ",", 
              RowBox[{"{", 
                RowBox[{"0", ",", "0.012293531872030965`"}], "}"}]}], "}"}], 
          "]"}]& )], Scaled[{0.5, 0.5}], ImageScaled[{0.5, 0.5}],
      BaseStyle->{FontSize -> Larger},
      FormatType->StandardForm]}},
   DisplayFunction->Identity,
   ImageSize->Full,
   PlotRangePadding->{6, 5}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{
        Inset[
         Graphics[{
           Raster[CompressedData["
1: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
MT6R/cvZlDzFVLH/B0U6TEo=
            "], {{0, 0}, {10, 9}}, {0, 1}], {{
            Antialiasing -> False, 
             GrayLevel[-1 + GoldenRatio], 
             
             Line[{{{0, 9}, {10, 9}}, {{0, 8}, {10, 8}}, {{0, 7}, {10, 7}}, {{
              0, 6}, {10, 6}}, {{0, 5}, {10, 5}}, {{0, 4}, {10, 4}}, {{0, 
              3}, {10, 3}}, {{0, 2}, {10, 2}}, {{0, 1}, {10, 1}}, {{0, 0}, {
              10, 0}}}]}, {Antialiasing -> False, 
             GrayLevel[-1 + GoldenRatio], 
             
             Line[{{{0, 0}, {0, 9}}, {{1, 0}, {1, 9}}, {{2, 0}, {2, 9}}, {{3, 
              0}, {3, 9}}, {{4, 0}, {4, 9}}, {{5, 0}, {5, 9}}, {{6, 0}, {6, 
              9}}, {{7, 0}, {7, 9}}, {{8, 0}, {8, 9}}, {{9, 0}, {9, 9}}, {{10,
               0}, {10, 9}}}]}}}, {
          DisplayFunction -> Identity, 
           ImagePadding -> {{80.00000000000001, 14.999999999999886`}, {
            50.000000000000114`, 16.000000000000057`}}, 
           Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{
             "Ambient N (mol N \!\(\*SuperscriptBox[\(L\), \(-1\)]\))", 
              None}, {"Prey (C-mol \!\(\*SuperscriptBox[\(L\), \(-1\)]\))", 
              None}}, FrameStyle -> Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{{{
               8.5, "10\[Times]\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, {
               7.5, "7.5\[Times]\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, {
               6.5, "5\[Times]\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, {
               5.5, "2.5\[Times]\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, {
               4.5, "1\[Times]\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, {
               3.5, "0.75\[Times]\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, {
               2.5, "0.5\[Times]\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, {
               1.5, "0.25\[Times]\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, {
               0.5, "0.1\[Times]\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}}, 
              None}, {{{0.5, 0}, {
               2.5, "0.25\[Times]\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, {
               4.5, "0.75\[Times]\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, {
               6.5, "1.25\[Times]\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, {
               8.5, "1.75\[Times]\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}}, 
              None}}, FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {50, 0}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
             Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02],
              "RangePadding" -> Scaled[0.05]}, PlotLabel -> 
           "a) dH/Hdt with fish-dH/Hdt without fish"}], {
          Rational[941, 2], -422}, 
         ImageScaled[{0.5, 0.5}], {931, 836}], 
        Inset[
         Graphics[{
           Raster[CompressedData["
1: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
f9VqHhinIiNCd2Rmho4W5zqbmTgm/gcK00VC
            "], {{0, 0}, {11, 10}}, {0, 
            1}], {{Antialiasing -> False, 
             GrayLevel[-1 + GoldenRatio], 
             
             Line[{{{0, 10}, {11, 10}}, {{0, 9}, {11, 9}}, {{0, 8}, {11, 
              8}}, {{0, 7}, {11, 7}}, {{0, 6}, {11, 6}}, {{0, 5}, {11, 5}}, {{
              0, 4}, {11, 4}}, {{0, 3}, {11, 3}}, {{0, 2}, {11, 2}}, {{0, 
              1}, {11, 1}}, {{0, 0}, {11, 0}}}]}, {Antialiasing -> False, 
             GrayLevel[-1 + GoldenRatio], 
             
             Line[{{{0, 0}, {0, 10}}, {{1, 0}, {1, 10}}, {{2, 0}, {2, 10}}, {{
              3, 0}, {3, 10}}, {{4, 0}, {4, 10}}, {{5, 0}, {5, 10}}, {{6, 
              0}, {6, 10}}, {{7, 0}, {7, 10}}, {{8, 0}, {8, 10}}, {{9, 0}, {9,
               10}}, {{10, 0}, {10, 10}}, {{11, 0}, {11, 10}}}]}}}, {
          DisplayFunction -> Identity, 
           ImagePadding -> {{79.99999999999999, 15.000000000000227`}, {
            50.000000000000114`, 16.000000000000057`}}, 
           Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{
             "Flushing rate (\!\(\*SuperscriptBox[\(d\), \(-1\)]\))", None}, {
             "Fish:host biomass scalar (g C-mol \!\(\*SuperscriptBox[\(H\), \
\(-1\)]\))", None}}, FrameStyle -> Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{{{9.5, "4050"}, {8.5, "3650"}, {7.5, "3250"}, {
               6.5, "2850"}, {5.5, "2450"}, {4.5, "2050"}, {3.5, "1650"}, {
               2.5, "1250"}, {1.5, "850"}, {0.5, "450"}}, 
              None}, {{{0.5, 150}, {1.5, 175}, {2.5, 200}, {3.5, 225}, {
               4.5, 250}, {5.5, 275}, {6.5, 300}, {7.5, 325}, {8.5, 350}, {
               9.5, 375}, {10.5, 400}}, None}}, FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {50, 0}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
             Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02],
              "RangePadding" -> Scaled[0.05]}, PlotLabel -> 
           "b) dH/Hdt with fish- dH/Hdt without fish"}], {1441.5, -422}, 
         ImageScaled[{0.5, 0.5}], {931, 844}]}}, {}}, ImageSize -> Full, {
     PlotRangePadding -> {6, 5}}, ImageSize -> Full], {
     Placed[
      BarLegend[{GrayLevel, {0, 0.005054138361410313}}], {1.425, 0.5}], 
     Placed[
      BarLegend[{GrayLevel, {0, 0.012293531872030965`}}], {0.5, 0.5}]}]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.842905203800481*^9, 3.842905210706834*^9}, 
   3.842905253417576*^9, {3.842905311355279*^9, 3.842905336335731*^9}, 
   3.842905368315897*^9, {3.842905502133009*^9, 3.842905529906546*^9}, {
   3.842906196213805*^9, 3.842906223864068*^9}, 3.842906794264119*^9, {
   3.842906828941021*^9, 3.842906864544538*^9}, {3.842907148218112*^9, 
   3.842907190885181*^9}, 3.8429080922167788`*^9, 3.84290826714034*^9, 
   3.842908325299736*^9, 3.842908377462854*^9, 3.842908746317391*^9, {
   3.842908788939193*^9, 3.842908796949677*^9}, {3.842908827999874*^9, 
   3.842908917597691*^9}, {3.8429089496805468`*^9, 3.842908992909121*^9}, {
   3.8429886854903812`*^9, 3.84298870670424*^9}, {3.84331814416626*^9, 
   3.843318159299214*^9}, {3.844509856651271*^9, 3.8445098678172207`*^9}, {
   3.846150085448176*^9, 3.846150126885292*^9}, 3.854044404219198*^9},
 CellLabel->
  "Out[373]=",ExpressionUUID->"a1aa53d5-57a0-4545-8676-817eaeed8fbd"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fig. S3: Fish: host biomass at different fish growth rates", "Section",
 CellChangeTimes->{{3.8428199682244368`*^9, 3.842819980879208*^9}, {
  3.845644398266137*^9, 
  3.845644400782077*^9}},ExpressionUUID->"677b1ddd-a248-454f-847a-\
6bbca111f75c"],

Cell[CellGroupData[{

Cell["Run the simulations and format results", "Subsection",
 CellChangeTimes->{{3.8428200286013203`*^9, 3.842820031600466*^9}, {
  3.842820121386272*^9, 3.842820124626491*^9}, {3.842821521322897*^9, 
  3.842821522108264*^9}},ExpressionUUID->"ee1dbd80-d7f7-4ca7-847a-\
75e78deb7b73"],

Cell[CellGroupData[{

Cell["Run simulations", "Subsubsection",
 CellChangeTimes->{{3.842820128997376*^9, 
  3.842820139397163*^9}},ExpressionUUID->"aea14744-c22e-4fd3-ab01-\
6958ba0eb59a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.831830789369714*^9, 3.8318307905412607`*^9}, {
   3.835995882215592*^9, 3.83599588299831*^9}, {3.8363089619914494`*^9, 
   3.836308970966587*^9}, {3.836309185335792*^9, 3.8363091870313787`*^9}, 
   3.8363138138722897`*^9, 3.837773092544219*^9, {3.837802551930813*^9, 
   3.837802553175206*^9}},
 CellLabel->
  "In[611]:=",ExpressionUUID->"6cb4a485-df97-46c0-8546-a7be07c658ba"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"environment", ":", " ", 
    RowBox[{"flushing", " ", "rate", " ", "and", " ", "N", " ", "level"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", "=", "0"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"no", " ", "prey"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P0", "=", 
     RowBox[{"kp", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H0"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"jN", "=", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"jNi0", " ", "=", " ", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "2000"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "use", " ", "nested", " ", "Table", " ", "to", " ", "simulate", " ", 
     "the", " ", "model", " ", "at", " ", "different", " ", "levels", " ", 
     "of", " ", "nitrogen", " ", 
     RowBox[{"(", 
      RowBox[{
      "corresponding", " ", "to", " ", "different", " ", "steady", " ", 
       "state", " ", "host", " ", "growth", " ", "rates"}], ")"}], " ", "and",
      " ", "different", " ", "fish", " ", "growth", " ", "rates"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PHrpRuns", "=", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"jX", "=", 
              FractionBox[
               RowBox[{"jXm", " ", "X"}], 
               RowBox[{"X", "+", "KX"}]]}], ",", " ", 
             RowBox[{"jN", "=", 
              FractionBox[
               RowBox[{"jNm", " ", "\[CapitalNu]"}], 
               RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", 
             RowBox[{"jHT", "=", "j0HT"}], ",", 
             RowBox[{"rNS", "=", 
              RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
             RowBox[{"VH0", "=", 
              RowBox[{"kv", "*", "H0"}]}], ",", " ", 
             RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
             RowBox[{"jNi0", " ", "=", " ", 
              FractionBox[
               RowBox[{"jNm", " ", "\[CapitalNu]"}], 
               RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", "states", ",", 
             " ", "rNH", ",", " ", "S", ",", "H", ",", "VH", ",", "P", ",", 
             "Ni", ",", "jNi", ",", "\[Rho]C", ",", " ", "jCP", ",", " ", 
             "jHG", ",", "\[Rho]N", ",", "jeC", ",", "jCO2", ",", "A", ",", 
             "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", ",", 
             "cROS1", ",", "jSG", ",", "jST", ",", "jNw", ",", "F", ",", "fh",
              ",", "tsolve", ",", " ", "addtimetostatevars", ",", "eqs", ",", 
             "inis", ",", "sol", ",", "t", ",", "steadyHGrowth", ",", 
             "steadyPH"}], 
            RowBox[{"(*", 
             RowBox[{
             "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
              "intermediate", " ", "output", " ", "values", " ", "in", " ", 
              "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
              RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
             FractionBox[
              RowBox[{"A", " ", "B", " ", 
               RowBox[{"(", 
                RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
              RowBox[{
               RowBox[{
                SuperscriptBox["A", "2"], " ", "B"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox["B", "2"]}], "+", 
               RowBox[{
                SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
               RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
               RowBox[{
                SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
            RowBox[{"(*", 
             RowBox[{"same", " ", "as", " ", 
              FractionBox["1", 
               RowBox[{
                FractionBox["1", "\[Rho]"], "+", 
                FractionBox["1", "A"], "+", 
                FractionBox["1", "B"], "-", 
                FractionBox["1", 
                 RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fh", "[", 
              RowBox[{
               RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
             RowBox[{"Piecewise", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", 
                  RowBox[{"y", "<", "0"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"kv", " ", "*", "y"}], ",", 
                  RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
              "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", "Calculations", " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"jHG", "=", 
             RowBox[{
              RowBox[{"F", "[", "jHGm", "]"}], "[", 
              RowBox[{
               RowBox[{"yC", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Rho]C", " ", 
                   RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                  
                  RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                  RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                SuperscriptBox["nNH", 
                 RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"jSG", "=", 
             RowBox[{
              RowBox[{"F", "[", "jSGm", "]"}], "[", 
              RowBox[{
               RowBox[{"jCP", " ", "yC"}], ",", 
               FractionBox[
                RowBox[{"rNS", "+", 
                 FractionBox[
                  RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"\[Rho]N", "=", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
                RowBox[{"nNH", " ", "jHG"}]}], " ", 
               RowBox[{"(*", 
                SuperscriptBox["yN", 
                 RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jeC", "=", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"jX", "-", 
                FractionBox["jHG", "yC"], "+", 
                FractionBox[
                 RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], 
            ";", " ", "\[IndentingNewLine]", 
            RowBox[{"jCO2", "=", 
             RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jL", "=", 
             RowBox[{"A", " ", "astar", " ", "L"}]}], " ", ";", 
            "\[IndentingNewLine]", 
            RowBox[{"rCH", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"jHT", "+", 
                FractionBox[
                 RowBox[{"jHG", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
              "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"rCS", "=", 
             RowBox[{"\[Sigma]CS", 
              RowBox[{"(", 
               RowBox[{"j0ST", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
                 SuperscriptBox["yC", 
                  RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jeL", "=", 
             RowBox[{"jL", "-", 
              FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jNPQ", "=", 
             FractionBox["1", 
              RowBox[{
               FractionBox["1", "jeL"], "+", 
               FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
            RowBox[{"cROS1", "=", 
             FractionBox[
              RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jST", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"rNH", "=", 
             RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"A", "=", 
             RowBox[{"1.256307", "+", 
              RowBox[{"1.385969", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "6.479055"}], " ", 
                 RowBox[{"S", "/", "H"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jNw", "=", " ", 
             RowBox[{
              RowBox[{"\[Rho]N", "*", 
               RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
              RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"tsolve", "=", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Rho]C", ",", 
                 RowBox[{"jCP", "-", 
                  RowBox[{"jSG", " ", 
                   SuperscriptBox["yC", 
                    RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"jCP", ",", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"F", "[", "jCPm", "]"}], "[", 
                   RowBox[{
                    RowBox[{"jL", " ", "yCL"}], ",", 
                    RowBox[{"rCS", "+", 
                    FractionBox[
                    RowBox[{"H", " ", 
                    RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
                  RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"jNi", ",", " ", 
                 FractionBox[
                  RowBox[{"jNm", " ", "*", "Ni"}], 
                  RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
              "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"states", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"tsolve", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
                "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"addtimetostatevars", "=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"#", "\[Rule]", 
                  RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", 
               "states"}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
            RowBox[{"eqs", "=", 
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
                   "\[Equal]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Lambda]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
                "tsolve"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"S", 
                    RowBox[{"(", 
                    RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"H", 
                    RowBox[{"(", 
                    RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                  RowBox[{"fh", "[", 
                   RowBox[{"t", ",", "  ", 
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"d", "*", 
                    RowBox[{"(", " ", 
                    RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                    " ", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                    ")"}], "/", 
                    RowBox[{"(", " ", 
                    RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
                  
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"P", "*", 
                    RowBox[{"(", 
                    RowBox[{"rp", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                    ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
                "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"inis", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], 
                   "\[Equal]", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
                "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"sol", "=", 
             RowBox[{
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Join", "[", 
                  RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"#", "&"}], "/@", "states"}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
                RowBox[{"Method", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<EquationSimplification\>\"", "\[Rule]", 
                   "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "steady", " ", "state", " ", "host", " ", "growth", " ", 
              "rate"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"steadyHGrowth", "=", 
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
                RowBox[{"H", "[", "tmax", "]"}]}], "/.", "sol"}], "]"}]}], 
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "steady", " ", "state", " ", "fish", " ", "to", " ", 
              "interstitial", " ", "host", " ", "biomass", " ", "ratio"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"steadyPH", "=", 
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"P", "[", "tmax", "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", 
                  RowBox[{"H", "[", "tmax", "]"}]}], ")"}]}], "/.", "sol"}], 
              "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"steadyHGrowth", ",", "steadyPH"}], "}"}]}]}], 
          RowBox[{"(*", 
           RowBox[{
           "record", " ", "the", " ", "steady", " ", "state", " ", "host", 
            " ", "growth", " ", "rate", " ", "and", " ", 
            RowBox[{"P", "/", "H"}], " ", "ratio", " ", "as", " ", "output"}],
            "*)"}], "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         
         RowBox[{"{", 
          RowBox[{"rp", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0.01", ",", " ", "0.05", ",", "0.1"}], "}"}]}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "repeat", " ", "this", " ", "for", " ", "different", " ", "fish", " ",
          "growth", " ", "rates"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\[CapitalNu]", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.1", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"0.5", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"2", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"2.5", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"3", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"4", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"5", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"6", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"7", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"8", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"9", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"0.1", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "5"}]}]}], ",", 
           RowBox[{"0.125", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "5"}]}]}], ",", 
           RowBox[{"0.15", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "5"}]}]}], ",", 
           RowBox[{"0.175", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "5"}]}]}], ",", 
           RowBox[{"0.2", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "5"}]}]}], ",", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"0.25", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "5"}]}]}], ","}], "*)"}], 
           RowBox[{"0.3", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "5"}]}]}], ",", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"0.35", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "5"}]}]}], ","}], "*)"}], 
           RowBox[{"0.4", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "5"}]}]}], ",", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"0.45", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "5"}]}]}], ","}], "*)"}], 
           RowBox[{"0.5", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "5"}]}]}]}], "}"}]}], "}"}]}], 
      RowBox[{"(*", 
       RowBox[{
       "repeat", " ", "this", " ", "for", " ", "different", " ", "levels", 
        " ", "of", " ", "Nenv"}], "*)"}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836576641311953*^9, 3.836576745811816*^9}, {3.8365767807913227`*^9, 
   3.836576796666417*^9}, {3.83690984159394*^9, 3.8369098642372837`*^9}, {
   3.8369099504464817`*^9, 3.836909992597097*^9}, {3.836910066716194*^9, 
   3.836910181553328*^9}, {3.8369102578063707`*^9, 3.836910390882205*^9}, {
   3.8369104221261673`*^9, 3.8369104445293837`*^9}, {3.836910588258913*^9, 
   3.836910603839734*^9}, {3.83691170755369*^9, 3.836911723135646*^9}, 
   3.836916782182846*^9, {3.8369173444379473`*^9, 3.836917364496358*^9}, {
   3.836917449889654*^9, 3.836917475981286*^9}, {3.837107328225185*^9, 
   3.837107332173369*^9}, {3.8371075597994823`*^9, 3.837107563466825*^9}, {
   3.837773110694345*^9, 3.8377731127676287`*^9}, {3.837773150885858*^9, 
   3.837773169248885*^9}, {3.837773237436639*^9, 3.837773308205606*^9}, 
   3.837773447121921*^9, {3.8377747975940113`*^9, 3.837774879811672*^9}, {
   3.837774983052836*^9, 3.837774988350119*^9}, {3.837780632811754*^9, 
   3.837780636242194*^9}, {3.8377807833826427`*^9, 3.837780784168919*^9}, {
   3.837784015318783*^9, 3.83778401893978*^9}, {3.837802101212085*^9, 
   3.837802103635435*^9}, {3.837802548578285*^9, 3.837802549655418*^9}, {
   3.840057216644158*^9, 3.840057227412795*^9}, {3.840057265283814*^9, 
   3.840057268898093*^9}, {3.840057337137958*^9, 3.8400573839016237`*^9}, {
   3.840057422150346*^9, 3.840057435591868*^9}, {3.840057506768424*^9, 
   3.840057535586178*^9}, 3.840057643044595*^9, 3.84005775624951*^9, {
   3.840058008673091*^9, 3.840058015630992*^9}, {3.8400580671609297`*^9, 
   3.84005808330774*^9}, {3.840386039595933*^9, 3.840386063427067*^9}, {
   3.8428202364720287`*^9, 3.842820242294964*^9}, 3.843928174140486*^9, {
   3.8444495023363667`*^9, 3.844449512150495*^9}, {3.844449709732353*^9, 
   3.844449713078383*^9}, {3.844449761998991*^9, 3.844449775912919*^9}, {
   3.844449808827138*^9, 3.844450008124826*^9}, {3.8444500521766768`*^9, 
   3.8444500636802588`*^9}, {3.8444501893157873`*^9, 
   3.8444502083915453`*^9}, {3.844450519961941*^9, 3.8444505301502333`*^9}, {
   3.844450624274338*^9, 3.844450641841823*^9}, {3.844450762085235*^9, 
   3.844450809781457*^9}, {3.854025384469584*^9, 3.85402540514589*^9}},
 CellLabel->
  "In[612]:=",ExpressionUUID->"ae4f95e1-92f3-4be5-879f-6fce85e7bcc9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get the results in the correct form to plot and save output", \
"Subsubsection",
 CellChangeTimes->{{3.836915635258505*^9, 3.836915645073258*^9}, {
  3.842820315412385*^9, 
  3.842820324058515*^9}},ExpressionUUID->"c2b038ee-9a35-498c-8172-\
1b8f52e11602"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "transpose", " ", "the", " ", "output", " ", "to", " ", "change", " ", 
    "the", " ", "nested", " ", "list", " ", "from", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"rp1", " ", "at", " ", "Nenv1"}], ",", " ", 
        RowBox[{"rp2", " ", "at", " ", "N1"}], ",", " ", 
        RowBox[{"rp3", " ", "at", " ", "N1"}]}], "}"}], ",", " ", 
      RowBox[{"{", "N2", "}"}], ",", " ", 
      RowBox[{"...", 
       RowBox[{"{", "Nn", "}"}]}]}], "}"}], " ", "to", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"N1", ",", " ", "N2", ",", " ", 
        RowBox[{"...", " ", "Nn", " ", "at", " ", "rp1"}]}], "}"}], ",", " ", 
      
      RowBox[{"{", "rp2", "}"}]}], "}"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PHrpseparate", "=", 
     RowBox[{"Transpose", "[", "PHrpRuns", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"fish", " ", "rp"}], "=", "01"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PHrp01", "=", 
     RowBox[{"PHrpseparate", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"separatePHrp01", "=", 
     RowBox[{"Transpose", "[", "PHrp01", "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"group", " ", "each", " ", "output", " ", "together"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PHrp01growth", "=", 
     RowBox[{"separatePHrp01", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"dH", "/", "Hdt"}], " ", "values", " ", "at", " ", "each", " ", 
     "Nenv"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PHrp01PH", "=", 
     RowBox[{"separatePHrp01", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"P", "/", "H"}], " ", "values", " ", "at", " ", "each", " ", 
     "Nenv"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"fish", " ", "rp"}], "=", "05"}], "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"PHrp05", "=", 
     RowBox[{"PHrpseparate", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"separatePHrp05", "=", 
     RowBox[{"Transpose", "[", "PHrp05", "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"group", " ", "each", " ", "output", " ", "together"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PHrp05growth", "=", 
     RowBox[{"separatePHrp05", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"dH", "/", "Hdt"}], " ", "values", " ", "at", " ", "each", " ", 
     "Nenv"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PHrp05PH", "=", 
     RowBox[{"separatePHrp05", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"P", "/", "H"}], " ", "values", " ", "at", " ", "each", " ", 
     "Nenv"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"fish", " ", "rp"}], "=", "1"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PHrp1", "=", 
     RowBox[{"PHrpseparate", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"separatePHrp1", "=", 
     RowBox[{"Transpose", "[", "PHrp1", "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"group", " ", "each", " ", "output", " ", "together"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PHrp1growth", "=", 
     RowBox[{"separatePHrp1", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"dH", "/", "Hdt"}], " ", "values", " ", "at", " ", "each", " ", 
     "Nenv"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PHrp1PH", "=", 
     RowBox[{"separatePHrp1", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"P", "/", "H"}], " ", "values", " ", "at", " ", "each", " ", 
     "Nenv"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "get", " ", "the", " ", "lists", " ", "in", " ", "a", " ", "form", " ", 
     "to", " ", 
     RowBox[{"plot", ":", " ", 
      RowBox[{"want", " ", "to", " ", "plot", " ", 
       RowBox[{"P", "/", "H"}], " ", "as", " ", "a", " ", "function", " ", 
       "of", " ", "host", " ", "growth", " ", "rate"}]}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PHgrowthrp01Plot", "=", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{"PHrp01growth", ",", "PHrp01PH"}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PHgrowthrp05Plot", "=", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{"PHrp05growth", ",", "PHrp05PH"}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PHgrowthrp1Plot", "=", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{"PHrp1growth", ",", "PHrp1PH"}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8369129531410427`*^9, 3.836913008973792*^9}, {
   3.836913091490144*^9, 3.8369130922671757`*^9}, {3.83691317151867*^9, 
   3.8369131987122173`*^9}, {3.836913230715218*^9, 3.8369133075790777`*^9}, {
   3.836913339555049*^9, 3.8369134469392967`*^9}, 3.836913583655624*^9, {
   3.8369141531939917`*^9, 3.836914213205305*^9}, {3.8369152684721603`*^9, 
   3.836915406389106*^9}, {3.8369154677176*^9, 3.8369154915523663`*^9}, {
   3.83691758259182*^9, 3.836917741013721*^9}, {3.837773468798688*^9, 
   3.837773493926036*^9}, {3.8377735251999903`*^9, 3.8377735696337442`*^9}, {
   3.8377736146903152`*^9, 3.837773790070202*^9}, {3.837773841587611*^9, 
   3.8377738944612923`*^9}, {3.837774136463019*^9, 3.8377741385577793`*^9}, {
   3.8377750287229643`*^9, 3.8377751672546387`*^9}, {3.837775230452544*^9, 
   3.8377753708937807`*^9}, {3.842820349138947*^9, 3.842820350573593*^9}, {
   3.8444505803053417`*^9, 3.844450595861185*^9}, {3.8444507248961077`*^9, 
   3.844450728620632*^9}, 3.844450890767374*^9, {3.844450961990384*^9, 
   3.8444509956864557`*^9}, {3.8444510285071487`*^9, 3.8444511393652*^9}, {
   3.844451207904195*^9, 3.8444512553571787`*^9}},
 CellLabel->
  "In[618]:=",ExpressionUUID->"1b1441b7-d6cf-4eea-9360-c849d906e491"],

Cell[BoxData[{
 RowBox[{"Save", "[", 
  RowBox[{"\"\<rp01\>\"", ",", "PHgrowthrp01Plot"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Save", "[", 
  RowBox[{"\"\<rp05\>\"", ",", "PHgrowthrp05Plot"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Save", "[", 
  RowBox[{"\"\<rp1\>\"", ",", "PHgrowthrp1Plot"}], "]"}]}], "Input",
 CellChangeTimes->{{3.84005789611762*^9, 3.8400579384555473`*^9}},
 CellLabel->
  "In[634]:=",ExpressionUUID->"cc7cc833-298c-4f68-b44c-51f2f30ffece"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", "\"\<rp01\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<rp05\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<rp1\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.842820372110998*^9, 3.8428204167875443`*^9}},
 CellLabel->
  "In[637]:=",ExpressionUUID->"0f61b7f5-c295-4aaf-848e-e5262ab7abfc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot results", "Subsubsection",
 CellChangeTimes->{{3.837774187403211*^9, 
  3.837774189936574*^9}},ExpressionUUID->"76cb288d-6d5f-4c1c-94e8-\
960cc62b82dc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PHGrowthLeg", "=", 
    RowBox[{"LineLegend", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", "  ", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<0.01 \!\(\*SuperscriptBox[\(d\), \(-1\)]\)\>\"", ",", 
        "\"\<0.05 \!\(\*SuperscriptBox[\(d\), \(-1\)]\)\>\"", ",", 
        "\"\<0.1 \!\(\*SuperscriptBox[\(d\), \(-1\)]\)\>\""}], "}"}], ",", 
      " ", 
      RowBox[{"LabelStyle", "\[Rule]", " ", 
       RowBox[{"{", "18", "}"}]}], ",", " ", 
      RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
      RowBox[{
      "LegendLabel", "\[Rule]", " ", 
       "\"\<Fish growth rate (\!\(\*SubscriptBox[\(r\), \(P\)]\))\>\""}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Legended", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "PHgrowthrp01Plot", ",", "PHgrowthrp05Plot", ",", "PHgrowthrp1Plot"}], 
      "}"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", " ", "10"}], "}"}]}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<Ratio of fish to host interstitial biomass at varying host and \
fish growth rates\>\""}], ","}], "*)"}], 
     RowBox[{"ImageSize", "\[Rule]", " ", "Full"}], ",", " ", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
        RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", " ",
         "18"}], 
       RowBox[{"(*", 
        RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", "  ", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"Frame", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"True", 
          RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
         RowBox[{"(*", "right", "*)"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"True", 
          RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
         RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"(*", "True", "*)"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.00005", ",", " ", "0.0001", ",", " ", "0.00015"}], 
             "}"}], ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"(*", "None", "*)"}], 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "*", 
                 SuperscriptBox["10", 
                  RowBox[{"-", "7"}]]}], ",", " ", 
                "\"\<1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"2", "*", 
                 SuperscriptBox["10", 
                  RowBox[{"-", "7"}]]}], ",", " ", 
                "\"\<2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], "}"}]}],
              "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], "*)"}], 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Fish: host biomass ratio (g fish C-mol \!\(\*SuperscriptBox[\(H\
\), \(-1\)]\))\>\"", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Host specific growth rate (C-mol H C-mol \
\!\(\*SuperscriptBox[\(H\), \(-1\)]\) \!\(\*SuperscriptBox[\(d\), \
\(-1\)]\))\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "14"}], 
       RowBox[{"(*", 
        RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", " ", 
     
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "18"}], "]"}]}], 
     RowBox[{"(*", 
      RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], ",", " ", 
     RowBox[{"AspectRatio", "\[Rule]", "0.7"}]}], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<rp=0.01\>\"", ",", "\"\<rp=0.05\>\"", ",", "\"\<rp=0.1\>\""}], 
        "}"}]}], ",", 
      RowBox[{"PlotMarkers", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", " ", "6"}], "}"}]}]}], "*)"}], "]"}], ",", 
   " ", 
   RowBox[{"Placed", "[", 
    RowBox[{"PHGrowthLeg", ",", 
     RowBox[{"{", 
      RowBox[{"Right", 
       RowBox[{"(*", 
        RowBox[{
        "left", " ", "to", " ", "right", " ", "position", " ", "is", " ", 
         "in", " ", "the", " ", "center"}], "*)"}], ",", "0.8"}], 
      RowBox[{"(*", 
       RowBox[{"top", " ", "to", " ", "bottom", " ", "position"}], "*)"}], 
      "}"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.83778071199897*^9, {3.837783432610503*^9, 3.837783433789564*^9}, 
   3.8400578859060793`*^9, {3.8400582826699657`*^9, 3.8400583480859003`*^9}, {
   3.8403862178264112`*^9, 3.840386225666905*^9}, {3.842820446002541*^9, 
   3.842820446681086*^9}, {3.8428204914565907`*^9, 3.842820671994863*^9}, {
   3.842820707078768*^9, 3.842820707415103*^9}, {3.842820966967793*^9, 
   3.84282098505851*^9}, {3.8428211446011963`*^9, 3.842821253948831*^9}, {
   3.8432063909960623`*^9, 3.843206413575699*^9}, 3.843206454792459*^9, {
   3.843206488872644*^9, 3.843206524862653*^9}, {3.8432065790236464`*^9, 
   3.8432065882262793`*^9}, {3.843206622839424*^9, 3.843206635859374*^9}, {
   3.8445111305800457`*^9, 3.84451113244779*^9}, 3.8447848528254766`*^9, {
   3.845644379765733*^9, 3.845644381225935*^9}},
 CellLabel->
  "In[640]:=",ExpressionUUID->"ce9b7b6c-9c20-4f78-a302-fa58e38336ff"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         NCache[
          Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAtsSxWx8qWD9NI0VV4GBmQPNkjx5I
p2o/sMRvtZW1YUBLCMCpNC92Py5J5grAEFhAlvVfSPS3gz/P5ZxYhvUoQLlf
96PbL4k/x2PKNbZW0j+971iD0PqOP2+qD3Kw0l4/swz2IAfvlD/qEi4Gcqdz
Powecb1M8Jk/14W2Mr2Wlj0SEIl9+oyeP3WZh5hGlck8lXeJ0ohnoT86RXCI
frwLPCBUsoeYX6M/WZPOk2d1WztrwyUObzKlP2yp8uGupbc6p4hydV3jpj9s
1k6/IewgOn0PKAv6m6o/tGLqmF5M0jjZTcL62ritPwYjYB3YFro3dzNawAUs
sD9t/G6+QUzPNooBXuaiSLE/MVhJm2UXBjY/BPBKZl+0P6OwNYEmRtoza7Yb
Os0wtj+8x8epXSGTMuNlYTZuXLc/eBu4rE76wDGYV5gM
         "]]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         NCache[
          Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAa6V4H+LCYD9YSg6yAi1pQChJAa8y
aHI/q0vI/wTkZ0ADakWJT3h+P6w3WFQ0WGZAKvrDdB6Sij/onPLuSnBjQC4C
nwBc548/wsZHC1ESYkCTE/sg7oOSP2tC0CXcwWBA99MreRVblz/SMWxsGo1c
QNve86HL2Js/b7pMLjPyV0AVck3+0wKgPyk+aTwzqlNA/faG6nr0oT8LdOPh
P1tPQIWKKb5/xKM/O8Qb1wvsR0DOhDdho3WlPxdpVdN/+0BALo13uFYKpz9X
QQA9Uf80QAum4sU2nKo/lvDPgQcuwz8EPmkC27itPxKPlPssysc+vZn7wAUs
sD9Zmrg/ogPlPR4nb+miSLE/P6BajqguIj0dvq5LZl+0P3tQhcmr/v06z4E/
R80wtj+gj2M5f364OQrtrhVuXLc/Adu4H4EG5zix8JLu
         "]]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
         NCache[
          Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAACE503E+cYT+H1ynBia9pQHw824vi
UXM/akETlQgDaUDrQ7e1ivB/P6LmeZr9M2hAHLLpmhrIiz8kxZ4SarBmQD1d
MkiDqJA/XzUuUc36ZUCXAAL+2E+TP2Jn9/6nTGVAGrGaSMJNmD/zSzgPEQVk
QELa39+a6Zw/9MCsrp3WYkDhpgFQpJagP0OuxkbEvmFAK1lZypqQoj+MMy6g
XLtgQD4+qUlSZqQ/LWDQjhSVX0Ds2Itw9xqmPyRpyDxZ1V1Ae/av2Vixpz+i
7EVkpjRcQJwBfx+6NKs/IjAuJG+aWED1/ddS5yquPw1jN8IBkVVAd1wLRe5W
sD+XkOFNuf1SQP+f3mcyabE/6BLHsEPLUEBtFZu/K2u0P9Qm6x5uQEVAKDzG
e5k1tj/3h8/pUNA7QPRA89iLXrc/vh1o0GxMMkBZ/Ziq
         "]]}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         NCache[
          Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
        GeometricTransformationBox[InsetBox[
          FormBox[
           StyleBox[
            GraphicsBox[
             {EdgeForm[None], DiskBox[{0, 0}]}],
            StripOnInput->False,
            GraphicsBoxOptions->{DefaultBaseStyle->Directive[
              PointSize[
               Rational[1, 60]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}],
           TraditionalForm], {0., 0.}, Automatic, Offset[10]], CompressedData["
1:eJwBVQGq/iFib1JlAwAAABQAAAABAAAAAgAAALbEsVsfKlg/TSNFVeBgZkDz
ZI8eSKdqP7DEb7WVtWFASwjAqTQvdj8uSeYKwBBYQJb1X0j0t4M/z+WcWIb1
KEC5X/ej2y+JP8djyjW2VtI/ve9Yg9D6jj9vqg9ysNJeP7MM9iAH75Q/6hIu
BnKncz6MHnG9TPCZP9eFtjK9lpY9EhCJffqMnj91mYeYRpXJPJV3idKIZ6E/
OkVwiH68CzwgVLKHmF+jP1mTzpNndVs7a8MlDm8ypT9sqfLhrqW3OqeIcnVd
46Y/bNZOvyHsIDp9DygL+puqP7Ri6pheTNI42U3C+tq4rT8GI2Ad2Ba6N3cz
WsAFLLA/bfxuvkFMzzaKAV7mokixPzFYSZtlFwY2PwTwSmZftD+jsDWBJkba
M2u2GzrNMLY/vMfHqV0hkzLjZWE2bly3P3gbuKxO+sAxoe+YDg==
         "]]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         NCache[
          Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
        GeometricTransformationBox[InsetBox[
          FormBox[
           StyleBox[
            GraphicsBox[
             {EdgeForm[None], 
              PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}],
            StripOnInput->False,
            GraphicsBoxOptions->{DefaultBaseStyle->Directive[
              PointSize[
               Rational[1, 60]], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]]}],
           TraditionalForm], {0., 0.}, Automatic, Offset[10]], CompressedData["
1:eJwBVQGq/iFib1JlAwAAABQAAAABAAAAAgAAAGuleB/iwmA/WEoOsgItaUAo
SQGvMmhyP6tLyP8E5GdAA2pFiU94fj+sN1hUNFhmQCr6w3Qekoo/6Jzy7kpw
Y0AuAp8AXOePP8LGRwtREmJAkxP7IO6Dkj9rQtAl3MFgQPfTK3kVW5c/0jFs
bBqNXEDb3vOhy9ibP2+6TC4z8ldAFXJN/tMCoD8pPmk8M6pTQP32hup69KE/
C3Tj4T9bT0CFiim+f8SjPzvEG9cL7EdAzoQ3YaN1pT8XaVXTf/tAQC6Nd7hW
Cqc/V0EAPVH/NEALpuLFNpyqP5bwz4EHLsM/BD5pAtu4rT8Sj5T7LMrHPr2Z
+8AFLLA/WZq4P6ID5T0eJ2/pokixPz+gWo6oLiI9Hb6uS2ZftD97UIXJq/79
Os+BP0fNMLY/oI9jOX9+uDkK7a4Vbly3PwHbuB+BBuc4u4iS8A==
         "]]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
         NCache[
          Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
        GeometricTransformationBox[InsetBox[
          FormBox[
           StyleBox[
            GraphicsBox[
             {EdgeForm[None], PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}],
            StripOnInput->False,
            GraphicsBoxOptions->{DefaultBaseStyle->Directive[
              PointSize[
               Rational[1, 60]], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]]}],
           TraditionalForm], {0., 0.}, Automatic, Offset[10]], CompressedData["
1:eJwBVQGq/iFib1JlAwAAABQAAAABAAAAAgAAAAhOdNxPnGE/h9cpwYmvaUB8
PNuL4lFzP2pBE5UIA2lA60O3tYrwfz+i5nma/TNoQByy6ZoayIs/JMWeEmqw
ZkA9XTJIg6iQP181LlHN+mVAlwAC/thPkz9iZ/f+p0xlQBqxmkjCTZg/80s4
DxEFZEBC2t/fmumcP/TArK6d1mJA4aYBUKSWoD9DrsZGxL5hQCtZWcqakKI/
jDMuoFy7YEA+PqlJUmakPy1g0I4UlV9A7NiLcPcapj8kacg8WdVdQHv2r9lY
sac/ouxFZKY0XECcAX8fujSrPyIwLiRvmlhA9f3XUucqrj8NYzfCAZFVQHdc
C0XuVrA/l5DhTbn9UkD/n95nMmmxP+gSx7BDy1BAbRWbvytrtD/UJusebkBF
QCg8xnuZNbY/94fP6VDQO0D0QPPYi163P74daNBsTDJAY5WYrA==
         
         "]]}}}, {{}, {}}}, InsetBox[
     TemplateBox[{
      "\"0.01 \\!\\(\\*SuperscriptBox[\\(d\\), \\(-1\\)]\\)\"", 
       "\"0.05 \\!\\(\\*SuperscriptBox[\\(d\\), \\(-1\\)]\\)\"", 
       "\"0.1 \\!\\(\\*SuperscriptBox[\\(d\\), \\(-1\\)]\\)\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"Fish growth rate (\\!\\(\\*SubscriptBox[\\(r\\), \
\\(P\\)]\\))\"", {FontSize -> 18, FontFamily -> "Arial"}, Background -> 
                Automatic, StripOnInput -> False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 6.272}, {20, 6.272}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 6.272}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.47966836734693874`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 6.72}, {20, 6.72}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 6.72}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.420357142857143] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 8.16}, {20, 8.16}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.16}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.2738235294117647] -> 
                    Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 18, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               
               TemplateBox[<|
                "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                "RGBColorSwatchTemplate"], ",", 
               
               TemplateBox[<|
                "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                "RGBColorSwatchTemplate"], ",", 
               
               TemplateBox[<|
                "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                "RGBColorSwatchTemplate"]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "18", "}"}]}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           
           RowBox[{"LegendLabel", "\[Rule]", 
             "\"Fish growth rate (\\!\\(\\*SubscriptBox[\\(r\\), \\(P\\)]\\))\
\""}]}], "]"}]& )], Scaled[{0.99, 0.8}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->0.7,
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, False}, {True, False}},
   FrameLabel->{{
      FormBox[
      "\"Fish: host biomass ratio (g fish C-mol \
\\!\\(\\*SuperscriptBox[\\(H\\), \\(-1\\)]\\))\"", TraditionalForm], None}, {
      FormBox[
      "\"Host specific growth rate (C-mol H C-mol \
\\!\\(\\*SuperscriptBox[\\(H\\), \\(-1\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(d\\), \\(-1\\)]\\))\"", TraditionalForm], None}},
   FrameStyle->Directive[
     GrayLevel[0], 18],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   FrameTicksStyle->Directive[
     GrayLevel[0], 14],
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->Full,
   LabelStyle->Directive[
    FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 18],
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 0.09128641173015578}, {0, 205.48556574032065`}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 60]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAtsSxWx8qWD9NI0VV4GBmQPNkjx5I
p2o/sMRvtZW1YUBLCMCpNC92Py5J5grAEFhAlvVfSPS3gz/P5ZxYhvUoQLlf
96PbL4k/x2PKNbZW0j+971iD0PqOP2+qD3Kw0l4/swz2IAfvlD/qEi4Gcqdz
Powecb1M8Jk/14W2Mr2Wlj0SEIl9+oyeP3WZh5hGlck8lXeJ0ohnoT86RXCI
frwLPCBUsoeYX6M/WZPOk2d1WztrwyUObzKlP2yp8uGupbc6p4hydV3jpj9s
1k6/IewgOn0PKAv6m6o/tGLqmF5M0jjZTcL62ritPwYjYB3YFro3dzNawAUs
sD9t/G6+QUzPNooBXuaiSLE/MVhJm2UXBjY/BPBKZl+0P6OwNYEmRtoza7Yb
Os0wtj+8x8epXSGTMuNlYTZuXLc/eBu4rE76wDGYV5gM
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 60]], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAa6V4H+LCYD9YSg6yAi1pQChJAa8y
aHI/q0vI/wTkZ0ADakWJT3h+P6w3WFQ0WGZAKvrDdB6Sij/onPLuSnBjQC4C
nwBc548/wsZHC1ESYkCTE/sg7oOSP2tC0CXcwWBA99MreRVblz/SMWxsGo1c
QNve86HL2Js/b7pMLjPyV0AVck3+0wKgPyk+aTwzqlNA/faG6nr0oT8LdOPh
P1tPQIWKKb5/xKM/O8Qb1wvsR0DOhDdho3WlPxdpVdN/+0BALo13uFYKpz9X
QQA9Uf80QAum4sU2nKo/lvDPgQcuwz8EPmkC27itPxKPlPssysc+vZn7wAUs
sD9Zmrg/ogPlPR4nb+miSLE/P6BajqguIj0dvq5LZl+0P3tQhcmr/v06z4E/
R80wtj+gj2M5f364OQrtrhVuXLc/Adu4H4EG5zix8JLu
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 60]], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAACE503E+cYT+H1ynBia9pQHw824vi
UXM/akETlQgDaUDrQ7e1ivB/P6LmeZr9M2hAHLLpmhrIiz8kxZ4SarBmQD1d
MkiDqJA/XzUuUc36ZUCXAAL+2E+TP2Jn9/6nTGVAGrGaSMJNmD/zSzgPEQVk
QELa39+a6Zw/9MCsrp3WYkDhpgFQpJagP0OuxkbEvmFAK1lZypqQoj+MMy6g
XLtgQD4+qUlSZqQ/LWDQjhSVX0Ds2Itw9xqmPyRpyDxZ1V1Ae/av2Vixpz+i
7EVkpjRcQJwBfx+6NKs/IjAuJG+aWED1/ddS5yquPw1jN8IBkVVAd1wLRe5W
sD+XkOFNuf1SQP+f3mcyabE/6BLHsEPLUEBtFZu/K2u0P9Qm6x5uQEVAKDzG
e5k1tj/3h8/pUNA7QPRA89iLXrc/vh1o0GxMMkBZ/Ziq
          "]]}}, {{
         Directive[
          PointSize[
           Rational[1, 60]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         GeometricTransformation[
          Inset[
           Style[
            Graphics[{
              EdgeForm[], 
              Disk[{0, 0}]}], 
            GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                PointSize[
                 Rational[1, 60]], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
           Offset[10]], CompressedData["
1:eJwBVQGq/iFib1JlAwAAABQAAAABAAAAAgAAALbEsVsfKlg/TSNFVeBgZkDz
ZI8eSKdqP7DEb7WVtWFASwjAqTQvdj8uSeYKwBBYQJb1X0j0t4M/z+WcWIb1
KEC5X/ej2y+JP8djyjW2VtI/ve9Yg9D6jj9vqg9ysNJeP7MM9iAH75Q/6hIu
BnKncz6MHnG9TPCZP9eFtjK9lpY9EhCJffqMnj91mYeYRpXJPJV3idKIZ6E/
OkVwiH68CzwgVLKHmF+jP1mTzpNndVs7a8MlDm8ypT9sqfLhrqW3OqeIcnVd
46Y/bNZOvyHsIDp9DygL+puqP7Ri6pheTNI42U3C+tq4rT8GI2Ad2Ba6N3cz
WsAFLLA/bfxuvkFMzzaKAV7mokixPzFYSZtlFwY2PwTwSmZftD+jsDWBJkba
M2u2GzrNMLY/vMfHqV0hkzLjZWE2bly3P3gbuKxO+sAxoe+YDg==
          "]]}, {
         Directive[
          PointSize[
           Rational[1, 60]], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         GeometricTransformation[
          Inset[
           Style[
            Graphics[{
              EdgeForm[], 
              Polygon[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], 
            GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                PointSize[
                 Rational[1, 60]], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
           Offset[10]], CompressedData["
1:eJwBVQGq/iFib1JlAwAAABQAAAABAAAAAgAAAGuleB/iwmA/WEoOsgItaUAo
SQGvMmhyP6tLyP8E5GdAA2pFiU94fj+sN1hUNFhmQCr6w3Qekoo/6Jzy7kpw
Y0AuAp8AXOePP8LGRwtREmJAkxP7IO6Dkj9rQtAl3MFgQPfTK3kVW5c/0jFs
bBqNXEDb3vOhy9ibP2+6TC4z8ldAFXJN/tMCoD8pPmk8M6pTQP32hup69KE/
C3Tj4T9bT0CFiim+f8SjPzvEG9cL7EdAzoQ3YaN1pT8XaVXTf/tAQC6Nd7hW
Cqc/V0EAPVH/NEALpuLFNpyqP5bwz4EHLsM/BD5pAtu4rT8Sj5T7LMrHPr2Z
+8AFLLA/WZq4P6ID5T0eJ2/pokixPz+gWo6oLiI9Hb6uS2ZftD97UIXJq/79
Os+BP0fNMLY/oI9jOX9+uDkK7a4Vbly3PwHbuB+BBuc4u4iS8A==
          "]]}, {
         Directive[
          PointSize[
           Rational[1, 60]], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         GeometricTransformation[
          Inset[
           Style[
            Graphics[{
              EdgeForm[], 
              Polygon[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], 
            GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                PointSize[
                 Rational[1, 60]], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
           Offset[10]], CompressedData["
1:eJwBVQGq/iFib1JlAwAAABQAAAABAAAAAgAAAAhOdNxPnGE/h9cpwYmvaUB8
PNuL4lFzP2pBE5UIA2lA60O3tYrwfz+i5nma/TNoQByy6ZoayIs/JMWeEmqw
ZkA9XTJIg6iQP181LlHN+mVAlwAC/thPkz9iZ/f+p0xlQBqxmkjCTZg/80s4
DxEFZEBC2t/fmumcP/TArK6d1mJA4aYBUKSWoD9DrsZGxL5hQCtZWcqakKI/
jDMuoFy7YEA+PqlJUmakPy1g0I4UlV9A7NiLcPcapj8kacg8WdVdQHv2r9lY
sac/ouxFZKY0XECcAX8fujSrPyIwLiRvmlhA9f3XUucqrj8NYzfCAZFVQHdc
C0XuVrA/l5DhTbn9UkD/n95nMmmxP+gSx7BDy1BAbRWbvytrtD/UJusebkBF
QCg8xnuZNbY/94fP6VDQO0D0QPPYi163P74daNBsTDJAY5WYrA==
          
          "]]}}}, {{}, {}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      0.7, Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{True, False}, {True, False}}, 
      FrameLabel -> {{
        "Fish: host biomass ratio (g fish C-mol \!\(\*SuperscriptBox[\(H\), \
\(-1\)]\))", None}, {
        "Host specific growth rate (C-mol H C-mol \!\(\*SuperscriptBox[\(H\), \
\(-1\)]\) \!\(\*SuperscriptBox[\(d\), \(-1\)]\))", None}}, FrameStyle -> 
      Directive[
        GrayLevel[0], 18], 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      FrameTicksStyle -> Directive[
        GrayLevel[0], 14], GridLines -> {None, None}, GridLinesStyle -> 
      Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Full, LabelStyle -> 
      Directive[FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 18], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 0.09128641173015578}, {0, 205.48556574032065`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        RGBColor[0.560181, 0.691569, 0.194885]}, {
       "0.01 \!\(\*SuperscriptBox[\(d\), \(-1\)]\)", 
        "0.05 \!\(\*SuperscriptBox[\(d\), \(-1\)]\)", 
        "0.1 \!\(\*SuperscriptBox[\(d\), \(-1\)]\)"}, LabelStyle -> {18}, 
       LegendMarkers -> Automatic, LegendLabel -> 
       "Fish growth rate (\!\(\*SubscriptBox[\(r\), \(P\)]\))"]], {
     Right, 0.8}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.837780717019396*^9, 3.837780749206293*^9, 3.837780914178692*^9, 
   3.837783435173965*^9, 3.8378021444505463`*^9, 3.837802608071159*^9, 
   3.840057845419856*^9, 3.8400579568449497`*^9, 3.8400581477798243`*^9, {
   3.840058289777454*^9, 3.840058348723782*^9}, 3.84038619860271*^9, 
   3.8403862302138033`*^9, {3.8428204212473288`*^9, 3.842820447351327*^9}, 
   3.842820673579772*^9, 3.842820709650457*^9, {3.842821149595117*^9, 
   3.842821192654071*^9}, 3.842821256846795*^9, {3.843206388002417*^9, 
   3.84320642664191*^9}, {3.843206489812323*^9, 3.843206525815827*^9}, {
   3.843206582131082*^9, 3.843206588968536*^9}, {3.843206624447401*^9, 
   3.843206636653207*^9}, 3.844450746727693*^9, 3.844509992329702*^9, 
   3.844511136851077*^9, {3.844784845838786*^9, 3.8447848548081837`*^9}, {
   3.8456443733008327`*^9, 3.845644383526071*^9}, 3.854026519342951*^9},
 CellLabel->
  "Out[641]=",ExpressionUUID->"1ada4fcc-a1e4-4def-8516-fce97762800b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Fig. S4: Goldilocks nitrogen effects at different light magnitudes\
\>", "Section",
 CellChangeTimes->{{3.842821309786502*^9, 3.84282133545612*^9}, {
  3.845644463821837*^9, 
  3.845644466589777*^9}},ExpressionUUID->"cc455533-5951-4f09-bb80-\
20ec97efb3c5"],

Cell[CellGroupData[{

Cell["Run simulations and format results", "Subsection",
 CellChangeTimes->{{3.8399416399719763`*^9, 3.8399416594021873`*^9}, {
  3.840107825033675*^9, 3.8401078288692703`*^9}, {3.842821531627221*^9, 
  3.842821538285008*^9}},ExpressionUUID->"7d4f932c-91ea-458e-8eaa-\
0432d2f8e562"],

Cell[CellGroupData[{

Cell["Run the simulations", "Subsubsection",
 CellChangeTimes->{{3.836915599006907*^9, 
  3.836915602739443*^9}},ExpressionUUID->"7f22f667-1850-425d-9a42-\
d05db29824f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh", ",", 
    "LfunH"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.831830789369714*^9, 3.8318307905412607`*^9}, {
   3.835995882215592*^9, 3.83599588299831*^9}, {3.8363089619914494`*^9, 
   3.836308970966587*^9}, {3.836309185335792*^9, 3.8363091870313787`*^9}, 
   3.8363138138722897`*^9, {3.838834259227337*^9, 3.838834263661522*^9}},
 CellLabel->
  "In[642]:=",ExpressionUUID->"3b1aabf7-0155-4d3b-baf0-4aa8d404d745"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"environment", ":", " ", 
    RowBox[{"flushing", " ", "rate", " ", "and", " ", "N", " ", "level"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"light", " ", "function", " ", "values"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tStartStress", "=", "600"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tHigh", "=", "30"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"LHigh", "=", "35"}], ";"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"jN", "=", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"jNi0", " ", "=", " ", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "800"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "use", " ", "nested", " ", "Table", " ", "to", " ", "simulate", " ", 
     "the", " ", "model", " ", "with", " ", "light", " ", "pulses", " ", "of",
      " ", "different", " ", "magnitudes", " ", "and", " ", "at", " ", 
     "different", " ", "levels", " ", "of", " ", "Nenv"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NRangeRuns", "=", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"jX", "=", 
              FractionBox[
               RowBox[{"jXm", " ", "X"}], 
               RowBox[{"X", "+", "KX"}]]}], ",", " ", 
             RowBox[{"jN", "=", 
              FractionBox[
               RowBox[{"jNm", " ", "\[CapitalNu]"}], 
               RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", 
             RowBox[{"jHT", "=", "j0HT"}], ",", 
             RowBox[{"rNS", "=", 
              RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
             RowBox[{"VH0", "=", 
              RowBox[{"kv", "*", "H0"}]}], ",", " ", 
             RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
             RowBox[{"jNi0", " ", "=", " ", 
              FractionBox[
               RowBox[{"jNm", " ", "\[CapitalNu]"}], 
               RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", "states", ",", 
             " ", "rNH", ",", " ", "S", ",", "H", ",", "VH", ",", "P", ",", 
             "Ni", ",", "jNi", ",", "\[Rho]C", ",", " ", "jCP", ",", " ", 
             "jHG", ",", "\[Rho]N", ",", "jeC", ",", "jCO2", ",", "A", ",", 
             "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", ",", 
             "cROS1", ",", "jSG", ",", "jST", ",", "jNw", ",", "F", ",", "fh",
              ",", "LfunH", ",", "tsolve", ",", " ", "addtimetostatevars", 
             ",", "eqs", ",", "inis", ",", "sol", ",", "t", ",", "tEvals", 
             ",", "minGrowth", ",", "minSSU", ",", "minHSU"}], 
            RowBox[{"(*", 
             RowBox[{",", " ", "bleached"}], "*)"}], 
            RowBox[{"(*", 
             RowBox[{
             "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
              "intermediate", " ", "output", " ", "values", " ", "in", " ", 
              "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"light", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"LfunH", "=", 
             RowBox[{"L", "+", " ", 
              RowBox[{"LHigh", "*", 
               RowBox[{"HeavisideTheta", "[", 
                RowBox[{"t", "-", "tStartStress"}], "]"}]}], " ", "-", "  ", 
              RowBox[{"LHigh", "*", 
               RowBox[{"HeavisideTheta", "[", 
                RowBox[{"t", "-", 
                 RowBox[{"(", 
                  RowBox[{"tStartStress", "+", "tHigh"}], ")"}]}], 
                "]"}]}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
              RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
             FractionBox[
              RowBox[{"A", " ", "B", " ", 
               RowBox[{"(", 
                RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
              RowBox[{
               RowBox[{
                SuperscriptBox["A", "2"], " ", "B"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox["B", "2"]}], "+", 
               RowBox[{
                SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
               RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
               RowBox[{
                SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
            RowBox[{"(*", 
             RowBox[{"same", " ", "as", " ", 
              FractionBox["1", 
               RowBox[{
                FractionBox["1", "\[Rho]"], "+", 
                FractionBox["1", "A"], "+", 
                FractionBox["1", "B"], "-", 
                FractionBox["1", 
                 RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fh", "[", 
              RowBox[{
               RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
             RowBox[{"Piecewise", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", 
                  RowBox[{"y", "<", "0"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"kv", " ", "*", "y"}], ",", 
                  RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
              "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", "Calculations", " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"jHG", "=", 
             RowBox[{
              RowBox[{"F", "[", "jHGm", "]"}], "[", 
              RowBox[{
               RowBox[{"yC", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Rho]C", " ", 
                   RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                  
                  RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                  RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                SuperscriptBox["nNH", 
                 RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"jSG", "=", 
             RowBox[{
              RowBox[{"F", "[", "jSGm", "]"}], "[", 
              RowBox[{
               RowBox[{"jCP", " ", "yC"}], ",", 
               FractionBox[
                RowBox[{"rNS", "+", 
                 FractionBox[
                  RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"\[Rho]N", "=", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
                RowBox[{"nNH", " ", "jHG"}]}], " ", 
               RowBox[{"(*", 
                SuperscriptBox["yN", 
                 RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jeC", "=", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"jX", "-", 
                FractionBox["jHG", "yC"], "+", 
                FractionBox[
                 RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], 
            ";", " ", "\[IndentingNewLine]", 
            RowBox[{"jCO2", "=", 
             RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jL", "=", 
             RowBox[{"A", " ", "astar", " ", "LfunH"}]}], " ", ";", 
            "\[IndentingNewLine]", 
            RowBox[{"rCH", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"jHT", "+", 
                FractionBox[
                 RowBox[{"jHG", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
              "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"rCS", "=", 
             RowBox[{"\[Sigma]CS", 
              RowBox[{"(", 
               RowBox[{"j0ST", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
                 SuperscriptBox["yC", 
                  RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jeL", "=", 
             RowBox[{"jL", "-", 
              FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jNPQ", "=", 
             FractionBox["1", 
              RowBox[{
               FractionBox["1", "jeL"], "+", 
               FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
            RowBox[{"cROS1", "=", 
             FractionBox[
              RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jST", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"rNH", "=", 
             RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"A", "=", 
             RowBox[{"1.256307", "+", 
              RowBox[{"1.385969", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "6.479055"}], " ", 
                 RowBox[{"S", "/", "H"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jNw", "=", " ", 
             RowBox[{
              RowBox[{"\[Rho]N", "*", 
               RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
              RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"tsolve", "=", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Rho]C", ",", 
                 RowBox[{"jCP", "-", 
                  RowBox[{"jSG", " ", 
                   SuperscriptBox["yC", 
                    RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"jCP", ",", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"F", "[", "jCPm", "]"}], "[", 
                   RowBox[{
                    RowBox[{"jL", " ", "yCL"}], ",", 
                    RowBox[{"rCS", "+", 
                    FractionBox[
                    RowBox[{"H", " ", 
                    RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
                  RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"jNi", ",", " ", 
                 FractionBox[
                  RowBox[{"jNm", " ", "*", "Ni"}], 
                  RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
              "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"states", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"tsolve", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
                "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"addtimetostatevars", "=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"#", "\[Rule]", 
                  RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", 
               "states"}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
            RowBox[{"eqs", "=", 
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
                   "\[Equal]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Lambda]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
                "tsolve"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"S", 
                    RowBox[{"(", 
                    RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"H", 
                    RowBox[{"(", 
                    RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                  RowBox[{"fh", "[", 
                   RowBox[{"t", ",", "  ", 
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"d", "*", 
                    RowBox[{"(", " ", 
                    RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                    " ", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                    ")"}], "/", 
                    RowBox[{"(", " ", 
                    RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
                  
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"P", "*", 
                    RowBox[{"(", 
                    RowBox[{"rp", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                    ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
                "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"inis", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], 
                   "\[Equal]", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
                "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"sol", "=", 
             RowBox[{
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Join", "[", 
                  RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"#", "&"}], "/@", "states"}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
                RowBox[{"Method", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<EquationSimplification\>\"", "\[Rule]", 
                   "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"minimum", " ", "host", " ", "growth", " ", 
              RowBox[{"rate", ":", " ", 
               RowBox[{
               "see", " ", "if", " ", "growth", " ", "ever", " ", "went", " ",
                 "negative"}]}]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "evaluate", " ", "host", " ", "growth", " ", "rate", " ", "at", 
              " ", "all", " ", "points", " ", "from", " ", "the", " ", 
              "start", " ", "of", " ", "stress", " ", "to", " ", "the", " ", 
              "end", " ", "of", " ", "the", " ", "run", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "EXCEPT", " ", "when", " ", "t", " ", "is", " ", "exactly", 
                 " ", "equal", " ", "to", " ", "tStartStress", " ", "and", 
                 " ", "tStartStress"}], " ", "+", 
                RowBox[{
                "tHigh", " ", "because", " ", "at", " ", "these", " ", 
                 "points", " ", "one", " ", "of", " ", "the", " ", 
                 "HeavisideTheta", " ", "functions", " ", "has", " ", "an", 
                 " ", "argument", " ", "of", " ", "0", " ", "which", " ", 
                 "is", " ", "not", " ", "evaluated", " ", "so", " ", "the", 
                 " ", "growth", " ", "values", " ", "are", " ", 
                 "inaccurate"}]}], ")"}], " ", "and", " ", "record", " ", 
              "the", " ", "minimum", " ", "of", " ", "these", " ", "values"}],
              "*)"}], "\[IndentingNewLine]", 
            RowBox[{"tEvals", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{"t", ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"t", ",", 
                    RowBox[{"tStartStress", "+", "1"}], ",", 
                    RowBox[{"tStartStress", "+", "tHigh", "-", "1"}]}], 
                   "}"}]}], "]"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{"t", ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"t", ",", 
                    RowBox[{"tStartStress", "+", "tHigh", "+", "1"}], ",", 
                    " ", "tmax"}], "}"}]}], "]"}]}], "}"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"minGrowth", "=", 
             RowBox[{"Min", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}], "/", 
                    RowBox[{"H", "[", "t", "]"}]}], "}"}], "/.", "sol"}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "tEvals"}], "}"}]}], "]"}], "]"}], 
              "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"min", " ", "S", " ", "SU", " ", "C"}], "-", "lim"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"minSSU", "=", 
             RowBox[{"Min", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Evaluate", "@", 
                  RowBox[{"Flatten", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"jSGm", ",", 
                    RowBox[{"jCP", " ", "yC"}]}], "]"}], "/", 
                    RowBox[{"Min", "[", 
                    RowBox[{"jSGm", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"rNS", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"H", " ", "\[Rho]N"}], ")"}], "/", "S"}]}], ")"}],
                     "/", "nNS"}]}], "]"}]}], "]"}], "/.", 
                    "addtimetostatevars"}], "/.", "sol"}], "}"}]}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "tEvals"}], "}"}]}], "]"}], "]"}], 
              "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"min", " ", "H", " ", "SU", " ", "C"}], "-", "lim"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"minHSU", "=", 
             RowBox[{"Min", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Evaluate", "@", 
                  RowBox[{"Flatten", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"jHGm", ",", 
                    RowBox[{"yC", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Rho]C", " ", 
                    RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}]}], "]"}], 
                    "/", 
                    RowBox[{"Min", "[", 
                    RowBox[{"jHGm", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                    
                    RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                    RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                    RowBox[{"nNH", "^", 
                    RowBox[{"-", "1"}]}]}]}], "]"}]}], "]"}], "/.", 
                    "addtimetostatevars"}], "/.", "sol"}], "}"}]}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "tEvals"}], "}"}]}], "]"}], "]"}], 
              "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"minGrowth", ",", "minSSU", ",", "minHSU"}], "}"}]}]}], 
          RowBox[{"(*", "output", "*)"}], "]"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"LHigh", ",", " ", 
           RowBox[{"{", 
            RowBox[{"25", ",", " ", "26", ",", " ", "27"}], "}"}]}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "repeat", " ", "the", " ", "above", " ", "for", " ", "3", " ", 
         "different", " ", "LHigh", " ", "values"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\[CapitalNu]", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.1", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"2", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"3", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"3.6", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"3.7", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"4", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"5", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"6", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"7.2", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"7.3", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"8", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"9", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}], ",", 
           RowBox[{"2", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}], ",", 
           RowBox[{"2.5", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}], ",", 
           RowBox[{"2.6", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}], ",", 
           RowBox[{"3", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}], ",", 
           RowBox[{"4", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}], ",", 
           RowBox[{"5", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}], ",", 
           RowBox[{"5.1", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}], ",", 
           RowBox[{"6", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}]}], "}"}]}], "}"}]}], 
      RowBox[{"(*", 
       RowBox[{
       "repeat", " ", "all", " ", "this", " ", "for", " ", "different", " ", 
        "Nenv"}], "*)"}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836576641311953*^9, 3.836576745811816*^9}, {3.8365767807913227`*^9, 
   3.836576796666417*^9}, {3.83690984159394*^9, 3.8369098642372837`*^9}, {
   3.8369099504464817`*^9, 3.836909992597097*^9}, {3.836910066716194*^9, 
   3.836910181553328*^9}, {3.8369102578063707`*^9, 3.836910390882205*^9}, {
   3.8369104221261673`*^9, 3.8369104445293837`*^9}, {3.836910588258913*^9, 
   3.836910603839734*^9}, {3.83691170755369*^9, 3.836911723135646*^9}, 
   3.836916782182846*^9, {3.838834311079545*^9, 3.838834379370096*^9}, {
   3.838834471672206*^9, 3.838834474513919*^9}, {3.838834510196411*^9, 
   3.8388345320977488`*^9}, {3.838834956155881*^9, 3.838834967272481*^9}, {
   3.838835323782989*^9, 3.8388353359786243`*^9}, 3.838835372910671*^9, {
   3.838835404569716*^9, 3.838835447820861*^9}, {3.8388354814224367`*^9, 
   3.838835482155658*^9}, 3.8388355143481092`*^9, {3.838835698508024*^9, 
   3.8388356997687798`*^9}, {3.838836421725904*^9, 3.838836469954315*^9}, {
   3.838981846512339*^9, 3.838981897533337*^9}, {3.838981946306265*^9, 
   3.838981973334568*^9}, {3.8396862681142817`*^9, 3.8396863575290956`*^9}, {
   3.839686455299721*^9, 3.839686504428644*^9}, {3.839686617185493*^9, 
   3.839686631003388*^9}, 3.839691970289505*^9, {3.839692026879078*^9, 
   3.839692059488557*^9}, {3.839692101451086*^9, 3.83969213179981*^9}, {
   3.8396921804625187`*^9, 3.839692234103558*^9}, {3.839692293095347*^9, 
   3.839692307855596*^9}, 3.839692427974802*^9, {3.8396925794169693`*^9, 
   3.839692588344997*^9}, {3.839692620272097*^9, 3.839692627347979*^9}, {
   3.839692902340027*^9, 3.839692908263102*^9}, {3.839941944952112*^9, 
   3.839941975076352*^9}, {3.840108542401492*^9, 3.840108546341967*^9}, 
   3.843928205077528*^9, {3.844451601466325*^9, 3.844451611140978*^9}, {
   3.8444516496219597`*^9, 3.844451657067216*^9}, {3.84445171386965*^9, 
   3.844451734120152*^9}, {3.844451799749411*^9, 3.844451898771901*^9}, {
   3.844451951361617*^9, 3.8444519789059687`*^9}, {3.85402542913199*^9, 
   3.854025439739676*^9}},
 CellLabel->
  "In[643]:=",ExpressionUUID->"95807a0b-02bf-4a7d-8d15-eef67eb443ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get the results in the correct form to plot", "Subsubsection",
 CellChangeTimes->{{3.836915635258505*^9, 
  3.836915645073258*^9}},ExpressionUUID->"ddeea8d2-ae4a-42a6-8ed2-\
91a68d4d6162"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "transpose", " ", "the", " ", "output", " ", "to", " ", "change", " ", 
    "the", " ", "nested", " ", "list", " ", "from", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"L1", " ", "at", " ", "N1"}], ",", " ", 
        RowBox[{"L2", " ", "at", " ", "N1"}], ",", " ", 
        RowBox[{"L3", " ", "at", " ", "N1"}]}], "}"}], ",", " ", 
      RowBox[{"{", "N2", "}"}], ",", " ", 
      RowBox[{"...", 
       RowBox[{"{", "Nn", "}"}]}]}], "}"}], " ", "to", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"N1", ",", " ", "N2", ",", " ", 
        RowBox[{"...", " ", "Nn", " ", "at", " ", "L1"}]}], "}"}], ",", " ", 
      RowBox[{"{", "L2", "}"}], ",", " ", 
      RowBox[{"{", "L3", "}"}]}], "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"NseparateL", "=", 
     RowBox[{"Transpose", "[", "NRangeRuns", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"lowest", " ", "light"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LowL", "=", 
     RowBox[{"NseparateL", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"mid", " ", "light"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MidL", "=", 
     RowBox[{"NseparateL", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"highest", " ", "light"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HighL", "=", 
     RowBox[{"NseparateL", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"separate", " ", "each", " ", "response", " ", "variable"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"low", " ", "light"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LowLgrowth", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", "LowL", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"min", " ", "host", " ", "growth"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LowLSSU", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", "LowL", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"min", " ", "S", " ", "SU", " ", "lim"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LowLHSU", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", "LowL", "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"min", " ", "H", " ", "SU", " ", "lim"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"mid", " ", "light"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MidLgrowth", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", "MidL", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"min", " ", "host", " ", "growth"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MidLSSU", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", "MidL", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"min", " ", "S", " ", "SU", " ", "lim"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MidLHSU", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", "MidL", "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"min", " ", "H", " ", "SU", " ", "lim"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"high", " ", "light"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HighLgrowth", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", "HighL", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"min", " ", "host", " ", "growth"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HighLSSU", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", "HighL", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"min", " ", "S", " ", "SU", " ", "lim"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HighLHSU", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", "HighL", "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"min", " ", "H", " ", "SU", " ", "lim"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"list", " ", "of", " ", "Nenv", " ", "values"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NVals", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.1", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"1", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"2", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"3", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"3.6", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"3.7", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"4", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"6", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"7.2", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"7.3", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"8", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"9", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"1", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}]}], ",", 
       RowBox[{"2", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}]}], ",", 
       RowBox[{"2.5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}]}], ",", 
       RowBox[{"2.6", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}]}], ",", 
       RowBox[{"3", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}]}], ",", 
       RowBox[{"4", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}]}], ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}]}], ",", 
       RowBox[{"5.1", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}]}], ",", 
       RowBox[{"6", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "use", " ", "Table", " ", "to", " ", "get", " ", "the", " ", "lists", " ",
      "in", " ", "the", " ", "form", " ", "to", " ", "plot"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NLightLists", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "PlotList", "}"}], ",", 
         RowBox[{
          RowBox[{"PlotList", "=", 
           RowBox[{"Transpose", "@", 
            RowBox[{"{", 
             RowBox[{"NVals", ",", "list"}], "}"}]}]}], ";", " ", 
          "PlotList"}]}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"list", ",", " ", 
         RowBox[{"{", 
          RowBox[{
          "LowLgrowth", ",", "LowLSSU", ",", "LowLHSU", ",", "MidLgrowth", 
           ",", "MidLSSU", ",", "MidLHSU", ",", "HighLgrowth", ",", 
           "HighLSSU", ",", "HighLHSU"}], "}"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8369129531410427`*^9, 3.836913008973792*^9}, {
   3.836913091490144*^9, 3.8369130922671757`*^9}, {3.83691317151867*^9, 
   3.8369131987122173`*^9}, {3.836913230715218*^9, 3.8369133075790777`*^9}, {
   3.836913339555049*^9, 3.8369134469392967`*^9}, 3.836913583655624*^9, {
   3.8369141531939917`*^9, 3.836914213205305*^9}, {3.8369152684721603`*^9, 
   3.836915406389106*^9}, {3.8369154677176*^9, 3.8369154915523663`*^9}, 
   3.838835579772908*^9, {3.838835615178438*^9, 3.838835629028713*^9}, {
   3.838981988712462*^9, 3.8389820034789124`*^9}, 3.8396865154892607`*^9, {
   3.839692455760803*^9, 3.839692552172241*^9}, {3.839692703560587*^9, 
   3.839692709411186*^9}, {3.8399425255289087`*^9, 3.839942536336426*^9}, {
   3.8399425785299397`*^9, 3.839942812788535*^9}, {3.842821606227716*^9, 
   3.8428216068218412`*^9}, {3.844452052186755*^9, 3.844452065603223*^9}, {
   3.8444521682712183`*^9, 3.844452267424115*^9}},
 CellLabel->
  "In[651]:=",ExpressionUUID->"44c546b5-bbdf-4d67-8f7c-a4f6596d611a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot the results", "Subsection",
 CellChangeTimes->{{3.842821543054981*^9, 
  3.842821545202939*^9}},ExpressionUUID->"5c3470c4-9f55-4d33-b583-\
937becca98b1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"line", " ", "at", " ", "y"}], "=", "0"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"zeros", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"Length", "[", "NVals", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zeroLine", "=", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{"NVals", ",", "zeros"}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"paddingS3", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"80", 
         RowBox[{"(*", "left", "*)"}], ",", "15"}], 
        RowBox[{"(*", "right", "*)"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"50", 
         RowBox[{"(*", "bottom", "*)"}], ",", "10"}], 
        RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"host", " ", "growth", " ", "rate"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotS3a", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NLightLists", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"NLightLists", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
         RowBox[{"NLightLists", "[", 
          RowBox[{"[", "7", "]"}], "]"}], ",", " ", "zeroLine"}], "}"}], ",", 
       
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<a) Minimum host specific growth rate\>\""}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
          RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
          " ", "12"}], 
         RowBox[{"(*", 
          RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", "  ", 
       RowBox[{"ImagePadding", "\[Rule]", "paddingS3"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "8", "]"}], "]"}], "}"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", " ", 
            RowBox[{"Thickness", "[", "0.001", "]"}]}], "]"}]}], "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", 
            RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
           RowBox[{"(*", "right", "*)"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", 
            RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
           RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"(*", "True", "*)"}], 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", " ", "0.01", ",", "0.02"}], "}"}], ",", 
              "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"(*", "None", "*)"}], 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1", "*", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", 
                  "\"\<1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], "}"}],
                 ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"2", "*", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", 
                  "\"\<2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], 
                 "}"}]}], "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], 
        "*)"}], 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<C-mol H C-mol \!\(\*SuperscriptBox[\(H\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(d\), \(-1\)]\) \>\"", ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "10"}], 
         RowBox[{"(*", 
          RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
       " ", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "12"}], "]"}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], ",", " ", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "GoldenRatio"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"S", " ", "SU", " ", "limitation"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotS3c", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NLightLists", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{"NLightLists", "[", 
          RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
         RowBox[{"NLightLists", "[", 
          RowBox[{"[", "8", "]"}], "]"}], ",", " ", "zeroLine"}], "}"}], ",", 
       
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<c) Minimum symbiont biomass C-/N-limitation\>\""}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
          RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
          " ", "12"}], 
         RowBox[{"(*", 
          RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", "  ", 
       RowBox[{"ImagePadding", "\[Rule]", "paddingS3"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "8", "]"}], "]"}], "}"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", " ", 
            RowBox[{"Thickness", "[", "0.001", "]"}]}], "]"}]}], "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", 
            RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
           RowBox[{"(*", "right", "*)"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", 
            RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
           RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"(*", "True", "*)"}], 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", " ", "0.01", ",", "0.02"}], "}"}], ",", 
              "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"(*", "None", "*)"}], 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1", "*", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", 
                  "\"\<1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], "}"}],
                 ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"2", "*", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", 
                  "\"\<2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], 
                 "}"}]}], "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], 
        "*)"}], 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<Relative\>\"", ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Ambient nitrogen (mol N \!\(\*SuperscriptBox[\(L\), \
\(-1\)]\))\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "10"}], 
         RowBox[{"(*", 
          RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
       " ", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "12"}], "]"}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], ",", " ", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "GoldenRatio"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"H", " ", "SU", " ", "limitation"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotS3b", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NLightLists", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
         RowBox[{"NLightLists", "[", 
          RowBox[{"[", "6", "]"}], "]"}], ",", " ", 
         RowBox[{"NLightLists", "[", 
          RowBox[{"[", "9", "]"}], "]"}], ",", " ", "zeroLine"}], "}"}], ",", 
       
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<b) Minimum host biomass C-/N-limitation\>\""}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
          RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
          " ", "12"}], 
         RowBox[{"(*", 
          RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", "  ", 
       RowBox[{"ImagePadding", "\[Rule]", "paddingS3"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "8", "]"}], "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", " ", 
            RowBox[{"Thickness", "[", "0.001", "]"}]}], "]"}]}], 
         RowBox[{"(*", 
          RowBox[{",", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", " ", "Thin"}], "]"}]}], "*)"}], "}"}]}], 
       ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", 
            RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
           RowBox[{"(*", "right", "*)"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", 
            RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
           RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"(*", "True", "*)"}], 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", " ", "0.01", ",", "0.02"}], "}"}], ",", 
              "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"(*", "None", "*)"}], 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1", "*", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", 
                  "\"\<1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], "}"}],
                 ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"2", "*", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", 
                  "\"\<2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], 
                 "}"}]}], "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], 
        "*)"}], 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<Relative\>\"", ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Ambient nitrogen (mol N \!\(\*SuperscriptBox[\(L\), \
\(-1\)]\))\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "10"}], 
         RowBox[{"(*", 
          RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
       " ", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "12"}], "]"}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], ",", " ", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "GoldenRatio"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8369138765384417`*^9, 3.836913907968061*^9}, {
   3.836913969931773*^9, 3.8369139704742393`*^9}, {3.836914013787943*^9, 
   3.8369140229031677`*^9}, 3.836914097151802*^9, {3.836914282956478*^9, 
   3.836914311770523*^9}, {3.83691520057283*^9, 3.83691520723425*^9}, {
   3.8369154486225023`*^9, 3.836915455126726*^9}, {3.836915545242532*^9, 
   3.836915545692566*^9}, {3.836915759273158*^9, 3.836915830722155*^9}, {
   3.836915890647286*^9, 3.8369159044179363`*^9}, {3.836918698261994*^9, 
   3.83691872419709*^9}, {3.837118477156332*^9, 3.837118486974497*^9}, {
   3.838836195142294*^9, 3.838836209968966*^9}, {3.838982041152976*^9, 
   3.8389820446187267`*^9}, {3.8396928082724953`*^9, 3.839692872227351*^9}, {
   3.839692987536964*^9, 3.8396930601728067`*^9}, {3.8399429174457273`*^9, 
   3.839943042894784*^9}, {3.8428216539954777`*^9, 3.842821703943903*^9}, {
   3.8428217453408337`*^9, 3.842821811776763*^9}, {3.842821854401642*^9, 
   3.842821946413845*^9}, {3.842821991788355*^9, 3.842822017534338*^9}, {
   3.842822051972095*^9, 3.842822140315838*^9}, {3.842822175233282*^9, 
   3.842822226752322*^9}, {3.842822313924097*^9, 3.8428225014525146`*^9}, {
   3.842822544343343*^9, 3.8428225674048*^9}, 3.842822619099792*^9, {
   3.842822672126793*^9, 3.8428227563853188`*^9}, {3.842822814963875*^9, 
   3.842822818428672*^9}, {3.842823356685042*^9, 3.8428233648050947`*^9}, {
   3.842823609031522*^9, 3.842823609242902*^9}, {3.8428237585930843`*^9, 
   3.8428237678660593`*^9}, {3.8444522874962873`*^9, 3.8444523064701757`*^9}},
 
 CellLabel->
  "In[666]:=",ExpressionUUID->"5506503d-f4ad-41fe-9441-a25f0f92f6ab"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GoldiLLeg", "=", 
    RowBox[{"LineLegend", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "8", "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<40\>\"", ",", "\"\<41\>\"", ",", "\"\<42\>\""}], "}"}], 
      ",", 
      RowBox[{
      "LegendLabel", "\[Rule]", " ", 
       "\"\<Light pulse magnitude \\n(mol photons \!\(\*SuperscriptBox[\(m\), \
\(-2\)]\) \!\(\*SuperscriptBox[\(d\), \(-1\)]\))\>\""}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", " ", 
       RowBox[{"{", "16", "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"SGoldiLFig", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"plotS3a", ",", " ", "plotS3b"}], "}"}], ",", 
        RowBox[{"{", "plotS3c", "}"}]}], "}"}], ",", " ", 
      RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
      RowBox[{"Spacings", "\[Rule]", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", 
           RowBox[{"(*", "left", "*)"}], ",", 
           RowBox[{"-", "140"}]}], 
          RowBox[{"(*", 
           RowBox[{"labels", " ", "and", " ", "left", " ", "col"}], "*)"}], 
          RowBox[{"(*", 
           RowBox[{"left", " ", "to", " ", "right"}], "*)"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", 
           RowBox[{"(*", "top", "*)"}], ",", "0"}], 
          RowBox[{"(*", 
           RowBox[{"middle", " ", "2", " ", "rows"}], "*)"}], " ", 
          RowBox[{"(*", 
           RowBox[{"labels", " ", "and", " ", "bottom"}], "*)"}], 
          RowBox[{"(*", 
           RowBox[{"top", " ", "to", " ", "bottom"}], "*)"}], "}"}]}], 
        "}"}]}], ",", " ", 
      RowBox[{"Frame", "\[Rule]", "False"}]}], 
     RowBox[{"(*", 
      RowBox[{",", " ", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "GoldenRatio"}]}]}], "*)"}], 
     RowBox[{"(*", 
      RowBox[{",", " ", 
       RowBox[{"Alignment", "\[Rule]", " ", "Bottom"}]}], "*)"}], " ", 
     RowBox[{"(*", 
      RowBox[{
      "align", " ", "the", " ", "grid", " ", "at", " ", "the", " ", "bottom", 
       " ", "of", " ", "its", " ", "frame"}], "*)"}], "]"}], ",", 
    RowBox[{"Placed", "[", 
     RowBox[{"GoldiLLeg", ",", 
      RowBox[{"(*", "Bottom", "*)"}], 
      RowBox[{"{", 
       RowBox[{"Right", 
        RowBox[{"(*", 
         RowBox[{
         "left", " ", "to", " ", "right", " ", "position", " ", "is", " ", 
          "in", " ", "the", " ", "center"}], "*)"}], ",", " ", "0.25"}], 
       RowBox[{"(*", 
        RowBox[{"top", " ", "to", " ", "bottom", " ", "position"}], "*)"}], 
       "}"}]}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8423931222503767`*^9, 3.84239316496241*^9}, {
   3.842393215100142*^9, 3.842393216777321*^9}, {3.842393374652343*^9, 
   3.842393391545878*^9}, {3.8423934890524607`*^9, 3.842393497687471*^9}, {
   3.842393730079791*^9, 3.842393798313652*^9}, {3.842393943389686*^9, 
   3.842393951838909*^9}, {3.842394074587543*^9, 3.842394101523737*^9}, {
   3.842394132276989*^9, 3.842394132509925*^9}, {3.842394166205171*^9, 
   3.842394170706992*^9}, {3.842394221603158*^9, 3.842394231620736*^9}, {
   3.842394379746133*^9, 3.842394423908218*^9}, {3.842394561020013*^9, 
   3.842394619149837*^9}, {3.842394723548203*^9, 3.842394730014339*^9}, {
   3.84239493520739*^9, 3.842395012141183*^9}, {3.842395114713894*^9, 
   3.842395134539666*^9}, {3.842395264566277*^9, 3.842395317044787*^9}, {
   3.8423958755109577`*^9, 3.842395906360956*^9}, {3.84239594453514*^9, 
   3.84239598472083*^9}, {3.842396103941513*^9, 3.8423961992794323`*^9}, 
   3.8426349594828863`*^9, {3.842634996999845*^9, 3.8426350301339397`*^9}, {
   3.842635083339452*^9, 3.8426351228360977`*^9}, {3.842738228856474*^9, 
   3.842738279641489*^9}, {3.842738325164055*^9, 3.8427383885729227`*^9}, {
   3.84273848759693*^9, 3.842738586958469*^9}, {3.842819678185298*^9, 
   3.842819712829331*^9}, {3.842819757762548*^9, 3.842819862828858*^9}, {
   3.842822968728881*^9, 3.8428230472480793`*^9}, {3.8428230989109497`*^9, 
   3.842823150975244*^9}, {3.842823191719845*^9, 3.842823287502561*^9}, {
   3.8428233293729897`*^9, 3.8428233432804337`*^9}, {3.8428235140325623`*^9, 
   3.842823573879204*^9}, {3.842823633322482*^9, 3.842823723812557*^9}, {
   3.844452316246661*^9, 3.844452321922248*^9}, {3.8445111091063433`*^9, 
   3.844511110644477*^9}},
 CellLabel->
  "In[672]:=",ExpressionUUID->"12067359-056f-439a-9393-8e4c9bbaf194"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{InsetBox[
        GraphicsBox[{{}, {{}, {}, 
           {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
             NCache[
              Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
            1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQbdVj8Kiv0tVu8y3p+E9Z8/Z7rN8z69P1Krv9obFC
Tdkwfpfd0lIvvtlAflkz75evilPsTrC2iNUB+Qfnlu07oDHDLqfqY3xrxrz9
ykodpr1XZtg5G55StH/TZA/RP8uusLjX5HlZm33v260Lvh9bYFc299uNXRf6
7SHmLbH78WKuTJXEFHuIeSvsov2ef9m5fIb9p/j/P5fVrbATq0j3qGeeCTVv
ld28Cbz/duXPtjd0FXn3wWidXWrTn92py+ZBzd9g93FDxa78Mwug/AN2IVM/
LT6fs8r+Q8bjjq0/jtjFeO1n65FYa5/tt1O29PxRO5n7vOXh7WvtQ54IFBZr
nbS7MG0K3xvG9VD9F+wu3Dmqbbhzg/1HsP4rdikWn35dENpovzbaL1g05apd
Drfx/jnh8/ZD9N+069DoemecMG8/AAbgvWg=
             "]]}, 
           {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
             NCache[
              Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
            1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQbdVj8Kiv0tVuzjOhvpLcefs91u+Z9el6lZ3tbB7p
H3B+l53epTwbsbx5+8uaeb98VZxip5d1ZYoKkH9wbtm+Axoz7BhfXWhTB/KV
lTpMe6/MsHN/crNOOQ+mf5bdrG6DBl0gv/ft1gXfjy2w2/i+6ZsR3Lwldt8b
OrvKc2HmrbDbdCvv2P/0efs/xf//uaxuhR3P5Amhzgem2UPMW2VXr3N4Nufi
mfaGriLvPhits/v1as/PRZ/m2EPM32D3/r6mcP+D+VD+AbvoVb53PjmutP+Q
8bhj648jdjrPGW7esV5tn+23U7b0/FG73Bu6S48kztsf8kSgsFjrpN3+8NvX
VqTB3HvBrqmSge9q5rz9H8H6r9gtFksyZMiet39ttF+waMpVu1nnV3wXzobp
v2nn5PGVYxaQDwDHlcJh
             "]]}, 
           {RGBColor[1, 0.75, 0], PointSize[
             NCache[
              Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
            1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQbdVj8Kiv0tXOaOG10Nv58/Z7rN8z69P1Krtn0SV3
Igpg/C670J6bT0qB/LJm3i9fFafYdU653dQE5B+cW7bvgMYMu13Xk093AvnK
Sh2mvVdm2LkEbzrYAdc/y+6vwvInIH7v260Lvh9bYFf84cXXSXDzltiJXDfg
nwY3b4VdyLm/xycD+Z/i//9cVrfCbpnaEsnJcPNW2aW+nXp0NpBv6Cry7oPR
OrsImY3H5sHN32D3x/msxkQ4/4Bd+uTeeSuB/vuQ8bhj648jdsLb81nPAPnZ
fjtlS88ftetU/l10BcgPeSJQWKx10m7ThS+VX/Nh+i/YuSZcnmUANO8jWP8V
u9e/1nwLBPLXRvsFi6ZctStp3eAeUgDTf9Nue5ZmXSqQDwBds8qK
             "]]}, 
           {GrayLevel[0], PointSize[
             NCache[
              Rational[1, 60], 0.016666666666666666`]], Thickness[0.001], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQbdVj8Kiv0tWOAQo81u+Z9el6FRq/C84va+b98lVx
Cpx/cG7ZvgMaM+B8ZaUO094rM9D0z4Lze99uXfD92AI085agmbcCzv8U///n
sroVaOatgvMNXUXefTBah2b+BjT+ATj/Q8bjjq0/jsD52X47ZUvPH4XzQ54I
FBZrnUTTfwHO/wjWfwXOXxvtFyyachVN/004HwCWUmQm
             "]]}}, {{}, {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{
            FormBox[
            "\"C-mol H C-mol \\!\\(\\*SuperscriptBox[\\(H\\), \\(-1\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(d\\), \\(-1\\)]\\) \"", TraditionalForm], None}, {
           None, None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{80, 15}, {50, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}},
         PlotLabel->FormBox[
          "\"a) Minimum host specific growth rate\"", TraditionalForm],
         PlotRange->{{0, 6.*^-6}, {-0.029726487042605804`, 
           0.06669336439719725}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}], 
        NCache[{Rational[931, 2], -297}, {465.5, -297}], 
        ImageScaled[{0.5, 0.5}], {931, 594}], InsetBox[
        GraphicsBox[{{}, {{}, {}, 
           {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
             NCache[
              Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
            1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQbdVj8Kiv0tXOR21JrM4UoQMe6/fM+nS9ys6E15//
2zwRKL/L7sxt77h+T9EDZc28X74qTrFLWv7yWNdZ0QMH55btO6Axw87v5O2r
+76IHlBW6jDtvTLDLvD/0ja9WYfsIfpn2Xk8eaosF3HMvvft1gXfjy2w09bs
9frJeNIeYt4SO96jpfs4Lpy0h5i3wm5zsEb58scn7T/F//+5rG6FnbiQllbW
nZNQ81bZSc3+fXZP90l7Q1eRdx+M1tmtbBT48/ncCaj5G+z+cDLPkbhyHMo/
YKeUvnPtC++t9h8yHnds/XHE7svdy7OVPy6yz/bbKVt6/qjd89viuzeGzrUP
eSJQWKx10m69b3ZuoF38foj+C3bM1vcvzw3asP8jWP8VO7mCuHuzbxzcvzba
L1g05ard9ehp7hu2SRyA6L9pd4zh9bqbRpIHAM6LvqQ=
             "]]}, 
           {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
             NCache[
              Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
            1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQbdVj8Kiv0tXueuJ+u45tQgc81u+Z9el6lV3/12uK
3w6IQPlddrMvqc2bky16oKyZ98tXxSl23uXl+Rvfix44OLds3wGNGXZdV+68
eGYodkBZqcO098oMu8mvJT622ohB9c+yuxqc0+8RJXag9+3WBd+PLbAL2LTb
rnOTGNS8JXbKrkzPbb+LQc1bYVfGfO95DqP4gU/x/38uq1th57JX6XLYha32
EPNW2XUfYUn8Yb/H3tBV5N0Ho3V2wSf9mph99tpDzN9g99dJOrHEfQ+Uf8Au
1vfkWjWLHvsPGY87tv44Ync0sEfLPXb9/my/nbKl54/aLS0J6ZjfLnEg5IlA
YbHWSbsZakoHLV9JQN17we5uwcUDnpGSBz6C9V+x05t30cZ7uuSBtdF+waIp
V+1CQ9+UKMyRhOq/aSd2ccLXjAOSBwB/+rqY
             "]]}, 
           {RGBColor[1, 0.75, 0], PointSize[
             NCache[
              Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
            1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQbdVj8Kiv0tUuhj/12d4bQgc81u+Z9el6ld35IxX3
dR6JQPlddnFzZ3W/7xE9UNbM++Wr4hS7OEH+L7qCYgcOzi3bd0Bjhh1bRkjU
q2CxA8pKHaa9V2bYmZocrxKJE4Pqn2X31myLTFaN2IHet1sXfD+2wE5/m0VA
/RUxqHlL7Ozy/c+5yItDzVthp2Dy4zhLtviBT/H/fy6rW2G3W/y++5YCcah5
q+x0/KO6V04TP2DoKvLug9E6u0S2cCn+4+JQ8zfYLfGWyfn4EcY/YPew0Eqk
5rnEgQ8Zjzu2/jhid+9fT4ucvuSBbL+dsqXnj9qlyX9Pl7SWPBDyRKCwWOuk
3UefgB9vUiSh+i/Y5YV/Cg1fL3ngI1j/Fbvj96dx8zyQPLA22i9YNOWqXdyE
27KMT2D6b9otaPvSH8UkdQAAl3u1Cw==
             "]]}, 
           {GrayLevel[0], PointSize[
             NCache[
              Rational[1, 60], 0.016666666666666666`]], Thickness[0.001], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQbdVj8Kiv0tWOAQo81u+Z9el6FRq/C84va+b98lVx
Cpx/cG7ZvgMaM+B8ZaUO094rM9D0z4Lze99uXfD92AI085agmbcCzv8U///n
sroVaOatgvMNXUXefTBah2b+BjT+ATj/Q8bjjq0/jsD52X47ZUvPH4XzQ54I
FBZrnUTTfwHO/wjWfwXOXxvtFyyachVN/004HwCWUmQm
             "]]}}, {{}, {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{
            FormBox["\"Relative\"", TraditionalForm], None}, {
            FormBox[
            "\"Ambient nitrogen (mol N \\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\
\\)]\\))\"", TraditionalForm], None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{80, 15}, {50, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}},
         PlotLabel->FormBox[
          "\"b) Minimum host biomass C-/N-limitation\"", TraditionalForm],
         PlotRange->{{0, 6.*^-6}, {-6.502298592853236, 0.20225995367277746`}},
         
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}], {1256.5, -297}, 
        ImageScaled[{0.5, 0.5}], {931, 593}]}, {InsetBox[
        GraphicsBox[{{}, {{}, {}, 
           {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
             NCache[
              Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
            1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQbdVj8Kiv0tXuxbKay/sr/+33WL9n1qfrVXb/NHOe
93EwHIDwu+zOv142/3ADw4GyZt4vXxWn2L0XfMC/6DTDgYNzy/Yd0JhhV8dd
13nrDcMBZaUO094rM+wYoACifxac3/t264LvxxbA+RDzlsD5EPNWwPmf4v//
XFa3As28VXC+oavIuw9G69DM34DGPwDnf8h43LH1xxE4P9tvp2zp+aNwfsgT
gcJirZNo+i/A+R/B+q/A+Wuj/YJFU67a2d1o8RFsZzoA0X/TTq7snE7VJKYD
AKRVgZg=
             "]]}, 
           {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
             NCache[
              Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
            1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQbdVj8Kiv0tUudE3pZ/XKf/s91u+Z9el6lZ0P2wpX
VjaGAxB+l11MlU/ZwXqGA2XNvF++Kk6xU704+THfB4YDB+eW7TugMcNOfMcn
ZSUdxgPKSh2mvVdm2LUlLgvayMYI1T/LjrnfOPiXGuOB3rdbF3w/tsBuV9rr
b6bRjFDzltitOXOkM2cCI9S8FXZJnRrHDE4wHvgU///nsroVdgxQADFvFZxv
6Cry7oPROjgfYv4GNP4BOP9DxuOOrT+OwPnZfjtlS88ftRMVObb6dB3TgZAn
AoXFWiftgmwMPTX6mKDuvWAX0ZhxW3AB04GPYP1X7Na19dt2LWU6sDbaL1g0
5ard7zOcaguXwPTftGvv7v69fC3TAQDyNp6x
             "]]}, 
           {RGBColor[1, 0.75, 0], PointSize[
             NCache[
              Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
            1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQbdVj8Kiv0tXumqpJyqw9//Z7rN8z69P1Krtiv7Wf
HusyHIDwu+x4Bct/brnEcKCsmffLV8UpdpOT/m0p1GE8cHBu2b4DGjPsDn5Z
84E9kvGAslKHae+VGXbs5WuynGIYofpn2cnJRl9Kc2E80Pt264LvxxbYSUcf
4GLvYISat8Ru63Nrlq97YeatsNtTKxf37j3jgU/x/38uq1tht36lYF7YZ5h5
q+xYjNUfWz9jPGDoKvLug9E6O1mLjUrpzExQ8zfYrZizkJVBCsY/YJf3p7NB
rYXpwIeMxx1bfxyxY9bcurp4KtOBbL+dsqXnj9qtX+1V1zqF6UDIE4HCYq2T
djV8LqfDl8D0X7D7cuAZ68QDTAc+gvVfsQuxnn/K4gzTgbXRfsGiKVftooQq
SpnOwPTftPM4s0Vq7kmmAwCS57RH
             "]]}, 
           {GrayLevel[0], PointSize[
             NCache[
              Rational[1, 60], 0.016666666666666666`]], Thickness[0.001], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQbdVj8Kiv0tWOAQo81u+Z9el6FRq/C84va+b98lVx
Cpx/cG7ZvgMaM+B8ZaUO094rM9D0z4Lze99uXfD92AI085agmbcCzv8U///n
sroVaOatgvMNXUXefTBah2b+BjT+ATj/Q8bjjq0/jsD52X47ZUvPH4XzQ54I
FBZrnUTTfwHO/wjWfwXOXxvtFyyachVN/004HwCWUmQm
             "]]}}, {{}, {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{
            FormBox["\"Relative\"", TraditionalForm], None}, {
            FormBox[
            "\"Ambient nitrogen (mol N \\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\
\\)]\\))\"", TraditionalForm], None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{80, 15}, {50, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}},
         PlotLabel->FormBox[
          "\"c) Minimum symbiont biomass C-/N-limitation\"", TraditionalForm],
         
         PlotRange->{{0, 6.*^-6}, {-2.349717696174972, 0}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.02]}},
         Ticks->{Automatic, Automatic}], 
        NCache[{Rational[931, 2], -891.}, {465.5, -891.}], 
        ImageScaled[{0.5, 0.5}], {931, 593}], 
       TagBox[InsetBox["", {1256.5, -891.}, {Center, Center}, {931., 594.}],
        "InsetString"]}}, {}}, InsetBox[
     TemplateBox[{"\"40\"", "\"41\"", "\"42\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"Light pulse magnitude \\n(mol photons \
\\!\\(\\*SuperscriptBox[\\(m\\), \\(-2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(d\\), \\(-1\\)]\\))\"", {
                FontSize -> 16, FontFamily -> "Arial"}, Background -> 
                Automatic, StripOnInput -> False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.086] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.086] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.75, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.75, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.086] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 16, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               TemplateBox[<|
                "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                "RGBColorSwatchTemplate"], ",", 
               
               TemplateBox[<|
                "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                "RGBColorSwatchTemplate"], ",", 
               
               TemplateBox[<|"color" -> RGBColor[1, 0.75, 0]|>, 
                "RGBColorSwatchTemplate"]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           
           RowBox[{"LegendLabel", "\[Rule]", 
             "\"Light pulse magnitude \\n(mol photons \
\\!\\(\\*SuperscriptBox[\\(m\\), \\(-2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(d\\), \\(-1\\)]\\))\""}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "16", "}"}]}]}], "]"}]& )], Scaled[{0.99, 0.25}], 
     ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   DisplayFunction->Identity,
   ImageSize->Full,
   PlotRangePadding->{6, 5}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{
        Inset[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[0.922526, 0.385626, 0.209179]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGAQA2IQbdVj8Kiv0tVu8y3p+E9Z8/Z7rN8z69P1Krv9obFC
Tdkwfpfd0lIvvtlAflkz75evilPsTrC2iNUB+Qfnlu07oDHDLqfqY3xrxrz9
ykodpr1XZtg5G55StH/TZA/RP8uusLjX5HlZm33v260Lvh9bYFc299uNXRf6
7SHmLbH78WKuTJXEFHuIeSvsov2ef9m5fIb9p/j/P5fVrbATq0j3qGeeCTVv
ld28Cbz/duXPtjd0FXn3wWidXWrTn92py+ZBzd9g93FDxa78Mwug/AN2IVM/
LT6fs8r+Q8bjjq0/jtjFeO1n65FYa5/tt1O29PxRO5n7vOXh7WvtQ54IFBZr
nbS7MG0K3xvG9VD9F+wu3Dmqbbhzg/1HsP4rdikWn35dENpovzbaL1g05apd
Drfx/jnh8/ZD9N+069DoemecMG8/AAbgvWg=
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[0.528488, 0.470624, 0.701351]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGAQA2IQbdVj8Kiv0tVuzjOhvpLcefs91u+Z9el6lZ3tbB7p
H3B+l53epTwbsbx5+8uaeb98VZxip5d1ZYoKkH9wbtm+Axoz7BhfXWhTB/KV
lTpMe6/MsHN/crNOOQ+mf5bdrG6DBl0gv/ft1gXfjy2w2/i+6ZsR3Lwldt8b
OrvKc2HmrbDbdCvv2P/0efs/xf//uaxuhR3P5Amhzgem2UPMW2VXr3N4Nufi
mfaGriLvPhits/v1as/PRZ/m2EPM32D3/r6mcP+D+VD+AbvoVb53PjmutP+Q
8bhj648jdjrPGW7esV5tn+23U7b0/FG73Bu6S48kztsf8kSgsFjrpN3+8NvX
VqTB3HvBrqmSge9q5rz9H8H6r9gtFksyZMiet39ttF+waMpVu1nnV3wXzobp
v2nn5PGVYxaQDwDHlcJh
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0.75, 0]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGAQA2IQbdVj8Kiv0tXOaOG10Nv58/Z7rN8z69P1Krtn0SV3
Igpg/C670J6bT0qB/LJm3i9fFafYdU653dQE5B+cW7bvgMYMu13Xk093AvnK
Sh2mvVdm2LkEbzrYAdc/y+6vwvInIH7v260Lvh9bYFf84cXXSXDzltiJXDfg
nwY3b4VdyLm/xycD+Z/i//9cVrfCbpnaEsnJcPNW2aW+nXp0NpBv6Cry7oPR
OrsImY3H5sHN32D3x/msxkQ4/4Bd+uTeeSuB/vuQ8bhj648jdsLb81nPAPnZ
fjtlS88ftetU/l10BcgPeSJQWKx10m7ThS+VX/Nh+i/YuSZcnmUANO8jWP8V
u9e/1nwLBPLXRvsFi6ZctStp3eAeUgDTf9Nue5ZmXSqQDwBds8qK
               "]]}, {
              Hue[0.37820393249936934`, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[0.001]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGAQA2IQbdVj8Kiv0tWOAQo81u+Z9el6FRq/C84va+b98lVx
Cpx/cG7ZvgMaM+B8ZaUO094rM9D0z4Lze99uXfD92AI085agmbcCzv8U///n
sroVaOatgvMNXUXefTBah2b+BjT+ATj/Q8bjjq0/jsD52X47ZUvPH4XzQ54I
FBZrnUTTfwHO/wjWfwXOXxvtFyyachVN/004HwCWUmQm
               
               "]]}}}, {{}, {}}}, {
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
           Identity, Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{
             "C-mol H C-mol \!\(\*SuperscriptBox[\(H\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(d\), \(-1\)]\) ", None}, {None, None}}, FrameStyle -> 
           Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {50, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, PlotLabel -> 
           "a) Minimum host specific growth rate", 
           PlotRange -> {{0, 6.*^-6}, {-0.029726487042605804`, 
             0.06669336439719725}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
          Rational[931, 2], -297}, 
         ImageScaled[{0.5, 0.5}], {931, 594}], 
        Inset[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[0.922526, 0.385626, 0.209179]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGAQA2IQbdVj8Kiv0tXOR21JrM4UoQMe6/fM+nS9ys6E15//
2zwRKL/L7sxt77h+T9EDZc28X74qTrFLWv7yWNdZ0QMH55btO6Axw87v5O2r
+76IHlBW6jDtvTLDLvD/0ja9WYfsIfpn2Xk8eaosF3HMvvft1gXfjy2w09bs
9frJeNIeYt4SO96jpfs4Lpy0h5i3wm5zsEb58scn7T/F//+5rG6FnbiQllbW
nZNQ81bZSc3+fXZP90l7Q1eRdx+M1tmtbBT48/ncCaj5G+z+cDLPkbhyHMo/
YKeUvnPtC++t9h8yHnds/XHE7svdy7OVPy6yz/bbKVt6/qjd89viuzeGzrUP
eSJQWKx10m69b3ZuoF38foj+C3bM1vcvzw3asP8jWP8VO7mCuHuzbxzcvzba
L1g05ard9ehp7hu2SRyA6L9pd4zh9bqbRpIHAM6LvqQ=
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[0.528488, 0.470624, 0.701351]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGAQA2IQbdVj8Kiv0tXueuJ+u45tQgc81u+Z9el6lV3/12uK
3w6IQPlddrMvqc2bky16oKyZ98tXxSl23uXl+Rvfix44OLds3wGNGXZdV+68
eGYodkBZqcO098oMu8mvJT622ohB9c+yuxqc0+8RJXag9+3WBd+PLbAL2LTb
rnOTGNS8JXbKrkzPbb+LQc1bYVfGfO95DqP4gU/x/38uq1th57JX6XLYha32
EPNW2XUfYUn8Yb/H3tBV5N0Ho3V2wSf9mph99tpDzN9g99dJOrHEfQ+Uf8Au
1vfkWjWLHvsPGY87tv44Ync0sEfLPXb9/my/nbKl54/aLS0J6ZjfLnEg5IlA
YbHWSbsZakoHLV9JQN17we5uwcUDnpGSBz6C9V+x05t30cZ7uuSBtdF+waIp
V+1CQ9+UKMyRhOq/aSd2ccLXjAOSBwB/+rqY
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0.75, 0]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGAQA2IQbdVj8Kiv0tUuhj/12d4bQgc81u+Z9el6ld35IxX3
dR6JQPlddnFzZ3W/7xE9UNbM++Wr4hS7OEH+L7qCYgcOzi3bd0Bjhh1bRkjU
q2CxA8pKHaa9V2bYmZocrxKJE4Pqn2X31myLTFaN2IHet1sXfD+2wE5/m0VA
/RUxqHlL7Ozy/c+5yItDzVthp2Dy4zhLtviBT/H/fy6rW2G3W/y++5YCcah5
q+x0/KO6V04TP2DoKvLug9E6u0S2cCn+4+JQ8zfYLfGWyfn4EcY/YPew0Eqk
5rnEgQ8Zjzu2/jhid+9fT4ucvuSBbL+dsqXnj9qlyX9Pl7SWPBDyRKCwWOuk
3UefgB9vUiSh+i/Y5YV/Cg1fL3ngI1j/Fbvj96dx8zyQPLA22i9YNOWqXdyE
27KMT2D6b9otaPvSH8UkdQAAl3u1Cw==
               "]]}, {
              Hue[0.37820393249936934`, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[0.001]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGAQA2IQbdVj8Kiv0tWOAQo81u+Z9el6FRq/C84va+b98lVx
Cpx/cG7ZvgMaM+B8ZaUO094rM9D0z4Lze99uXfD92AI085agmbcCzv8U///n
sroVaOatgvMNXUXefTBah2b+BjT+ATj/Q8bjjq0/jsD52X47ZUvPH4XzQ54I
FBZrnUTTfwHO/wjWfwXOXxvtFyyachVN/004HwCWUmQm
               
               "]]}}}, {{}, {}}}, {
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
           Identity, Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{"Relative", None}, {
             "Ambient nitrogen (mol N \!\(\*SuperscriptBox[\(L\), \(-1\)]\))",
               None}}, FrameStyle -> Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {50, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, PlotLabel -> 
           "b) Minimum host biomass C-/N-limitation", 
           PlotRange -> {{0, 6.*^-6}, {-6.502298592853236, 
             0.20225995367277746`}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
         1256.5, -297}, 
         ImageScaled[{0.5, 0.5}], {931, 593}]}, {
        Inset[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[0.922526, 0.385626, 0.209179]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGAQA2IQbdVj8Kiv0tXuxbKay/sr/+33WL9n1qfrVXb/NHOe
93EwHIDwu+zOv142/3ADw4GyZt4vXxWn2L0XfMC/6DTDgYNzy/Yd0JhhV8dd
13nrDcMBZaUO094rM+wYoACifxac3/t264LvxxbA+RDzlsD5EPNWwPmf4v//
XFa3As28VXC+oavIuw9G69DM34DGPwDnf8h43LH1xxE4P9tvp2zp+aNwfsgT
gcJirZNo+i/A+R/B+q/A+Wuj/YJFU67a2d1o8RFsZzoA0X/TTq7snE7VJKYD
AKRVgZg=
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[0.528488, 0.470624, 0.701351]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGAQA2IQbdVj8Kiv0tUudE3pZ/XKf/s91u+Z9el6lZ0P2wpX
VjaGAxB+l11MlU/ZwXqGA2XNvF++Kk6xU704+THfB4YDB+eW7TugMcNOfMcn
ZSUdxgPKSh2mvVdm2LUlLgvayMYI1T/LjrnfOPiXGuOB3rdbF3w/tsBuV9rr
b6bRjFDzltitOXOkM2cCI9S8FXZJnRrHDE4wHvgU///nsroVdgxQADFvFZxv
6Cry7oPROjgfYv4GNP4BOP9DxuOOrT+OwPnZfjtlS88ftRMVObb6dB3TgZAn
AoXFWiftgmwMPTX6mKDuvWAX0ZhxW3AB04GPYP1X7Na19dt2LWU6sDbaL1g0
5ard7zOcaguXwPTftGvv7v69fC3TAQDyNp6x
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0.75, 0]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGAQA2IQbdVj8Kiv0tXumqpJyqw9//Z7rN8z69P1Krtiv7Wf
HusyHIDwu+x4Bct/brnEcKCsmffLV8UpdpOT/m0p1GE8cHBu2b4DGjPsDn5Z
84E9kvGAslKHae+VGXbs5WuynGIYofpn2cnJRl9Kc2E80Pt264LvxxbYSUcf
4GLvYISat8Ru63Nrlq97YeatsNtTKxf37j3jgU/x/38uq1tht36lYF7YZ5h5
q+xYjNUfWz9jPGDoKvLug9E6O1mLjUrpzExQ8zfYrZizkJVBCsY/YJf3p7NB
rYXpwIeMxx1bfxyxY9bcurp4KtOBbL+dsqXnj9qtX+1V1zqF6UDIE4HCYq2T
djV8LqfDl8D0X7D7cuAZ68QDTAc+gvVfsQuxnn/K4gzTgbXRfsGiKVftooQq
SpnOwPTftPM4s0Vq7kmmAwCS57RH
               "]]}, {
              Hue[0.37820393249936934`, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[0.001]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGAQA2IQbdVj8Kiv0tWOAQo81u+Z9el6FRq/C84va+b98lVx
Cpx/cG7ZvgMaM+B8ZaUO094rM9D0z4Lze99uXfD92AI085agmbcCzv8U///n
sroVaOatgvMNXUXefTBah2b+BjT+ATj/Q8bjjq0/jsD52X47ZUvPH4XzQ54I
FBZrnUTTfwHO/wjWfwXOXxvtFyyachVN/004HwCWUmQm
               
               "]]}}}, {{}, {}}}, {
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
           Identity, Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{"Relative", None}, {
             "Ambient nitrogen (mol N \!\(\*SuperscriptBox[\(L\), \(-1\)]\))",
               None}}, FrameStyle -> Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {50, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, PlotLabel -> 
           "c) Minimum symbiont biomass C-/N-limitation", 
           PlotRange -> {{0, 6.*^-6}, {-2.349717696174972, 0}}, 
           PlotRangeClipping -> True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], {
          Rational[931, 2], -891.}, 
         ImageScaled[{0.5, 0.5}], {931, 593}], 
        Inset["", {1256.5, -891.}, {Center, Center}, {931., 594.}]}}, {}}, 
     ImageSize -> Full, {PlotRangePadding -> {6, 5}}, ImageSize -> Full], 
    Placed[
     Unevaluated[
      LineLegend[{
        RGBColor[0.922526, 0.385626, 0.209179], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        RGBColor[1, 0.75, 0]}, {"40", "41", "42"}, LegendLabel -> 
       "Light pulse magnitude \n(mol photons \!\(\*SuperscriptBox[\(m\), \(-2\
\)]\) \!\(\*SuperscriptBox[\(d\), \(-1\)]\))", LabelStyle -> {16}]], {
     Right, 0.25}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.8428230484870167`*^9, {3.842823107945211*^9, 3.842823152125585*^9}, 
   3.8428231959811068`*^9, {3.8428232321961327`*^9, 3.842823288464012*^9}, {
   3.842823334154736*^9, 3.842823344567265*^9}, {3.842823515799282*^9, 
   3.842823574813398*^9}, {3.8428236257038317`*^9, 3.842823737389043*^9}, 
   3.842823772149667*^9, 3.844452119015399*^9, 3.844510058539953*^9, 
   3.844511115120512*^9, 3.854026591037097*^9},
 CellLabel->
  "Out[673]=",ExpressionUUID->"af108325-6941-47e6-a32b-dd7b3b2fd391"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Fig. S5: Goldilocks effects of nitrogen at different levels of prey\
\>", "Section",
 CellChangeTimes->{{3.842823796895713*^9, 3.842823809092533*^9}, {
  3.845644531482902*^9, 
  3.845644534083045*^9}},ExpressionUUID->"c764bffa-4c19-4f87-b39f-\
8fa67ccba2ec"],

Cell[CellGroupData[{

Cell["Run simulations and format results", "Subsection",
 CellChangeTimes->{{3.8399416399719763`*^9, 3.8399416594021873`*^9}, {
  3.8401077911666517`*^9, 3.840107820396772*^9}, {3.842823987841983*^9, 
  3.842823993544327*^9}},ExpressionUUID->"cd6e334c-b704-401f-83a4-\
15536cdc3a6f"],

Cell[CellGroupData[{

Cell["Run the simulations", "Subsubsection",
 CellChangeTimes->{{3.836915599006907*^9, 
  3.836915602739443*^9}},ExpressionUUID->"78b096b0-f921-484d-abaf-\
b6f7c5df7767"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh", ",", 
    "LfunH"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.831830789369714*^9, 3.8318307905412607`*^9}, {
   3.835995882215592*^9, 3.83599588299831*^9}, {3.8363089619914494`*^9, 
   3.836308970966587*^9}, {3.836309185335792*^9, 3.8363091870313787`*^9}, 
   3.8363138138722897`*^9, {3.838834259227337*^9, 3.838834263661522*^9}},
 CellLabel->
  "In[674]:=",ExpressionUUID->"7f988426-1d2d-49bb-9f30-d9c2664599b3"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"light", " ", "function", " ", "values"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tStartStress", "=", "600"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tHigh", "=", "30"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LHigh", "=", "27"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"light", " ", "pulse", " ", "magnitude"}], ";", " ", 
     RowBox[{
     "this", " ", "is", " ", "the", " ", "highest", " ", "value", " ", "used",
       " ", "in", " ", "the", " ", "above", " ", "simulations", " ", "where", 
      " ", "LHigh", " ", "was", " ", "varied"}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"jN", "=", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"jNi0", " ", "=", " ", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "800"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "use", " ", "nested", " ", "Table", " ", "to", " ", "simulate", " ", 
     "the", " ", "model", " ", "with", " ", "different", " ", "levels", " ", 
     "of", " ", "prey", " ", "and", " ", "at", " ", "different", " ", 
     "levels", " ", "of", " ", "Nenv"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NRangeRunsX", "=", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"jX", "=", 
              FractionBox[
               RowBox[{"jXm", " ", "X"}], 
               RowBox[{"X", "+", "KX"}]]}], ",", " ", 
             RowBox[{"jN", "=", 
              FractionBox[
               RowBox[{"jNm", " ", "\[CapitalNu]"}], 
               RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", 
             RowBox[{"jHT", "=", "j0HT"}], ",", 
             RowBox[{"rNS", "=", 
              RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
             RowBox[{"VH0", "=", 
              RowBox[{"kv", "*", "H0"}]}], ",", " ", 
             RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
             RowBox[{"jNi0", " ", "=", " ", 
              FractionBox[
               RowBox[{"jNm", " ", "\[CapitalNu]"}], 
               RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", "states", ",", 
             " ", "rNH", ",", " ", "S", ",", "H", ",", "VH", ",", "P", ",", 
             "Ni", ",", "jNi", ",", "\[Rho]C", ",", " ", "jCP", ",", " ", 
             "jHG", ",", "\[Rho]N", ",", "jeC", ",", "jCO2", ",", "A", ",", 
             "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", ",", 
             "cROS1", ",", "jSG", ",", "jST", ",", "jNw", ",", "F", ",", "fh",
              ",", "LfunH", ",", "tsolve", ",", " ", "addtimetostatevars", 
             ",", "eqs", ",", "inis", ",", "sol", ",", "t", ",", "tEvals", 
             ",", "minGrowth", ",", "minSSU", ",", "minHSU"}], 
            RowBox[{"(*", 
             RowBox[{
             "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
              "intermediate", " ", "output", " ", "values", " ", "in", " ", 
              "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"light", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"LfunH", "=", 
             RowBox[{"L", "+", " ", 
              RowBox[{"LHigh", "*", 
               RowBox[{"HeavisideTheta", "[", 
                RowBox[{"t", "-", "tStartStress"}], "]"}]}], " ", "-", "  ", 
              RowBox[{"LHigh", "*", 
               RowBox[{"HeavisideTheta", "[", 
                RowBox[{"t", "-", 
                 RowBox[{"(", 
                  RowBox[{"tStartStress", "+", "tHigh"}], ")"}]}], 
                "]"}]}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
              RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
             FractionBox[
              RowBox[{"A", " ", "B", " ", 
               RowBox[{"(", 
                RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
              RowBox[{
               RowBox[{
                SuperscriptBox["A", "2"], " ", "B"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox["B", "2"]}], "+", 
               RowBox[{
                SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
               RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
               RowBox[{
                SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
            RowBox[{"(*", 
             RowBox[{"same", " ", "as", " ", 
              FractionBox["1", 
               RowBox[{
                FractionBox["1", "\[Rho]"], "+", 
                FractionBox["1", "A"], "+", 
                FractionBox["1", "B"], "-", 
                FractionBox["1", 
                 RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fh", "[", 
              RowBox[{
               RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
             RowBox[{"Piecewise", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", 
                  RowBox[{"y", "<", "0"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"kv", " ", "*", "y"}], ",", 
                  RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
              "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", "Calculations", " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"jHG", "=", 
             RowBox[{
              RowBox[{"F", "[", "jHGm", "]"}], "[", 
              RowBox[{
               RowBox[{"yC", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Rho]C", " ", 
                   RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                  
                  RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                  RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                SuperscriptBox["nNH", 
                 RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"jSG", "=", 
             RowBox[{
              RowBox[{"F", "[", "jSGm", "]"}], "[", 
              RowBox[{
               RowBox[{"jCP", " ", "yC"}], ",", 
               FractionBox[
                RowBox[{"rNS", "+", 
                 FractionBox[
                  RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"\[Rho]N", "=", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
                RowBox[{"nNH", " ", "jHG"}]}], " ", 
               RowBox[{"(*", 
                SuperscriptBox["yN", 
                 RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jeC", "=", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"jX", "-", 
                FractionBox["jHG", "yC"], "+", 
                FractionBox[
                 RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], 
            ";", " ", "\[IndentingNewLine]", 
            RowBox[{"jCO2", "=", 
             RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jL", "=", 
             RowBox[{"A", " ", "astar", " ", "LfunH"}]}], " ", ";", 
            "\[IndentingNewLine]", 
            RowBox[{"rCH", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"jHT", "+", 
                FractionBox[
                 RowBox[{"jHG", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
              "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"rCS", "=", 
             RowBox[{"\[Sigma]CS", 
              RowBox[{"(", 
               RowBox[{"j0ST", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
                 SuperscriptBox["yC", 
                  RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jeL", "=", 
             RowBox[{"jL", "-", 
              FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jNPQ", "=", 
             FractionBox["1", 
              RowBox[{
               FractionBox["1", "jeL"], "+", 
               FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
            RowBox[{"cROS1", "=", 
             FractionBox[
              RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jST", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"rNH", "=", 
             RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"A", "=", 
             RowBox[{"1.256307", "+", 
              RowBox[{"1.385969", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "6.479055"}], " ", 
                 RowBox[{"S", "/", "H"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jNw", "=", " ", 
             RowBox[{
              RowBox[{"\[Rho]N", "*", 
               RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
              RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"tsolve", "=", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Rho]C", ",", 
                 RowBox[{"jCP", "-", 
                  RowBox[{"jSG", " ", 
                   SuperscriptBox["yC", 
                    RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"jCP", ",", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"F", "[", "jCPm", "]"}], "[", 
                   RowBox[{
                    RowBox[{"jL", " ", "yCL"}], ",", 
                    RowBox[{"rCS", "+", 
                    FractionBox[
                    RowBox[{"H", " ", 
                    RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
                  RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"jNi", ",", " ", 
                 FractionBox[
                  RowBox[{"jNm", " ", "*", "Ni"}], 
                  RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
              "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"states", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"tsolve", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
                "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"addtimetostatevars", "=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"#", "\[Rule]", 
                  RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", 
               "states"}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
            RowBox[{"eqs", "=", 
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
                   "\[Equal]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Lambda]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
                "tsolve"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"S", 
                    RowBox[{"(", 
                    RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"H", 
                    RowBox[{"(", 
                    RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                  RowBox[{"fh", "[", 
                   RowBox[{"t", ",", "  ", 
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"d", "*", 
                    RowBox[{"(", " ", 
                    RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                    " ", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                    ")"}], "/", 
                    RowBox[{"(", " ", 
                    RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
                  
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"P", "*", 
                    RowBox[{"(", 
                    RowBox[{"rp", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                    ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
                "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"inis", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], 
                   "\[Equal]", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
                "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"sol", "=", 
             RowBox[{
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Join", "[", 
                  RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"#", "&"}], "/@", "states"}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
                RowBox[{"Method", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<EquationSimplification\>\"", "\[Rule]", 
                   "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"minimum", " ", "host", " ", "growth", " ", 
              RowBox[{"rate", ":", " ", 
               RowBox[{
               "see", " ", "if", " ", "growth", " ", "ever", " ", "went", " ",
                 "negative"}]}]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "evaluate", " ", "host", " ", "growth", " ", "rate", " ", "at", 
              " ", "all", " ", "points", " ", "from", " ", "the", " ", 
              "start", " ", "of", " ", "stress", " ", "to", " ", "the", " ", 
              "end", " ", "of", " ", "the", " ", "run", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "EXCEPT", " ", "when", " ", "t", " ", "is", " ", "exactly", 
                 " ", "equal", " ", "to", " ", "tStartStress", " ", "and", 
                 " ", "tStartStress"}], " ", "+", 
                RowBox[{
                "tHigh", " ", "because", " ", "at", " ", "these", " ", 
                 "points", " ", "one", " ", "of", " ", "the", " ", 
                 "HeavisideTheta", " ", "functions", " ", "has", " ", "an", 
                 " ", "argument", " ", "of", " ", "0", " ", "which", " ", 
                 "is", " ", "not", " ", "evaluated", " ", "so", " ", "the", 
                 " ", "growth", " ", "values", " ", "are", " ", 
                 "inaccurate"}]}], ")"}], " ", "and", " ", "record", " ", 
              "the", " ", "minimum", " ", "of", " ", "these", " ", "values"}],
              "*)"}], "\[IndentingNewLine]", 
            RowBox[{"tEvals", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{"t", ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"t", ",", 
                    RowBox[{"tStartStress", "+", "1"}], ",", 
                    RowBox[{"tStartStress", "+", "tHigh", "-", "1"}]}], 
                   "}"}]}], "]"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{"t", ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"t", ",", 
                    RowBox[{"tStartStress", "+", "tHigh", "+", "1"}], ",", 
                    " ", "tmax"}], "}"}]}], "]"}]}], "}"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"minGrowth", "=", 
             RowBox[{"Min", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}], "/", 
                    RowBox[{"H", "[", "t", "]"}]}], "}"}], "/.", "sol"}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "tEvals"}], "}"}]}], "]"}], "]"}], 
              "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"min", " ", "S", " ", "SU", " ", "C"}], "-", "lim"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"minSSU", "=", 
             RowBox[{"Min", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Evaluate", "@", 
                  RowBox[{"Flatten", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"jSGm", ",", 
                    RowBox[{"jCP", " ", "yC"}]}], "]"}], "/", 
                    RowBox[{"Min", "[", 
                    RowBox[{"jSGm", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"rNS", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"H", " ", "\[Rho]N"}], ")"}], "/", "S"}]}], ")"}],
                     "/", "nNS"}]}], "]"}]}], "]"}], "/.", 
                    "addtimetostatevars"}], "/.", "sol"}], "}"}]}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "tEvals"}], "}"}]}], "]"}], "]"}], 
              "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"min", " ", "H", " ", "SU", " ", "C"}], "-", "lim"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"minHSU", "=", 
             RowBox[{"Min", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Evaluate", "@", 
                  RowBox[{"Flatten", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"jHGm", ",", 
                    RowBox[{"yC", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Rho]C", " ", 
                    RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}]}], "]"}], 
                    "/", 
                    RowBox[{"Min", "[", 
                    RowBox[{"jHGm", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                    
                    RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                    RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                    RowBox[{"nNH", "^", 
                    RowBox[{"-", "1"}]}]}]}], "]"}]}], "]"}], "/.", 
                    "addtimetostatevars"}], "/.", "sol"}], "}"}]}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "tEvals"}], "}"}]}], "]"}], "]"}], 
              "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"minGrowth", ",", "minSSU", ",", "minHSU"}], "}"}]}]}], 
          RowBox[{"(*", 
           RowBox[{"record", " ", "output"}], "*)"}], "]"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"X", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", 
             RowBox[{"5", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "8"}]}]}], ",", " ", 
             RowBox[{"1", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "7"}]}]}]}], "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "iterate", " ", "the", " ", "above", " ", "for", " ", "3", " ", 
         "different", " ", "prey", " ", "levels"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\[CapitalNu]", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.1", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", " ", 
           RowBox[{"1", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"2", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"3", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"4", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"5", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"6.1", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"6.2", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"7", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"8", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"9", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}], ",", 
           RowBox[{"1.76", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}], ",", 
           RowBox[{"1.77", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}], ",", 
           RowBox[{"2", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}], ",", 
           RowBox[{"2.57", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}], ",", 
           RowBox[{"2.58", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}], ",", 
           RowBox[{"3", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}], ",", 
           RowBox[{"4", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}], ",", 
           RowBox[{"5", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}], ",", 
           RowBox[{"6", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "6"}]}]}]}], "}"}]}], "}"}]}], 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
         "repeat", " ", "all", " ", "this", " ", "for", " ", "different", " ",
           "Nenv"}], ";", " ", 
         RowBox[{
          RowBox[{"for", " ", "prey"}], "=", 
          RowBox[{
          "0", " ", "the", " ", "host", " ", "bleaches", " ", "at", " ", 
           "all", " ", "Nenv"}]}]}], ",", 
        RowBox[{
         RowBox[{"for", " ", "prey"}], "=", 
         RowBox[{"5", "*", 
          RowBox[{"10", "^", 
           RowBox[{"-", "8"}]}], " ", "just", " ", "right", " ", "range", " ",
           "is", " ", "from", " ", "6.2", "*", 
          RowBox[{"10", "^", 
           RowBox[{"-", "7"}]}], " ", "to", " ", "1.76", "*", 
          RowBox[{"10", "^", 
           RowBox[{"-", "6"}]}]}]}], ",", " ", 
        RowBox[{
         RowBox[{"for", " ", "prey"}], "=", 
         RowBox[{
          RowBox[{"1", "*", 
           RowBox[{"10", "^", 
            RowBox[{"-", "7"}]}], " ", "just", " ", "right", " ", "range", 
           " ", "is", " ", "from"}], "<", 
          RowBox[{"1", "*", 
           RowBox[{"10", "^", 
            RowBox[{"-", "8"}]}], " ", "to", " ", "2.57", "*", 
           RowBox[{"10", "^", 
            RowBox[{"-", "6"}]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836576641311953*^9, 3.836576745811816*^9}, {3.8365767807913227`*^9, 
   3.836576796666417*^9}, {3.83690984159394*^9, 3.8369098642372837`*^9}, {
   3.8369099504464817`*^9, 3.836909992597097*^9}, {3.836910066716194*^9, 
   3.836910181553328*^9}, {3.8369102578063707`*^9, 3.836910390882205*^9}, {
   3.8369104221261673`*^9, 3.8369104445293837`*^9}, {3.836910588258913*^9, 
   3.836910603839734*^9}, {3.83691170755369*^9, 3.836911723135646*^9}, 
   3.836916782182846*^9, {3.838834311079545*^9, 3.838834379370096*^9}, {
   3.838834471672206*^9, 3.838834474513919*^9}, {3.838834510196411*^9, 
   3.8388345320977488`*^9}, {3.838834956155881*^9, 3.838834967272481*^9}, {
   3.838835323782989*^9, 3.8388353359786243`*^9}, 3.838835372910671*^9, {
   3.838835404569716*^9, 3.838835447820861*^9}, {3.8388354814224367`*^9, 
   3.838835482155658*^9}, 3.8388355143481092`*^9, {3.838835698508024*^9, 
   3.8388356997687798`*^9}, {3.838836421725904*^9, 3.838836469954315*^9}, {
   3.838981846512339*^9, 3.838981897533337*^9}, {3.838981946306265*^9, 
   3.838981973334568*^9}, {3.8396862681142817`*^9, 3.8396863575290956`*^9}, {
   3.839686455299721*^9, 3.839686504428644*^9}, {3.839686617185493*^9, 
   3.839686631003388*^9}, 3.839691970289505*^9, {3.839692026879078*^9, 
   3.839692059488557*^9}, {3.839692101451086*^9, 3.83969213179981*^9}, {
   3.8396921804625187`*^9, 3.839692234103558*^9}, {3.839692293095347*^9, 
   3.839692307855596*^9}, 3.839692427974802*^9, {3.8396925794169693`*^9, 
   3.839692588344997*^9}, {3.839692620272097*^9, 3.839692627347979*^9}, {
   3.839692902340027*^9, 3.839692908263102*^9}, {3.839941944952112*^9, 
   3.839941975076352*^9}, {3.840108738658895*^9, 3.8401088144059553`*^9}, {
   3.840108856404376*^9, 3.8401089629360332`*^9}, 3.843928218499795*^9, {
   3.844452550037897*^9, 3.844452818746831*^9}, {3.84445294349152*^9, 
   3.844452971455721*^9}, 3.84446437536588*^9, {3.854025488102881*^9, 
   3.85402549845918*^9}},
 CellLabel->
  "In[675]:=",ExpressionUUID->"2539fe80-be59-4ef8-a6ce-137bfddf4d46"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get the results in the correct form to plot", "Subsubsection",
 CellChangeTimes->{{3.836915635258505*^9, 
  3.836915645073258*^9}},ExpressionUUID->"3d4c854b-db4e-4231-b396-\
b9263dcec9c5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "transpose", " ", "the", " ", "output", " ", "to", " ", "change", " ", 
    "the", " ", "nested", " ", "list", " ", "from", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"X1", " ", "at", " ", "N1"}], ",", " ", 
        RowBox[{"X2", " ", "at", " ", "N1"}], ",", " ", 
        RowBox[{"X3", " ", "at", " ", "N1"}]}], "}"}], ",", " ", 
      RowBox[{"{", "N2", "}"}], ",", " ", 
      RowBox[{"...", 
       RowBox[{"{", "Nn", "}"}]}]}], "}"}], " ", "to", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"N1", ",", " ", "N2", ",", " ", 
        RowBox[{"...", " ", "Nn", " ", "at", " ", "X1"}]}], "}"}], ",", " ", 
      RowBox[{"{", "X2", "}"}], ",", " ", 
      RowBox[{"{", "X3", "}"}]}], "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"NseparateX", "=", 
     RowBox[{"Transpose", "[", "NRangeRunsX", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"lowest", " ", "X"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LowX", "=", 
     RowBox[{"NseparateX", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"mid", " ", "X"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MidX", "=", 
     RowBox[{"NseparateX", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"highest", " ", "X"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HighX", "=", 
     RowBox[{"NseparateX", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"separate", " ", "each", " ", "response", " ", "variable"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"low", " ", "X"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LowXgrowth", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", "LowX", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"min", " ", "host", " ", "growth"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LowXSSU", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", "LowX", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"min", " ", "S", " ", "SU", " ", "lim"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LowXHSU", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", "LowX", "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"min", " ", "H", " ", "SU", " ", "lim"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"mid", " ", "X"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MidXgrowth", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", "MidX", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"min", " ", "host", " ", "growth"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MidXSSU", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", "MidX", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"min", " ", "S", " ", "SU", " ", "lim"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MidXHSU", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", "MidX", "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"min", " ", "H", " ", "SU", " ", "lim"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"high", " ", "X"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HighXgrowth", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", "HighX", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"min", " ", "host", " ", "growth"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HighXSSU", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", "HighX", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"min", " ", "S", " ", "SU", " ", "lim"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HighXHSU", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", "HighX", "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"min", " ", "H", " ", "SU", " ", "lim"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"list", " ", "of", " ", "Nenv", " ", "values"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NVals2", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.1", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", " ", 
       RowBox[{"1", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"2", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"3", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"4", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"6.1", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"6.2", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"7", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"8", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"9", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"1", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}]}], ",", 
       RowBox[{"1.76", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}]}], ",", 
       RowBox[{"1.77", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}]}], ",", 
       RowBox[{"2", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}]}], ",", 
       RowBox[{"2.57", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}]}], ",", 
       RowBox[{"2.58", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}]}], ",", 
       RowBox[{"3", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}]}], ",", 
       RowBox[{"4", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}]}], ",", 
       RowBox[{"5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}]}], ",", 
       RowBox[{"6", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "use", " ", "Table", " ", "to", " ", "get", " ", "the", " ", "lists", " ",
      "in", " ", "the", " ", "form", " ", "to", " ", "plot"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NPreyLists", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "PlotList", "}"}], ",", 
         RowBox[{
          RowBox[{"PlotList", "=", 
           RowBox[{"Transpose", "@", 
            RowBox[{"{", 
             RowBox[{"NVals2", ",", "list"}], "}"}]}]}], ";", " ", 
          "PlotList"}]}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"list", ",", " ", 
         RowBox[{"{", 
          RowBox[{
          "LowXgrowth", ",", "LowXSSU", ",", "LowXHSU", ",", "MidXgrowth", 
           ",", "MidXSSU", ",", "MidXHSU", ",", "HighXgrowth", ",", 
           "HighXSSU", ",", "HighXHSU"}], "}"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8369129531410427`*^9, 3.836913008973792*^9}, {
   3.836913091490144*^9, 3.8369130922671757`*^9}, {3.83691317151867*^9, 
   3.8369131987122173`*^9}, {3.836913230715218*^9, 3.8369133075790777`*^9}, {
   3.836913339555049*^9, 3.8369134469392967`*^9}, 3.836913583655624*^9, {
   3.8369141531939917`*^9, 3.836914213205305*^9}, {3.8369152684721603`*^9, 
   3.836915406389106*^9}, {3.8369154677176*^9, 3.8369154915523663`*^9}, 
   3.838835579772908*^9, {3.838835615178438*^9, 3.838835629028713*^9}, {
   3.838981988712462*^9, 3.8389820034789124`*^9}, 3.8396865154892607`*^9, {
   3.839692455760803*^9, 3.839692552172241*^9}, {3.839692703560587*^9, 
   3.839692709411186*^9}, {3.8399425255289087`*^9, 3.839942536336426*^9}, {
   3.8399425785299397`*^9, 3.839942812788535*^9}, 3.840108984664331*^9, {
   3.842824048379942*^9, 3.842824050661622*^9}, {3.842824362137196*^9, 
   3.842824486354686*^9}, {3.8444533077417803`*^9, 3.844453337652404*^9}, {
   3.844453372241768*^9, 3.8444534159197617`*^9}, {3.844453456861039*^9, 
   3.844453477883521*^9}},
 CellLabel->
  "In[684]:=",ExpressionUUID->"ce19eb42-0bfc-4773-80b0-985169aae2a3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot the results", "Subsection",
 CellChangeTimes->{{3.8429092012967997`*^9, 
  3.8429092036047792`*^9}},ExpressionUUID->"fff04eae-95dd-4c35-85b9-\
6268e780eea1"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"line", " ", "at", " ", "y"}], "=", "0"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"zeros2", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"Length", "[", "NVals2", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zeroLine2", "=", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{"NVals2", ",", "zeros2"}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"paddingS4", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"80", 
         RowBox[{"(*", "left", "*)"}], ",", "15"}], 
        RowBox[{"(*", "right", "*)"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"50", 
         RowBox[{"(*", "bottom", "*)"}], ",", "10"}], 
        RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"host", " ", "growth", " ", "rate"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotS4a", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NPreyLists", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"NPreyLists", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
         RowBox[{"NPreyLists", "[", 
          RowBox[{"[", "7", "]"}], "]"}], ",", " ", "zeroLine2"}], "}"}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<a) Minimum host specific growth rate\>\""}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
          RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
          " ", "12"}], 
         RowBox[{"(*", 
          RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", "  ", 
       RowBox[{"ImagePadding", "\[Rule]", "paddingS3"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "8", "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "4", "]"}], "]"}], "}"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", " ", 
            RowBox[{"Thickness", "[", "0.001", "]"}]}], "]"}]}], "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", 
            RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
           RowBox[{"(*", "right", "*)"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", 
            RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
           RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"(*", "True", "*)"}], 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", " ", "0.01", ",", "0.02"}], "}"}], ",", 
              "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"(*", "None", "*)"}], 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1", "*", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", 
                  "\"\<1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], "}"}],
                 ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"2", "*", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", 
                  "\"\<2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], 
                 "}"}]}], "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], 
        "*)"}], 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<C-mol H C-mol \!\(\*SuperscriptBox[\(H\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(d\), \(-1\)]\) \>\"", ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "10"}], 
         RowBox[{"(*", 
          RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
       " ", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "12"}], "]"}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], ",", " ", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "GoldenRatio"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"S", " ", "SU", " ", "limitation"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotS4c", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NPreyLists", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"NPreyLists", "[", 
          RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
         RowBox[{"NPreyLists", "[", 
          RowBox[{"[", "8", "]"}], "]"}], ",", " ", "zeroLine2"}], "}"}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<c) Minimum symbiont biomass C-/N-limitation\>\""}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
          RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
          " ", "12"}], 
         RowBox[{"(*", 
          RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", "  ", 
       RowBox[{"ImagePadding", "\[Rule]", "paddingS3"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "8", "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "4", "]"}], "]"}], "}"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", " ", 
            RowBox[{"Thickness", "[", "0.001", "]"}]}], "]"}]}], "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", 
            RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
           RowBox[{"(*", "right", "*)"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", 
            RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
           RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"(*", "True", "*)"}], 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", " ", "0.01", ",", "0.02"}], "}"}], ",", 
              "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"(*", "None", "*)"}], 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1", "*", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", 
                  "\"\<1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], "}"}],
                 ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"2", "*", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", 
                  "\"\<2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], 
                 "}"}]}], "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], 
        "*)"}], 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<Relative\>\"", ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Ambient nitrogen (mol N \!\(\*SuperscriptBox[\(L\), \
\(-1\)]\))\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "10"}], 
         RowBox[{"(*", 
          RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
       " ", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "12"}], "]"}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], ",", " ", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "GoldenRatio"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"H", " ", "SU", " ", "limitation"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotS4b", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NPreyLists", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"NPreyLists", "[", 
          RowBox[{"[", "6", "]"}], "]"}], ",", " ", 
         RowBox[{"NPreyLists", "[", 
          RowBox[{"[", "9", "]"}], "]"}], ",", " ", "zeroLine2"}], "}"}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<b) Minimum host biomass C-/N-limitation\>\""}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
          RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
          " ", "12"}], 
         RowBox[{"(*", 
          RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", "  ", 
       RowBox[{"ImagePadding", "\[Rule]", "paddingS3"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "8", "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", " ", 
            RowBox[{"Thickness", "[", "0.001", "]"}]}], "]"}]}], 
         RowBox[{"(*", 
          RowBox[{",", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", " ", "Thin"}], "]"}]}], "*)"}], "}"}]}], 
       ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", 
            RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
           RowBox[{"(*", "right", "*)"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", 
            RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
           RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"(*", "True", "*)"}], 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", " ", "0.01", ",", "0.02"}], "}"}], ",", 
              "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"(*", "None", "*)"}], 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1", "*", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", 
                  "\"\<1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], "}"}],
                 ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"2", "*", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", 
                  "\"\<2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], 
                 "}"}]}], "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], 
        "*)"}], 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<Relative\>\"", ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Ambient nitrogen (mol N \!\(\*SuperscriptBox[\(L\), \
\(-1\)]\))\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "10"}], 
         RowBox[{"(*", 
          RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
       " ", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "12"}], "]"}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], ",", " ", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "GoldenRatio"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8369138765384417`*^9, 3.836913907968061*^9}, {
   3.836913969931773*^9, 3.8369139704742393`*^9}, {3.836914013787943*^9, 
   3.8369140229031677`*^9}, 3.836914097151802*^9, {3.836914282956478*^9, 
   3.836914311770523*^9}, {3.83691520057283*^9, 3.83691520723425*^9}, {
   3.8369154486225023`*^9, 3.836915455126726*^9}, {3.836915545242532*^9, 
   3.836915545692566*^9}, {3.836915759273158*^9, 3.836915830722155*^9}, {
   3.836915890647286*^9, 3.8369159044179363`*^9}, {3.836918698261994*^9, 
   3.83691872419709*^9}, {3.837118477156332*^9, 3.837118486974497*^9}, {
   3.838836195142294*^9, 3.838836209968966*^9}, {3.838982041152976*^9, 
   3.8389820446187267`*^9}, {3.8396928082724953`*^9, 3.839692872227351*^9}, {
   3.839692987536964*^9, 3.8396930601728067`*^9}, {3.8399429174457273`*^9, 
   3.839943042894784*^9}, {3.840109168616666*^9, 3.840109215434496*^9}, {
   3.842824096051524*^9, 3.84282420513274*^9}, {3.842824495442285*^9, 
   3.8428245463326693`*^9}, {3.844453561322054*^9, 3.844453574484044*^9}},
 CellLabel->
  "In[699]:=",ExpressionUUID->"c06e1dc5-00b7-4fc2-96e7-c01a3b7a330d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GoldiXLeg", "=", 
    RowBox[{"LineLegend", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "8", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<0\>\"", ",", "\"\<0.5*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\"",
         ",", "\"\<1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], "}"}], 
      ",", 
      RowBox[{
      "LegendLabel", "\[Rule]", " ", 
       "\"\<Prey (C-mol \!\(\*SuperscriptBox[\(L\), \(-1\)]\))\>\""}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", " ", 
       RowBox[{"{", "16", "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"SGoldiXFig", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"plotS4a", ",", " ", "plotS4b"}], "}"}], ",", 
        RowBox[{"{", "plotS4c", "}"}]}], "}"}], ",", " ", 
      RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
      RowBox[{"Spacings", "\[Rule]", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", 
           RowBox[{"(*", "left", "*)"}], ",", 
           RowBox[{"-", "140"}]}], 
          RowBox[{"(*", 
           RowBox[{"labels", " ", "and", " ", "left", " ", "col"}], "*)"}], 
          RowBox[{"(*", 
           RowBox[{"left", " ", "to", " ", "right"}], "*)"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", 
           RowBox[{"(*", "top", "*)"}], ",", "0"}], 
          RowBox[{"(*", 
           RowBox[{"middle", " ", "2", " ", "rows"}], "*)"}], " ", 
          RowBox[{"(*", 
           RowBox[{"labels", " ", "and", " ", "bottom"}], "*)"}], 
          RowBox[{"(*", 
           RowBox[{"top", " ", "to", " ", "bottom"}], "*)"}], "}"}]}], 
        "}"}]}], ",", " ", 
      RowBox[{"Frame", "\[Rule]", "False"}]}], 
     RowBox[{"(*", 
      RowBox[{",", " ", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "GoldenRatio"}]}]}], "*)"}], 
     RowBox[{"(*", 
      RowBox[{",", " ", 
       RowBox[{"Alignment", "\[Rule]", " ", "Bottom"}]}], "*)"}], " ", 
     RowBox[{"(*", 
      RowBox[{
      "align", " ", "the", " ", "grid", " ", "at", " ", "the", " ", "bottom", 
       " ", "of", " ", "its", " ", "frame"}], "*)"}], "]"}], ",", 
    RowBox[{"Placed", "[", 
     RowBox[{"GoldiXLeg", ",", 
      RowBox[{"(*", "Bottom", "*)"}], 
      RowBox[{"{", 
       RowBox[{"Right", 
        RowBox[{"(*", 
         RowBox[{
         "left", " ", "to", " ", "right", " ", "position", " ", "is", " ", 
          "in", " ", "the", " ", "center"}], "*)"}], ",", " ", "0.25"}], 
       RowBox[{"(*", 
        RowBox[{"top", " ", "to", " ", "bottom", " ", "position"}], "*)"}], 
       "}"}]}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8423931222503767`*^9, 3.84239316496241*^9}, {
   3.842393215100142*^9, 3.842393216777321*^9}, {3.842393374652343*^9, 
   3.842393391545878*^9}, {3.8423934890524607`*^9, 3.842393497687471*^9}, {
   3.842393730079791*^9, 3.842393798313652*^9}, {3.842393943389686*^9, 
   3.842393951838909*^9}, {3.842394074587543*^9, 3.842394101523737*^9}, {
   3.842394132276989*^9, 3.842394132509925*^9}, {3.842394166205171*^9, 
   3.842394170706992*^9}, {3.842394221603158*^9, 3.842394231620736*^9}, {
   3.842394379746133*^9, 3.842394423908218*^9}, {3.842394561020013*^9, 
   3.842394619149837*^9}, {3.842394723548203*^9, 3.842394730014339*^9}, {
   3.84239493520739*^9, 3.842395012141183*^9}, {3.842395114713894*^9, 
   3.842395134539666*^9}, {3.842395264566277*^9, 3.842395317044787*^9}, {
   3.8423958755109577`*^9, 3.842395906360956*^9}, {3.84239594453514*^9, 
   3.84239598472083*^9}, {3.842396103941513*^9, 3.8423961992794323`*^9}, 
   3.8426349594828863`*^9, {3.842634996999845*^9, 3.8426350301339397`*^9}, {
   3.842635083339452*^9, 3.8426351228360977`*^9}, {3.842738228856474*^9, 
   3.842738279641489*^9}, {3.842738325164055*^9, 3.8427383885729227`*^9}, {
   3.84273848759693*^9, 3.842738586958469*^9}, {3.842819678185298*^9, 
   3.842819712829331*^9}, {3.842819757762548*^9, 3.842819862828858*^9}, {
   3.842822968728881*^9, 3.8428230472480793`*^9}, {3.8428230989109497`*^9, 
   3.842823150975244*^9}, {3.842823191719845*^9, 3.842823287502561*^9}, {
   3.8428233293729897`*^9, 3.8428233432804337`*^9}, {3.8428235140325623`*^9, 
   3.842823573879204*^9}, {3.842823633322482*^9, 3.842823723812557*^9}, {
   3.842824304138908*^9, 3.842824310576393*^9}, {3.842824565270911*^9, 
   3.8428245657254953`*^9}, {3.843125026619541*^9, 3.8431250290378647`*^9}, {
   3.844453645937516*^9, 3.844453655892332*^9}, {3.8445110890852833`*^9, 
   3.844511091142488*^9}},
 CellLabel->
  "In[705]:=",ExpressionUUID->"07f60ac7-b575-4735-9310-f624693263c3"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{InsetBox[
        GraphicsBox[{{}, {{}, {}, 
           {RGBColor[1, 0.75, 0], PointSize[
             NCache[
              Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
            1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQbdVj8Kiv0tXOaOG10Nv58/Z7rN8z69P1Krtn0SV3
Igpg/C670J6bT0qB/LJm3i9fFafYdU653dQEl59l91dh+ZMOIL/37dYF348t
sCv+8OLrJCB/ues0/TvlS+wS24obpgD5N9jlsw+dXWIXxOTLCpKPl0x1/1Kz
3M7MyMRmBty8VXapb6cenQ3kG7qKvPtgtM4uQmbjsXlw8zfY/XE+qzERyD9/
gKlcpX2vXXHo24w1QPe/UDw+RXzTXjv/x6ZrV+fD1B+wS5/cO28lkH90j1Ah
R/9RuxKOGpZLQH7Q2y//G5cctVM4tugtiB/yRKCwWOuk3aYLXyq/wvVfsHNN
uDzLAGjfx4zHHVt/XLF7/WvNt8ACmPqbdtuzNOtSgXwAzf6+Xw==
             "]]}, 
           {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
             NCache[
              Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
            1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQbdVj8Kiv0tXuxkFzjgP+M/d7rN8z69P1KrvdQhYl
pUEwfpfd5R3vjz0Nnrm/rJn3y1fFKXaLFIJ/7QuByc+yuy7OssIrdOb+3rdb
F3w/tsDOJHryeisgf7nrNP075Uvs+i7MLrgNNP8Gu3z2obNL7Oo3sBj3xEyz
j5dMdf9Ss9xuY2DgJN19M+0h5q2yC2t56VYnPtfe0FXk3QejdXY6G48evMC5
wB5i/ga7x7q7fTOSF9qfP8BUrtK+164grN5yTu1y+xeKx6eIb9prt2ju//0T
vGHuOWDnm/g6Thbon6N7hAo5+o/auf+c9ScQ6L6gt1/+Ny45atdj6NoQCeSH
PBEoLNY6acfzKHe1dRhM/wU7/6uTugXDZ+7/mPG4Y+uPK3ZMp2Y1h4TD1N+0
40gysMoB8gGbULKK
             "]]}, 
           {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
             NCache[
              Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
            1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQbdVj8Kiv0tUuYnLG23VtnPYe6/fM+nS9yq6QZ2f4
GbUSKL/L7sBR4RSZ+S32Zc28X74qTrG7dfPG3MfJfVD5WXb87PbzZ6+abN/7
duuC78cW2LnLHAy/s3e6/XLXafp3ypfYBb1kMFM6O9v+Brt89qGzS+z+lqzm
ClebYx8vmer+pWa5nYLZHlOjS/Og5q2yM0re87z44wJ7Q1eRdx+M1tmxlKnm
mIctgpq/wa6zJr5z96zF9ucPMJWrtO+1m2j7zzDEcpX9C8XjU8Q37bUzblgk
89djFVT9AbtVZzZrtfattj+6R6iQo/+oncXtNXNnTF1jH/T2y//GJUfthDfe
Dw+eN2V/yBOBwmKtk3aM2YWVMium7Ifov2A3LXDzsS+rpuz/mPG4Y+uPK3YN
JdutslbD1N+0U/IVv78ayAcAQyqvPg==
             "]]}, 
           {GrayLevel[0], PointSize[
             NCache[
              Rational[1, 60], 0.016666666666666666`]], Thickness[0.001], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQbdVj8Kiv0tWOAQo81u+Z9el6FRq/C84va+b98lVx
Cpr8LDi/9+3WBd+PLYDzl7tO079TvgTOv8Eun33oLIIfL5nq/qVmOZp5q+B8
Q1eRdx+M1qGZvwHOP3+AqVylfS+c/0Lx+BTxTXvR1B+A84/uESrk6D8K5we9
/fK/cQmCH/JEoLBY6ySa/gtw/seMxx1bf1xBU38TzgcARjtegQ==
             
             "]]}}, {{}, {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{
            FormBox[
            "\"C-mol H C-mol \\!\\(\\*SuperscriptBox[\\(H\\), \\(-1\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(d\\), \\(-1\\)]\\) \"", TraditionalForm], None}, {
           None, None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{80, 15}, {50, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}},
         PlotLabel->FormBox[
          "\"a) Minimum host specific growth rate\"", TraditionalForm],
         PlotRange->{{0, 6.*^-6}, {-0.029726487042605804`, 
           0.05582882809397066}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}], 
        NCache[{Rational[931, 2], -297}, {465.5, -297}], 
        ImageScaled[{0.5, 0.5}], {931, 594}], InsetBox[
        GraphicsBox[{{}, {{}, {}, 
           {RGBColor[1, 0.75, 0], PointSize[
             NCache[
              Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
            1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQbdVj8Kiv0tUuhj/12d4bQgc81u+Z9el6ld35IxX3
dR6JQPlddnFzZ3W/7xE9UNbM++Wr4hS7OEH+L7qCYlD5WXZvzbbIZNWIHeh9
u3XB92ML7PS3WQTUXxE7sNx1mv6d8iV2nyTq3MzUxA/cYJfPPnR2id15M8dH
f3XED8RLprp/qVlud2HKtrWu8eJQ81bZ6fhHda+cJn7A0FXk3QejdXaJbOFS
/MfFoeZvsFviLZPz8aP4gfMHmMpV2vfaHVsvNqtmj8SBF4rHp4hv2msnmv20
KnOfBFT9AbuHhVYiNc8lDhzdI1TI0X/Ujr9sO/dkc8kDQW+//G9cctTugpPC
5IMWkgdCnggUFmudtPvoE/DjTYokVP8Fu7zwT6Hh6yUPfMx43LH1xxW74/en
cfM8gKm/abeg7Ut/FJPUAQBsFq4u
             "]]}, 
           {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
             NCache[
              Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
            1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQbdVj8Kiv0tWu+9zveXMPMx7wWL9n1qfrVXbnziwv
TXdihvK77DIFbcUvlbIcKGvm/fJVcYodU+9v7bsprFD5WXbxJZPt2ZTYDvS+
3brg+7EFdi/2SJZW7GM7sNx1mv6d8iV2S31NpJ/6sh+4wS6ffejsEjvLBe+O
lh+dYR8vmer+pWa53Sau27d5XFfZQ8xbZcf83+nkjR+r7A1dRd59MFpn5+K9
81pcwwp7iPkb7K6846ieMmGJ/fkDTOUq7XvtHDfc12PcvGP/C8XjU8Q37bVb
H6d9eoM7F9Q9B+w+Mv0LmzOb68DRPUKFHP1H7aZlVu55a8h9IOjtl/+NS47a
3Wn5M0PahPtAyBOBwmKtk3bbr6U2BLRyQ/VfsPvU1/T5DS/PgY8Zjzu2/rhi
J6Byee77dB6o+pt2hz87Cp9cznMAAGmAsr0=
             "]]}, 
           {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
             NCache[
              Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
            1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQbdVj8Kiv0tXuvnHO+hy/XfYe6/fM+nS9yi5TZX70
nM4dUH6X3Umn79/XPdtpX9bM++Wr4hS79V9azl+Q2g2Vn2U343uzzm273fa9
b7cu+H5sgZ1YRM0Ez6hd9stdp+nfKV9iV3Ds68Hs3B32N9jlsw+dXWLnK7au
rtZsh328ZKr7l5rldhOZW+Xf+26DmrfKLjBo7ZJz7ZvtDV1F3n0wWmcnnrH+
kVbxBqj5G+zUM6ZcWRW6yv78AaZylfa9dp93vNqscWTF/heKx6eIb9prtzJt
mYFb4sr9EPUH7KpV9W6LdGzef3SPUCFH/1G7EHFvBs2FJ/YHvf3yv3HJUbsf
6dZ3vIrZDoQ8ESgs1jpp5/LDM+joUbYDEP0X7L5uuLFvqif7gY8Zjzu2/rhi
V1lVqRa1gB2q/qadlVDFScF77AcAn4CywA==
             "]]}, 
           {GrayLevel[0], PointSize[
             NCache[
              Rational[1, 60], 0.016666666666666666`]], Thickness[0.001], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQbdVj8Kiv0tWOAQo81u+Z9el6FRq/C84va+b98lVx
Cpr8LDi/9+3WBd+PLYDzl7tO079TvgTOv8Eun33oLIIfL5nq/qVmOZp5q+B8
Q1eRdx+M1qGZvwHOP3+AqVylfS+c/0Lx+BTxTXvR1B+A84/uESrk6D8K5we9
/fK/cQmCH/JEoLBY6ySa/gtw/seMxx1bf1xBU38TzgcARjtegQ==
             
             "]]}}, {{}, {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{
            FormBox["\"Relative\"", TraditionalForm], None}, {
            FormBox[
            "\"Ambient nitrogen (mol N \\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\
\\)]\\))\"", TraditionalForm], None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{80, 15}, {50, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}},
         PlotLabel->FormBox[
          "\"b) Minimum host biomass C-/N-limitation\"", TraditionalForm],
         PlotRange->{{0, 6.*^-6}, {-6.502298592853236, 0.10642785870365257`}},
         
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}], {1256.5, -297}, 
        ImageScaled[{0.5, 0.5}], {931, 593}]}, {InsetBox[
        GraphicsBox[{{}, {{}, {}, 
           {RGBColor[1, 0.75, 0], PointSize[
             NCache[
              Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
            1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQbdVj8Kiv0tXumqpJyqw9//Z7rN8z69P1Krtiv7Wf
HusyHIDwu+x4Bct/brnEcKCsmffLV8UpdpOT/m0p1GGEys+yk5ONvpTmwnig
9+3WBd+PLbCTjj7Axd7BeGC56zT9O+VL7Had3Ryz8RDjgRvs8tmHzi6xc2+K
mRp4nPFAvGSq+5ea5XYzl+/auOAFzLxVdizG6o+tnzEeMHQVeffBaJ2drMVG
pXRmJqj5G+xWzFnIyiDFdOD8AaZylfa9dqyzNN2u5zAdeKF4fIr4pr12lrMP
X3uTA1N/wC7vT2eDWgvTgaN7hAo5+o/aWQk/W3l2CtOBoLdf/jcuOWqn8dh6
5VYgP+SJQGGx1km7Gj6X0+FLYPov2H058Ix14gGmAx8zHnds/XHFLsR6/imL
MzD1N+08zmyRmnuS6QAA3uStYw==
             "]]}, 
           {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
             NCache[
              Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
            1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQbdVj8Kiv0tXOWWO6gF3e7/0e6/fM+nS9yi5+wpo/
6xf+hfK77BT21z8JNP+/v6yZ98tXxSl22+X3yK/WZjgAkZ9lF2sZ8curkuFA
79utC74fW2DXLtaZ2XqU4cBy12n6d8qX2HGu2jKzg4vxwA12+exDZ5fYMUBB
vGSq+5ea5XA+xLxVcL6hq8i7D0br4HyI+Rvg/PMHmMpV2vfC+S8Uj08R37TX
rmSD9z7254xQ9xywy/jH6J/9jvHA0T1ChRz9R+2YnO1rHnExHQh6++V/45Kj
dmtntcz0BPJDnggUFmudtJvTttd+iwYTVP8Fu/SLC1assmU68DHjccfWH1fs
jDt8lkx0g6m/afdWg2/thWCmAwDNFpZz
             "]]}, 
           {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
             NCache[
              Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
            1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQbdVj8Kiv0tWOAQo81u+Z9el6FRq/C84va+b98lVx
Cpr8LDi/9+3WBd+PLYDzl7tO079TvgTOv8Eun33oLIIfL5nq/qVmOZp5q+B8
Q1eRdx+M1qGZvwHOP3+AqVylfS+c/0Lx+BTxTXvR1B+A84/uESrk6D8K5we9
/fK/cclRO0OWGwrd/xgOhDwRKCzWOmnXEXr28lQgH6L/gp1Z+66s/2aMBz5m
PO7Y+uOK3RHWl38/mzNC1d+0E2r0/KCTyHgAACZOclI=
             "]]}, 
           {GrayLevel[0], PointSize[
             NCache[
              Rational[1, 60], 0.016666666666666666`]], Thickness[0.001], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQbdVj8Kiv0tWOAQo81u+Z9el6FRq/C84va+b98lVx
Cpr8LDi/9+3WBd+PLYDzl7tO079TvgTOv8Eun33oLIIfL5nq/qVmOZp5q+B8
Q1eRdx+M1qGZvwHOP3+AqVylfS+c/0Lx+BTxTXvR1B+A84/uESrk6D8K5we9
/fK/cQmCH/JEoLBY6ySa/gtw/seMxx1bf1xBU38TzgcARjtegQ==
             
             "]]}}, {{}, {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{
            FormBox["\"Relative\"", TraditionalForm], None}, {
            FormBox[
            "\"Ambient nitrogen (mol N \\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\
\\)]\\))\"", TraditionalForm], None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{80, 15}, {50, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}},
         PlotLabel->FormBox[
          "\"c) Minimum symbiont biomass C-/N-limitation\"", TraditionalForm],
         
         PlotRange->{{0, 6.*^-6}, {-2.349717696174972, 0}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.02]}},
         Ticks->{Automatic, Automatic}], 
        NCache[{Rational[931, 2], -891.}, {465.5, -891.}], 
        ImageScaled[{0.5, 0.5}], {931, 593}], 
       TagBox[InsetBox["", {1256.5, -891.}, {Center, Center}, {931., 594.}],
        "InsetString"]}}, {}}, InsetBox[
     TemplateBox[{
      "\"0\"", "\"0.5*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
       "\"1*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"Prey (C-mol \\!\\(\\*SuperscriptBox[\\(L\\), \
\\(-1\\)]\\))\"", {FontSize -> 16, FontFamily -> "Arial"}, Background -> 
                Automatic, StripOnInput -> False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.75, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.75, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.086] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.086] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.086] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 16, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               
               TemplateBox[<|"color" -> RGBColor[1, 0.75, 0]|>, 
                "RGBColorSwatchTemplate"], ",", 
               
               TemplateBox[<|
                "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                "RGBColorSwatchTemplate"], ",", 
               
               TemplateBox[<|
                "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                "RGBColorSwatchTemplate"]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           
           RowBox[{"LegendLabel", "\[Rule]", 
             "\"Prey (C-mol \\!\\(\\*SuperscriptBox[\\(L\\), \
\\(-1\\)]\\))\""}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "16", "}"}]}]}], "]"}]& )], Scaled[{0.99, 0.25}], 
     ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   DisplayFunction->Identity,
   ImageSize->Full,
   PlotRangePadding->{6, 5}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{
        Inset[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0.75, 0]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQbdVj8Kiv0tXOaOG10Nv58/Z7rN8z69P1Krtn0SV3
Igpg/C670J6bT0qB/LJm3i9fFafYdU653dQEl59l91dh+ZMOIL/37dYF348t
sCv+8OLrJCB/ues0/TvlS+wS24obpgD5N9jlsw+dXWIXxOTLCpKPl0x1/1Kz
3M7MyMRmBty8VXapb6cenQ3kG7qKvPtgtM4uQmbjsXlw8zfY/XE+qzERyD9/
gKlcpX2vXXHo24w1QPe/UDw+RXzTXjv/x6ZrV+fD1B+wS5/cO28lkH90j1Ah
R/9RuxKOGpZLQH7Q2y//G5cctVM4tugtiB/yRKCwWOuk3aYLXyq/wvVfsHNN
uDzLAGjfx4zHHVt/XLF7/WvNt8ACmPqbdtuzNOtSgXwAzf6+Xw==
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[0.528488, 0.470624, 0.701351]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQbdVj8Kiv0tXuxkFzjgP+M/d7rN8z69P1KrvdQhYl
pUEwfpfd5R3vjz0Nnrm/rJn3y1fFKXaLFIJ/7QuByc+yuy7OssIrdOb+3rdb
F3w/tsDOJHryeisgf7nrNP075Uvs+i7MLrgNNP8Gu3z2obNL7Oo3sBj3xEyz
j5dMdf9Ss9xuY2DgJN19M+0h5q2yC2t56VYnPtfe0FXk3QejdXY6G48evMC5
wB5i/ga7x7q7fTOSF9qfP8BUrtK+164grN5yTu1y+xeKx6eIb9prt2ju//0T
vGHuOWDnm/g6Thbon6N7hAo5+o/auf+c9ScQ6L6gt1/+Ny45atdj6NoQCeSH
PBEoLNY6acfzKHe1dRhM/wU7/6uTugXDZ+7/mPG4Y+uPK3ZMp2Y1h4TD1N+0
40gysMoB8gGbULKK
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[0.922526, 0.385626, 0.209179]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQbdVj8Kiv0tUuYnLG23VtnPYe6/fM+nS9yq6QZ2f4
GbUSKL/L7sBR4RSZ+S32Zc28X74qTrG7dfPG3MfJfVD5WXb87PbzZ6+abN/7
duuC78cW2LnLHAy/s3e6/XLXafp3ypfYBb1kMFM6O9v+Brt89qGzS+z+lqzm
ClebYx8vmer+pWa5nYLZHlOjS/Og5q2yM0re87z44wJ7Q1eRdx+M1tmxlKnm
mIctgpq/wa6zJr5z96zF9ucPMJWrtO+1m2j7zzDEcpX9C8XjU8Q37bUzblgk
89djFVT9AbtVZzZrtfattj+6R6iQo/+oncXtNXNnTF1jH/T2y//GJUfthDfe
Dw+eN2V/yBOBwmKtk3aM2YWVMium7Ifov2A3LXDzsS+rpuz/mPG4Y+uPK3YN
JdutslbD1N+0U/IVv78ayAcAQyqvPg==
               "]]}, {
              Hue[0.37820393249936934`, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[0.001]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQbdVj8Kiv0tWOAQo81u+Z9el6FRq/C84va+b98lVx
Cpr8LDi/9+3WBd+PLYDzl7tO079TvgTOv8Eun33oLIIfL5nq/qVmOZp5q+B8
Q1eRdx+M1qGZvwHOP3+AqVylfS+c/0Lx+BTxTXvR1B+A84/uESrk6D8K5we9
/fK/cQmCH/JEoLBY6ySa/gtw/seMxx1bf1xBU38TzgcARjtegQ==
               
               "]]}}}, {{}, {}}}, {
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
           Identity, Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{
             "C-mol H C-mol \!\(\*SuperscriptBox[\(H\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(d\), \(-1\)]\) ", None}, {None, None}}, FrameStyle -> 
           Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {50, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, PlotLabel -> 
           "a) Minimum host specific growth rate", 
           PlotRange -> {{0, 6.*^-6}, {-0.029726487042605804`, 
             0.05582882809397066}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
          Rational[931, 2], -297}, 
         ImageScaled[{0.5, 0.5}], {931, 594}], 
        Inset[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0.75, 0]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQbdVj8Kiv0tUuhj/12d4bQgc81u+Z9el6ld35IxX3
dR6JQPlddnFzZ3W/7xE9UNbM++Wr4hS7OEH+L7qCYlD5WXZvzbbIZNWIHeh9
u3XB92ML7PS3WQTUXxE7sNx1mv6d8iV2nyTq3MzUxA/cYJfPPnR2id15M8dH
f3XED8RLprp/qVlud2HKtrWu8eJQ81bZ6fhHda+cJn7A0FXk3QejdXaJbOFS
/MfFoeZvsFviLZPz8aP4gfMHmMpV2vfaHVsvNqtmj8SBF4rHp4hv2msnmv20
KnOfBFT9AbuHhVYiNc8lDhzdI1TI0X/Ujr9sO/dkc8kDQW+//G9cctTugpPC
5IMWkgdCnggUFmudtPvoE/DjTYokVP8Fu7zwT6Hh6yUPfMx43LH1xxW74/en
cfM8gKm/abeg7Ut/FJPUAQBsFq4u
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[0.528488, 0.470624, 0.701351]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQbdVj8Kiv0tWu+9zveXMPMx7wWL9n1qfrVXbnziwv
TXdihvK77DIFbcUvlbIcKGvm/fJVcYodU+9v7bsprFD5WXbxJZPt2ZTYDvS+
3brg+7EFdi/2SJZW7GM7sNx1mv6d8iV2S31NpJ/6sh+4wS6ffejsEjvLBe+O
lh+dYR8vmer+pWa53Sau27d5XFfZQ8xbZcf83+nkjR+r7A1dRd59MFpn5+K9
81pcwwp7iPkb7K6846ieMmGJ/fkDTOUq7XvtHDfc12PcvGP/C8XjU8Q37bVb
H6d9eoM7F9Q9B+w+Mv0LmzOb68DRPUKFHP1H7aZlVu55a8h9IOjtl/+NS47a
3Wn5M0PahPtAyBOBwmKtk3bbr6U2BLRyQ/VfsPvU1/T5DS/PgY8Zjzu2/rhi
J6Byee77dB6o+pt2hz87Cp9cznMAAGmAsr0=
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[0.922526, 0.385626, 0.209179]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQbdVj8Kiv0tXuvnHO+hy/XfYe6/fM+nS9yi5TZX70
nM4dUH6X3Umn79/XPdtpX9bM++Wr4hS79V9azl+Q2g2Vn2U343uzzm273fa9
b7cu+H5sgZ1YRM0Ez6hd9stdp+nfKV9iV3Ds68Hs3B32N9jlsw+dXWLnK7au
rtZsh328ZKr7l5rldhOZW+Xf+26DmrfKLjBo7ZJz7ZvtDV1F3n0wWmcnnrH+
kVbxBqj5G+zUM6ZcWRW6yv78AaZylfa9dp93vNqscWTF/heKx6eIb9prtzJt
mYFb4sr9EPUH7KpV9W6LdGzef3SPUCFH/1G7EHFvBs2FJ/YHvf3yv3HJUbsf
6dZ3vIrZDoQ8ESgs1jpp5/LDM+joUbYDEP0X7L5uuLFvqif7gY8Zjzu2/rhi
V1lVqRa1gB2q/qadlVDFScF77AcAn4CywA==
               "]]}, {
              Hue[0.37820393249936934`, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[0.001]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQbdVj8Kiv0tWOAQo81u+Z9el6FRq/C84va+b98lVx
Cpr8LDi/9+3WBd+PLYDzl7tO079TvgTOv8Eun33oLIIfL5nq/qVmOZp5q+B8
Q1eRdx+M1qGZvwHOP3+AqVylfS+c/0Lx+BTxTXvR1B+A84/uESrk6D8K5we9
/fK/cQmCH/JEoLBY6ySa/gtw/seMxx1bf1xBU38TzgcARjtegQ==
               
               "]]}}}, {{}, {}}}, {
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
           Identity, Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{"Relative", None}, {
             "Ambient nitrogen (mol N \!\(\*SuperscriptBox[\(L\), \(-1\)]\))",
               None}}, FrameStyle -> Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {50, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, PlotLabel -> 
           "b) Minimum host biomass C-/N-limitation", 
           PlotRange -> {{0, 6.*^-6}, {-6.502298592853236, 
             0.10642785870365257`}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
         1256.5, -297}, 
         ImageScaled[{0.5, 0.5}], {931, 593}]}, {
        Inset[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0.75, 0]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQbdVj8Kiv0tXumqpJyqw9//Z7rN8z69P1Krtiv7Wf
HusyHIDwu+x4Bct/brnEcKCsmffLV8UpdpOT/m0p1GGEys+yk5ONvpTmwnig
9+3WBd+PLbCTjj7Axd7BeGC56zT9O+VL7Had3Ryz8RDjgRvs8tmHzi6xc2+K
mRp4nPFAvGSq+5ea5XYzl+/auOAFzLxVdizG6o+tnzEeMHQVeffBaJ2drMVG
pXRmJqj5G+xWzFnIyiDFdOD8AaZylfa9dqyzNN2u5zAdeKF4fIr4pr12lrMP
X3uTA1N/wC7vT2eDWgvTgaN7hAo5+o/aWQk/W3l2CtOBoLdf/jcuOWqn8dh6
5VYgP+SJQGGx1km7Gj6X0+FLYPov2H058Ix14gGmAx8zHnds/XHFLsR6/imL
MzD1N+08zmyRmnuS6QAA3uStYw==
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[0.528488, 0.470624, 0.701351]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQbdVj8Kiv0tXOWWO6gF3e7/0e6/fM+nS9yi5+wpo/
6xf+hfK77BT21z8JNP+/v6yZ98tXxSl22+X3yK/WZjgAkZ9lF2sZ8curkuFA
79utC74fW2DXLtaZ2XqU4cBy12n6d8qX2HGu2jKzg4vxwA12+exDZ5fYMUBB
vGSq+5ea5XA+xLxVcL6hq8i7D0br4HyI+Rvg/PMHmMpV2vfC+S8Uj08R37TX
rmSD9z7254xQ9xywy/jH6J/9jvHA0T1ChRz9R+2YnO1rHnExHQh6++V/45Kj
dmtntcz0BPJDnggUFmudtJvTttd+iwYTVP8Fu/SLC1assmU68DHjccfWH1fs
jDt8lkx0g6m/afdWg2/thWCmAwDNFpZz
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[0.922526, 0.385626, 0.209179]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQbdVj8Kiv0tWOAQo81u+Z9el6FRq/C84va+b98lVx
Cpr8LDi/9+3WBd+PLYDzl7tO079TvgTOv8Eun33oLIIfL5nq/qVmOZp5q+B8
Q1eRdx+M1qGZvwHOP3+AqVylfS+c/0Lx+BTxTXvR1B+A84/uESrk6D8K5we9
/fK/cclRO0OWGwrd/xgOhDwRKCzWOmnXEXr28lQgH6L/gp1Z+66s/2aMBz5m
PO7Y+uOK3RHWl38/mzNC1d+0E2r0/KCTyHgAACZOclI=
               "]]}, {
              Hue[0.37820393249936934`, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               GrayLevel[0], 
               Thickness[0.001]], 
              Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQbdVj8Kiv0tWOAQo81u+Z9el6FRq/C84va+b98lVx
Cpr8LDi/9+3WBd+PLYDzl7tO079TvgTOv8Eun33oLIIfL5nq/qVmOZp5q+B8
Q1eRdx+M1qGZvwHOP3+AqVylfS+c/0Lx+BTxTXvR1B+A84/uESrk6D8K5we9
/fK/cQmCH/JEoLBY6ySa/gtw/seMxx1bf1xBU38TzgcARjtegQ==
               
               "]]}}}, {{}, {}}}, {
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
           Identity, Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{"Relative", None}, {
             "Ambient nitrogen (mol N \!\(\*SuperscriptBox[\(L\), \(-1\)]\))",
               None}}, FrameStyle -> Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {50, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, PlotLabel -> 
           "c) Minimum symbiont biomass C-/N-limitation", 
           PlotRange -> {{0, 6.*^-6}, {-2.349717696174972, 0}}, 
           PlotRangeClipping -> True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], {
          Rational[931, 2], -891.}, 
         ImageScaled[{0.5, 0.5}], {931, 593}], 
        Inset["", {1256.5, -891.}, {Center, Center}, {931., 594.}]}}, {}}, 
     ImageSize -> Full, {PlotRangePadding -> {6, 5}}, ImageSize -> Full], 
    Placed[
     Unevaluated[
      LineLegend[{
        RGBColor[1, 0.75, 0], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        RGBColor[0.922526, 0.385626, 0.209179]}, {
       "0", "0.5*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)", 
        "1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, LegendLabel -> 
       "Prey (C-mol \!\(\*SuperscriptBox[\(L\), \(-1\)]\))", 
       LabelStyle -> {16}]], {Right, 0.25}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.842824551718611*^9, 3.8428245668019323`*^9}, 
   3.842824638837278*^9, 3.844453585663089*^9, 3.8445101280213614`*^9, 
   3.844511095714635*^9, 3.854026661323976*^9},
 CellLabel->
  "Out[706]=",ExpressionUUID->"e35b2fa8-6366-47f2-9e52-ffd85f04d98c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Fig. S6: Effect of nitrogen in \[OpenCurlyDoubleQuote]too low\
\[CloseCurlyDoubleQuote] range on bleached hosts\
\>", "Section",
 CellChangeTimes->{{3.842909123052484*^9, 3.8429091321904383`*^9}, {
  3.8447847676151667`*^9, 3.84478477493773*^9}, {3.84564458771879*^9, 
  3.8456445908280582`*^9}},ExpressionUUID->"a5ff8b1b-dca4-42a0-a529-\
bcd7e74e9f7e"],

Cell[CellGroupData[{

Cell["Run simulations and format results", "Subsection",
 CellChangeTimes->{{3.838824983651456*^9, 3.8388250121464777`*^9}, {
   3.838825080154945*^9, 3.838825117943622*^9}, {3.8388253294030523`*^9, 
   3.8388253369650106`*^9}, 3.838834840120932*^9, {3.838981560958099*^9, 
   3.838981562438587*^9}, {3.8394971846852283`*^9, 3.83949720202544*^9}, {
   3.8400586470736113`*^9, 3.8400586654143553`*^9}, {3.842909221012261*^9, 
   3.842909229582299*^9}, {3.842909315158946*^9, 
   3.842909317773341*^9}},ExpressionUUID->"e4479897-40ac-48a7-8537-\
311593f0454c"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"environment", ":", " ", 
    RowBox[{"flushing", " ", "rate", " ", "and", " ", "N", " ", "level"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"no", " ", "prey", " ", "or", " ", "fish"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", "=", "0"}], 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P0", "=", "0"}], 
    RowBox[{"(*", 
     RowBox[{"kp", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H0"}], "*)"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jX", "=", 
     FractionBox[
      RowBox[{"jXm", " ", "X"}], 
      RowBox[{"X", "+", "KX"}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"jN", "=", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"jNi0", " ", "=", " ", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"light", " ", "function", " ", "parameters"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tStartStress", "=", "600"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LHigh", "=", " ", "25"}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tHigh", "=", "30"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "1000"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "use", " ", "Table", " ", "to", " ", "simulate", " ", "the", " ", "model",
      " ", "at", " ", "different", " ", "Nenv", " ", "levels"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NRuns", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"jX", "=", 
             FractionBox[
              RowBox[{"jXm", " ", "X"}], 
              RowBox[{"X", "+", "KX"}]]}], ","}], "*)"}], " ", 
          RowBox[{
           RowBox[{"jN", "=", 
            FractionBox[
             RowBox[{"jNm", " ", "\[CapitalNu]"}], 
             RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", 
           RowBox[{"jHT", "=", "j0HT"}], ",", 
           RowBox[{"rNS", "=", 
            RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
           RowBox[{"VH0", "=", 
            RowBox[{"kv", "*", "H0"}]}], ",", " ", 
           RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
           RowBox[{"jNi0", " ", "=", " ", 
            FractionBox[
             RowBox[{"jNm", " ", "\[CapitalNu]"}], 
             RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", "states", ",", " ", 
           "rNH", ",", " ", "S", ",", "H", ",", "VH", ",", "P", ",", "Ni", 
           ",", "jNi", ",", "\[Rho]C", ",", " ", "jCP", ",", " ", "jHG", ",", 
           "\[Rho]N", ",", "jeC", ",", "jCO2", ",", "A", ",", "jL", ",", 
           "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", ",", "cROS1", ",", 
           "jSG", ",", "jST", ",", "jNw", ",", "F", ",", "fh", ",", "LfunH", 
           ",", "tsolve", ",", " ", "addtimetostatevars", ",", "eqs", ",", 
           "inis", ",", "sol", ",", "t", ",", "evalSSU", ",", " ", 
           "evalHSU"}], 
          RowBox[{"(*", 
           RowBox[{
           "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
            "intermediate", " ", "output", " ", "values", " ", "in", " ", 
            "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"light", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"LfunH", "=", 
           RowBox[{"L", "+", " ", 
            RowBox[{"LHigh", "*", 
             RowBox[{"HeavisideTheta", "[", 
              RowBox[{"t", "-", "tStartStress"}], "]"}]}], " ", "-", "  ", 
            RowBox[{"LHigh", "*", 
             RowBox[{"HeavisideTheta", "[", 
              RowBox[{"t", "-", 
               RowBox[{"(", 
                RowBox[{"tStartStress", "+", "tHigh"}], ")"}]}], "]"}]}]}]}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
            RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
           FractionBox[
            RowBox[{"A", " ", "B", " ", 
             RowBox[{"(", 
              RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
            RowBox[{
             RowBox[{
              SuperscriptBox["A", "2"], " ", "B"}], "+", 
             RowBox[{"A", " ", 
              SuperscriptBox["B", "2"]}], "+", 
             RowBox[{
              SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
             RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
             RowBox[{
              SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
          RowBox[{"(*", 
           RowBox[{"same", " ", "as", " ", 
            FractionBox["1", 
             RowBox[{
              FractionBox["1", "\[Rho]"], "+", 
              FractionBox["1", "A"], "+", 
              FractionBox["1", "B"], "-", 
              FractionBox["1", 
               RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], "*)"}],
           "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"fh", "[", 
            RowBox[{
             RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
           RowBox[{"Piecewise", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", " ", 
                RowBox[{"y", "<", "0"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"kv", " ", "*", "y"}], ",", 
                RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", "Calculations", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"jHG", "=", 
           RowBox[{
            RowBox[{"F", "[", "jHGm", "]"}], "[", 
            RowBox[{
             RowBox[{"yC", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Rho]C", " ", 
                 RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
              SuperscriptBox["nNH", 
               RowBox[{"-", "1"}]]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"jSG", "=", 
           RowBox[{
            RowBox[{"F", "[", "jSGm", "]"}], "[", 
            RowBox[{
             RowBox[{"jCP", " ", "yC"}], ",", 
             FractionBox[
              RowBox[{"rNS", "+", 
               FractionBox[
                RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"\[Rho]N", "=", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
              RowBox[{"\[Alpha]", "*", "jN"}], "+", 
              RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
              RowBox[{"nNH", " ", "jHG"}]}], " ", 
             RowBox[{"(*", 
              SuperscriptBox["yN", 
               RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"jeC", "=", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{"jX", "-", 
              FractionBox["jHG", "yC"], "+", 
              FractionBox[
               RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], 
          ";", " ", "\[IndentingNewLine]", 
          RowBox[{"jCO2", "=", 
           RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"jL", "=", 
           RowBox[{"A", " ", "astar", " ", "LfunH"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"rCH", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"jHT", "+", 
              FractionBox[
               RowBox[{"jHG", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
            "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"rCS", "=", 
           RowBox[{"\[Sigma]CS", 
            RowBox[{"(", 
             RowBox[{"j0ST", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
               SuperscriptBox["yC", 
                RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"jeL", "=", 
           RowBox[{"jL", "-", 
            FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"jNPQ", "=", 
           FractionBox["1", 
            RowBox[{
             FractionBox["1", "jeL"], "+", 
             FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
          RowBox[{"cROS1", "=", 
           FractionBox[
            RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"jST", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"rNH", "=", 
           RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"A", "=", 
           RowBox[{"1.256307", "+", 
            RowBox[{"1.385969", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "6.479055"}], " ", 
               RowBox[{"S", "/", "H"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"jNw", "=", " ", 
           RowBox[{
            RowBox[{"\[Rho]N", "*", 
             RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
            RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"tsolve", "=", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Rho]C", ",", 
               RowBox[{"jCP", "-", 
                RowBox[{"jSG", " ", 
                 SuperscriptBox["yC", 
                  RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"jCP", ",", 
               FractionBox[
                RowBox[{
                 RowBox[{"F", "[", "jCPm", "]"}], "[", 
                 RowBox[{
                  RowBox[{"jL", " ", "yCL"}], ",", 
                  RowBox[{"rCS", "+", 
                   FractionBox[
                    RowBox[{"H", " ", 
                    RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
                RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"jNi", ",", " ", 
               FractionBox[
                RowBox[{"jNm", " ", "*", "Ni"}], 
                RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
            "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"states", "=", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"tsolve", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
              "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"addtimetostatevars", "=", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"#", "\[Rule]", 
                RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", 
             "states"}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"eqs", "=", 
           RowBox[{"Join", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
                 "\[Equal]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Lambda]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                   "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
              "tsolve"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"S", 
                   RowBox[{"(", 
                    RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                  "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"H", 
                   RowBox[{"(", 
                    RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                  "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                RowBox[{"fh", "[", 
                 RowBox[{"t", ",", "  ", 
                  RowBox[{
                   RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"d", "*", 
                    RowBox[{"(", " ", 
                    RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                   " ", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                    ")"}], "/", 
                    RowBox[{"(", " ", 
                    RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                  "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"P", "*", 
                   RowBox[{"(", 
                    RowBox[{"rp", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                    ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
              "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"inis", "=", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], 
                 "\[Equal]", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
              "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"sol", "=", 
           RowBox[{
            RowBox[{"NDSolve", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Join", "[", 
                RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
              RowBox[{
               RowBox[{"#", "&"}], "/@", "states"}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
              RowBox[{"Method", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<EquationSimplification\>\"", "\[Rule]", 
                 "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"min", " ", "S", " ", "SU", " ", "C"}], "-", "lim"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"evalSSU", "=", 
           RowBox[{"Evaluate", "@", 
            RowBox[{"Flatten", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Log", "[", 
                 RowBox[{
                  RowBox[{"Min", "[", 
                   RowBox[{"jSGm", ",", 
                    RowBox[{"jCP", " ", "yC"}]}], "]"}], "/", 
                  RowBox[{"Min", "[", 
                   RowBox[{"jSGm", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"rNS", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"H", " ", "\[Rho]N"}], ")"}], "/", "S"}]}], ")"}],
                     "/", "nNS"}]}], "]"}]}], "]"}], "/.", 
                "addtimetostatevars"}], "/.", "sol"}], "}"}]}]}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"min", " ", "H", " ", "SU", " ", "C"}], "-", "lim"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"evalHSU", "=", 
           RowBox[{"Evaluate", "@", 
            RowBox[{"Flatten", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Log", "[", 
                 RowBox[{
                  RowBox[{"Min", "[", 
                   RowBox[{"jHGm", ",", 
                    RowBox[{"yC", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Rho]C", " ", 
                    RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}]}], "]"}], 
                  "/", 
                  RowBox[{"Min", "[", 
                   RowBox[{"jHGm", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                    
                    RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                    RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                    RowBox[{"nNH", "^", 
                    RowBox[{"-", "1"}]}]}]}], "]"}]}], "]"}], "/.", 
                "addtimetostatevars"}], "/.", "sol"}], "}"}]}]}]}], " ", ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"sol", ",", "evalSSU", ",", " ", "evalHSU"}], "}"}]}]}], 
        RowBox[{"(*", 
         RowBox[{
         "save", " ", "the", " ", "whole", " ", "simulation", " ", "as", " ", 
          "output", " ", "and", " ", "the", " ", "time", " ", "series", " ", 
          "of", " ", "S", " ", "and", " ", "H", " ", "SU", " ", 
          "limitations"}], "*)"}], "]"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\[CapitalNu]", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"3", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"5", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}]}], 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"4", "*", 
             RowBox[{"10", "^", 
              RowBox[{"-", "6"}]}]}], ",", 
            RowBox[{"6", "*", 
             RowBox[{"10", "^", 
              RowBox[{"-", "6"}]}]}], ",", 
            RowBox[{"8", "*", 
             RowBox[{"10", "^", 
              RowBox[{"-", "6"}]}]}]}], "*)"}], "}"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836574971850909*^9, 3.836575001348812*^9}, {3.8377007138884783`*^9, 
   3.8377007309776583`*^9}, {3.838242766821814*^9, 3.838242781387725*^9}, {
   3.838242825402397*^9, 3.8382429727114363`*^9}, {3.838243125776853*^9, 
   3.8382431406887302`*^9}, {3.838244578172114*^9, 3.838244599245661*^9}, {
   3.8382957626660337`*^9, 3.838295858377446*^9}, {3.838303982364606*^9, 
   3.838304016681575*^9}, {3.838304053540737*^9, 3.838304158185794*^9}, {
   3.838308673743655*^9, 3.838308675607581*^9}, 3.838308709608234*^9, 
   3.838308778440037*^9, {3.838308811049652*^9, 3.838308820230441*^9}, {
   3.838308882927889*^9, 3.8383088873964367`*^9}, {3.8383089896145163`*^9, 
   3.838308990917026*^9}, {3.8396937967221947`*^9, 3.839693814451404*^9}, {
   3.839694017396687*^9, 3.839694062627121*^9}, {3.839694097883594*^9, 
   3.839694171328134*^9}, {3.839694208574512*^9, 3.8396942312585497`*^9}, {
   3.8396942629861393`*^9, 3.839694266265139*^9}, {3.839694367750291*^9, 
   3.839694368757863*^9}, {3.839694409526636*^9, 3.839694443317959*^9}, {
   3.839694669683298*^9, 3.8396946714768*^9}, {3.83969477548034*^9, 
   3.839694800322371*^9}, {3.839695339701435*^9, 3.839695342863512*^9}, {
   3.84290925920763*^9, 3.842909262213873*^9}, {3.8429093009321537`*^9, 
   3.84290930195617*^9}, 3.84392823501884*^9, {3.844453715300499*^9, 
   3.844453724976736*^9}, {3.844453761498263*^9, 3.8444538096337748`*^9}, {
   3.84445384077486*^9, 3.844453881967596*^9}, {3.844453914602268*^9, 
   3.844453994306903*^9}, {3.854025519275749*^9, 3.854025533204488*^9}},
 CellLabel->
  "In[707]:=",ExpressionUUID->"32a90642-cd31-4568-833c-8d574f75af6c"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"NSeparate", "=", 
     RowBox[{"Transpose", "[", "NRuns", "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.836307613155615*^9, 3.8363077048578863`*^9}, {
   3.836307758024732*^9, 3.836307778435266*^9}, {3.836307862301177*^9, 
   3.836307962062512*^9}, {3.8363090078165283`*^9, 3.83630903523628*^9}, {
   3.836309073200597*^9, 3.8363091099319563`*^9}, {3.836309236129477*^9, 
   3.836309241017482*^9}, {3.836309272944121*^9, 3.8363092775597363`*^9}, 
   3.836309393405826*^9, {3.8363094313567953`*^9, 3.836309454438772*^9}, {
   3.836310052737256*^9, 3.836310241172287*^9}, {3.836310505441999*^9, 
   3.836310527703776*^9}, {3.8363105710765963`*^9, 3.836310600173792*^9}, {
   3.836311001779952*^9, 3.836311026917247*^9}, {3.8363112816426086`*^9, 
   3.83631135886836*^9}, {3.836311419874872*^9, 3.836311430807312*^9}, {
   3.836311465139804*^9, 3.836311548781934*^9}, {3.836311696095222*^9, 
   3.8363117178446217`*^9}, {3.836311772897365*^9, 3.8363117790961523`*^9}, {
   3.836311858155672*^9, 3.836311859638934*^9}, 3.8363138792613707`*^9, {
   3.836321382588965*^9, 3.836321415991592*^9}, {3.836573247655161*^9, 
   3.8365732597243147`*^9}, {3.836575011997986*^9, 3.836575018202914*^9}, {
   3.838243226509907*^9, 3.838243248286963*^9}, {3.838243348623324*^9, 
   3.838243378585248*^9}, {3.838243506025373*^9, 3.83824352696212*^9}, 
   3.838243626740837*^9, {3.8382958647507763`*^9, 3.838295869860841*^9}, 
   3.838295914485818*^9, {3.838304167004157*^9, 3.838304174827436*^9}, {
   3.8383089200865097`*^9, 3.838308924878748*^9}, {3.839694714661113*^9, 
   3.839694733384801*^9}, 3.844454003679256*^9},
 CellLabel->
  "In[717]:=",ExpressionUUID->"02d977f0-b5ca-4203-9bcf-1f2976d766ad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sols", "=", 
   RowBox[{"ToExpression", "[", 
    RowBox[{"str", "[", 
     RowBox[{"NSeparate", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.838243470035577*^9, 3.8382434905957727`*^9}, {
   3.838243555877482*^9, 3.8382436203131857`*^9}, {3.8382436555986443`*^9, 
   3.838243710305378*^9}, 3.838291425913348*^9, {3.838295871690984*^9, 
   3.838295874521933*^9}, {3.838304177535198*^9, 3.8383041819129267`*^9}, {
   3.838308927517912*^9, 3.838308930772113*^9}, {3.839694817305917*^9, 
   3.8396948559566174`*^9}},
 CellLabel->
  "In[718]:=",ExpressionUUID->"8bc2e9be-c0a6-4296-8458-13f9a871fee8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HSUev", "=", 
   RowBox[{"ToExpression", "[", 
    RowBox[{"str", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{"NSeparate", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.838243771038862*^9, 3.8382437848311577`*^9}, {
  3.838295876733651*^9, 3.8382958829106817`*^9}, {3.838304185670806*^9, 
  3.838304190757029*^9}, {3.838308934437908*^9, 3.8383089395723877`*^9}, {
  3.83969483118717*^9, 3.839694846339151*^9}},
 CellLabel->
  "In[719]:=",ExpressionUUID->"74c0805e-51e1-4829-8100-89fe9ddd4ee5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SSUev", "=", 
   RowBox[{"ToExpression", "[", 
    RowBox[{"str", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{"NSeparate", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.838243797112194*^9, 3.8382438195820227`*^9}, {
   3.838295878820239*^9, 3.838295885366321*^9}, {3.83830419733615*^9, 
   3.838304202090127*^9}, 3.838308945061901*^9, {3.839694836735713*^9, 
   3.83969486442845*^9}},
 CellLabel->
  "In[720]:=",ExpressionUUID->"da97969f-3cd4-4b6f-a960-48c11f1fe34b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["plot results", "Subsection",
 CellChangeTimes->{{3.838243894713189*^9, 
  3.83824389833111*^9}},ExpressionUUID->"36fa7a82-9264-4fd0-b78a-\
1c844dc82a42"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"paddingS6", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"80", 
        RowBox[{"(*", "left", "*)"}], ",", "15"}], 
       RowBox[{"(*", "right", "*)"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"50", 
        RowBox[{"(*", "bottom", "*)"}], ",", "10"}], 
       RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotS6a", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"H", "'"}], "[", "t", "]"}], "/", 
              RowBox[{"H", "[", "t", "]"}]}], "}"}], "/.", 
            RowBox[{"Sols", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"H", "'"}], "[", "t", "]"}], "/", 
              RowBox[{"H", "[", "t", "]"}]}], "}"}], "/.", 
            RowBox[{"Sols", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"H", "'"}], "[", "t", "]"}], "/", 
              RowBox[{"H", "[", "t", "]"}]}], "}"}], "/.", 
            RowBox[{"Sols", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "590", ",", "tmax"}], "}"}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", "\"\<a) Host specific growth rate\>\""}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"590", ",", "0"}], "}"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "12"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", "  ", 
        RowBox[{"ImagePadding", "\[Rule]", "paddingS6"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
              RowBox[{"[", "8", "]"}], "]"}], ",", " ", 
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
              RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "4", "]"}], "]"}], "}"}], ",", 
             RowBox[{"Directive", "[", 
              RowBox[{"Black", ",", " ", 
               RowBox[{"Thickness", "[", "0.001", "]"}]}], "]"}]}], "}"}]}], 
          ","}], "*)"}], 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
            RowBox[{"(*", "right", "*)"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
            RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"(*", "True", "*)"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", " ", "0.01", ",", "0.02"}], "}"}], ",", 
               "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"(*", "None", "*)"}], 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", 
                   "\"\<1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"2", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", 
                   "\"\<2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], 
                  "}"}]}], "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], 
         "*)"}], 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<C-mol H C-mol \!\(\*SuperscriptBox[\(H\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(d\), \(-1\)]\) \>\"", ",", "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "10"}], 
          RowBox[{"(*", 
           RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
        " ", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "12"}], "]"}]}], 
        RowBox[{"(*", 
         RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], ",", " ", 
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"1", "/", "GoldenRatio"}]}]}], "]"}], ",", 
      RowBox[{"RegionPlot", "[", 
       RowBox[{
        RowBox[{"tStartStress", "<", "t", "<", 
         RowBox[{"tStartStress", "+", "tHigh"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "590", ",", "tmax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "1000"}], ",", " ", "1000"}], "}"}], ",", " ", 
        RowBox[{"Frame", "\[Rule]", " ", "False"}], ",", " ", 
        RowBox[{"Mesh", "->", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"GrayLevel", "[", 
          RowBox[{"0.09", ",", " ", "0.06"}], "]"}]}]}], "]"}]}], "]"}]}], 
   " ", ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotS6b", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"HSUev", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{"HSUev", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
          RowBox[{"HSUev", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "590", ",", "tmax"}], "}"}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", "\"\<b) Host biomass C-/N-limitation\>\""}], 
        ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"590", ",", "0"}], "}"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "12"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", "  ", 
        RowBox[{"ImagePadding", "\[Rule]", "paddingS6"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
              RowBox[{"[", "8", "]"}], "]"}], ",", " ", 
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
              RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "4", "]"}], "]"}], "}"}], ",", 
             RowBox[{"Directive", "[", 
              RowBox[{"Black", ",", " ", 
               RowBox[{"Thickness", "[", "0.001", "]"}]}], "]"}]}], "}"}]}], 
          ","}], "*)"}], 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
            RowBox[{"(*", "right", "*)"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
            RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"(*", "True", "*)"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", " ", "0.01", ",", "0.02"}], "}"}], ",", 
               "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"(*", "None", "*)"}], 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", 
                   "\"\<1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"2", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", 
                   "\"\<2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], 
                  "}"}]}], "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], 
         "*)"}], 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Relative\>\"", ",", "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Time (d)\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
        " ", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "10"}], 
          RowBox[{"(*", 
           RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
        " ", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "12"}], "]"}]}], 
        RowBox[{"(*", 
         RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], ",", " ", 
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"1", "/", "GoldenRatio"}]}]}], "]"}], ",", 
      RowBox[{"RegionPlot", "[", 
       RowBox[{
        RowBox[{"tStartStress", "<", "t", "<", 
         RowBox[{"tStartStress", "+", "tHigh"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "590", ",", "tmax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "1000"}], ",", " ", "1000"}], "}"}], ",", " ", 
        RowBox[{"Frame", "\[Rule]", " ", "False"}], ",", " ", 
        RowBox[{"Mesh", "->", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"GrayLevel", "[", 
          RowBox[{"0.09", ",", " ", "0.06"}], "]"}]}]}], "]"}]}], "]"}]}], 
   " ", ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotS6c", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"SSUev", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{"SSUev", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
          RowBox[{"SSUev", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "590", ",", "tmax"}], "}"}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<c) Symbiont biomass C-/N-limitation\>\""}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"590", ",", "0"}], "}"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "12"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", "  ", 
        RowBox[{"ImagePadding", "\[Rule]", "paddingS6"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
              RowBox[{"[", "8", "]"}], "]"}], ",", " ", 
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
              RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "4", "]"}], "]"}], "}"}], ",", 
             RowBox[{"Directive", "[", 
              RowBox[{"Black", ",", " ", 
               RowBox[{"Thickness", "[", "0.001", "]"}]}], "]"}]}], "}"}]}], 
          ","}], "*)"}], 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
            RowBox[{"(*", "right", "*)"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
            RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"(*", "True", "*)"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", " ", "0.01", ",", "0.02"}], "}"}], ",", 
               "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"(*", "None", "*)"}], 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", 
                   "\"\<1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"2", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", 
                   "\"\<2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], 
                  "}"}]}], "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], 
         "*)"}], 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Relative\>\"", ",", "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Time (d)\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
        " ", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "10"}], 
          RowBox[{"(*", 
           RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
        " ", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "12"}], "]"}]}], 
        RowBox[{"(*", 
         RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], ",", " ", 
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"1", "/", "GoldenRatio"}]}]}], "]"}], ",", 
      RowBox[{"RegionPlot", "[", 
       RowBox[{
        RowBox[{"tStartStress", "<", "t", "<", 
         RowBox[{"tStartStress", "+", "tHigh"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "590", ",", "tmax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "1000"}], ",", " ", "1000"}], "}"}], ",", " ", 
        RowBox[{"Frame", "\[Rule]", " ", "False"}], ",", " ", 
        RowBox[{"Mesh", "->", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"GrayLevel", "[", 
          RowBox[{"0.09", ",", " ", "0.06"}], "]"}]}]}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8396949758157253`*^9, 3.8396950046750097`*^9}, {
   3.839695062861001*^9, 3.839695098210041*^9}, {3.839695129738001*^9, 
   3.839695154838539*^9}, {3.83969518901086*^9, 3.839695297957172*^9}, {
   3.8399447268820763`*^9, 3.839944824546476*^9}, {3.839944893831294*^9, 
   3.839945088285324*^9}, {3.8399452242723722`*^9, 3.839945239515546*^9}, {
   3.84004361181092*^9, 3.8400436271630774`*^9}, {3.840043746518477*^9, 
   3.840043760944023*^9}, {3.840043887599702*^9, 3.8400438998802032`*^9}, {
   3.840043942082013*^9, 3.840043965164748*^9}, {3.840044080814973*^9, 
   3.840044212172106*^9}, {3.840044255958905*^9, 3.840044271209363*^9}, 
   3.842909342903326*^9, {3.8429093928905077`*^9, 3.842909451989854*^9}, {
   3.842909491426052*^9, 3.8429095017374697`*^9}, {3.84290954592905*^9, 
   3.842909580571607*^9}, 3.8429096393005733`*^9, {3.842909670425799*^9, 
   3.8429097087660017`*^9}, {3.842909741701214*^9, 3.842909870067039*^9}, {
   3.8429100282012043`*^9, 3.8429100284396887`*^9}, {3.842910072590702*^9, 
   3.842910109562749*^9}, {3.844454032773242*^9, 3.844454064600005*^9}},
 CellLabel->
  "In[721]:=",ExpressionUUID->"e3a6036d-b6d3-4300-a744-4aff9f19e318"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"LowNLeg", "=", 
    RowBox[{"LineLegend", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\"", ",", 
        "\"\<3*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\"", ",", 
        "\"\<5*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], "}"}], ",", 
      RowBox[{
      "LegendLabel", "\[Rule]", " ", 
       "\"\<Ambient N (mol \!\(\*SuperscriptBox[\(L\), \(-1\)]\))\>\""}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", " ", 
       RowBox[{"{", "16", "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"SLowNBleachFig", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"plotS6a", ",", " ", "plotS6b"}], "}"}], ",", 
        RowBox[{"{", "plotS6c", "}"}]}], "}"}], ",", " ", 
      RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
      RowBox[{"Spacings", "\[Rule]", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", 
           RowBox[{"(*", "left", "*)"}], ",", 
           RowBox[{"-", "120"}]}], 
          RowBox[{"(*", 
           RowBox[{"labels", " ", "and", " ", "left", " ", "col"}], "*)"}], 
          RowBox[{"(*", 
           RowBox[{"left", " ", "to", " ", "right"}], "*)"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", 
           RowBox[{"(*", "top", "*)"}], ",", "0"}], 
          RowBox[{"(*", 
           RowBox[{"middle", " ", "2", " ", "rows"}], "*)"}], " ", 
          RowBox[{"(*", 
           RowBox[{"labels", " ", "and", " ", "bottom"}], "*)"}], 
          RowBox[{"(*", 
           RowBox[{"top", " ", "to", " ", "bottom"}], "*)"}], "}"}]}], 
        "}"}]}], ",", " ", 
      RowBox[{"Frame", "\[Rule]", "False"}]}], 
     RowBox[{"(*", 
      RowBox[{",", " ", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "GoldenRatio"}]}]}], "*)"}], 
     RowBox[{"(*", 
      RowBox[{",", " ", 
       RowBox[{"Alignment", "\[Rule]", " ", "Bottom"}]}], "*)"}], " ", 
     RowBox[{"(*", 
      RowBox[{
      "align", " ", "the", " ", "grid", " ", "at", " ", "the", " ", "bottom", 
       " ", "of", " ", "its", " ", "frame"}], "*)"}], "]"}], ",", 
    RowBox[{"Placed", "[", 
     RowBox[{"LowNLeg", ",", 
      RowBox[{"(*", "Bottom", "*)"}], 
      RowBox[{"{", 
       RowBox[{"Right", 
        RowBox[{"(*", 
         RowBox[{
         "left", " ", "to", " ", "right", " ", "position", " ", "is", " ", 
          "in", " ", "the", " ", "center"}], "*)"}], ",", " ", "0.25"}], 
       RowBox[{"(*", 
        RowBox[{"top", " ", "to", " ", "bottom", " ", "position"}], "*)"}], 
       "}"}]}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8429099794424686`*^9, 3.842910008339527*^9}, {
  3.844454102006537*^9, 3.8444541090321817`*^9}, {3.844511066514214*^9, 
  3.844511068823018*^9}, {3.845644661835259*^9, 3.845644680731691*^9}, {
  3.845644711433063*^9, 3.845644717043249*^9}},
 CellLabel->
  "In[725]:=",ExpressionUUID->"c0a15320-5a9b-4889-af4f-b1d9ae761800"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[
             {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
JJcEYwbzoQ42w9EHNPNIMA3MLF2APR4SpJpyAY9nx3c6Edd/cs1P/4v5OD9G
YdBR7C1zw0urC0hIUx4KNMH2TDkp11dIwn6xawVzsbsusSV3l+L9QR2K8PHO
QyFjC6zNy0ggJMo/62KLaSQke1wmQTyn2U8Ku5wh9OjEFbw/EkWFR73ykNm9
JMHkchLqj8Y9bMAeWCxqUFCB61k2yPrb3DzEsUqLuX2VhLcJUhA6wUPrciRq
n1wjIa7fQjATG73LmvxYScLIZNKhZmwneWn1P1V4vFKk6QT276O5QcI3SGi5
JHFrwy8eUp08N6xxi4RPUbKiJHah+KWexBoSwt7+OK/+m4cOrW07nXIX9xdV
t52u2FLbftil1ZIQVVBQEo8db6TTll1HwqPCqmOvsY9GtKP8Jvw8RuxryB/8
/+8nz91+RIKv8FyV3EkeGhpe/V/NYxLK/cZ1EHbBnz0r0BMSDrGur/uALbEs
ObXpKe7Pq9d0y0/h8RqsZ7V14vNOx0WxFPtuqal73xsSmiUvLC2Y5qHQWwGr
+9+SsGGlXVI99rZ7Gd2DPSTkyxy714N9rued9bf3JBxVbWJJ/eUhlmjwnqlP
eD67bVEs9t6w3A2iI/g8M919/sA/HuKn6nuXjZLQKJqoFoBdnfKZJ/mVhHfP
LM7EYW++pCwpM4bzUtqVcQtb+G3T/I0/cb3obXosPsNDnXojX7T+klDpdfk6
wv71Inqf7T8SFD6sSHqOLe0rXuk3g/NpqdQawnZJ02Tk8VPwaiRNX4IvDw1/
jBfnm0/BjF3pd0/speGrIqQWULj/OMIJbFWhq++UBSng11c14WKHq3Vdcl1E
wZkSdvtVbAG2vG6jMAXBP8u+/MbeuKK6sHspBauKby1dxI/Pg8v7hH6IUHBq
SO6+NHbK8+CXcssosB7u8tHElpFv9OMsp6BCli/jBPb2lkOnjddQkJN2TXEA
287x+4zrWgp++yo9+Ykd/pXjGbGOgrhVq7Tn4POmdvkV5VI5CpqfnrwkPXv+
eE83C23C83P3m78X2286ecsGRfxcpumRFXZKyvpT2pspMB1IVvkP+8Utk//8
t1LQzX1mdRzbbWHO9zYVCsyrI95lYrN5W+z7VSkQKy++cRa7WKWulk+NgqVh
fzyLsUftv8Sr7MTzTesuv4UtOhrx1VidAvpsKacOW40lbOumQYGMrrtRK3bE
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

               "]]},
             Annotation[#, "Charting`Private`Tag$125813#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
               "]]},
             Annotation[#, "Charting`Private`Tag$125813#2"]& ], 
            TagBox[
             {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
hKSSImq/ptuY6PmaGhKqmv9S+eXZ7ZzOd7Uk9O1TvUbl29M7N36rI+FDemc4
NkPny0WJFyT0X1ej4mXwP3JieT3KLyeDD+P7m91fY23YQEKaX+03XL7MgMY8
20YSLPaJUuUXMvAR93pJAmPQbhr76M95npFNJHxcMdsEX19Tcrs6uRnlE5E8
Kt+sCLFZXviKhKjcVULU+GQ0EVHbQoLxYKIr9qe/cT09rSREF1hcwrZ4qrPl
exsa71Pb06j9yJGtfMl2EjbukTuCLbbV/4daBxrPp+TfUPlRUM5hSycJ9ReO
UvHyovr+XbsuEp7+kvxAzXd3/YxxfkPCEYcb76jxt23Lyf3dqL1VxYTx+cau
ETvd3qL513s5a2p/6sAzjWPvUP436aL2rxt4iwid6CEhsTSO2m9cNLmz3/c9
CfprCqjxSys4uvxsL8pvXo1UfOTNakkN7kP5cPzJdWxNjlxweD/Kl76h57Fv
zN/rxBgg4XKggTT2suRUPc4gCV8O1hyn9u+q9EpHf0D9nb/9Hy6v4s3lX+OH
SMgxP9iNnbjuWEPSRxT/u66NYcs8yM1J/UTCiQNN1Pw8xmiMef0zGp8j+0Op
/dnV2h5ZwyTUlQhQ/Yttddbk1heUD69GbqD217c9Ui4cIeHqjxGqfBH7fv8q
GiWh2GGGip/f/URX8RjKpw9jqfx5zov+oOwr6k9qNdR48X2i5uKzcVS/299T
8ym/c+Kn6ybQ/DKklSrPmMDu3WhtByc4b6n28GLHrW75D82f1wdQ+XJI6rVo
xxSKH61d4vh89ySFoe5vKD/0EvbU/ErZ9VnvdxKyi/ffpuaLWVevffhBwvTM
kAR+fufagdDhaZS/tlodwLa/v2Lf159o/qq1joqn5i1eBlMzJLh/d83AtqrK
l/v5iwT12Z3B2HWWE5N/fpPATWyk5ifmrXrNs/+SMPja4yg13rgE5Yv8Q/1P
tvYvLq9x/2OuhAAPVsevoeKp5Pi/Y9KzePBcbhW13to4YWouP5sHj1SZ66yo
8YC5bPEcHkTGGNCx1wu8+KciyAMXXS+qP+exJN+pCfHg/kl/av+zptSekpXC
PDjU0Ev118zEhKR1IjxwyvKkyq+q3OmvK8qDtcVTVHuk3lhsayDGg2W1qVbY
i9YeXG8kjp5HPn6A759YlC5hOpcHArWvNajxaMvQ520SPCiQ9KPyT/SzlbWW
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
nNyPhN9/1TnAG3ke+dX/wfEyuA==
               "]]},
             Annotation[#, "Charting`Private`Tag$125813#3"]& ]}, {}}, {
           GraphicsComplexBox[CompressedData["
1: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
IXq+8vef+wKY+wCY732Y73mY73WY7/H/AzJRLww=
            "], {
             {GrayLevel[0.09], AbsoluteThickness[1.6], Opacity[0.06], 
              EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
EPreOgv6W6HvxSnQ3wl9C86H/nnoW+Q/Ttx7kw==
                 "]], 
                PolygonBox[CompressedData["
1:eJwtlmeMlkUUheeioljwFyqiAiK9CkgvS+9t6R1WunQQEUSRJkYjkUjcSNiw
gYiiKIqigIkJodh7AyvYQMVCUVFRn5MzP57Mud+87zszd+6c+aoWzSqcWSal
tBLOhx/g8UjpftoK0AR9CdyEHgvl0XtgL7olDEePgFvQNaAfuj9MQl8DfdB9
YSL6argYvQteSv7mRegX9ZvGggHoQpiMvg6+gXdhBMyGofQNg2noG2AgehBM
QVeBmuhTtNdCN6hFfIa2MvTQHIl/o60EXbRm4p2wA90QGqEvCOvhUBb9gp5B
3yjQF4b1SBiMHgJT0ddDY3S58FpGw6Xo3fAyujn0QveGCeirlAP05eFctobf
4WniEtqq8D18AONgHvwLO+jfSlsbTsI24uK85u/gfRgDc+En2Er/Gtor4Bh8
CEUwXzmk70Tu6wBfwzswDGbBt/AejII50JTnLwuvZTz8Ck8Sr8s5/QeeJd6i
vYAj8BYMghnwFbwJhTBde8KzPeFm9JVQBv08bEfXh6PwNgyBmfAXPEP/Ztrq
8DM8QbyWtiIk9HOwDVkX/oTtxKW01eA0PEW8PtdEdfQv+d1Oeob4x+Tab6cc
E/+R96JXznXLcO0U57W3CL+rHKhWOoVrZ2eeW/NwbjVHna3u0Db5jCkXDxAv
zTnRXjULj609U212hKHJNaqz0jlce7vyWlqFa319Xmub8FxLcy21Dtd+Sd6b
dtAveY9US+1hQHJNKXcFMDA5h2vQo6FO8hx1druEa1tnWHvVAQYn75n2pi30
Sd6jueE91t4ugOXhM6OzcodqMHwmdBZug/16jnghbUd4DD0n/O69sCjsMfKW
22FJ2DPkFYvggH4P93WGgxon3NcV9sG88FgFGjPsUfImjbk07ClV0IthVdhz
5DVL4DVYGda9NaewB8r77oQ34D7iu2j7a4+1V1Ar+bdXYVl47T3hFf0eHqs7
vA6rw9/qqz1FT4TG6BXJXvhIWMsTi3V2oJFyC4fzmrVWefCXeU6aizz687wG
zV2e9UUeU2PJU6fyrWlhr2mmd9DTw17RAg7lHCu38vTP8pq0Fnnwp3lNWos8
fDzvFoW9pAHURf+dfHZVgw2JzwufddV4HfTZ5LOqGmpAHOGzrBqrhz6X7C2q
2cnEU8Je1zS5VseEvUY1Wx/9X7JXqqaVqwnhu0Q5U24nhb1NOR6LHhf2mnrJ
3rchfD/KA0vCY2os/bYuvEatbVmyVz0U1vKsteFv6lt3Q2k4x8rtqmSvfTi8
d/JceeWD4WflmaqdUWGvVA3Jux8lXp3s4bobNhHfk3xHzNDc4VZ0K/gk+Uzp
LOnOOQ4fQZvkZz5OPhMFyR6su6pr+K7XnbUl/E19S2PqbtkYnrvumM3hGlFt
aA76b9AtfDfoP8L/RsbyBA==
                 "]]}]}, {}, {}, {}, {}}], {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{590., 0.},
         DisplayFunction->Identity,
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{
            FormBox[
            "\"C-mol H C-mol \\!\\(\\*SuperscriptBox[\\(H\\), \\(-1\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(d\\), \\(-1\\)]\\) \"", TraditionalForm], None}, {
           None, None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{80, 15}, {50, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotLabel->FormBox[
          "\"a) Host specific growth rate\"", TraditionalForm],
         PlotRange->{{590, 1000}, {-0.02970757856727214, 
           0.025330748468204465`}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}], 
        NCache[{Rational[931, 2], -297}, {465.5, -297}], 
        ImageScaled[{0.5, 0.5}], {931, 594}], InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[
             {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
vloq71aTQGE6ZYGN0UHYyuHTMDcJ/ge4GTee
               "]]},
             Annotation[#, "Charting`Private`Tag$125930#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
ZSP5qTs/lnEmVHA+LOXmsNH/ANB4ie0=
               "]]},
             Annotation[#, "Charting`Private`Tag$125930#2"]& ], 
            TagBox[
             {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
zp+yCdhb34H2xawJiZ9MB9f8TlEt6U7U3cyRmzSVDkIXGAWHT3UiEYbm+lcS
dMi8GOg/bNKFFs7OSfksSYe0PKmN7ju6kOX9zeL9UnTwKcn0iPDtQtGf/GvV
ZenAHtnlMxzfhZQ1Xx1lzqKD/+mXX1kDXWhlyd5rm9ToEBt8vn/v1W7ksPPX
mMs8Onx1/Dg9Na0bBfcxD5yYT4f1jcuUsgu7UcGsB7r31OkQ3/fq7sLWbmR5
+F+x+CI6yJ8w7gta0oNcp1/9VbGcDsq7ky+ezOxBjLjFzu0r6PDESvY0ragH
pS5/XjBJjw6ysvKc3dU9qNe5jbPcgA5N79NvUL960Im7+moxq/H+eMd0GvD3
gfNWldYOG+jgdLA990NCL+qKtr7obkqHMa5Rp/CDXmRaU/z1lBkdijYevimb
24sG9uV6JW3E9Tk9cPZtdS/aEZgczbOiw826PccTp/ah+TcDq6ntdIiY5zLo
5NaHTv7kKcfb02FL7yJZtncfqtbxPJDhgOt9wmDDtRN9iJm9d6DWiQ6q20Y2
u0f3oc53Fooau+nAC9DMys3pQ48GlHYVHqBDZ7v12nVTeEhs7cXkyoN02B54
fM/kGTzkdlayp/UQHX5a3r30TIKHFMRFQsQ96BBu21g7VZGHTszrueHsRQdO
03RPRW0eMrEubP4VSIc5++4G6lnz0Meb+z212HQY4WQ+VuHwkPn90JWLOHRQ
iWMVHQjnoZyncX8XUbj/87dfvxXFQ8kVtVydcNwPtYYWyUs8FDxilbY0mg4f
10o2RyfykIqzXo/eFToM5lG37XJ4KMZtW5b+VTpYliZuX5bPQ6I+XqcNrtGh
WZVdK/KchwTM1JlGsXRgvgm9Hveah15nKi9dk0AHgyarfNYHHjoiNcV7fSod
vLxPdFi28lDTnPmGJnfosIKhU/i2jYccFqIxk7t00I47aWXWyUNgfDzKNI0O
amZhOdp9PCR7pOfhxnQ8n/HfrJ4O4jwln3ibn+L5D9e53T6Dj0TPpPjtKMXz
sVhcqEuHj9qkV7T4vKGDw90knclL+ag4Od+e9RbPY/HwYxldPqK/rTbKfI/z
+F6R0NLjo8kKwmMzP9JhtvFZ9blr+Wg4bS/3RT0dwgx36ay24qN61PWvtoEO
kewrTmKb+ehpZaBX72c6HLv/J7xuCx8FDkZsm9NIh5qdTssP2fLRrw15swJ+
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
mHH/H2GYGx4=
               "]]},
             Annotation[#, "Charting`Private`Tag$125930#3"]& ]}, {}}, {
           GraphicsComplexBox[CompressedData["
1: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
IXq+8vef+wKY+wCY732Y73mY73WY7/H/AzJRLww=
            "], {
             {GrayLevel[0.09], AbsoluteThickness[1.6], Opacity[0.06], 
              EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
EPreOgv6W6HvxSnQ3wl9C86H/nnoW+Q/Ttx7kw==
                 "]], 
                PolygonBox[CompressedData["
1:eJwtlmeMlkUUheeioljwFyqiAiK9CkgvS+9t6R1WunQQEUSRJkYjkUjcSNiw
gYiiKIqigIkJodh7AyvYQMVCUVFRn5MzP57Mud+87zszd+6c+aoWzSqcWSal
tBLOhx/g8UjpftoK0AR9CdyEHgvl0XtgL7olDEePgFvQNaAfuj9MQl8DfdB9
YSL6argYvQteSv7mRegX9ZvGggHoQpiMvg6+gXdhBMyGofQNg2noG2AgehBM
QVeBmuhTtNdCN6hFfIa2MvTQHIl/o60EXbRm4p2wA90QGqEvCOvhUBb9gp5B
3yjQF4b1SBiMHgJT0ddDY3S58FpGw6Xo3fAyujn0QveGCeirlAP05eFctobf
4WniEtqq8D18AONgHvwLO+jfSlsbTsI24uK85u/gfRgDc+En2Er/Gtor4Bh8
CEUwXzmk70Tu6wBfwzswDGbBt/AejII50JTnLwuvZTz8Ck8Sr8s5/QeeJd6i
vYAj8BYMghnwFbwJhTBde8KzPeFm9JVQBv08bEfXh6PwNgyBmfAXPEP/Ztrq
8DM8QbyWtiIk9HOwDVkX/oTtxKW01eA0PEW8PtdEdfQv+d1Oeob4x+Tab6cc
E/+R96JXznXLcO0U57W3CL+rHKhWOoVrZ2eeW/NwbjVHna3u0Db5jCkXDxAv
zTnRXjULj609U212hKHJNaqz0jlce7vyWlqFa319Xmub8FxLcy21Dtd+Sd6b
dtAveY9US+1hQHJNKXcFMDA5h2vQo6FO8hx1druEa1tnWHvVAQYn75n2pi30
Sd6jueE91t4ugOXhM6OzcodqMHwmdBZug/16jnghbUd4DD0n/O69sCjsMfKW
22FJ2DPkFYvggH4P93WGgxon3NcV9sG88FgFGjPsUfImjbk07ClV0IthVdhz
5DVL4DVYGda9NaewB8r77oQ34D7iu2j7a4+1V1Ar+bdXYVl47T3hFf0eHqs7
vA6rw9/qqz1FT4TG6BXJXvhIWMsTi3V2oJFyC4fzmrVWefCXeU6aizz687wG
zV2e9UUeU2PJU6fyrWlhr2mmd9DTw17RAg7lHCu38vTP8pq0Fnnwp3lNWos8
fDzvFoW9pAHURf+dfHZVgw2JzwufddV4HfTZ5LOqGmpAHOGzrBqrhz6X7C2q
2cnEU8Je1zS5VseEvUY1Wx/9X7JXqqaVqwnhu0Q5U24nhb1NOR6LHhf2mnrJ
3rchfD/KA0vCY2os/bYuvEatbVmyVz0U1vKsteFv6lt3Q2k4x8rtqmSvfTi8
d/JceeWD4WflmaqdUWGvVA3Jux8lXp3s4bobNhHfk3xHzNDc4VZ0K/gk+Uzp
LOnOOQ4fQZvkZz5OPhMFyR6su6pr+K7XnbUl/E19S2PqbtkYnrvumM3hGlFt
aA76b9AtfDfoP8L/RsbyBA==
                 "]]}]}, {}, {}, {}, {}}], {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{590., 0.},
         DisplayFunction->Identity,
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{
            FormBox["\"Relative\"", TraditionalForm], None}, {
            FormBox["\"Time (d)\"", TraditionalForm], None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{80, 15}, {50, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotLabel->FormBox[
          "\"b) Host biomass C-/N-limitation\"", TraditionalForm],
         PlotRange->{{590, 1000}, {-2.1048876859274053`, 2.175361766493902}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}], {1276.5, -297}, 
        ImageScaled[{0.5, 0.5}], {931, 593}]}, {InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[
             {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
               "]]},
             Annotation[#, "Charting`Private`Tag$126047#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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

               "]]},
             Annotation[#, "Charting`Private`Tag$126047#2"]& ], 
            TagBox[
             {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
QvqmWa3DPgzYvKTIOzJsCFXEHXFX4zCgT1/yUNXbIbT9SeDGFVwGzP61ZJlF
1hDKeH3rzwoa5/98YtKn7CGUUFbLWxXCgK+f16i/yBtCvn93Pl4bwYD/YsuP
65UPIXnrTX2brjIgZ8K27/T3IXTZac/LzdcYMKNgv0Ni2xAS9jpxYct1/LyU
OLOq9iHEZz0Q1bzJgNGkd7kKPUPoY+qStdp3GFBUG7qOMTyEjs+b6an3gAGr
t/+5RwnwUYvsUg39hww4FD7pfnImH1mpokn9JAbw6k8Z2QjxEWw7F27wmAGt
oa8dlonw0fzjfclGzxhwwl15AUuSjzLyawZ3vWZAcoRK+k1FPhK+mOh9sADX
9/zMCQMtPuqQ2NDmVciAOptFa39o81FeQqYlu4gBhRvntAbp8hGjqFoztYQB
m7atGn0GfDRdWmBStIIBSaEmce3b+Wj8sR0v+ysDfp/6nZm2l4++op6J2joG
qBV/zVm6j49eV/qc6K9nwNNbPh95lnzkMxa6R7aJAT9K6Np9B/ho+L+3C898
x+PN8h/JOcRHvXWLEtR6GOD9Jvqd7DE+KvZIkEK9DHhy7eaVg658lDRNnW3Z
xwCX7IHKGDc+OqZi5BY8wACJDj5byIOPfpw8o94wzIDMvx9Dik7yUZNw5dvw
CQYIHyqur/fjo7ItvJpRUSZ8OXzqoRmPj4rC0/PGxZjwTNSnc1MIH+V2drz6
J46vP1rnsSgU5++6wfVZkkywSa+xrAvjo8R/fw9LSzPB79crQZNLfBSQ59W5
WZ4JasIjH+qv8tE5hdtftyowob69lp94jY9O+34q0lVkgqeGxi2v63zktnLl
E8OlTPDujPGYvIHrGdZ60lKFCdPN6s1FbvPRWiurP6fXMqHq6NUnTQl8tCKZ
0eu7jglUPrRfusdHysIvGv3VmaCbdjDfMJGPZDLE3zM2MOH3vKDQ+/f5aJZ8
ISNqC57PjjFvmyQc/w9tsdRtTBDScW9gJfNR2BklpeHdTGBSVd8mXvNR1sUt
P4fMmNCy6/5STjofDXJ3Fg6aM+Frwf0jkhl8tDf2zMn+vUzYGtbVsewNH0nn
F2Z3WTEB2dJrtTP5KHaRt2PzYSZEtEya6WTz0dM3H+I/nWBC7h6h2dEFfPTt
Y+3ZEk8mzMhQZwsU8tG88t6dxV5MKDXaoXUS27tNeqTAmwnntfQNTYr4aIuo
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
t2w4vJ6bMWWVkZt/JlE46Gx8P+X/A0qVZGw=
               "]]},
             Annotation[#, "Charting`Private`Tag$126047#3"]& ]}, {}}, {
           GraphicsComplexBox[CompressedData["
1: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
IXq+8vef+wKY+wCY732Y73mY73WY7/H/AzJRLww=
            "], {
             {GrayLevel[0.09], AbsoluteThickness[1.6], Opacity[0.06], 
              EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
EPreOgv6W6HvxSnQ3wl9C86H/nnoW+Q/Ttx7kw==
                 "]], 
                PolygonBox[CompressedData["
1:eJwtlmeMlkUUheeioljwFyqiAiK9CkgvS+9t6R1WunQQEUSRJkYjkUjcSNiw
gYiiKIqigIkJodh7AyvYQMVCUVFRn5MzP57Mud+87zszd+6c+aoWzSqcWSal
tBLOhx/g8UjpftoK0AR9CdyEHgvl0XtgL7olDEePgFvQNaAfuj9MQl8DfdB9
YSL6argYvQteSv7mRegX9ZvGggHoQpiMvg6+gXdhBMyGofQNg2noG2AgehBM
QVeBmuhTtNdCN6hFfIa2MvTQHIl/o60EXbRm4p2wA90QGqEvCOvhUBb9gp5B
3yjQF4b1SBiMHgJT0ddDY3S58FpGw6Xo3fAyujn0QveGCeirlAP05eFctobf
4WniEtqq8D18AONgHvwLO+jfSlsbTsI24uK85u/gfRgDc+En2Er/Gtor4Bh8
CEUwXzmk70Tu6wBfwzswDGbBt/AejII50JTnLwuvZTz8Ck8Sr8s5/QeeJd6i
vYAj8BYMghnwFbwJhTBde8KzPeFm9JVQBv08bEfXh6PwNgyBmfAXPEP/Ztrq
8DM8QbyWtiIk9HOwDVkX/oTtxKW01eA0PEW8PtdEdfQv+d1Oeob4x+Tab6cc
E/+R96JXznXLcO0U57W3CL+rHKhWOoVrZ2eeW/NwbjVHna3u0Db5jCkXDxAv
zTnRXjULj609U212hKHJNaqz0jlce7vyWlqFa319Xmub8FxLcy21Dtd+Sd6b
dtAveY9US+1hQHJNKXcFMDA5h2vQo6FO8hx1druEa1tnWHvVAQYn75n2pi30
Sd6jueE91t4ugOXhM6OzcodqMHwmdBZug/16jnghbUd4DD0n/O69sCjsMfKW
22FJ2DPkFYvggH4P93WGgxon3NcV9sG88FgFGjPsUfImjbk07ClV0IthVdhz
5DVL4DVYGda9NaewB8r77oQ34D7iu2j7a4+1V1Ar+bdXYVl47T3hFf0eHqs7
vA6rw9/qqz1FT4TG6BXJXvhIWMsTi3V2oJFyC4fzmrVWefCXeU6aizz687wG
zV2e9UUeU2PJU6fyrWlhr2mmd9DTw17RAg7lHCu38vTP8pq0Fnnwp3lNWos8
fDzvFoW9pAHURf+dfHZVgw2JzwufddV4HfTZ5LOqGmpAHOGzrBqrhz6X7C2q
2cnEU8Je1zS5VseEvUY1Wx/9X7JXqqaVqwnhu0Q5U24nhb1NOR6LHhf2mnrJ
3rchfD/KA0vCY2os/bYuvEatbVmyVz0U1vKsteFv6lt3Q2k4x8rtqmSvfTi8
d/JceeWD4WflmaqdUWGvVA3Jux8lXp3s4bobNhHfk3xHzNDc4VZ0K/gk+Uzp
LOnOOQ4fQZvkZz5OPhMFyR6su6pr+K7XnbUl/E19S2PqbtkYnrvumM3hGlFt
aA76b9AtfDfoP8L/RsbyBA==
                 "]]}]}, {}, {}, {}, {}}], {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{590., 0.},
         DisplayFunction->Identity,
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{
            FormBox["\"Relative\"", TraditionalForm], None}, {
            FormBox["\"Time (d)\"", TraditionalForm], None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{80, 15}, {50, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotLabel->FormBox[
          "\"c) Symbiont biomass C-/N-limitation\"", TraditionalForm],
         PlotRange->{{590, 1000}, {-5.450761268642101, 3.240395871467395}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}], 
        NCache[{Rational[931, 2], -891.}, {465.5, -891.}], 
        ImageScaled[{0.5, 0.5}], {931, 593}], 
       TagBox[InsetBox["", {1276.5, -891.}, {Center, Center}, {931., 594.}],
        "InsetString"]}}, {}}, InsetBox[
     TemplateBox[{
      "\"1*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
       "\"3*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
       "\"5*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"Ambient N (mol \\!\\(\\*SuperscriptBox[\\(L\\), \
\\(-1\\)]\\))\"", {FontSize -> 16, FontFamily -> "Arial"}, Background -> 
                Automatic, StripOnInput -> False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.086] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.086] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.086] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 16, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               
               TemplateBox[<|
                "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                "RGBColorSwatchTemplate"], ",", 
               
               TemplateBox[<|
                "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                "RGBColorSwatchTemplate"], ",", 
               
               TemplateBox[<|
                "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                "RGBColorSwatchTemplate"]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           
           RowBox[{"LegendLabel", "\[Rule]", 
             "\"Ambient N (mol \\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\))\
\""}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "16", "}"}]}]}], "]"}]& )], Scaled[{0.99, 0.25}], 
     ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   DisplayFunction->Identity,
   ImageSize->Full,
   PlotRangePadding->{6, 5}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{
        Inset[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1: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
JJcEYwbzoQ42w9EHNPNIMA3MLF2APR4SpJpyAY9nx3c6Edd/cs1P/4v5OD9G
YdBR7C1zw0urC0hIUx4KNMH2TDkp11dIwn6xawVzsbsusSV3l+L9QR2K8PHO
QyFjC6zNy0ggJMo/62KLaSQke1wmQTyn2U8Ku5wh9OjEFbw/EkWFR73ykNm9
JMHkchLqj8Y9bMAeWCxqUFCB61k2yPrb3DzEsUqLuX2VhLcJUhA6wUPrciRq
n1wjIa7fQjATG73LmvxYScLIZNKhZmwneWn1P1V4vFKk6QT276O5QcI3SGi5
JHFrwy8eUp08N6xxi4RPUbKiJHah+KWexBoSwt7+OK/+m4cOrW07nXIX9xdV
t52u2FLbftil1ZIQVVBQEo8db6TTll1HwqPCqmOvsY9GtKP8Jvw8RuxryB/8
/+8nz91+RIKv8FyV3EkeGhpe/V/NYxLK/cZ1EHbBnz0r0BMSDrGur/uALbEs
ObXpKe7Pq9d0y0/h8RqsZ7V14vNOx0WxFPtuqal73xsSmiUvLC2Y5qHQWwGr
+9+SsGGlXVI99rZ7Gd2DPSTkyxy714N9rued9bf3JBxVbWJJ/eUhlmjwnqlP
eD67bVEs9t6w3A2iI/g8M919/sA/HuKn6nuXjZLQKJqoFoBdnfKZJ/mVhHfP
LM7EYW++pCwpM4bzUtqVcQtb+G3T/I0/cb3obXosPsNDnXojX7T+klDpdfk6
wv71Inqf7T8SFD6sSHqOLe0rXuk3g/NpqdQawnZJ02Tk8VPwaiRNX4IvDw1/
jBfnm0/BjF3pd0/speGrIqQWULj/OMIJbFWhq++UBSng11c14WKHq3Vdcl1E
wZkSdvtVbAG2vG6jMAXBP8u+/MbeuKK6sHspBauKby1dxI/Pg8v7hH6IUHBq
SO6+NHbK8+CXcssosB7u8tHElpFv9OMsp6BCli/jBPb2lkOnjddQkJN2TXEA
287x+4zrWgp++yo9+Ykd/pXjGbGOgrhVq7Tn4POmdvkV5VI5CpqfnrwkPXv+
eE83C23C83P3m78X2286ecsGRfxcpumRFXZKyvpT2pspMB1IVvkP+8Utk//8
t1LQzX1mdRzbbWHO9zYVCsyrI95lYrN5W+z7VSkQKy++cRa7WKWulk+NgqVh
fzyLsUftv8Sr7MTzTesuv4UtOhrx1VidAvpsKacOW40lbOumQYGMrrtRK3bE
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

                 "]]}, "Charting`Private`Tag$125813#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1: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
                 
                 "]]}, "Charting`Private`Tag$125813#2"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1: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
hKSSImq/ptuY6PmaGhKqmv9S+eXZ7ZzOd7Uk9O1TvUbl29M7N36rI+FDemc4
NkPny0WJFyT0X1ej4mXwP3JieT3KLyeDD+P7m91fY23YQEKaX+03XL7MgMY8
20YSLPaJUuUXMvAR93pJAmPQbhr76M95npFNJHxcMdsEX19Tcrs6uRnlE5E8
Kt+sCLFZXviKhKjcVULU+GQ0EVHbQoLxYKIr9qe/cT09rSREF1hcwrZ4qrPl
exsa71Pb06j9yJGtfMl2EjbukTuCLbbV/4daBxrPp+TfUPlRUM5hSycJ9ReO
UvHyovr+XbsuEp7+kvxAzXd3/YxxfkPCEYcb76jxt23Lyf3dqL1VxYTx+cau
ETvd3qL513s5a2p/6sAzjWPvUP436aL2rxt4iwid6CEhsTSO2m9cNLmz3/c9
CfprCqjxSys4uvxsL8pvXo1UfOTNakkN7kP5cPzJdWxNjlxweD/Kl76h57Fv
zN/rxBgg4XKggTT2suRUPc4gCV8O1hyn9u+q9EpHf0D9nb/9Hy6v4s3lX+OH
SMgxP9iNnbjuWEPSRxT/u66NYcs8yM1J/UTCiQNN1Pw8xmiMef0zGp8j+0Op
/dnV2h5ZwyTUlQhQ/Yttddbk1heUD69GbqD217c9Ui4cIeHqjxGqfBH7fv8q
GiWh2GGGip/f/URX8RjKpw9jqfx5zov+oOwr6k9qNdR48X2i5uKzcVS/299T
8ym/c+Kn6ybQ/DKklSrPmMDu3WhtByc4b6n28GLHrW75D82f1wdQ+XJI6rVo
xxSKH61d4vh89ySFoe5vKD/0EvbU/ErZ9VnvdxKyi/ffpuaLWVevffhBwvTM
kAR+fufagdDhaZS/tlodwLa/v2Lf159o/qq1joqn5i1eBlMzJLh/d83AtqrK
l/v5iwT12Z3B2HWWE5N/fpPATWyk5ifmrXrNs/+SMPja4yg13rgE5Yv8Q/1P
tvYvLq9x/2OuhAAPVsevoeKp5Pi/Y9KzePBcbhW13to4YWouP5sHj1SZ66yo
8YC5bPEcHkTGGNCx1wu8+KciyAMXXS+qP+exJN+pCfHg/kl/av+zptSekpXC
PDjU0Ev118zEhKR1IjxwyvKkyq+q3OmvK8qDtcVTVHuk3lhsayDGg2W1qVbY
i9YeXG8kjp5HPn6A759YlC5hOpcHArWvNajxaMvQ520SPCiQ9KPyT/SzlbWW
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
nNyPhN9/1TnAG3ke+dX/wfEyuA==
                 "]]}, 
               "Charting`Private`Tag$125813#3"]}}, {}}, {
            GraphicsComplex[CompressedData["
1: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
IXq+8vef+wKY+wCY732Y73mY73WY7/H/AzJRLww=
             "], {{{
                EdgeForm[], 
                Directive[
                 AbsoluteThickness[1.6], 
                 GrayLevel[0.09], 
                 Opacity[0.06]], 
                GraphicsGroup[{
                  Polygon[CompressedData["
1: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
EPreOgv6W6HvxSnQ3wl9C86H/nnoW+Q/Ttx7kw==
                   "]], 
                  Polygon[CompressedData["
1:eJwtlmeMlkUUheeioljwFyqiAiK9CkgvS+9t6R1WunQQEUSRJkYjkUjcSNiw
gYiiKIqigIkJodh7AyvYQMVCUVFRn5MzP57Mud+87zszd+6c+aoWzSqcWSal
tBLOhx/g8UjpftoK0AR9CdyEHgvl0XtgL7olDEePgFvQNaAfuj9MQl8DfdB9
YSL6argYvQteSv7mRegX9ZvGggHoQpiMvg6+gXdhBMyGofQNg2noG2AgehBM
QVeBmuhTtNdCN6hFfIa2MvTQHIl/o60EXbRm4p2wA90QGqEvCOvhUBb9gp5B
3yjQF4b1SBiMHgJT0ddDY3S58FpGw6Xo3fAyujn0QveGCeirlAP05eFctobf
4WniEtqq8D18AONgHvwLO+jfSlsbTsI24uK85u/gfRgDc+En2Er/Gtor4Bh8
CEUwXzmk70Tu6wBfwzswDGbBt/AejII50JTnLwuvZTz8Ck8Sr8s5/QeeJd6i
vYAj8BYMghnwFbwJhTBde8KzPeFm9JVQBv08bEfXh6PwNgyBmfAXPEP/Ztrq
8DM8QbyWtiIk9HOwDVkX/oTtxKW01eA0PEW8PtdEdfQv+d1Oeob4x+Tab6cc
E/+R96JXznXLcO0U57W3CL+rHKhWOoVrZ2eeW/NwbjVHna3u0Db5jCkXDxAv
zTnRXjULj609U212hKHJNaqz0jlce7vyWlqFa319Xmub8FxLcy21Dtd+Sd6b
dtAveY9US+1hQHJNKXcFMDA5h2vQo6FO8hx1druEa1tnWHvVAQYn75n2pi30
Sd6jueE91t4ugOXhM6OzcodqMHwmdBZug/16jnghbUd4DD0n/O69sCjsMfKW
22FJ2DPkFYvggH4P93WGgxon3NcV9sG88FgFGjPsUfImjbk07ClV0IthVdhz
5DVL4DVYGda9NaewB8r77oQ34D7iu2j7a4+1V1Ar+bdXYVl47T3hFf0eHqs7
vA6rw9/qqz1FT4TG6BXJXvhIWMsTi3V2oJFyC4fzmrVWefCXeU6aizz687wG
zV2e9UUeU2PJU6fyrWlhr2mmd9DTw17RAg7lHCu38vTP8pq0Fnnwp3lNWos8
fDzvFoW9pAHURf+dfHZVgw2JzwufddV4HfTZ5LOqGmpAHOGzrBqrhz6X7C2q
2cnEU8Je1zS5VseEvUY1Wx/9X7JXqqaVqwnhu0Q5U24nhb1NOR6LHhf2mnrJ
3rchfD/KA0vCY2os/bYuvEatbVmyVz0U1vKsteFv6lt3Q2k4x8rtqmSvfTi8
d/JceeWD4WflmaqdUWGvVA3Jux8lXp3s4bobNhHfk3xHzNDc4VZ0K/gk+Uzp
LOnOOQ4fQZvkZz5OPhMFyR6su6pr+K7XnbUl/E19S2PqbtkYnrvumM3hGlFt
aA76b9AtfDfoP8L/RsbyBA==
                   "]]}]}, {}, {}, {}, {}}}], {}}}, {
          DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
           AxesOrigin -> {590., 0.}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, PlotRangeClipping -> True, 
           ImagePadding -> {{80, 15}, {50, 10}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {590., 0.}, 
           DisplayFunction :> Identity, 
           Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{
             "C-mol H C-mol \!\(\*SuperscriptBox[\(H\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(d\), \(-1\)]\) ", None}, {None, None}}, FrameStyle -> 
           Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {50, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotLabel -> 
           "a) Host specific growth rate", 
           PlotRange -> {{590, 1000}, {-0.02970757856727214, 
             0.025330748468204465`}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], {
          Rational[931, 2], -297}, 
         ImageScaled[{0.5, 0.5}], {931, 594}], 
        Inset[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1: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
vloq71aTQGE6ZYGN0UHYyuHTMDcJ/ge4GTee
                 "]]}, 
               "Charting`Private`Tag$125930#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1:eJxF1Ak0VevbAPAtGlwR/q6kKA1upf6phEz7MYWU8VbG6BojDTJlqJzNOcZ9
DIVUqksqZFa5dN5tCOEmQ2UKDecYIvMxZPjO9/Wt1V5rr71+6332Ozzvsx65
vy5YuKzAMGyS9/7vt1PISQC7SAPvmM59Mu+n8cfSXf2KcTTYMdbxf/bfZdlw
Jp8GnR4/PW8YHMsqpsF1m58Odn9ourGUBilHf1prtjTfqIwG9To/vcx4Ixbw
kgYb1H+6r8lKh8migZ7KT1Prv3hnIhoQB3/6gYNX+kuKBkdW8cf1Madx2qOZ
1rYKGjAkjG6qOE3jTqOhAsOVNMjWDu5s0ZzG9VTWHuKvpoGwJIu0lprGV9Zu
Sdpfw9t/u/HI1cYpPIJjZEXW00ASZBtU9k/h5I473QatNOBzPW0aPDKBX/CS
F3Zoo4FI2v5MdtUEblaSr+n3jgaPahQaJFIncDH9V2kZH2hw0lNvqEF/Ar/h
/N2Rr5sG7Af+im2p4/itdGD/85UGGqMjG3dqjuEZcuyRvVwaLJQ3S+RwhvD7
+8TTDszQ4LFKrtT5xCH8riZuojJLA+6AcIkxDOFJ1rdyYZ4GHWrmymdTB/HI
+OMXLJdoECzxoSfZbAA/z/dsLGAVASeVSo+O1LJxlU/0ySpJAl5biv9rPduH
K40WpdetJ0D5t3UOWF4frrjYZ/mvFAGSOfdNt7j24bs3qBe/lybAvOK3rIfZ
vfgm81GfQVkCFHyzvp3w+4hjFae4In8QoPN6c/0xzQ68/v7OOWsVAvg/7nfa
fasZX3DQiLFWJcD/dQNTfXczvm+z2WbrwwSY/GlpYFr+Fr9x11/fSp2Ayoc+
jaM1TbhDak38SZyAu0uDAUpBjfhUovNuSwMCrkVeKFyrVYPLWwa8tDAkgMZn
F+p69RVuLR5jZmFEwJ5xx8NeVDXOiivyMzfm2e29op1RFR4Ru6LK1JSAxaDy
xgQvCpdh3Lc9doqAYb0i/ydfS3CzI8Xfja0IKG5+svl7bDFOW1kXamxNwMok
pw0HVIvwAWL00VFbAp7mPuFYkfl44XWtKUMHArSPrWlacMvEv+IWDENHAjhs
vM0hPx1fv+wibXiGgPps64Tmsft4cEgsGDgRoNXT+s/Ou0l4rsaD1iPOBBiQ
VoqP6uLwTz+KXY+4EGA2qn/sZmQ4LlFWN6fvSoDciFDsobXe+JHA7hh9NwKw
/38CDo9t1nf/5exZ/iK9s78s6q/Qoev5y7rK+Dndc7/sN22xrOP1y12XA3fo
XPhlkYPkC+2LvwwTD4y1L/3y5YKSHvD+5cyLry/BZQLGfVfxDz1aQu37PgqA
DwEpIRybpvcYJTQ6loz7ErCU/t3rQzNGaeUKKOB+vPvuXaUv14BRF72kWFr+
vPoqGvc7VY1RwsWp85YBBCTYu3DY5RiVNb9J5ewVAm5k7vpxugSjvjLk8hOD
CIh4JOYjmolRp/7e/ffANQI8LLa4edF583/QoCdE8PZXLj04o4NRXTKo8lEk
AcbtpwS2qWFUgLP2cnkU7/4/dmxX2Y9RBeP6Af0xBKgEdf4lvRmjtq819dCI
JyB1cLrh5uQyEtI+Y8K5RYDP6oqp1BPL6DHjS9SPVAJGvV5mCmovI703LrWi
dwhwH+fcMNqzjK7aeoB6GgEagq1emiuW0YTv5QNxfxMwwzQLmcteQszy6fMP
0wnget2SnL65hPbwB2T/k0GA2+y3qsprS8glLng7O5MA+wIxuXcWvHxmhUuq
ZROw5ej+sE7uIvIdX21pmkPAXmeRZs/eRSSuGsV0fsqrX2t67dvaRZR3dW3j
lVwCEjPN0gTzF9GxV+QaZh4B51/0kpIpi2hQSEw/I58AMt7+cL0BF9EtEkNL
CwjwehXXO7iVi7be+p31ppCAPzYKN51S4CLUmzz/pYgAV8mWlZ8PcpGdvLTK
XDEBz4L79J01uGj23J3LIs8IcJzZS+vR46ID8/eHVV8QIF/hKFV2gosyJbJ6
YssJ+CTsJCbpz0UOck2pcS95/wsciWq8ykVS/506mcgi4MTH23bBdC6KNNBq
SqEI6HTU3lN3k4vOBbag9Gpe/t3FmGLFvPn75u+XNhLADhBjXB7lopfZxk7s
bgKEN6cOFZyZQW06I/0ai7z8X5h1aj00i2beXz9+YomA6+vGpx9rzCJpT4ki
r2UClmWbFwN0Z5FjovrVNL4weLIrkVxjPouGv0RKYKvCwOr72DOO5ywSCJfX
rhIJg+i0bb0P78+ig7UOqUZbwkBW8EOlw6o5lGDccuykbhjYu7BY8tVzqPmB
k+fOiDBIkFnW8Vv7A625lultUxcGu3Y4i5RILKAm5eh3XOFwcF/odclZt4hI
Xzm5SZNwcLOzdt3Au89/+ZzlH5PhIGXyRvIerz7uuBsyalvDIWS6e1u3wTJy
Ptnz9ogEHWIO3kkW7FlG5bKSfoo2dPhjfin3sSpG3VCab2tJowMpqrXz2xWM
Wh0t1dNyjw7iFbuOtgRiVOAn5f6W+3T4Wr0oURqEUWfIy3Mtf9Nh3xGLjPAQ
jPrvwLBMayYd/ixQzJIOxai6272urbl0CKNpeitFYNTCilezrSw6VO2O+vuP
JIy6YP2Frw3RYbpk/WqBZIz6nMcn1EbRIfpc2+99PL+205Jpq6SDbMG6A8m3
MCrp2XPttho6vFO1Dea7i1GKHllRbW9455EWCapJxyjnZuamdz100J6Jeyle
gFE6eZuahnp54+swksvz5tgnodgnOljlSWCdhRjVaVjFUfhCh9A11a/uFWOU
GcXNp/XT4cBR1CH/gneeNMIpZYAO13LaC1eX8vpRsKhk7iBv/J/lvQM816js
Dur4xnPxwd8el2GURp69vuIYHa6exW22IYySjh2a0R+nQ9CBQ3p8FEbNePhn
2U7Q4fW+rrc9PBfKx69jTNHBJ1+9JaUSo+IEZCvvTNOh+IK8gW8VRnl9zvIp
5NKh9Ai/gzmvv+1Mq+74OEsHZR+ngDU1GLUq2Dxmco4O9e2GgV94/mLdoyX4
gw6dcnWbWbUYRal4jssu0MGlcs49pQ6j0n6fTVdapENB8fcT3q8xKngy7OTR
JTqI1mZwjOsxyrpZTNBxmQ6LXWobd/D6q3JeWpkvxgA3kwb/Gt64RKzC+Wg+
BrCLdgnl8Oaf8Hix5cEKBrSHu76O5+2vyVC/9Rk/A/bvqS/0r8CoKAEH1c8r
GdBk7b5Gj5cfLDhhxeHfGBByMr+uJxejhj3mkjjiDCiP8ZvcxKuHasNapL2d
Af1r/ghkOWMUa5g7rreDAWIbsNaeMxj1PE5+u6E8A6JvZtkun+b19/bwCJOd
DJjnj1gEa4xiuuuZ2+5hQGCkfVTNcYyyiaj47KPEAJnqXpEuZYwaqy1b+ViP
AQ97RV8rCGKUjEG+sYgLAwyOnrOdtVtGq7aoH9TPZsDtc0Vcs65FdOGId5vS
GANUg+Mios4toLeTNqfDFCPgP/V3M8u2/kAVQWxdLb8IqLSz9vhP4xzKjpIT
t3oeAae35ktL3p5Fv/cLpu6eiYB1LSP4vaszaJ3sjRA3jUi4WGqidNOGi/i6
m4wEQiJBRomlkmE9jQifp5eEqiIhYzd3ZslyCoXbqFg2rI6CqaqC0WanSXS9
1lvmm0EUnMb9+4wSJpDQOjNd39goKFu/qeoYaxyRH3vMHd5EgfAaL76tq8ZR
/NwG6RUi0eB30vzpR/sxtH2Mq7nOMhoyRobuFbuPojyv8KPBidHwoLFpW5Hu
d1T/qqTQsiMa/mUZSmyXHUE9Gcn80dIx0G579EmE3DDybt4hEmQTA7Uih4Vk
NL+hpPYTPu/uxUCCcPfa1TZDqNBVpYrZFwM1o4ea3qUMotNN/3gVy8fCf8Uy
pB27BlB0+FBzvGcsdF8YXhI7NIDyKxtkm7JjQdU2NNYgux+5dJrU+o3HwrSF
le31nf1I/AphdfUACecu/rCPRxxUtZBrHXKQBDeyRFeSxUE+1zttgpVICP8d
k7tTzkHvGPvtA5VJ+KhmXpFVykEpSb1n/NRIWLn/SXxrEQfJFKt7ntch4U8s
XNXyMQftHJ0MOW1BwsHK9XTBBA7CXZzTtbxJSD7xlDB05yCbi0vHLS+TMKAm
VPHdlbdeUMqsmw8J9fG94kkuHJQV33g83o8E0zCnyf6/OEiSpTT7JZAEv8Lm
jBR7DvouufJ4JEHCmGgWc68lB6XVPeS23uCtnzR4aSvOQQsK/UZnn5MQf+jS
DnlpDjq4uM3H8wUJnkr8MXIbOMjjjWOaVykJClcaG2WkOKj9YufEpTISEsIm
uqQkOaio5N/bgYiEiSVScYM4Lx4vHomuJUEk3PO47m8c9MEiND73Awl/nRwZ
Uv3BRiLbWWX57SQ8HRA0MJ1nI73peXZhBwmL2eDrOsdGhck+as+7SDj/ysUg
eYaNyG63L6iXhK8z0sUrpnjxriaHmvtJCG3L08VGePFXNnZMzpAweFbN+EYv
G9259lBQYo4E4UdSm3J62Igevk9NaZ4E45p0TvVHNrKO173ts0CC6lqD03Nd
bIQ98bSfxpiwdCI2zKudjUzbyz5xBZlw5YrOUGgzGw0r2w3NbWTCdA+mY1vN
Ru81ONLSMkzw2eVPxFWxEaVz0VhNlgnPnp57VFPJRokmYTmBW5gwpuSbfKiC
jdRcc87/2M4EKY+pjbIsNoq8uTCxsJcJuRPPhDe8YCPv2/RtMvuYoH9l4rDd
czayeyD6p6YiEwzctqrff8ZGik+3l4QcYMKcm/+L3SVs1F59zH9JmQnnWbdu
GRWyUWX9+0eyqkxIwB56JBawUc5bx3atw0w405Ak2pPPRte6fQ5fU2eCZrh/
q28eG7l/Xjp7T4MXb8wYrsxlI4uBiFSkyYR5HdQiyrPGd/GGXi0mGHUphDk8
ZSP5qTs/lnEmVHA+LOXmsNH/ANB4ie0=
                 "]]}, 
               "Charting`Private`Tag$125930#2"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1: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
zp+yCdhb34H2xawJiZ9MB9f8TlEt6U7U3cyRmzSVDkIXGAWHT3UiEYbm+lcS
dMi8GOg/bNKFFs7OSfksSYe0PKmN7ju6kOX9zeL9UnTwKcn0iPDtQtGf/GvV
ZenAHtnlMxzfhZQ1Xx1lzqKD/+mXX1kDXWhlyd5rm9ToEBt8vn/v1W7ksPPX
mMs8Onx1/Dg9Na0bBfcxD5yYT4f1jcuUsgu7UcGsB7r31OkQ3/fq7sLWbmR5
+F+x+CI6yJ8w7gta0oNcp1/9VbGcDsq7ky+ezOxBjLjFzu0r6PDESvY0ragH
pS5/XjBJjw6ysvKc3dU9qNe5jbPcgA5N79NvUL960Im7+moxq/H+eMd0GvD3
gfNWldYOG+jgdLA990NCL+qKtr7obkqHMa5Rp/CDXmRaU/z1lBkdijYevimb
24sG9uV6JW3E9Tk9cPZtdS/aEZgczbOiw826PccTp/ah+TcDq6ntdIiY5zLo
5NaHTv7kKcfb02FL7yJZtncfqtbxPJDhgOt9wmDDtRN9iJm9d6DWiQ6q20Y2
u0f3oc53Fooau+nAC9DMys3pQ48GlHYVHqBDZ7v12nVTeEhs7cXkyoN02B54
fM/kGTzkdlayp/UQHX5a3r30TIKHFMRFQsQ96BBu21g7VZGHTszrueHsRQdO
03RPRW0eMrEubP4VSIc5++4G6lnz0Meb+z212HQY4WQ+VuHwkPn90JWLOHRQ
iWMVHQjnoZyncX8XUbj/87dfvxXFQ8kVtVydcNwPtYYWyUs8FDxilbY0mg4f
10o2RyfykIqzXo/eFToM5lG37XJ4KMZtW5b+VTpYliZuX5bPQ6I+XqcNrtGh
WZVdK/KchwTM1JlGsXRgvgm9Hveah15nKi9dk0AHgyarfNYHHjoiNcV7fSod
vLxPdFi28lDTnPmGJnfosIKhU/i2jYccFqIxk7t00I47aWXWyUNgfDzKNI0O
amZhOdp9PCR7pOfhxnQ8n/HfrJ4O4jwln3ibn+L5D9e53T6Dj0TPpPjtKMXz
sVhcqEuHj9qkV7T4vKGDw90knclL+ag4Od+e9RbPY/HwYxldPqK/rTbKfI/z
+F6R0NLjo8kKwmMzP9JhtvFZ9blr+Wg4bS/3RT0dwgx36ay24qN61PWvtoEO
kewrTmKb+ehpZaBX72c6HLv/J7xuCx8FDkZsm9NIh5qdTssP2fLRrw15swJ+
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
mHH/H2GYGx4=
                 "]]}, "Charting`Private`Tag$125930#3"]}}, {}}, {
           
            GraphicsComplex[CompressedData["
1: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
IXq+8vef+wKY+wCY732Y73mY73WY7/H/AzJRLww=
             "], {{{
                EdgeForm[], 
                Directive[
                 AbsoluteThickness[1.6], 
                 GrayLevel[0.09], 
                 Opacity[0.06]], 
                GraphicsGroup[{
                  Polygon[CompressedData["
1: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
EPreOgv6W6HvxSnQ3wl9C86H/nnoW+Q/Ttx7kw==
                   "]], 
                  Polygon[CompressedData["
1:eJwtlmeMlkUUheeioljwFyqiAiK9CkgvS+9t6R1WunQQEUSRJkYjkUjcSNiw
gYiiKIqigIkJodh7AyvYQMVCUVFRn5MzP57Mud+87zszd+6c+aoWzSqcWSal
tBLOhx/g8UjpftoK0AR9CdyEHgvl0XtgL7olDEePgFvQNaAfuj9MQl8DfdB9
YSL6argYvQteSv7mRegX9ZvGggHoQpiMvg6+gXdhBMyGofQNg2noG2AgehBM
QVeBmuhTtNdCN6hFfIa2MvTQHIl/o60EXbRm4p2wA90QGqEvCOvhUBb9gp5B
3yjQF4b1SBiMHgJT0ddDY3S58FpGw6Xo3fAyujn0QveGCeirlAP05eFctobf
4WniEtqq8D18AONgHvwLO+jfSlsbTsI24uK85u/gfRgDc+En2Er/Gtor4Bh8
CEUwXzmk70Tu6wBfwzswDGbBt/AejII50JTnLwuvZTz8Ck8Sr8s5/QeeJd6i
vYAj8BYMghnwFbwJhTBde8KzPeFm9JVQBv08bEfXh6PwNgyBmfAXPEP/Ztrq
8DM8QbyWtiIk9HOwDVkX/oTtxKW01eA0PEW8PtdEdfQv+d1Oeob4x+Tab6cc
E/+R96JXznXLcO0U57W3CL+rHKhWOoVrZ2eeW/NwbjVHna3u0Db5jCkXDxAv
zTnRXjULj609U212hKHJNaqz0jlce7vyWlqFa319Xmub8FxLcy21Dtd+Sd6b
dtAveY9US+1hQHJNKXcFMDA5h2vQo6FO8hx1druEa1tnWHvVAQYn75n2pi30
Sd6jueE91t4ugOXhM6OzcodqMHwmdBZug/16jnghbUd4DD0n/O69sCjsMfKW
22FJ2DPkFYvggH4P93WGgxon3NcV9sG88FgFGjPsUfImjbk07ClV0IthVdhz
5DVL4DVYGda9NaewB8r77oQ34D7iu2j7a4+1V1Ar+bdXYVl47T3hFf0eHqs7
vA6rw9/qqz1FT4TG6BXJXvhIWMsTi3V2oJFyC4fzmrVWefCXeU6aizz687wG
zV2e9UUeU2PJU6fyrWlhr2mmd9DTw17RAg7lHCu38vTP8pq0Fnnwp3lNWos8
fDzvFoW9pAHURf+dfHZVgw2JzwufddV4HfTZ5LOqGmpAHOGzrBqrhz6X7C2q
2cnEU8Je1zS5VseEvUY1Wx/9X7JXqqaVqwnhu0Q5U24nhb1NOR6LHhf2mnrJ
3rchfD/KA0vCY2os/bYuvEatbVmyVz0U1vKsteFv6lt3Q2k4x8rtqmSvfTi8
d/JceeWD4WflmaqdUWGvVA3Jux8lXp3s4bobNhHfk3xHzNDc4VZ0K/gk+Uzp
LOnOOQ4fQZvkZz5OPhMFyR6su6pr+K7XnbUl/E19S2PqbtkYnrvumM3hGlFt
aA76b9AtfDfoP8L/RsbyBA==
                   "]]}]}, {}, {}, {}, {}}}], {}}}, {
          DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
           AxesOrigin -> {590., 0.}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, PlotRangeClipping -> True, 
           ImagePadding -> {{80, 15}, {50, 10}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {590., 0.}, 
           DisplayFunction :> Identity, 
           Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{"Relative", None}, {"Time (d)", None}}, FrameStyle -> 
           Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {50, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotLabel -> 
           "b) Host biomass C-/N-limitation", 
           PlotRange -> {{590, 1000}, {-2.1048876859274053`, 
             2.175361766493902}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], {
         1276.5, -297}, 
         ImageScaled[{0.5, 0.5}], {931, 593}]}, {
        Inset[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1: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
                 
                 "]]}, "Charting`Private`Tag$126047#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1: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

                 "]]}, "Charting`Private`Tag$126047#2"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 AbsoluteThickness[1.6]], 
                Line[CompressedData["
1:eJwt2nk0Vd/bAPCKooQoKjKV0KyRDO2HL5EUJUqUIRISqSRJOHc811hoViKV
BiUpShKZM0uZIjKPlyQp795+7z+szzr3nL2fYe+97rpHydFzr/OMadOm5eE/
5H+dyBHBaV7BICBW8zpy5jB6IFPfoR4RDD9U/uezKyyKHZ4Fw3ut/3nc2D/0
XWowyOn+z/7H7pnJpgfDMfQ/bxtLf7bjTTAw4X+eZJdK+GYGwy29/7m57IB+
+LtgWKX/P79f2OqdmBUMaf/vODuP+Mz3wfDq0oqxW1V8FHz/V1V1djAM6T6O
aHnIR0cGggR7PwRDxN6myOsMPjLQmLtZIDcYKnbMiOHa8dHMfMWY9XnB4F/q
++m6FB9x2nccCCsKhk8KgtVRwUMobPnNBqMqPP9pP+Ou2A8iTw8VUbvqYPCw
7S8p0BlE5i+f6frUBMOac3uSpBYPIgnDj7EJtcFwVCFihUjCAIpy6ref3hAM
ZTaaB+7T/ehaPPzIaAsG23flbrFOvShB6UffmtFgmHOGFfJjXye6s04ydsOv
YBjpgaxpsp3oli7arTEWDJsuR0V5tnSgGOtrT2E8GJqnW+abeHYgbuQuT4t/
wWDvqF0sHN6OTkxPG/SdRUGh7fRG2W9tyE289c4FIQqOpkyIv0xqQy5y8/YE
C1OwJvF5z0OfNmS/1e05bw4FIz+seu6Lt6G9J+W9Y8Uo+BRvdP+PYSvSaGEN
50hTMPP3nOVrclvQpoEX8QULKbgtJPz4enQLUv/bbPFpEQXNPyMDjrq0oJWL
tVM/y1BQ5aOssHhuC1qyZ+B0lzwFpquldbutm9G07P2jYqoUONvLvnEWa0JF
d9R+W2tQwHnQJ+5v9hVN2OmEWGtS0Hsox05U5Ctap2CuYL2VgvKmekOz/C8o
6tZZwwPaFFz4GeTcpvcF2V3Pi7RCFBTZJ/ntQbVo5LLTSgsjClZWLE3cbFOD
VCx8M/caU3DmeXJ3iVINspYMMd+7gwKro3JeUl3V6F3EC589OykYDdph/+Zc
NeKEzsgxM6Pg4triOc7xVUiOfcfGdD8FX7XUlBIXVSLz7an9Ow9QMKg9M4zb
XYGCZxYE7bSmIPntzyjVzArUSQ3cN7Gh4MOR/fuvOFWglMBtI8Z2FDhu5887
8rYc4Qyzje0psK+MktSMKkcLJ51ljB0okNXZqFN+vBz5XwgFoyMUbK+Xyt2t
WI62+zWEGLpQsNr37oXdSmXId+ugguExCkQq+vpONJaiR2MCLwxcKbCzmzWo
dqMUzTu76ut/7hScUmpL8pYtRf9tQcf/O07B5swVt2Y1fUI+P/dO6ntQIJEg
f03n7idUf8pvub4nBfsCG02j131CYhvDXut5UTDjq1dfxlgJAn7cTr2TFJxd
mqPJySlBiV6FJ+EUBUuW3qlYcrgEeXkserftLAX7U6os1t0vRqKp18ctfCko
OKS6fKlfMUoaX6Lheo6CzGlXA2eYFaM2ttKzy+cpUKjUzLzwrwgFlcb3PvCn
IHz+iqviX4uQvJTKincXKNgpeOy3/8sitP/uyrudFyn490evr/RUERrpfNz0
N5ACKWWdx/GWRShi3TrZ+cEULIyXP7hpaxFa4/N8vxpFgYPDwQof+SJU9HZj
lC6DAjrfz9x+ZhFyEUgr38ukwDf02roffYVI0ERT9BiLgmgJ8Xm/awvRtlod
1iUOBV62OdVXnxWiermsD/e5FNQbMWOEbxciXye9ybc0BVDgsLosrBAteJSj
XcmjYHK03avxYiF6PmTo2xFCQallQ/Yy70K0W7MgdSKUgrd+zWcuORei7gCT
IYlwChqWuz5bfLAQsT+WrFGNwP09U8v3oVkhUp5r5qYTScFz86Nd67cXouy9
FYl7LlFw4G6QaLxuITp8zaL16GUK+hWfGfRtLkR/vtUo+EdR0Hfz2rrp6wrR
VZUDtpHRFJxewPlVplaINnvUXU2MoeDdfdeDO5cVosoXtjVvrlDAVE0IcJYv
RCfGmyQqrlLw9FfHPgmZQiSi57C7/Rqup5ZKnp50IXrAbqX/XMf9+UiyrFuy
EBmUOufPu0nBmFZuy7R5hahlQaeAyi0KhErvrzwnWogCbNxAO5aCW5GXnu8Q
KUSyd3v9zW9T4LHyoqHr7EL0uvNEuvMdvH6WfrUpEypEluuGfvrFUbBud/LE
qVmFiH/m1IaIuxR8jgt+ajazEIW//XniXjwFh0pmMG0EC9FqAd9HGQl4PKvz
RyIFClHBjvGOsnsUaHg5P+qZUYicI/yVfyRSYNR2560z9ozaf/bj9ykw7jRa
/2d6IYqVC7ol/pAC4aAAuwfY2k4CdcpJuJ72vWddsb8kMaW1HlEQG75AQxv7
zJCQhdljCuRWZ7vLYEtq0uFOT3C/ajxpE8RODphbcu4pBSbHS+LHphUi049h
wuHJFDzaesBqBLtLRMIw4Rmuz+yYNf8ZtiDW3stB6c8p0GFJJR2ra0NLr0m9
K02hYNsorN+87gfK+nZlvPUFBYF1G96eOfoD2arIaPxOpeBxiEpZ9Y0faOz4
zVNiaXi/bTCV3FD+A20Yv9Or+ZqC4M8X10hvaUeJC5KaQt9SoMQqUNT81Y7s
lMquR2RSoL1fYp7t0g60aO2I1eV3FIxnbjApM8Xnh9G2sqvv8X40oLEx9XYH
Ou5XmRWfS4G/0A26TbcTbWgev5NegusPTuvbDnehnl6FQ28/UWAZeWT4aWAX
SvhtsDirlALR+v4N/+K6kNT88Mjccrx/HNlnsKm1C40ZLgsuq6bA9dfrID37
bpT5aOeRHw04f+7DjR+29yCf114KnY0UTJsrdue7Qw9a+zG6vruJgnxHzsYH
/j3oTtM3i8FmCtb7smxWPe9BwRKnDf604fPD+sQBXeleZHz25nKJPvz8EKkv
pRW9aDoju2V+PwWrciqTJjp6UUZE+y3pAXz+rbE+2v63F61KUpdeMkRB49kP
s/hqfUisMXeW6k8KIlye9gv596Fq/b4Onb8UHJR5wZizsB/9+hy4y/IfBfoB
JtfGVvYjGfcFLzwm8Xpi3cx6sK0f2V/WDoidzoCenQ2mFs79qLeVu2DaLAbE
l8lq9Sb3I0Gmil6OGAOOiAu/GdYaQKqLMxLrxRmg2BqS4LVzAJk82TV3ZB4D
Es1uuGfaDKCImtO1yvMZQMUFuBSeH0BLVHI8WAsZ0PTN6eC79AG0Md/u+g5F
BqTfGgupkR5EVjbDkw5KDKi/UmiQITeIfAdYzn5LGaCk+rGNpzyI3i18qv5I
mQGO2k96RtcPIpNjE3lzVzDgjpSpyvDOQeQ4+9pw2XoGTHq+s0j3H0SXdlaa
Wv3HAM9zKqyhykHUE2Ea7WrAAOB4ZxbVDiKDz3mN/oYM+JX+o+pKwyAatX9z
It6IATKCuzeItQ+igz4JEYM7GWB6L/um59ggWhrnU03vY0Dn8MfspbJD6Hz7
4JJYSwYk9J6WM1EYQtWr3J2fWzEgxoHt5rJsCLHS7EZrDzBAPbbKlLFqCHUX
Gy9afogBBx8+MzHRHkIpozK2Wc4MMNvlHC5vPYREdKITKo8yoD3/bulz2yHk
FCTe98OFAefubY7XsR9C0nMFA+a6MWDOb5brVpch5KfUd9v6BAOsldZ1Vpwe
QvqmWa3DPgzYvKTIOzJsCFXEHXFX4zCgT1/yUNXbIbT9SeDGFVwGzP61ZJlF
1hDKeH3rzwoa5/98YtKn7CGUUFbLWxXCgK+f16i/yBtCvn93Pl4bwYD/YsuP
65UPIXnrTX2brjIgZ8K27/T3IXTZac/LzdcYMKNgv0Ni2xAS9jpxYct1/LyU
OLOq9iHEZz0Q1bzJgNGkd7kKPUPoY+qStdp3GFBUG7qOMTyEjs+b6an3gAGr
t/+5RwnwUYvsUg39hww4FD7pfnImH1mpokn9JAbw6k8Z2QjxEWw7F27wmAGt
oa8dlonw0fzjfclGzxhwwl15AUuSjzLyawZ3vWZAcoRK+k1FPhK+mOh9sADX
9/zMCQMtPuqQ2NDmVciAOptFa39o81FeQqYlu4gBhRvntAbp8hGjqFoztYQB
m7atGn0GfDRdWmBStIIBSaEmce3b+Wj8sR0v+ysDfp/6nZm2l4++op6J2joG
qBV/zVm6j49eV/qc6K9nwNNbPh95lnzkMxa6R7aJAT9K6Np9B/ho+L+3C898
x+PN8h/JOcRHvXWLEtR6GOD9Jvqd7DE+KvZIkEK9DHhy7eaVg658lDRNnW3Z
xwCX7IHKGDc+OqZi5BY8wACJDj5byIOPfpw8o94wzIDMvx9Dik7yUZNw5dvw
CQYIHyqur/fjo7ItvJpRUSZ8OXzqoRmPj4rC0/PGxZjwTNSnc1MIH+V2drz6
J46vP1rnsSgU5++6wfVZkkywSa+xrAvjo8R/fw9LSzPB79crQZNLfBSQ59W5
WZ4JasIjH+qv8tE5hdtftyowob69lp94jY9O+34q0lVkgqeGxi2v63zktnLl
E8OlTPDujPGYvIHrGdZ60lKFCdPN6s1FbvPRWiurP6fXMqHq6NUnTQl8tCKZ
0eu7jglUPrRfusdHysIvGv3VmaCbdjDfMJGPZDLE3zM2MOH3vKDQ+/f5aJZ8
ISNqC57PjjFvmyQc/w9tsdRtTBDScW9gJfNR2BklpeHdTGBSVd8mXvNR1sUt
P4fMmNCy6/5STjofDXJ3Fg6aM+Frwf0jkhl8tDf2zMn+vUzYGtbVsewNH0nn
F2Z3WTEB2dJrtTP5KHaRt2PzYSZEtEya6WTz0dM3H+I/nWBC7h6h2dEFfPTt
Y+3ZEk8mzMhQZwsU8tG88t6dxV5MKDXaoXUS27tNeqTAmwnntfQNTYr4aIuo
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
t2w4vJ6bMWWVkZt/JlE46Gx8P+X/A0qVZGw=
                 "]]}, 
               "Charting`Private`Tag$126047#3"]}}, {}}, {
            GraphicsComplex[CompressedData["
1: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
IXq+8vef+wKY+wCY732Y73mY73WY7/H/AzJRLww=
             "], {{{
                EdgeForm[], 
                Directive[
                 AbsoluteThickness[1.6], 
                 GrayLevel[0.09], 
                 Opacity[0.06]], 
                GraphicsGroup[{
                  Polygon[CompressedData["
1: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
EPreOgv6W6HvxSnQ3wl9C86H/nnoW+Q/Ttx7kw==
                   "]], 
                  Polygon[CompressedData["
1:eJwtlmeMlkUUheeioljwFyqiAiK9CkgvS+9t6R1WunQQEUSRJkYjkUjcSNiw
gYiiKIqigIkJodh7AyvYQMVCUVFRn5MzP57Mud+87zszd+6c+aoWzSqcWSal
tBLOhx/g8UjpftoK0AR9CdyEHgvl0XtgL7olDEePgFvQNaAfuj9MQl8DfdB9
YSL6argYvQteSv7mRegX9ZvGggHoQpiMvg6+gXdhBMyGofQNg2noG2AgehBM
QVeBmuhTtNdCN6hFfIa2MvTQHIl/o60EXbRm4p2wA90QGqEvCOvhUBb9gp5B
3yjQF4b1SBiMHgJT0ddDY3S58FpGw6Xo3fAyujn0QveGCeirlAP05eFctobf
4WniEtqq8D18AONgHvwLO+jfSlsbTsI24uK85u/gfRgDc+En2Er/Gtor4Bh8
CEUwXzmk70Tu6wBfwzswDGbBt/AejII50JTnLwuvZTz8Ck8Sr8s5/QeeJd6i
vYAj8BYMghnwFbwJhTBde8KzPeFm9JVQBv08bEfXh6PwNgyBmfAXPEP/Ztrq
8DM8QbyWtiIk9HOwDVkX/oTtxKW01eA0PEW8PtdEdfQv+d1Oeob4x+Tab6cc
E/+R96JXznXLcO0U57W3CL+rHKhWOoVrZ2eeW/NwbjVHna3u0Db5jCkXDxAv
zTnRXjULj609U212hKHJNaqz0jlce7vyWlqFa319Xmub8FxLcy21Dtd+Sd6b
dtAveY9US+1hQHJNKXcFMDA5h2vQo6FO8hx1druEa1tnWHvVAQYn75n2pi30
Sd6jueE91t4ugOXhM6OzcodqMHwmdBZug/16jnghbUd4DD0n/O69sCjsMfKW
22FJ2DPkFYvggH4P93WGgxon3NcV9sG88FgFGjPsUfImjbk07ClV0IthVdhz
5DVL4DVYGda9NaewB8r77oQ34D7iu2j7a4+1V1Ar+bdXYVl47T3hFf0eHqs7
vA6rw9/qqz1FT4TG6BXJXvhIWMsTi3V2oJFyC4fzmrVWefCXeU6aizz687wG
zV2e9UUeU2PJU6fyrWlhr2mmd9DTw17RAg7lHCu38vTP8pq0Fnnwp3lNWos8
fDzvFoW9pAHURf+dfHZVgw2JzwufddV4HfTZ5LOqGmpAHOGzrBqrhz6X7C2q
2cnEU8Je1zS5VseEvUY1Wx/9X7JXqqaVqwnhu0Q5U24nhb1NOR6LHhf2mnrJ
3rchfD/KA0vCY2os/bYuvEatbVmyVz0U1vKsteFv6lt3Q2k4x8rtqmSvfTi8
d/JceeWD4WflmaqdUWGvVA3Jux8lXp3s4bobNhHfk3xHzNDc4VZ0K/gk+Uzp
LOnOOQ4fQZvkZz5OPhMFyR6su6pr+K7XnbUl/E19S2PqbtkYnrvumM3hGlFt
aA76b9AtfDfoP8L/RsbyBA==
                   "]]}]}, {}, {}, {}, {}}}], {}}}, {
          DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
           AxesOrigin -> {590., 0.}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, PlotRangeClipping -> True, 
           ImagePadding -> {{80, 15}, {50, 10}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {590., 0.}, 
           DisplayFunction :> Identity, 
           Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{"Relative", None}, {"Time (d)", None}}, FrameStyle -> 
           Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {50, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotLabel -> 
           "c) Symbiont biomass C-/N-limitation", 
           PlotRange -> {{590, 1000}, {-5.450761268642101, 
             3.240395871467395}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], {
          Rational[931, 2], -891.}, 
         ImageScaled[{0.5, 0.5}], {931, 593}], 
        Inset["", {1276.5, -891.}, {Center, Center}, {931., 594.}]}}, {}}, 
     ImageSize -> Full, {PlotRangePadding -> {6, 5}}, ImageSize -> Full], 
    Placed[
     Unevaluated[
      LineLegend[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        RGBColor[0.560181, 0.691569, 0.194885]}, {
       "1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)", 
        "3*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)", 
        "5*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, LegendLabel -> 
       "Ambient N (mol \!\(\*SuperscriptBox[\(L\), \(-1\)]\))", 
       LabelStyle -> {16}]], {Right, 0.25}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.8429100113148127`*^9, 3.8429100328570423`*^9}, 
   3.842910114185206*^9, 3.84451022473663*^9, 3.8445110743923607`*^9, {
   3.845644643191667*^9, 3.845644682005684*^9}, {3.845644714011754*^9, 
   3.845644718051076*^9}, 3.854026727581827*^9},
 CellLabel->"Out[726]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsfQe8HUX1/+Tt3ntfSQKhEwgJBJBepQnKAwFpigiKolSlCQiCIAjCoxmC
0psFpAiCggoioIg+NIoIYkXBggHFhoqK5ScK5H+/Z86ZObt3du/u3b0vwX/u
57ObvNkpp82ZM2fOzLz2oPccfsjRB73niLcfNOs1xx107OFHvP34WTsdc1w7
KZpkTPNQY+L9Z5m4/f8FxhR/HWXM4kyLMy3OtDjT4kz/S5km099Ro/0aaj+T
8NdUmzaJ0xpZle2ermyE/o6H26+ftp/n2s90V1+8Svv1n/bzaPsZzKhyt3CV
0UX898X4a0mbdgmnnZcFX0dlwxaQLduvF9rPX9vPMq6+eBlOer79bJJR5a7h
KqO7NHxL2bQPcdrnsuDTlf2L/ttYtf3ar/28q/28uf2sh9QpFj7A9CLnR3rD
Fonar1e3nyPbz9vbz6ZIHbRF1uAiL3KREBS7KCi+byH/K//9WfzVtGmXcdoP
6K9k2gPUmG1yK07Ds4FLjn7FSReq4ku0XzcxdCYmAKIH2691DP+YuFfrZizW
0frt148F7Ije8X1MNPz1O5/1q5z04QDyWRT4O/99u6LAlZz2iEJB0h5SFNha
UWAjT4HfcBLE1gxQWgvd6zsq+2/bz1faz2OUx+L2TPs1UyjCfJ3EGCLHma6J
kRXbrz+r6pBlXvv5C/8tfH3aEzI+mdN+bWzvDxFo54VFoMZZKut5kmy/xa9v
v57lb/cYq6vayZuqIjv4Rj/GSRC2E30D0C93qBKaNGk4FxpphhKkMZZRT3Pa
9/hvqUIYCkShcllkjlbJIw6IGCLzPH/6jK8EKkek5mlPEWDzAie/c2FSpJGm
yFp4cY95j1E/xhNU2IKfYUeVaA5X82fV4qtVi7s63KNLFTkEiT9y2tkBOixE
YmyviPHx9utQfmj+105bSxOIQbiW63hMNXe4am6Wp4SIkqbEo5x2dR8p8XB5
SrwGr5EFDuw01p/l/A+qqo9XVS/rsX5rAOuHOe2mPmL9VAbWW2Vj/XK8mP8Y
/c7nx0T0jj+sqoHJwJ1Bkn+uWtxTZd3QE0NopInxBKddUT8xYkmD8hn2ydsp
6PZ1QA/+lpMuYnpgZHiO0y5wSMSvVKV38GQ4nZOeUWRYX2U90pPhkwEy/IvT
3t9HMuA51ScfpJLv9ckglOj2MePGzc9xEsbOGS53A19v408gFs0MePA40PjB
Y6ovMokxwKcn+ZM0DiPuv4o8TPPpCtQDaifQoCYQ5hqwH9ZtP6Pt55fGWYqf
Mrb/wEDF/21fGdnb+N+GxssMcNuj/azAxai7c/+6UpUxLYvkDOMtdSDDYrmP
Au4n7ed17edl7edtTCKu8WldI1NTzFrUunLtZHNyBSMQQ2HDQgJxECtADPT5
RuxyIxIVYcYivJay9xuZXBoxzaIfcJ4PGEeUCFXckir7lFHdirvaFZz2wwDm
9CpoxR/Xfn2j/Vzn0Z92Svv1I04DQ76g8EF3vpyLY9y82/hOBW2E/raGgnPz
9guzweeIPhYfjKnHSxae0Z5mFBts2WGAA/ge47oBw+Pt5wRjx2+hCSslZP81
J5/RI1Wm2TQAsLxJGJIRMIbEk1AzB9HkUoIEz+sxb/4H1/kqyT+AnCweb1eg
C+y7K/Iu1yPszFHAiMntavhrfZt2gVED80gmGNHnOe3SQPP00nP0B20ZWFQ/
5sdEeDOb/9nxwcSHtV+6x1n4YtD6T8ZKEpKGAyBy38R8BsKAjijaswCU9xmv
bNgCik9LAbOBzSqWzZdMLiTRVzhtvyxiaYcLgwHddho/ZoTe8TbGKiv8BbHe
0GaFN2Hc2EmLyBssmQ9JcRanmZzvsiwwOvxSodfCdrwtzrQIZfoKvcmVBrsF
Ri/0OPUFq2UamBGjm0GgtzWsQPK+ze2x3Gn2GzQEjFJ0NsznlutWrtW1zhha
cq/2sw/jmVckr6mzeyyX116KMTSk2tGV1cDP5BNr2/8z1gdhc9g3anw2lQ/G
25Zl851i872e89AcbLDmNt5n84EaMG7+Q3/ZfPj/OULMovXF5dqF5+ceycft
whM2tSweRfOdbPOJ3xKzdjGaamujKA1S0jbbpn6Z3kPIJab/N43lxNUq7d1U
q80Lg0fMQZh96PUyJfpb+1mpbF4rebRYsoAfTCeafWrOCsPQrZwOi/N6Y6eL
1ymU55StNyoNw+CdnD7fWA8t3HiPc9o9JassAyrL5e85fROif5/aKoNDnozG
X+fkaxkAC8Tg7qoSuwxlG0DaVS5bDEX8RU6+wiVHOmdW1lNt1l9yEmxHMcSL
FC/RkuWL8+dj6rujI+EgxkSZIy1XHNOodPvLcBIam+Vzg7oyJO1WDrHSNAjJ
Zt0tlSBMWDDv8eQS38d0B23re5yEOR3YJdPrGca1Pbghp8GdOSmQjydE6Ww8
VsuU70b8xd6mcA29NnSSbUimRt/xDbV+wmk7ZaM3lK7OZOfNahqjAhayyABj
r9LBnPWWjCprwTkhgFENxK1EjZQArmZLWwGMxCcM+5DZ0xSXJ5bVd+H//8KR
sIU6n+HkdVJZxGGRzsPj9GacBMfEsMsdBWroqRUm/1Gc9KDCSZTPXkGcBtM1
mWC2DLRG4DLBDOgVxrpPlucscA5GYdir4BcQr15J2CvieTIV7228NTbLgUjg
aDaIH54cKcwmUXw7pL6z5as/y9j6EKcd6rGKqlZtCU2hL0iD8fFKjwjMBokT
WT2MSCtRXThPskkeu2AcwOGLjs22+CCav9b4GIZZQQx6QDAoSeVpVx7ZPPFp
vMV48YH/mAJ6OATkWOPNC5R6r1HqnIEVY+8tqe8MiP7MMhTLWsOPmQxMiqq1
W55OkXWvf7efj3KxTxivvD/CZAs010rUF84TarN5vmoTbcEtiAUFXtJ5eRD6
UsjliFB5upXHM0+EWrsaL0J44JeFKNFyiO1VjQ9yS7I4+wUF7P2ctl/qOwOi
P4sIDTCBRRUxKarWzu6HmxQyzMMmxEpsgc5qWolqwngmm2KlBzMUkgnttq1x
cyX88ykFxY7BVkvhliNB5clWHt9cJSSqH5GZ4AF0L0tOC8M6Fp5ibklsyvsV
sBLh8ZrUdwZEf7Zr3ybekdP+YKxbiacjVWtnJSQrYlAImJbASILvAmzGALNT
NjKtRH3hPMk2mbNiSKignJZYp3i2rIF4OUJUvurymOaqIazooiuB5iNcI9aj
Z3h6xKNc9E9GDz2DaOuf/GljY5fkO7PF6WzWdR19gpPOxV8D/WiIzZWfc9Ih
xtc4l9O+zBiHaxxK1xjKmtU6M/0ATrrL03NwaePla3Zm672ibYPlWvi6onr+
ZDqkrxq9K1EnLJOWHc5cfoevgHQ7/JcIaQT94Lv/N+fb2mfbhpMwEWhmZovT
2axMDsHVgZUBeOs3Z4zSNVRsiYVSlr3XVTXuzGmPZ7TMZE/XmANkR+s8fkrU
2Xxjux4DIFNfKKpJtdPYymWko3nZTBjcxCR/lRquRKA8uYzFT4TQ91WNaK2p
e3EyIh9kvL3B+GFFgmvQB77F6Ve74kNFsorYTOImqJmY3lPF9QwH7rJ9ap5N
PLFNtM4GEBLu88WS1UalKUAhcDKQnuyhQLKsfV1ZEooyeU+wzUGhwkIBQWCd
8IpUQo77BUIZoqXEObkqBnl/gD8h7hnqFb7W/3DaBxVk8CGIcwV2JtYVJagL
SxOrlc3LAq0DHU2L3iPnMza1t8lLY5h5iUP7fsb5Mf4bk/adytYblYdBVAke
uJ0/baxakbFzxX7SnkcB6L7/M94qiPvUXBnyhAWWgwYw7kPV0PYi7nLQfIjf
GvItRRjHvitVcD50EzFSCudjId3f2E5BC/otejcuMP4n9ciie09t8aIH3Dy/
TeWDYOxVtr64XLtwWDydyoeoSrd1q0+0Fa8Bqc5GzW0UpUFY6r5q68AaBrzm
8K7Cz2djXqLpXAH+lUiSRNoHC+Y7ndIoWnuWsdbJTMM9LNTWUCBtzKZh4ga7
dcWstkJp7KPG8ifCYZtZ7YbKhmBJEXNNS8wFua9FOJLMbvYcldfFo50517U5
P2uJgaRxfsz0cZc2jx+z0rzOtCl4LzHeWcHKgbSVCuZblMouSrCEyg77NPdL
sXltm6rY7H4r2rSx9mvOpEmTlpg2bZpZmd4RGLtbFEX01xS8lwhUYONOUH6G
/QpwRuXryvWVMNGooKzy9V5WQzARJRKQphjEU/bFDNL5FjPIgbmYQR2QvoQZ
9IosZIvmewkTfj28jwxkviLQ1BUB4K5cDFLfQSJreAPAsCBQkF7HLS69uHRP
pWlj5QrVW3wZSg/MefD82W09/oOLZy945DJ62vNkvKMFT161+tiTH7NT4sxW
junSyuqulcE6q13Njj+o18E9VGcDq/IApwkT4024DOx29xmrmdg1z01mtnZs
kdZ89Q1qvObqI0seQE4DNZpY3NDihhaJhsbbT88NrWL76m57HnX5nDedcD0e
w+3OO+OMU/E3vtXe7gxbH+pesO8pt8pjm24uOOmMuTp53j4n34ysA/2BAlh2
QhFpKNoKDO8GIJl389w9dPPZmrKH9tGAYgD+tC0zFFfOOaxfqPumG1rmQHh8
atcygSAkxd7OkpoCysIAoU89oN9Ne5Pnfx/XxU0vbjqr6cHFbS1ua3Fbi9vq
sa0Lxw6WtvAMoMEYNn48Oj/H0D+0ctORbtpMxTtC4wNoPMpt/K01N76Ca9wQ
6mhcnkwg3lAeCPw/QXx8gzF+zYVHj995yd6EegNwKIgiDVG2Sb5bTeDg2/5n
3Dm+3xl3UiAZcYJgIHCWcUJSFLAdFGD5Rlt7WpAHzrIOHMulce4eeJYqDdYr
e5ChLgDSyUYDYQCXLA3gFvUDuIanYKQBNEuUhm7j+qFbz5MvC7qB3B65Xv0w
bZoF05TSFFuzfui2ctARJKRDTTzOTpquGmzVYhDJVL0IRNsmISIqmUhDlE2g
GfWDs0MSnMkFBWmF+iHZJSBIRJyRgjAtXT9Mr0tSpygkS9QPyV4BSIqKzUhl
cBppcKjwUqMHnH7HjrZWQCBcUxxjXSq/TBAblUGMnEOxDWLbXmm/Y0AajeEF
SLdOknC4NJCTagZyDbwHAOSAA3JzT06nSUtB+nzNQA7i3QCQqzpwTQx4Aa48
mwSkoBTY/64A9pAHW+Chay1MjP+SAJAojBBCEf6L/9FfLbwpyUQaKTmTsRMj
2+tyRzN7lwXtxWxXcRIn44RSiQAth+Awvs228LRhs9ICmJdy0NOH9SrA/GwC
ZjlD/6xqMNNhnwMOZhKeaV6MkhRfJwD9UBkZ+nM/UNjMoWDBHefHLJmFx1oe
D9eFhwpy4Y8WtKtsFTj0+DJ+7PGgpvFtzvoQp9PA0OoZvW2y0FvCKyd8XdPm
o9FZRmbCqVWGQ7+1n+yx5LQ7C4f50Nablt2scySX/hhxjQpFcqo7/Ro9o7p9
FqpTk6iu4fmXlEPPv0wEn0ogGHEyfbK7dRq3McwncvrXKCcdRNuQ8+dxogRS
KEhH8XacH9PAe9lCWO+chfWUgPxSU7M9/k5+BwvaG09a5C7mKtqv7fgxTfvm
4G/aayD747CJg7fGj5laeu3rsrCenOT1agFeD5aR6F/YTyS8ZhDzBdwxg307
bKwbjVHvCNmT2WlA0/ik0Fk1yboFKdbliu7PLDgfp3dLTmz5KrOmJr68xfFl
wIFvR2QngrOSOKTFL1d9PmphuYbezes4+YTauLB/EvyRJPWVdyOpI5sFwX8k
AT42z2AzPo6gvL0W8N9OeTuEaDiARkqIWgX7/w8sONfSu4GxU3ZH1iA8hwWo
b4XHjb0zsmAv2p+/Yz9dZyklR9ZUJ/1RDJgivQkhsHISgfHSCHw7gQC67r21
IHBskvjDAdglqrdn2O+3n9iAw3weY8YsUwnwEzzl3SgQgn56Vejn2U89TWEI
0pOSJB5SA7QbnPFboSqk91WF9NQApClyrpgFZAE9OF4VvjEHX2i6F6Lp8rZE
p+5uFIT53qown50Lc2qQzBSBAgP9l6pCei43rnvUYBZhl6sA6V1VIf1gAZo6
iV0+CWl63MuF9I6qkF6YRdMU46sAeVtVIC/JImczi/vLBsBV1lCuLfHZquDK
FgWmab4C6AJpLmFvqQrpR/K57wBd1jKgq5bKhPTmDkhH+WlXa5Irj9ngXpUr
ByGYe1QAN3aA66bAA+OFwb2mAril7PdPVJWD62uGNJOw11aF9JPceEffSgG5
jMWod4m9uiqknyoDaYicRa2qj1SF9NaqkBYg54erAvm5AJDNwEBVRTovrwok
3Y4V6keNfHI6H1Apxl9cFdwv9AhuacJeVBXSu5Pcp4GqbhE9vyqQ9ySBzLdQ
lqrK/blVwf1KFrg10vTcqkDeNwFAnlMVyK97IJ2TpQjjnV1S1DQ9qyqk35wA
co5VBfKBCQDy/VWBfDCL56nxKAVkmt25dt0pVYF8eAIoeVJVIL8/AUCeUBXI
H04AkMdXBfLHEwBkZ2TzqCk/k3vUQxrqPfWZ8Ud3gNvLTO5nE0DYI6ty//EA
kCFDroqFfHhVIOeXoWQVxh9SFdJf5ZOzzIQjU8G/vSqQTxUkZxWeH1gVyN+V
oWQVnu9XFdI/1EPOXBuu4BaJbCD/VJCcKQ94KZ6/uSqQzxSkZBUg31gVyL/1
RslSrsSCm1Gygfx7PZTMlcnXVwXyXwUpGVpGKMru11YF8t9lKFlFD+1aFdL/
5pMza+molGC+piqQLxQkZ5WlI71FqScgqcikfHJmrW566SzqkxmtBdyoIGEr
g1twp1UXcJtlqFtlqXubWsAdLEPdKuBuVQu4IwWpWyXuofNwtFFTfk5HVU0p
SN0q4G7aAW4vczqqasnewA3psExwN6pFDsRt2A3SVDhRKUjXrwVSMY77Cek6
tUAqI1M3L0TlALM1agFXCNaNsJXBXa0WcCWksBt1Q6GHRYOHZ9UC6cyChFWQ
JqO2C0hslT2UHlKJG+82GlBrocGr6Ixgei3grl6QsJmhv0UldtlawH1ZBXCL
ykGV3aIe0rULQiqS3dG3ihJ2ai3gygaxQuCGxLbouDC5FnBlD143cGdlyUFR
6rZqAXfjguCmdmkQjEU3iFXZKOshfXlBSNX2mN4IWxlS2Q+rB69QwEFoI0/R
zYN2li+b7o7hZCsY9I7eqKHvfQeamo50p73o7JJS8pwF6J22NKawLX7MVHpH
cscb/ViFvj6B9K8pbfcakd6mDNIhxVNArf8zgfmpGqOplo0vdGIeL800wzPL
iKLtGdFXeURz5TW0ybDAVt2/JXA8TeO4BN5WtcQ3ciI2FMEKnVINqe26c48Q
k3Fbi2wBpP4cRAq3K5mG3foq97Pi2jHTtGmJXaE8KwvsKB06UmUDc7/PdcEz
jm906dGIJ9AoP6aBd7FNloTGDt2pRDmISiTj/hyCfEvwD0EC0U4f7pcf5TRC
mecdgd2nw7L7VH7AG3GLcr8bCI0THYY9PcZN+U2n1Ji9F65gVNtaAaJknrTx
VDl6yHTBdOxGjWQ3qs1B7yYU9IOKdhCoQeMcVr12ol0YikJRaaXI8UQ5clgj
kC7Qwqq8XPNJQZcVcdw9C8eUolg3iV6B00x+UQ5H2k9tYrlqFOKN4b/3ffJU
ZI/u6FGO9Tnf/OCZKCEWPtoVvas47Rr8xYoWoGPc+q3K90vOhz3VVfHd0+Ob
O5htEGBnJqo/TKAqh2M8olD4PKfd6lGlC5FfYE4CA76qTi5E3LsGbPfO4m6o
g6ZQzj836WGNcvwOTsZaHeZJVu00GsbfZIht9E2F/Tinf44x51tcD+dknPky
qzoB9skiQKr3blIG9wc07oMvN16vYiwaZChBgwsc7BE+bS40sKZSE8PrC1x0
fvtBXD8CPvmCwss00s1qhNi3OyEoh0yjdD+fkkuNeZoaLZgrP1MUQV9G7Nhf
jcfrX+o7p8VQ2Yg+QF/HvkOe/EDb/SqZNUKVZxruWhW1+9s8WXLVAR+ZMr/j
JC8vKflHwtmIaI7EimBS/0M+xRYtdAh0QQpvINvGzu4aICkGz22N7TyEt7Jm
esH7AI93d8VgDyWMtUzgyReLL9qydpP4khigMYp9n1kMKce9JOyloHVxdH1E
nmPUxpENmGb/mqvbpBq6B2ehm2Lz1mFMpxZk8u0WsPfZ1qAA3ivAblwNgUMK
IkDLriE5LYpC5X1/VMQfa1DATh4NE50OgCQDKgqI1w0WJhvX2sRWemguBB7g
TBx0F3Sbzaqh8c7uVCcsXh2gOpFaHQDa7YxZ3hT2btsk3IQYGcn1wQoCs0d3
4MGm1TA7ujtmlGOnLMymOe7ky5PdsMqhvdF+jJKav0U4nmIJQaFsN+ErinA7
DzJQpkGH5TEW+mJiuGsWqv6Y2cxTinl/j71LaBjD/H/5E84ggxXwVf4biu09
7ed7xo1nN2lkN6qVAMcVZPMeWbgvk8Q9pOjP0bhPvct4c0+OCzqf0/j4aOqZ
5xk/jVm1dsanDsjIxNsfQWk6Du9d1kl4JtutojfvoncMfS/CDYLy8U8J7NnK
xT9iGO9XO/YnBbAPSfybbbYg9st77ZuF/TEJ7Jcy3qhbIQN7jj76CqdRyXpR
f18242HfuRb2d4y3cg1EV0qiHDoK/eAEyiMK5a3yUX6M096cQnnUFA2Gycf7
/QVZfkgOy2cC/4bDvxHA386emfODgtRNDvdkX2dh14749ZLojxsdXGP9We6X
55fLp8bpBalxtKMGSQEdorwGqNDC/xpIGwxQYUtNhSnHK/QwyYMJJqfegQqY
oeDgxmc5jXZ3lbVn8/E9oyC+JxI/kvhusKDrYtLLNb4Rph9yyh2bJk3guYWi
A+Yw69SO5tkBNOMAmmc6NGN3tv6MwmiyqQI3Bi7/fM5j0BA0MWhhR+5MpJa1
xPJx/EA2jgkFRhu0m0CHxJQEtlUYR2sXtIAjfBDYK4K+ALMZE0taRyprO+fj
lTpgx2IU4F0K3idsu2WnI/mwnGdrG9MWYRSgcQqWX9pUmRQwUoTYVHpHH9Dw
1WvJfcjWlrBiB7rD/HgC5s7FtXo76PkBwhYAMukIP8JYDxJtjJtK7+jR/hH2
AlsbBDAJc5j79UqiPSKpoRvHQ8QKc9I6FCL4TeALIjfQy2uFyR6oEGsmBsjB
4FhlORkWPSwgKBG+YIAWJnH4i8yE4NGFgxOGYr1id7GtrKuc8XGgdhxrgYQ3
Gd8hduZCdOJNw07N7tYA1it39oSNWHdoInkS5F9okEfeo8D9jbEqGo5SWeoE
5ug+BDbPLjfR4G7YDxS0pIx3QWHqzzn5WiO2sR1+kIaTNmNOg7v7SU4/wNQ9
TSgFOVv7g4rQiNlOWftknLC1f4cCvD+QpzVGHuTRKsb74gXEz3DaW1WahCRs
tUiAHQ8bL+1LeYI/zEkURsVTjG04DVpp0sIFnmcFfzBKLBgBRPNgy52sEKE3
YliBVNEOtD6oxZJgX6xojq76NP8fq1TfYwJLJwDo2y8SYEcrMbj0iY9Y/4+R
sBGT0N2jpp4pdyk4eVKBKS3WSmmMbV5KFSBWRdaCQM7+T48vsQ1kAstOFKzg
YFmOAoLr7VHdIKjXyurWGgsRRk/INE2etplQCOyyIM3H1lXP45yNNvq2KMIk
gtU3IhDV2/M8lKkFwBTQP9VAUyCpqAwz2fY9iM0pUrpfotMzkFMskNBj06R0
vcZdT0C2MEa8Uj1PcLaD6Cst7cUHK0Q2XNjE5Y7zI04mAeUF+b9wGq3jLwpA
AoZXCXwM5OacNmmigbQe+iZuIIF3FAzGUgR8SzCAbahXE/KAWQmc1VhQgCJu
JFC0sTQ8c24i75X88G1m5OkZuZKASYSTlJF3XJtZBdsTbVsHGssTSuM1TVwO
M8ewRrNBjQ2sb0pUDPoobaTkw9KxpPRpw/HtXAemCbC0B1yD9FojQRvt+uAr
A803DCusMmq0KjHeY9uCyf1JSRu0iPzM0UDaNw1tBIshLOILefi91MGrqVdo
HDwxZieIAT/mI/zwhjw6XX+EQtaiH+g6SinGm+fuUZ02Qx9K4Qwc0WNwAwpU
5V0eoggCNUUq4WA7rKgdJmk8a8DQiiV2cm1OzqGtjUgZwvzzUfUNcye4ihDy
iliqeQqGYzVtPM172epYkYAcDgG98rwCHhcroRfZyXXjsNRnqpO/oSPKJSP/
Z9j441nWlZz+F6bBSFcyNo5T6aiO9hJwUDJqvUp9R8z8ZBOQ2omnYOMsk2Q9
beKwIXiNy1M4LetxGoR+ekZ9x6GIGF1GjdVl7JT5lEZlqCsZ4x+rdOwCsYLe
AEDz1afjHBqafHYAjBFydQ2DApC2nnCqxvcoWL/ssGssxYSUT3TWkpXHJvrb
C+ob5O4RT8hvO/oZiYkLE5J5t65Kfz75LXEziixRBwjZ/JHK94SxMTnocVtN
PEFHjXX4nW5s7JMdGOIfKAgx1WS9qBEU3QXJWlaqzuvQTKSDVDoid5iFm6lk
LHSmxuLVNAGjLwTgwIoiAgDJIN98Ail5usXrcwqmGzzJoDUldEdA3dl4F04R
kunh7FpPMojti+rTOkGSseMAhh4mVN+lGikDhcwiXO+1DG6phciKVCPlsebo
hZ/blPecfTOFJA8ZsGqh4x9jZJsWdHQ9SA+WzaBa81QgU1Ez6EzHgfhplbxd
iIDcU9CFIf8PMiDMSxS/SDArNQOoSMBX2LZAwQUX3rYJHjOb3tH4Bbdt7DJb
DxZF0utxhdYb2bS5WaWbYYvXNhqHVnfq3qvSj/HU1RaQhHEkqMum/UxjB58H
HAGVST1qwg63CHRsU7VNSRASD0g5XDMF7TksMf6BioSSOdITRTZryLObJ+zw
3iodMevw132E/4YMwXf+LePGot8YHwbDBMyl+QMq/TBP8++q5P1DNLfBbTHG
cESiYA3xNwGyj5tCzsMJ5UJzNEUPrJ7Exo32cNP8U31G6H/LkbUJamJtC/MX
8dxc6RjQ4MvWaa8SlC55oLobBbHeGXe4Z8S3VfIRIUZY1RJhhoT++EtHehNB
wWGaQrus86eXFRnAQIC+MpoIPTA3grUIOT2ZSScAIu/eUhFbmbcqhLc1sm84
l3TfSNGISfc9lXxgiHQ8rGF2geAl2gTL03nonPcKhfKXtiuSjqfi8xWwMhV/
0ajYfUbqSyrfzsXIc5dKP87X9JhKfpNxR0WJEr7SQUgvDo5m4+kOVVY0DzbX
QDFRYNoW/SdZQw/G2PRA/OM1c/x/NylkB/YYQ+w3+NnSJUdY7nAOj4Hu5NTL
9XM9Of+sknfx5PwUJ92ZQ05nzGOOgenJvgxdvjFfCxVHTldwg0KYQ0LgofXR
Xw/lv8k9aR16TSAF5xd28Mrq1rCDNFpKw2uVaiwr1HhQnEe+ySZJaPKXMekk
OvtnOaSjuHWoFwrzzl8vqYVe8R4KWvhfZnqSSDKWVxGEMjmfJPuoIj/1JHmF
SoZ1HXmSxLKCAM2wTIIqfI5Npa0o9XRLWegXSlCX4uMwwCmZSMsAoa2+VF9r
zEp9m+m/xVpw7xU62UnK+vyY1vquGv2b4ZuP3qA/eHryQTv17ISpSFi2tbSG
Wce4s4/Q9DzJ2giIm51FJobDC1wy+dp+pz6Rz5Jp+QeVLr7dr+uq2fh/xPiO
3SmT9Wy7qYeG4lLBAz/0IGm0aMSoH5/vB9xgFtDhJnEmXRu6GwO/HT0Bmxgb
9DAFJ/KI+0zoP8mPadE76ZXjCewYF4dVOsVoErPXue97fmqhfqQHAYmQuFw3
yAcWYpb3H8k3kEn6IZDx66rO5xlPrE/CcHrMoxQdpMtbuz2G5Sf26iEmk659
2k9UD033M11oasfsBoYO7cPUazj4/09Msmuep+uwh7rFd3MeBAzIKSgJddnv
TUj1kAz+16f4MUP0js7SDdrTUMlg1ORigxG4YvB5ljJZaqFX7SXFrQKJt1PF
35ZDrf5sWqpIKrsTlMLfducHMLCnEf+FgCNuHyEBqyiqCYyPM8U82iMJtGvY
uFQ/2vbWoxjDqyigc0I41Lb5qH4UHrJtfsD4IWmDBArDGoXedg7xoQDQktix
Cune1rBhm38oQC3INdCQKH4oo6VcBqsGNYal9grxiQ9vUwjLAATlv6UAk3/i
Q0Ukv2ErBxaIJ6Qo9wa9Y+1+vT6Ec9mNQxbhISyJymosRjtMbOVAL5yNttJE
IT1VISh+kC/rBj3GfGxDkW1EfOafjOP2nl1Ki1HLFzn9iqJILrjrgh0FyTkP
nl8WSYjv6/kxg/SOts5F0p6hGOOECjHwYIhY/RhvyEnwwE4y3c6rqYiDf/1U
wxbtYnx/lCkugBGRXUcBtuKKK44dcsgheMx0vGfMOfjgg6MFBx47tw3Y6e89
bMHV798Rz7y5x79uGN8WINcleEULDn7P+SYaP/hdY66Oz9A7Gj3sMBdykQZ2
7QSwsoJId7bzMptMkHbwdI8WHHrooVmQRgDQRAARaXjMYADW2/G/FDTrJqCR
NdFbFDSi3t6ioelg6Mq03tPYbc+jLpdFIVoYanc8wytDu919xmrVA9gYUhkt
vqAgFd26XwFI4zSkUR+AlPDE+xWQsoj0mkUESFo1RzLOG4qM68oAVxYfNi4L
6klnzCVQRyrCBh0ox9dt7WGTDQ7o0c2ysLW1TWipcqhXUK2BOnQDJ8MwYMOG
WP4tTqdsmTrdAhrNedMJ1wugJgpAOYB3a7f3XrLeAC0yoexFPcG7uvEaEW4X
FJPD1jDQrlYEXrcGfOWcwxy813x83TljH99w3jmf2Kg9Dzz3po3aXy68bZOx
Cz+3sQfrwnJAf9wCArehrAiKOQSCu5W1LgA3COA2sDLeLPjs1euYKTUBea1t
fDoDRO2qc0eDFHTAAJAlagIkM0RsJdso9AcapOYatlGwC2yDbJmm7Tf4G18F
oF7ELROW6Szy0gagiC0sSEvqtz7DsmIAligAy3AnLFjXrRWWFQKwDDBE7774
XQ6WyRMAy3IsL22ZSNMFsEBdUY4pEwDLsgFYhC6QZXQkqM0lJgCWZTJhiTUs
RJ8JAGfpLuDAwOZRZckJAGepTHAaaXBAITMRME3rAhNUcNtqIZu1PUZw/rph
GuPHDOC9ggMsVnLMkLShIyMAtovr8/0RpiRUodgYy6EWxgihHj0CL4Z/hhfU
c/BOBGctTVpaXyZga0ubiQK0nAjYphaHTXQpleiP9CVhm8IzNtUj6PnY9evz
jC2WHiHPMmxOS5G+gSX94WsfeRm5b26eu0eQh0t1AkRPnQDZcXawQ/YFtrZ5
DpkPif/SEwDeiGVjSMSYjQ3sz9JsBAl5OG2kYSO7s1abc7irnDXg9Ul4DaCB
l7flEoRrP5j22IYvqBXAXAajc4bkT9skEu834FhcF4BDGSxuA+goeOHYwZqC
NK5aq7ZB1rKiIEUiUivn1wTgYFcWR2CxzBbtUMH2P8oLhJZ2qVhJau68XEh5
AyE8rYjiO8BYbxUCWDAFL7uBsAuecVpSlDtBPA0yGia0Oln2HLwZYoqb0edj
y1HGWIMSZ5Ks/mGpALGetAzRlw2EmbRpdRdSTDsTUePo5jQl5eU1TRSRBerv
Cfzn5FKHwxjh8JXVI3HfzzciCwJ03TsKM6nTLNZD0uKTUDbUneNsSjmXgYPK
nsCVOFWHDmhAqpWiofen8H+KSYhtFAhhvdMjFGF53AUovrR2FzL9QzpepBM5
OqSTvDSNbJpLt/XgnJNDc7vs3wRdxKuJBy5CrGDypsMDTTJAgm5JeCluSGxk
CL03TcgTlSv0NErIxcdtQpO9SaTPEvqzujKg8b4U2iQ9HOl3gfoGLqzsSbJI
7mfsQv3kYNVWNynfN0l5yHYlvcyKUIieT/gzuhI+1nvdbncEaOjAEzx0D8Ei
uOUxk9Zx18Gvu6QTwXlcTmwgibMIfnp3gkONQyMhLgT/5xhxuUgAD2IqFpUt
kZkEjrqPn10lmnQ5++MTujzO0uXvzyEwS7tWB8d4Si70nZJdKNlhw0YFpZSI
aMf0pD5uJInop2mn5BCRTnFZE0e02mjGhgQIyaM2oC0CuyfzPXkD3Yc72Hi5
MkpxEVMD5G168kJ2PXlPyiGvXMqIQ5vl6ovZ/iqupGCYJjSuLFfiwUaaaY7+
C3VnZSlv5UB45GMRx8dcESceTAvwoJUl4u+pgQdWxzYnCcGMtToQJ/WQoG4a
7hgp/tGmNTsUtvI2ZU70rsxM9cP05z7CLvim+FrwSHBDllNtFbyXDrBnyCpz
3UXcjPqY2jgUyw1XWDSH8cjTZmjrSZJ10dyhmc0UO/lJ9Zf0wEpuw5AXjDiy
XJIj5MIZAUcG6L+RZomF6ogcnvChe8splGQYfcK4g7vdjroJ3KuZQ8Ru5l+u
5p+JN0UuU2QHUW2qo98AyBc5cT4wh3RWRdBtiZC9PyrS3WfUaXmLxj7OEDlt
/HaDsO1i7GXKJJFzhiOnlT+nKpbCO3aEbTjC7pVDWL5VAiKHyHHymbFavVaD
z7O6RXCXZzaxiRYZ9mCu2M7Ce7UAnanXzwCdm/hvC+mTHZ03y6Hz6ZYohyoM
QWsbBEDfFol9nyFiEo+XJNRpUqFtwKKSSxRd21GUBJR0wPZUI/63Kl7RgrNu
3OtGq1wTTtLvWsDgZcJuCbq0ime/EB7ZToBn1xRNJX0hbhzNJOs09j6wJiBq
FlWuq+JNBw9EjqYNEnlU+mLA02xv9Iy1g8xjGOv9iPs4Er70dpV2IXZLr4PJ
Wliu8BKhRwkqkJOWOYYcoX+bSejGGilS0L59doTNTn0j5cH2xiK/6TSbxOTQ
iV0sAD8yeUl5oldH8oEotyIpURRekYyCBSd+5Pgbqa6QGmjIAeF4MEIv7zFs
QgruU99/yZ949+NLaeNp9tDWIsNeUVgm4ZlCTLqEarrEtp63gAJh1Me1wSEE
VwRiv3HM5hMermhfDZ3dDrnobDHNMw4wLeouo2sUohvf2bGfxtu6ciII2vul
bT7raUK2i4Zwt/xpuWlhanpKK+wh6ZldiAp8Kx3U+ecNG5PqtBxsBCLnGB8o
1u8doDkDAV3XqZU/LdgGBtnVCyFuZ3a0uAHPJaYcmzFSdMV1n/Z6lkEwK9qj
GILfsd+67tzsAlGkVZUJ0btYd2NDpusuzGxw7EWYXeW+DDgF901mzrUHsmRw
zUJA3G/r7WlfYxfPluzgCHoWS0FXfgNiF/9OR4TV2mXAKb9VMN9bbmK92QXP
OoXA8a+fd2km5RpexlKCKkpHSlVv2v1WVBWoZtatr4UVFCL7+1YIkRqbIXlf
ggJs/NVA3NZ6NTczzUbziGRSZ6kbFdWG27fwEmuDOvMGi+vrX32BS8f+P62P
t7AeYzonwW/UbTT6064+qcK0fk1pu/e/3Rgzhuf4mWVkFl9fM3ycyY2cDN8B
JjpT+tJME9DL6QmwbHDUKwbyzF2JPTZnt2c2US1WH2WeiWVdOAPUSRxj/JgG
3stWaPNa2yZObNELYnAJD5rETtBkmymzYKkKIFxH7wZ8FPCWSkwfnXqUuRO1
x7Y+YTPvxckgMfximVufq3U/VIEu8FtC0Kb9krPC3dOndmnX+QuMHqrjcFfZ
mLx3P5rmLjnOyZ/jZtnzdLjx/pZZfWu9uYPxbo75xjoTMUFij1DitppmzSDw
5mqI1q/kE7cLGUCEDIlA3SJ9Db0bWDVH6P62xkbgU1uZh/csIsNj7/WR0hig
m1ltELv8Ug1tVrUhK1kUIo8/8Vkuz+4Mm7diXcMeia5gfdThP2iBSVxSS3fu
ZGxamJHzrf4NDV0RucIhMmwRQQaHzE8ssMGl3Rk53+rfe9AVkUttSRESQmYw
iRIJzM9ywGb6v0S2A3QlCW1+87yl//2yK+gvrfD8rkT4kCPCUEAanuwK/0sr
Xr4rOc61JUWfEkmGnHT8Jgdu26dfGqHsXclAG1wypeL3OXCzjlh0o8y74n6m
LdmpKYkef+qO+6IUFz5mOpyyXQlwmi2e6AOhoQIHOJo18d8VuyO0CAd2h8KL
uxLpFFtcegj97w5POMlqZnvCuRaW74rkohKH7X7Fus5JAaLcVRtRFtXbaXqn
Fx8RnFA1rUBP+1JtNHzJhCt3pd1xWbQjqXshB2SrfheJeOKuWNrjiwO6eMBN
Wyd1R3URjP8thv6Ruei/aL8WjrZlarxEgnaLUejwLArZruGcAEpUSkXWLle+
yEQG4xYj0iEBIoX0rNWBHmOBsVuo7HLli0xwdG0xOiHOLOG2SXg7qCS7LgpH
wa5QMv+iHDVbjIgH2JJ5wmZSrXWPcF2+YL5FMRK2GNneVoZsrC+6Bq+uUDDf
Ih7kWoyCbylDQY5m7xqZOr1gvoUZwVqMPPvYkmMquT0LzSAPz2iDgakzcr5N
RNBqMXT39ug6+zgTXYtSRwTqQgxMLYbkngEkW1nWz0xbRzrydJVwcr8CUosh
9jqkphdQkujY28J6i0EtBsRu3YHgIyh6ijwtBsTOtmSnVvMzoJMpS9V4066Q
7GRLdioQDwlP6OsNOu0K2Ks9YMmu7gHjUPRK8aZjprwvcdTmb/8vcyTibcA1
xp725NB7pYM0tGS5IPm6uAMC9yvGMotZriz51+VVW9vSt5YlIP714aqtbeYo
mclz//po1dY2sSVDVk8eB6+q2u5GZWh6bdXW1k/SNNTGJ6q2sU5vlLyhZLuR
btesO+7lpHN48a+bKrWyYRbRbqlU7frdqXNr2QaE/FTpegGQbytcY+h13Eus
9Ob0OcbogFETBjPmEvZciegGTjrM5X+o9zZO5b/h51rbtRGfwsmy1k9FHuyh
Gd4Pj/uT5L5C+EvfScnkapQju7ASEbly3+6hLXt4BlmvEhsKjxS5EaxTNT7A
eFtAbtqp0Fb8ZlUffA5HWRAw732ck7F4OtmVe6CjrXF+zAC9c4dx/7LbYSnE
7AcKBlJnR1vYTgzh2tn+KD9mAO+UhaPK0LXDOGoNK06YGZD3w87pmvBWYsqD
+eYbmTwwRXmOhVVOSMJMY52A9nImOsRNIISHxx5J0wTDYHcijAA2kdzSs4OF
AzSRiFSEcQ46QL/VgZz7hRh5ka0Pjkw9px1Dqp15jxym0vG8k6sLhmqxH0qH
L+CQEvbgaT8LzE/rG6Fb1XRYMaZZt3Pt4jQAthi7l/WtNCSgVCBYxn+j22Sw
lqGDxZAHpxRupuoIYsHgvjUFLlcN5j4hBGSfyDxNaF4R0PfXQ5nwchqW2v6p
Pl2DVOtGSyzdop/GOUCWIzWvL2Ox4xtci5AFvRMddzlFluVVcfhyiFMct6nX
/MxkW4fb2YsfS/wnU8j0Ip/W4G58WVWFKR4taFgvQkuDA129DFc37FtIuqz4
oqkNVLk/e8Ltq5K/YtyKkJ5BgWAUMMYenieMC52U2ilgSfcaIi5HPEMRywV7
Mhs7QkNYYBVqf5MEk6tGBJC7/5qRv1pXzbJ5pyqOuA927aBhWewU0b5OFx/x
1BDnw4tJ7MJQs7AWpDl3tDON1wtCayzuu4AIpvX0VItaWK9W6SKsn9cYzeik
52ckf2/C+pYUOK9QhFs/9Y2M9zx2lyMc++oT033LxiYIiegSrN7CR4gJ2PPu
c4ReNUWQY4CCMmxpPrxX6hukATEZcO7CIsBB3n/11UN77ZWqvrx4tw5JFYGz
5T5jx2PmeJZo63jLHNGONWJw5TZygC3HHIvD8FGpmuAg+qCxKhJjLWY8KoDS
3demKJcj8I3DU98ocG3Y3j/9TY0vu7NnqrzPCvDUtN0cXFb6B00yLvRKT9vG
hSnYtlY49VX6owM19NwibCl9uoe9McF+C4q+Ovnvj+obFn1g7PGhxjM4ST7L
wSs9S33jVJX8TanJjn4d0s4LETAy/iU0iLKlXatHcKo+aefls+VTRMYZAbM8
anDkP6s+36d4kCflm6a+kSSxSa2J/2qhQUlhtpPyxmUhXDlWEf/XYvADBXpt
wpywO/DQYM6L5TpYFLqWeJqnu/lbWovurOp8Verb61W58qIbn62SscXBDjEd
Ussbr0C91CXaQan9qSr+NlO/1DZOS1F2uqLQQalWVlMUyhNZFNc9gbY3sMjq
sM+zhAC9iewmKRBoqYxFdu/UNzI6+y6ymyjiQQz15GdHRbwckY0/rdLvMc6M
hYV4LiOyjqkiqOeoZIxkuYLaOD7VwL8J1GyB/YfK+0pTv8DGeu39Ug8nkPut
+nScIndQVhlefVI0tjOzmOrx+xbTm5jaDUnx91VVCK8YsnPaL6pkjAvEhr5K
6L8lmTegPKS+vc8UEs6fq3QISYEwy2pSyDG9mHP+S32CuQqzPiSIrISmmCRM
a3ka1iiNWtyx05B7640q+QpTSBAvUemIDmRBPEUly/y/N0GM3qWqMlMs5a7U
Zeu2T2Mtfb/01NFxyReZQoKXXlseId8rBV7Ir0uwZjU5tOi39LCNB9PKLbhk
njCumU3SGjv7YKomEiGm+ZhKv8UUkcjGfiod0zQKYLJLaLF2lUrEtIglLVCE
RRAOZPHmighuqOmVIYJL90qThAjO9+S4VCVfY4qIYKQtGvavxFcp0CdC/k5I
wXcut9FN/rZMlYs8PeujdQMDm967RVstmOAnqfSvmkLyt1bqG0WnsPxph7XY
yCJ/C5KvC2yJT6Vqa36BGrkzlXx/DmVmZlDmr90ok5DCf3iifFQlX24KSaEO
bhUptBjan5LCFVRyPVJocw+CMbo3YNsjR6xQ6RxB1GTDM82TtD5yd0TgU2wB
01yPs3eaQoI4wI3KN4rnYUE8WqWnx+egIDZeo0qgt8xSJNgmBcV+OeTZWH3b
MPVtRJHubSZIo/TchZab2DL8qkofM4UGaB2PDcYPUvRI/DOVfLLJ1O80UjFP
35GCt5yIsjMG/2jTHosQm3loL05By/v5Z6XAWqMP5GfDURs0WGYLrKRdZ/Kl
k/1ieiUNkRMsmGep5NtNEcFEpb9SpU5XGOo9+n8ScDMo8w71bbvUt/UVZbQN
ca/JFEyoLJlUg7B/V9+wplxEOj+s0seNmzSiiLbg9Rw9jdVbPRixHoYRnNGL
iDZOTDVgLwS1RTLkE+38R33asg9cYAi+ppI/7ikGfa1F92hFsTwhnaPSsbC1
Tidf3D2nYSG90DZypiqBoItJnmpEgr+p71hrEMlJk+frijzvTH27QpFHex6v
d7g200KKRaXY16iXYOAEmqrIlOev3FWlY2zYQWGgR5q0DzSN3Vd8ufgzKv3T
pqywMr4IC9JDPvbItEymvHJl+oiLvU2mqPbKC2a7dlHBSbCmItq56htW5lZX
RMuR18YbUt9oR+DaFox7VLpMz/OFFo5TbRirE1A6Zlmre+gjTShZ3ZzjELA/
BOPAHaKO3X6bfGNEZ7Zf+vCAMf8tuISELZCNVB1vNkkPzEcUCnlLSOifP1Lf
sDwHtcWrIojS0Ksic321IewjzNsmp0DDfgYd0kNHs+dKeSst5dLqA6opmAzu
hqZ8Odc2pd+M1lf2sZ2DyZrej/tLo1foGjgUQQ8Yt/iiueI/I/WN1kbs1mG3
z5d6Jrvb0Zwel2mRKqdf2GCshJ35cU/lr6hkdLZWgJyWXmRfopNdyrjb5JY2
Y+7nLHB1PUNkpTwNdLYtjP+RjrY7DhtQbxAjXIkHm+pFXy4CuZeTQgXiB2AI
a9UJFt/MdUPbQT+/4KuHMIwkqw9h3sAoCiWIjSl3cxVyhx5cLO4cGmMjIYD+
d32e+BFOw4O4DTtBa4Z6xntdq9E5qtYunULPc+ASCnWKylyMEly0AA2hA2l1
C3Jg5DuJyXW/b5puA3cT5byBgbHS828QI9UpaGsBd4otVNZnBLqunWJQTxig
GkUYZpmEnOxp1C8wsGIySi4ODifCBA3W27d8WuMGk/xNVYT5jqpLNuLi0K8t
JXOB8C9o979IHQwHBoMZqTo03BCVm4kQtuWxFIyXq7oO1R/4eKq0AMPSRPcb
8M03pQgPEmEBbkDtyOzgeUkOhH4VoHSUoDRTB5a3c4ZyPpi0a6eokyeOn1fp
UJXZ4piYtMgqrMR9BSWxBSS130NOTLYnA1mAn3L4GCFsC5xA38W3zzLA0Hb2
/GOLLkL3PmH8CS0oiv70Z58n+ge31fDEaKUNb4gblt6fUeXQazCckNHGXSNW
MP3aJBxPEaJwMZpRABEvxj9hrJ9nyOdL4IUpNWwbaPBfqHKQr7cIPdiQOYvL
/N3TLf4np+GBbcX+MS292M/9bUVqGCTuYiQ2idOiy9G1t6hkxMfGnQjUxhge
ndHPbhAkFRHRB6d4iPOkufF+lf4ME5gP4wiKtD6tRlyBGSJtY7aaV6oSEi36
qCfxmFE/toXAREwpRtvPRkJiRga4r8vfVhVk7LeRtKROVQSFwwiTckzESW8t
7dvCWicmCFtznXw4SIz/wz+IwXpl4zxGBeZxMBWYc2dpBPNlSK8Z3GechJYm
BztRkWU9/obTrmcZh0OuTLwm9Y18chzyGjgQI5qlMWRNm5AdbnMdVeeTgkJX
AUqczYduRB1SdVA5OsayrtObReTaygIXZl2kWSd8Q8iVG7Z4Yp/mG8uJ+ANh
AQFJu40vl8ZLm6TBpIJMu5+akU3jxLZ6cV/IppQUeXnH3g9ViTs8ZT+rG8yj
LCMExQEDaS9+iLk2cL0Q1blZTJ02lmbZN55B9e1VMszYPKpzB/uFSodpywTv
es5GiODq9ESZDoJxQ46+eVSP3q1xZ4nbSTdZgORBO7A8yc/QzWaQnI8JkqMl
YN3NMlapdiG5PtEK8aWhsYUb1e5ZcUrJ5rEwFbEdw+1IYHQQMOPu016tGhUx
o4NZ82KCis30CibijSDvQ7nEgwkuvtJPFiJewqkJVxDJ4fQABdn3Bq0i1v+9
QoccMtoYgYaODsFD19Kv3iPprC0dYcx0VhmP65pu6OjUY4fDROOzWyScFBzA
lsoNuhMtvaK3YT7RaC0XaeDNTKHMg3n0Qtzxy9UzougFkm/K6fh3kocs3kSV
AcR2YhevppLXMi48aSWVvIqnCCo8k1HYx1EkjlRutGOVJLFIg0oian0prQMN
+0X5FyBO9EH++/WOBg8FKUMvnsRIl4evae10vZTxka51QARlGxO0zfwydVjD
IYJdJHNq0Q4fVvjaDz/MroejXqGe9H6zQjBwKCLYcocq162Yva8hgoTBcN63
SFP+dVTZTKMWSugVWHnY4RXllV1LlbVdKoZEIR4JHILgWZXb1BMLqC6o0eG8
qtdUVdtBIp7Lf4spZsfESFctfOU9913wX72zDShnibQ/w7VBxgWcV5hz/d43
42/JzWtmtvpu3QPuPmiMVqu4LAmP3afyqlyjs0r0cHGWXOqqJAUkx0RByU4v
TBE7TtH6ARxpBxgb+4wIfjCVR+mPGc/U5V2pIYgQ5k9AFKdSQXqhprAoijU1
sk9Z1+vIpDEPOWYTCIA/kf9dywPVAvt34m9YYTqFASTsVvCYr81gYN5DKmxq
Tt1LFKh7liUKsmLVAzY1bDc5p5Qdssg62n7Az6VdMp0/A1LSgDpAi6O0QRNn
eNIY2iqYz05WW2jmLQwpLLz3MqQktHwyFiD9ND8wY/bJIU5UAblwjcMFSJoS
QXuLjP2/5UiEqAAJfBbPBrbp2nNZjHMj6qkhtIJldgTIQL5fESy2ODxNHxRS
8YT0GlUceZUvId5ZfZvrk49VyW/3yder5B2lJtN8n0qGsQMX1oseJbgPVxGU
os52L3YN0B07cpmR3nKOsGfl/+0Am22cK1Ty9q6xCCXleANRce8z6teqDY+4
Gh7lyM/owWiR1QNZxIExAd20JFPiXx71xgcV5uiOPyPkbenfcYuTPJCR5LGl
A/lYnGG43s0kk/qwMOTupbPRq2TayY4K9BzWuDrAAi2z9IJcf1Kf7lY1ba7S
obAHOql6cTi5V1nPYnhAxBpaxIRHLAyF+SP1yuRZ6tzZ548uVvllYa/mjpTS
ZXweI/2flRGUqduQz8zHuPxaAYw7DJgv7MTsg2fsIPptUpwP7ceov7cUZwUB
M0wERfDfRePPzexmgrzWc+8jfLLeO6Z4rS0wrB6qswqcN26gsz1YKSwWWEdy
2++V7yd1ni+tzS6TU2UGa3Z2CEd6l2COjquCU1Q/Tr2wJcLwKLEHemv+AvXA
BYYVE14Hli4F9f13l0x+1adN4pSU5rtM8te9SJQowscSI3bI9Ychm+8KR0Qj
89zoWs5DgVXMIx05qDSh3vvjirAm3EqlK02YZmGNbMgS+YAgxiKIwrmoFNPw
Q61xUqp38w00LzXJn8ho1Jcul6MNrTobgvmlw1bAKtiVmNNg8+LXFCCQpiUF
EFZfcloygMbswwrVZL25BA9GVxxWALMfs4NZxs5CQLm/+BYw2KwnLTCb9OE2
wdlljYp0WCsdPFicHjN2SQcwY7T6uYOj4U+Es788Tq/L1fHnW4xscLPcw/Az
39f8yeyao7n6Aw+PYWXb1JdCYBRHdCXoP1Q3ug2NrqBaN67M6VIsHdJOThxI
sAl/Ahkgkk9QzRYS6DOoUTkc5VYPyTBiGrYwfg0KtqT2igHh6a7ZKdqHW7Qo
956RQ02SLXBSALuDje2crzN2UfkXHvRI78MSD7ec1ob6R1z7HVqbJ73a9yHk
/0qg1kVGgw9mSTd+dzokmllcV0v5jukD3WvezUyo0Gd08K6qvfERVQKuX2Iz
+wpQqd78fJRqSS+FYeeBdX/TBuTn1adLuDZe6gB1dJQrhRZw1Ije0iGh8yDV
NNVqHXLSSOuz1/oGCEC9kqvOo8kwIBufUMkIb1JzzQZ8ZPpwg/UzqutqECfu
T1rB0bs2XAbqxaWn/vt7lbyGbxczsofVp/m+XQqyEEWF6A0VhTT8AVXmzcb+
QvkZqHR2FmisQ/1XfUKo/tquVITuIhyTjimN0Y+XveGBE5MNDoQMJavi2eX+
bVFAi7SS7RBPltoyLM2vqc8CW940VlFP2tUzajwJX63S7/AY7qKSMRHgrqzd
dT8UVDhAREdNPOExhMEvU0cEQNCZiyyFgeMD63cj3O1JpzccfSTcpOIbENDC
Twfvck3aVXVeNvDF9eVSjsjlgG+lgTdM+n8oOm+u6RyXwqAn8uttCtN8br1+
Pt/n1gcqXOXwbeoT5+SgzjU9TgkzkXFKF2Gp1RYsNCrZP+yAhgTrXVVy7hn7
CoRFtHqaqxBp7izJ//VwvnR04lLGSWZBBuZW0m/J7FUdJvaf/95XBKghVNca
vUE+sRIEU5A7qY7KxeoWR+joE2ifc5U0jlTJiAp5mSLB/ZoE/VKCR3g8V1XJ
Pw43qYRPb4dGcC37y/T4cH823JX1X1e4myEp29BT91FN3UYp4HsiusbpTJ8b
/8icY75QYMAulTr/pHHVRPiCfYtPG4/KmxL5KpRl5yamitofSCEhvN8FxH5O
faPNq6wTz+A0+FOydCIHESPgUlumYwqkl6RiLMje3Er6KLI968SdVAnETHNc
me5zMEW4h2KV9l/8wLfKym9blfv/HBWG9CFLckeOxAZD/ihIo1+LSFt7qmCo
lz06/w3TUAmXpgisdlZ8K6jkP5dmRHHF1xXuoBQBaJaiLxj1a5QCvheiT0lv
9kZUBdZ5oTlWc9m8RY1uIkSF8MNZgx1Q2PDD00n401dMoVAkK+uwAxU0WPwm
ceStkbeZJMr4oT9PJqVGJ6DI7xWeprM1TQOnxsXSij20RG+7QwzWFq6mWCu/
jHa38rk/ppK90y6+NJhc3dNcTif2xvnyGrIe2e5ZQ+6hSuC8R9aQy6lkLDHx
peZpJyIFWbJdjMg4GXcRMCAx5Wpm3JDtuvKrdSUhoWiwrYTnQvNVsmzMzxC3
PTw4iaOh2E+KdmTcf16h2NviTxF9WRiNSNDYQ8FSCw7lWMFL+9q3LZEq0GsY
YsUAUx0mgkschy9RBBoHfSC4Y9skFN3zccTkx1X7UDPsUjzA+C2Nl3EJnHBm
Tylr/SOFtvjCj/T0y1KM2ikvWjtDMfoGY93goq8YmVcleVtGGU5Q/+uuFkdV
CazDsFrU5/1hqLbL/jEKYc0P82wYj7xaeYpJ/k73YMaXqPS1XXLjp6kiGrOL
9IcAnzFgFVeQcMmyZtGuYtnKnyF223lwvqTBCTAI/4YYpI8CrK4gC6PhFOR2
CpZecajACsYYUGAvMnbTY3XC6jJS8voHAcNmARssGWOrO2y8A41dReQeKblU
j+zIGjiKDVDyJd4IPPoyP2aY3q3bUrDIsd+f98Tq0IZsC8w0SR/zO7mKLTwN
EyoRzU+mVmPdas8qsXpXKagSuZIwN6MENwOelC7acII6W1dt2FhDlfiLVMS7
uPUdBRgZrEBRsC28M9BzDzGAEvKLvwdTZNGnML7KkSXWxubmJsidT5rg1E65
MQpoQyzesg2NaZbYsd3n09rLD+4H5tNPhyu5zjepR9Ry6q8r3EHBUusNjxv1
C8w5MoAvT3R1niFmCphFYa8i9JEMfmnlR72YQ/iwZomWXs7ksdUN6u3beNLZ
eA34uyoLfIi8aentnPR3piJ3kAylpgOVvuXIklBqNXv/ehbtgtqLPaY5PKmq
wqpLWk436a64oBL12WPbqrahv8Rc/ban0ZtU9jHj1BwgQwj5PGM1PEc7Y0UJ
+tQeS2Qb1Ycq/U6Q4i59uvrmNxQ0NMJYqlNr6YkF0ps9+Hp1b9QEldplnnT6
XtBHwoRWS8Q6tB4PHQbBNenjmdUp2bomt6OcQf2s+vZKU0a9dcUguBon4Ivk
bWXULy6MRjVGIOwEO7kwH9nB54bekmXI+Z4W31SVXORyR1hoQLemW+tKZGVS
zldZEfrCam9llby9xy+t9pgkmvAYV2h7OCOpRR2qr5cY8hppXm7RoyCHyq8G
1yR/3bpRjvpjpaUPb/+Sr+iIFFEZpPNUMgZJ3n+A/idneLFhG+M0Jrh+EQi7
rK9YR5Vf7ipu6XNsfu+S2VBlT/c+mkZMDD24YaXgZYp+j6hv6/kiWnlAntfx
RWiY077ry31TGQGGCVP5VodnR3TmexXQuiY871IQwETTx2QSdLnasDaEBmpD
aB8FQXkOxauo5DscBDH8drLU+LinyrjKvb6vG//IzXJ/Lp2bteNPVG4sEq9G
yZFMOeZ6XFpp1Ygflo1/T3QiCU5stsOvVrOwbi6U05QFeZZfSf8ksmsX66op
m2sZvxiJB6bmEr5FDJ76mMG3KgoLuhgzYAay2jxdZRdvxRNcM6QNNB30uOpo
YfJQWTo09fnUsj0R+PPGJ6xHn8hogM5vZDzYA/k4l4KmAGXGPDANxGcOG/+j
dRquFo7v/YzfEIGjeO7xRWEAb6CKKo9Dx7YaTCz+6T/PNWrub+zocauvGd6F
aeqzGiKaaBWHw8nVNdiRcbsrGvk7N5BmjQgtiktLcsbemt5xTmwzEHxrQLh3
5g6nmQs5/iMjCicBdrdMMk6+IerXKVrcZ4ybzmg6XS3IcDnIu7534YtVyrFa
/oZKx4GgrJblZHXaw8yLLiG1fJUjAm1FFUdwnRbrcFoB1dgLtfMu0ZXyJNp6
Q7J4nMvkga51NwQsTQjxLom0yzeRdv4swi6fRdoz6Fimh6d0+lyVahdrWum7
nQEnBncKIGOz8yeCoMeJVnPErzpu3HadX6mqYE3ABBc/g74UAZo8coQzzTH1
7QZuybuqG1rxA/9/e+iaaEYfPQ+onnefG9eb5I80OPtY4dmQBRHJf14qf7as
0XvwHSYZSYdge/ROjMvP+aKAaPdk0UTHecpBEGlkZFDUJ0zhCED2nQe2nCcP
Mop6QrRjfBIkGZoecfyDzypMVDh2YWSUYCQTX5/5gwcTSngdYfD7NUZa0dY/
dJnfeXRg7sJhgMA0PwoTOm5Wyg1KSWmwSFFebb9GFcNhZlZlxzsYr4ywHs5+
wrTW3tYk7lh3ZPaw1aK16+NXR8dT8pVYkfLiHGtxPsnVFIe5Gh8QrKTQhvV6
5Dm/zwZOhQtrYj7PBceIC9dFQWGwWVWq4CmC3kqOUCvWrkMm2RXIA8VnqSOg
8DB+5EidT2YAylbDeqqqf3Arau0QAxDmcnQuAy+mYtzC8hMs8995HHCOZWrn
f8LswdleP1M4g+rwOKkbgTqEld158A+5c+m5ODZ57JgkWcLpjjAVUP95V6SB
DiynOuP3IyqUqWErQx/3Dr2mewmyc2DQJK7hnwpBLOucKvkYMiwMyZxK6kMf
eUvZfOyfOURhgBmEPrYNTrTz+MGapj2UjByMYjMd6DBoaLWIyrGgLzJ5q1E/
Jn0dOrEOBuQ24Lwptj6rsrTgab6F2JZdTUgbhsyYmrpSlOhKKZ2nPQp8AB/O
wIGih+sUGh7BnRcLtLymIcEYzxjtOqAr5ASQ/5jEdsSmvtlpXwYGoUcDdCVP
tJrGn10p0Kr4CqcFVCmdzmPzD67NWeEmwTZcxHhca+xsZilHwhZwwq58zONw
oggcy/sJULbHjGjVsSM3hZMDbzRWPlEO7vy1PWgUZrorP2s4ugxi2oDdRxB7
DF5f52oOMnrf8OSVGDE8fBom+b4ACSxtrBLAJ7onA8mqYncuQqczsNwczmmz
jBEHQS0INcogNKIR6saZQqzhVfKluXkQA/47uO5xnDfWv6f4bKAPhARBIxDb
e5iOmEgtVzwbz5cQMqz32hzqSUv3OD6pvmH0Zo3ijty+if6yZNW6EcQY8ArZ
nTXF7rhyajHNr4E+MSLOa667RNriXfkYZ1bXSFRn5AK0XSn/Gkb9LMX71QVT
evNDtgT9n09p1WHk6F0ceamnyXDDsb0CJ53222IrJx+6G6f7r70prciyM3K/
2zZwvUrGIEJ7Jdhve7j69oLQlkNC5SZ7GPgDxsmbFmS1m/Zoo37lBHmtMFbL
hJNT9L/dtqjpL+eKP8uV8HmwOqAap+3RKMceDvz/a+r7M/wpgw8ciQiB3Ywf
tL16GOIM9mRUcpCFaLpJ3gGK4R4L43wWCgI59F5gOuuFj4PVAV0UwE3JkWac
cA10cDsVeQAop37S4E8PJ2csrGTwOApXkmL9py3Y9H8+2hnGg2hsaGQ7exsB
Y/TtcHAMnGPs2TM4kwj2BbQQLXnzpPHdRv34coAMFqYNx57kIF3JwRb015rk
GATFAkPsUC6NeHNMNOcp0OHnW15At0IRyYkgp+MvNp21REh3xilGHAFYzTyf
Hk7uSRDSlXQXBDmQHjEDMD45SBjzGecp4ZMIL3E4mG4dPoPREJWL+MHEqRyj
325BA6PFUSGggWkyePMR/pGsNtLudJ6xpxlJMbN8+kc/uZhGfJlwcnkuqoPm
P8PPyg52ChSCyUaH6/LcBqMXRnroCj4UK9aHoigGIGDoH/ycb+S6r6K532Fh
gDfw45ysp31QI7QaZs/yop2JUC92ikdpjadUlT+Xlphdm6lvdzqU441V8mWu
pg7gpoeTZ4eTcxhgj92m08fRZ2AYY/0a1iD8VSSL69ta0b1a/ACsV4eTT6Tk
QaAJlQvLA9ugME3GVHVbY62yFEz02kYBlvkqfRHC4kyLMy3OtDjT4kwTkMmO
bnS0ObS8uiIpkoCWhsv8+i6VsX0K0wK7DWEeT3f1UagXpkaPcrNUZI9CVUay
GYOOkWebUe4dP88UrYx9o7jrCWYJFv2XcfXFy3ASHLObSJHXFaoyukvDx9aQ
hJV8zhSo7Fn6QqfIYCzHHB/R0XQiMofcAiZxXyCdfbAw4jC0Y7CGyUpWExst
a3CRF7kINfXabCi+YyGXeDS6eJA5cBmnUZDMQDLtAWrMNqnt1w1cciQhDhfS
XzYNk8CbGDrxvGPiu47hH98JeLVuhhexYOO4RRRe2ryPiYa/fuezyj3r/q6o
7hSQc7FvVxSQ21MfURSQtIcUBbZWFNjIU+A3nHSJL94aMskwWxy6gbmAXqCB
s2GmUIT5Osn4BfUzXRMjsH31nhRkwfxTliiEr097QsYncxriricJFXZfRAjU
OEtldSebsY0NbSQTM8w6+EydTVWRHXyjclcShO1E3wCmhPqMWk2aNJwLjTRD
CdIYyygJRf2eSe5rEIYCUR8JGh+tkoE0z/0gMhJo+xlfCVSOSM3TniLQdnLg
qbsWcmFQpJGmCPkHuMe8x6gf4wkqbMHPsKNKNIer+bNqUR/wuavDPZKZMUkI
q32JiTvbYbxIEGN7RQzMhQ/lxzTpHa2lCcSoXMt1PKaa017oWZ4SIkqaEo9y
2tV9pMTD5SmBGa0ZWeDATmMtG18eVFUfr6r2O1CitwawluNub+oj1k9lYL1V
Nta0HMH8x+h3Pj8monf8YVUNTAbuDJL8c9Xinirrhp4YQiNNjCc47Yr6iRFL
GpSP8lxtp6Db1wE9KBc3yV59jAziq73AIRG/UpXewZPhdE56RpFhfZX1SE+G
TwbI8C9Oe38fyYDnVE+Gg1TyvT5Zb6IY85XIvR0YO2e43LRwKod8gVja+XWg
8YPHVF8Ew873+dOTJrFVNYYRJ6GuagTRt8UeUDuBBjWBMNeA/QCn46jhg2qp
0hirm+g/MFDxf9tXRtxFTsYKu8gMcMPcYgUuRt2d+9eVqoxMgGYYb6ljNzGL
pY5BQ3QwpgNYwHgbk4hrfFrXyNQUsxa1uhWX+uUKRiCGQvbdQhxceAsb6PON
iipnVYUZi7tHiMvCDT5Z8lnTLJLLxz5gHFEiVHFLquxTRnUr7mriXv+hw7E3
Kx6hZ1h1vs7DPw2n6fyI08CQLyh80J2xzIzejXEThzpKp4I2Qn9bQ8GJmCbM
Bp+j+i0+GFOPlyx2ESI6zSg22LLDYDbge4zrBgyI8MdeBbkY5GlHOjp/99ec
LEeMlqUKn1AKALAypa/UA8YrCOGYg2jSLZnxvB7zZlnoeJXkH4gceSM5C+Fp
X3m8uyKvnAjXI0cBIya3FKC0nk2Ti6RvUhQPgBHJ7tNLXUM5c3R77jBZVD/m
x0R0sK5l8z87PpjGYbY6k+h1Fkg6+hgrmxAnDDDDATi5/2NSA4lAbxQVWgDU
+4zXOGwGuYPyEhDZJQNn49CZMNng0KZDpO3nGsxxvTAs0HKn8WNG6N3gBQRS
kkgh89RuhSLnwrjh0FsWPxg2H5I6WLpmcr7LXIPd3FT0WsT8cIszLcxMdhMt
udJgt8DohR6nHsCBHZgRYzYIMd7WsAJp5Xw7t8dy9uR+inGDUYouhvncclVg
sXXG0Du412sfo49/LF/dWT2WywP/+B5ZkPftvB7LndYjC7rX2cGCwR6rO7vH
cnnfOKKBzuixutbdqMsjHGJ15MA1GQtQxbOpfDCYt5R8ccF8NuiabgrGV5r3
Dtbcxsk2H9CHQfkf+svmw//PEQrVjRu3C2+bhFlLu/A+uuDvuts9yeYTXzE8
JWKo1tZGUZiPtflqk6ui+WzAf29yVbQNlt3a5Kpku13lqm5esjz3JFd108DG
ANrzJc0QkmXejn0VIP3VKo3CB63pOITZiszlMGfDtgzxZ7gA8KhEXsuOxKEW
8AU0+9Sc5cLQrZyO6SKCiseMncoKynP6ibKFYVBC6+cbu7wCH/zjnHZPySrL
5GUFJ9t0KTwq7lNbZUh4jM1buzSWyWsVXyVpLNOcFf76pbE8DF2lsYyElGme
1WLP0tgvsiRUZPx1/nyt0RsIBndXpeSYBIlruMploz2GX+Rkf1l4pHNmZbWn
VruQZzrqplm8eImWrFpwa8Fwm+7oahiEMS/+teX6gim3vwwnyRYOzg3qigm0
m0vuDw1Cwlh3SyXgt3qxZhEs0b6dCfcsgiVasrqgZhEs335BEewPt7P1Yd0t
lcjKyvAeTx9Zq5nuwGt9j5NwuA74I8sBM4wj1pDc9IblVzkhOyNvnM7Lhrv4
qbH/TW/01FXU0Np7bWviyv2Ob60lR9Xt1CdEuWkYIQjBIb8Fr4cdzFlvyaiy
vtYTAhjVRebBdN5wlR1A2UCECpLXa8M8Ey4udL02xENPj/JWsdWAqEUJUVMb
dGtHubikFWyoV3h4y6zVcpEESvyf50RT4gAQa7oL//8XjmSDqEQ2OkpEZme2
OJ2Np8ByCSgW7IY9H3QFFRvirn0UJz2oMJOBba8+YDaC1UR4prHpE/+XC0zl
sND6UQzIVAVCttLZAlV1QGJVVg9i1FNrPHEtLkM9tcI9trwA9dSanftM7iY9
pr4WszVSryTsCYyEIor35i94ZjmAqGJNdIloooVoHjlkYNyByRTIEyXy8HRT
zno91AMZ1VK/7Z60nQBpmIX7M+hbmMtI7P3qdaHEPMWMBUE0dPWJ9YkOovlr
jY8Ln5WqrxqWQTHqEaWmztMJYrJ5NpZ6l5tSrfH0sKDIlKqaXQK9S0up1njm
FRCUoZCgmBqazNE35asu1XJCxTTeYryoIFqLts/whotjOR2zYcQLvZf/vsUD
1hLfhJzHFcgTJfJYPeOOmPsx482419KEpe0UiTfFVvmPcrlPGG8PfiS7vl7b
bMqG5H9zW4i/QSAfh1K+PFVVr63lqJkesWnqPJ0gJpu3aqaq7JRqkoMyiotN
qdqtAqgiMT0010VYGi+vqbUcVVO+6lItJ1RNSx/OiwcxchAbClJNHd4vIfNf
8IC15KLv/bLzRIk8rGoGmKwyRjHutTTBI4cc1EFI8ImwEKZJgXp6bYoNKDg/
II8Y+7Y1zhmMfz6loNix1laDwtMjAZs6TyeIyeatpqkqOqWaZE1TXGpK1c6u
zPICU6oVNp/CsjIUkpU6KJejaMpXXarlpE0jVuNPmd6w3VhKWpg6Imo8ZpzF
13W/B6wl27Nek50nSuThKfiOnIYz0qY6cke1NME2jQS2Y8iAex7zcawbg8Mw
VXeqEy3u+zJvVXvrWuJAw7Nlze2F5KfH+ps6j/4eap6tmorSU6pJjnMsLjil
amerpoLMlGqOu39AXAbT4pJurvfWCgpLl6pLtZy0arBt579MXbnkApuOZnj0
41Eu/iejrdYhVC4HEG/MRdNZxWOdzstz709wEsVPD/StNSb2zznpEJ91cC6n
fTmjyhpaZ71wACfd5SlLJ3GKYM3uT+s21rqFryuq50+mQ/BqoPxgOm+4yg4g
2U7qXRh7bfh0Si4hh702xJZ27yLYa8Ms+wHpG0pLX6jxiq3b7fkVpK9gw73C
x8rQkt65At+hEIc0IKQNByaAYIgmltMLt3bZhrbhJHjDm0zLdFYBIp3XKsMh
rBEjYBlBxJvnV1GpOZYI2V63rkJWrsN9PKPKGlrneaDsbp9vbIdjAGQZCOPi
pP4AYBVipI8O4SnM4CYm+ave+mA6b7jKDiDfZYHsXSB7bdgqxDKy2GtLrBF7
F8NeG+bZZVgCh9IS2AfMrVKsIIEFG+4VvoRSdLeb/8rYm1bs8Dh1L07Gpl6Z
T9zAaRBb2TcOjfstTr/ak7lIVtFUk7gJaoau4TRTJRQWwX3L9ql5llCZqmvj
AEDITvYvuuRi1ZanAJ3uIFOFkz0USJatIFf2EQorsHR+EGZgIIi6aSkhs/0C
oUy9HHdas+CWgYDdZHUKbg/N1y24ZfJyRGpBwe2XJJxgm6tbcPuVN7m7Car4
Af6Mw6cw6N9o/JHzH1TVYxlZAjHg8cGGsKf4bwRYr0YIl8jLqlefNmNa9B45
n8GvvU3e4gRvucRK3s84P8Z/Yz1up37izTCI7sCDiEYcy/wr/htTihX7CQOb
yBiW5cB8iGrcp+bKoMFbnWoXzTJ5WbtVFs3ybdYvmj3AUEg0+8V/tkeqiGa/
yMPKk3e0Y2aEcY7OG1W3FeJAlyFPoQjm/ne5KskHHS2OLokI6pqPFSZus/gP
P6ZF78YFxv+kHtm521Nb3AMQTfDbVD5Iwl6Sr24cuV0sjj+dyvcNo85y7RNt
ZdWRxu1GzW0UhZl3ttcmX0XzMe0ryVfRtjiYsjb5KtluV/mqm6epMIhS8lU3
DViNfdUiig0ACB9G9KC/Yi2aziXoqomhQNp5BfPx6SfQs7OMdQrMNKx3i7Z1
uk2Dox6uIhp/BguWZY5jhxoOXGuWaTfUxgnFyRYq/qGC+U4vSbZQHWMBshVF
89SCZAuVDaVxz1qQ+1qEz3S6jRJG5XUhXkcm0y7Byx43Zk9ptxpynB+z4rhL
m8ePWXleZ9oUvJcY76xgpUDayhXyVSn7v9zGCN72AJlo1Fg5oA/TJ4qDC4sa
dZddWLAM+zT3s8ck6p7pfivaNBTaLYqiJaZNm2ZWpjflw//or8k2bWT55d29
a/ZU0oExw2vIqZrtPWUkReOStrJvbTSV1llW1zze8bXOmkcTXxdqzScE8k33
+RyPVrL8wN/U4/DXlCI8qohHZokqVKu7bHmZLCVrr7D/LO5Oi7vT4u60uDst
7k4mzaPF3WlR6k6jAuoA3sv7ehy/1s3ijYnGNJ6v8O2NJSBM0eMVNZed4cu6
3/SFVF8PfcDpqcw+kIJv5UAa4aElofNrGPpQzVlyl1s2sw2CauvyteTIrJvP
DOBdVGYP9/lce1dUSCvK60xYiDIf9mi53xXu65WF6OF+oSHx/29SjBUkxVgA
xZ7S6iEFobJJRdzhrHfaJdTeAvf6TDbUJWo5fjFICxmkUffX8r3C9QF6h88u
n5zzjTfEIPIKMV/YzfNGY2/JQrHButGVgcD2q57RPccWBCq55x/bBfFI9kRh
O0Hh8565LETlS5KPVwmxiI6NYbRI1aybRtWl9Gx6lzkrNZL77CiG2C6+TStU
3ti4X7mqE3vmsKgLDt2tSHuyJk+8qJKszHmKiLKAEL3OUyxUfChdHL89FLXW
8OVdDCYOBMZqVWPRI9RZFtKCR60183K30rnP4r9xRJ3g/gSnbafSJogeq7C9
f/cZq7m04SI04i1skxgVClZs0btxJJcpcjwUa5Yip03hBH+MAdsqKslBrvss
VMrNefD82aUpF3EyfbLBao3buEzXU5mYbF3z2RXg+A3GB6ltIFkH8dcyAczI
V9Xcbc+jLh8CdiZ6zVfPnjU6/2Ozq1NqwSOXzQa1ilHqJN/AdvyYpu0k6xpP
TBTJPFiGKdU1nxW6JrYd4r63eYpit5jiI6CdP8fz9jn55gX7nnIrPSedMXcy
EG8Xf+yK1Rc8edXqRMxeCRkLIYWYQwFaUk80DTQ09qR9xhMNf9/ms6oudJpB
8jyCZsF8TEY5Z0Kez3EVixAZG5qMTi4HA7S0k5w4TcsWQGgbeQKIg+PhBGkP
5uTMQwKaBfMxadflv1E9gr0QZLp77aQFVmZ5vCPgOzJ+5yV7T8b/lhy75sKj
o7H9zrhz2ugBp9/hqf/mUtSPNPXbBlT7HSL9JWHST7Wkx58uKwHxkCZ9xv7R
jh2fzbzcrXRuRGPhKKVjPE+i9/H3OxU/izEiAv1NPOfCsYOFGvN+cLHQAv8V
jpjX4T2y4L7Ldx5c0ObB0PjcuecMjLcZMQhuDCa5sUlVbphIRjXbWwLModDq
AWIC9YIF/JjJvmcIx0yc1VseTLCs4H60Zl7uVjr3xqZzbiTm6cO9smzezXP3
CLAMVHMsO3YB6Yk2y5pgWXPB6ede3ALLGmBZM8myFcuxjBoSlkUBlsUBlp2b
yzLqUKx68F/3Ncrqbw/Y//NkrNCOFjvfnlooL2cXK/AI4yYsyCq3d95UEwd5
HF3w4bnvBLeg8sySeE8F4qQM3wBCNMDQGFkaYGi0YP82Q8HVGFxtOK7+07Z/
jOkw9KI3ajjjCWA8D0ZakZopxNVYuikefB/xWUVEpPe6nusE4P6EABSKyh8s
kZfnl6dwOiwydFic9SSmP2bv25t6RSBBOjKkJwP1IZBoCETZAvSIIQcR5CCG
HDScHAxADmInB7+zQMgNZFYOfk1pu9clB3FADqIAMqcVl4OlAnIQZWnxb9rq
2WnVNaR5qGA+9kPgnzONdWaJgwrK3N3Y3S/eU1BhC6g2QZYmEF8nyfsIvG+C
93GA9z+znMXegOf4mWX4YMnipqpmNUAlU5W6fmhcpn0BISU/nByXKQe3Wkzd
z7P/n2PLJOKFpwbSePYJZuOGYcQ0A8qhPjHrTJIEMCumgQx4ElIRmDXgmNUC
s6IAs+ycKL6R0cXVyPD/Ta7GLB5VOvvnQACHE7N4NxTupC2bH7gAoTaUbWRc
bdMY8kJd+Ou2TFH3f1nuYFZtJ6QkWITJKrncMTSeAiF5CCh7TFXI8zR0pPG/
qcZ7cjHO4Btp2OEkO0et1JiwL8TytBniKdKIraHx9t2e8q6rkY3FvE2MpE3H
RELe0PTKfVV6ON1DO5l4X3+ZCKvNTsc8E6c7JhoyisBEeboy83YLVMAZNnyb
Sf5gl+C8WnHLYHKMc+aGPD8XME9NczyDn+TbGpjzphOubwN75ZzDNMIDlhjo
qA3dUfEQFY4JMHUkoFN5SQlIAmni5mTL2XEmAuVY2uZL9PNM3fvV/nL2dsdZ
klACagUSWNc9B8DRQeAxkMPRT3t2pJx20bpG/excrbmVsVNA4T66NOjX8tXk
Kt2QO6PNVzuHjaWvJvpryC46Iou1mf01xd8RR5dGgNOlbKmvKE43kBJaQyzL
3684AAijATS7nONvbs+NNJ8tiBYr2u0Ej6nMwUnH18853y9j3S+BH0cmwEXl
uDVs09pAW6aMdQ6MbFcCPWSxHMvWvSHrqJNvX1Z860MP/RYBnuyhS3vdG2kO
GtVNA+z7LFUYy7kn0KjAQ+S6Eucaac55YzVk8Bycy8AUiwYdP2UQb6MkOdoy
vH8Ho5mBxVTsl/rLwO8nGTjgGDgQYGArl4HXWXDAHEwpsCU3uCRWiqOMSnpY
jH33c/Yr4XUgVz7fO2btFMMz0StJwmTY8W9J/zXdAXtXnF/sL/8ec6BY4RkX
P/m0LCb6Xjjgxkda+LUOLLjuXzT6+rdIPCB718q9pAGLR5hIizaWX45zIzYN
vczxy15SSZIY4pejUSmFeVd/+fUE4RHg15K5/DI0j9d9jiCzcQ3xuPErWoCO
/ZESWwJv1KyaWNdIdTyHnCy16I43lGWspIxR4taQ55zg6SKJAxo1MSSG5pRx
lkb9Qn85/LssDi/Rm1q9iGptwuP3AqMw31h3I2bH7KG6TKPRqIvRSccBHkL1
TYRi9w46K8C+ygr1jv6y75ks9k0NsQ+4tAIKlXfow5iRQ2+EUxgbzxQmlbJL
A1gsuOuCHZuqS5713Yu8tO/p2OQ74mTHpiHHJnuQYqYeTbOpmB69vb9s+kcW
m6Z072WeTbT0ZBpw2+CAgm2NXUol1qgpfFHWNNKsoTm97Umx7knjj1y22uuT
3LFoOBr67jTk9Z3jxNoMWze9WMrS/Fx/Ofaf7hwbcJO8jPHu4hp4YlMD2u2x
K8hbYuz6h4ORyKXiKhzhZLsJD2BeF/hBjHJsGGBWZS342f4yiyqc5DhG0wJe
kgGjdMdqBcZtKn5+eWY1Q8xCJ+I+RLEHile7EIT436DTcFOy2EK9aTP/tT5d
d+sEMKMZYkakmZGj4aoNMANITmsxDifYKYsDRG0/N96K4aigsUhZJGjy6Qmg
+4ije0oljITUVqAbnF0XB9oGd7snuPzWYxhrZgDK7Qsy5FXZDOm6XJNpWt88
AQxZsjtDTCTGGSHUyGLN2MSyZtuCrHm1BaGojio2YNzUwZpxQXsA7zr8udTQ
so4/pKhS3aSp5joJOaOy76uBIZHSVmkOvJIpq7V60/FiaoDuTceVnfO54hAp
NXLc2MGVURPYYlydK9MDXEkNH/msOTHJmlH3V1kQo0CHGQizizfqtinZCjHJ
6S3PJLbd6nUYfKKDSe5Xm1ab6QFy7pPyTDrOM8ktO2bu+MoykimYAxMX+haH
WbMls0FLeSNgJEtQCXt6UuzaM8Cuopouk13XTQC7qEnfnYazhp44a+g51nOq
p5kMoMNuCMskM6i7E540v8ju9V0pNdtUNnNS86W6zd6BfF341V0HXjsB/For
KUBqWSCfaUlX3FHlmdZMg4hPWKQaKMa3TZniHf3MK0MfpEH/ewsDWdDSLjZO
fXwCeLSe51Fq6SbAoyhXDx5WE6PAHfqcYdFtZOmf7FUOlNBMNGWLUo79CnIs
Z9Dq5NhVE8CxjUpzLNSrDinPrA4QB/y3lu5SaYbx0ZrJiYPvT0t4jqVnDwn/
20GeY6Ut9Mxx66MTwDG67ZonT4k59mAW2wZyO9qBdfHOxGCbrNzj/xk24Xqe
gWnDI0HSkDHfCHSqQwL5SrKyMwL9wxPAyi09QMnOxxaj+L0zR7P9+8M7PBm8
WyfAO6XAHP/8sOZNRTlKtdZh7coJ4NM2BfmUP6LJqF6FWZEa7URJpln0Mkt6
xJUX1YoO0KPLsSjLx5dk0eUTwKLRAIuGvEKMtULM5dKb6uKSGUp3qeBotkaS
Wz2qQIkLrjCadfLt0gng2w5JgDzfUpPmEDJUwd718QuTMc0v+jvNr9ml+RU7
BfjewNceuJSk4MUTwCXaKJxpc6S04EAWq8RVUIVV1pcxqGMEqZul2LRqb1xK
2Yh8W0NRbVjMRrywg19j/Nizr2rzF+6WxbSW14sNrRcdx6j4HvVxK60I09ya
xfwIGBVl+Obyvb8c37q2q9ZCJ4BvQvhOldjU/UxzjMqJ47QKwxrqW5pLq9TM
pTM8l3K14dKBdjNtjQ91cMn9atOGbyCe53esOMiiXepikWkloqTTg5QcNdkz
q2i4+kDgaw6DihmD500Ag8SG6zAGTUN6EE45SOq7nerjTULfpXkT2hnZhTdJ
JUa8mcvQBlRc7wbfuRPAm32TAI2nPRdgTNLP/uoaGEMBdgOs1xCUojiyQkGG
hOZQkWOIhMpUsBU6GfKBCWCIDdXO0mbWtgNT/Kk429XFEDuHpV6S4onEhVfj
icSa1cqTsyeAJ+Kc7OgkzA4BijJLGIhRex0pUHWFEuAgKKgLT5YN8CQUiZjJ
k5TP/LL8fOnhpRh3zpwA7ryDKJzdYwQqz6LQMc9legy406IcjRBn8kykLNbk
dogr+8GasQlgzeFJgNToQv8N+Hk3q4811HHSrJmWxRqancrXAKETDPkoQ9lt
uC/FkNMmgCFHeoBSplgAoE37zIsls3hRXIMluPLxfnDl1AngyrsU4O2hnSwv
xRUXWJBYIqzClUFeTUhxRGzcbgwRxnVjyHXZDEnkK8WQ900AQ6z/NnYMgduz
zZTMniIL7X3giRxL0i0ksShPbuwHT+wRnjyZoNNfpzJI+P+e/WSVPUS0ofGh
uX6qDyUNANnt0Qd+8blaPfWhgYDT81PZfE0otWXK8MuGHtrNwybGgQ3YE4fj
PLGnxG6ramCTI7Yc48BNDOS01fe1npejpi9xlScEGMpMNTQpzTcgVu8Pa9Ve
5wRrByqox1v7wdr32Lrt0XMRuiGGRbqteogyRH8w9rhv+u3m+TkuJKs3eplv
jtdGLs0IeR0JDqCuBvtq/WPqYICpPfRXl4/Hpa5GSCmm2ihUWVwDKA8bPbU0
rb8ae3bM9cYGKmGT/E+N3anMqjc6xajfLp7x7lebUpao80AUqihnUtD5XVnd
hFQ311sBrlfpyp/vB9eP1Vxv3ma8QwGcxW5HkIEvvsCW02uMP5wePR4B9rv2
k8+n5qDNPqrQFMN37NAlYTWxWLZsByJmi3bsBOvu6geLreVv9qJ3YzvF4q8Z
HnHtrtkYZ2D9H3/7br/5KudHdvbfWOPqorXz+/Fy/WMyn6cR6scJYvPEfryb
9v5SBSaHYubUpJuZHH+Ek59lhlmDMZYbI/CgL/dVP48x2TrVWpzYeWNKOtaE
LH3gdJTN6Z409r3VOd3ZnY/QnI5+xMnkl7DzuHimYvO+/Wbzmdm0SERaRUkc
C7jplqiN0a00o1GJGzhCiwxFLbH7+sHhwxIc/iMnE985OF2uYqLYvb6yV057
DlhZCULQSNilHyd9TEUPru3O3kiz14YAhUKnQo7XEE/n9YOnhwR5+k5FiL9x
GuWcZYla+oaypfspC+dkEzCh0eWcoECAX6c67+HAjiLqHA2FOnbRQfp+LwTJ
MImUEIRWyDItsbcnhECOV/uQZ2o823jVjWnzTJu15qvbGomyhm+g4Kl74kB5
1tr9kacPeBq7jhaSJ3uIX2bwTdb4wfiPmpoVTM54kRCXECr2iopgoFRIrLIM
fNe2WjoW2+8znPxbphzbfh/mZMzdMLLa0K6qt96NFL31zp6bg9TQefV9FTM+
Lijh6Nufjy8TGyNDVSVHLCbDqKm66h6SKp42JsS4qBXycCBfUanKHLHsRhOZ
Nr5VIf1Jw0dgWUVPZ7ciblaOU74Bqay56r8isBm6IhDj3sBzVGSWUT92p/ZH
sGxAVmMsJFip+JLMMfAFzmcqK6kGnQXH4iRDoAsT6CZC3w/kqyxC7AG2ItSE
iShXyuH5sbEGEDtRoCmgYX5ArLZj0dNGFJURV10tdykOpXPjlz6snzVnn4TH
BkV2CA8xhSzLnNj7hAQ9xxwxNRhQSoKg+ooKz48C+SoLj13oY89kA9H9jxsv
PH+nVPrW/KhKx/OEsTEeDH7/LpYcSWfFL/O2gH5dVkEVftDCnhanFZIU92qI
rCYSMb5baNTUID8nnTGX5OeaC48G0yXYPiA/Cd/ATwL5QvIjTr5C8mMXHnmR
Kl6GBQDni0N2rOg0RHRwMCH2rNFcjCd2gZsE6r9Wk8e0rBsJaITNvF6zJ0mh
6UZoCi+3huXIyt84i6lBVhDUhvux9rcMthOzZshKw+ef90NEeKpjJSUCBFsJ
VtRjB7alD02jfqLDzMTdJJp1sUG/riryYmI6FAqNxv4IlZR8/NkTpxb5eOup
nxX5sLZw2Iqfb5sIxTiWEY6ktW+tltqvNWXFE7zvoK8MPd/W3dnvZzqWBk8X
cMz9Q/+Yu0SYuQTmr7jZbu44DiboPCMi1PNfn2BubRer8jVV6dsQil4n3Ttf
TaKj4v9rZHE1NAv5Tf9YOzWHtdJsQdYWU+qvs+Dz8SzwpcMao/Bmm6s/l7l2
vUChqhBk3c+cJQR41i4gBE7rPVmfENBONSUEU3KE4PcVhKCZJQS7JYTgDE6+
VwlBHdfDDqZzF7mKYSLkQPsh8ayfKwdexf+ifyIwOUcE/hgQgdCRB6X0wC7Z
ImDXhMpcMlssL/u3xjmty8UOfRWEC2zdnXMtOkrJG3AjAUXwGJPZ1C8F1qUS
loJnuNmAFPSuCHbqKgX4pw83zZa6+iFeKKIgey/0hG8kqRB+1D9RGM4RBZln
dhOFlHvDK4TMRaHt7f9D8rCGTavtxll2YXe9TaKq1d+d+TbiRlNYDvbWe3Ts
XeuxVgV4vts/ERjKEYF/VBCBTG2wXTb3X2bTCt5EG758YnAhcJIOR/b6fHKy
/367f8wbzGHev20TXb01KZdTPvNelc28PRYC4bfPJfw3+kd4lsDgysF/udkM
Y9pZU4rwrv83A6YAEWCbRYvwrwnAPkUpfa28+K7TvvChGeYDeaReDPAhpL1K
dYCtFi0+6MOGAlfDBJjxxf4xo5HDDDvyFuSIXF5WiCObF+LIuOA7gHeZTS9F
2JJ2/NidcLHuHnimZjFFthWYeqIaEpwBPBKG0xEaY1dUKrCllcWWTQuxZdT0
uresF7bY29fccLGEZ0es2YHnFs+ROruJY0bowhACXd1GXB8zNkowA1GsWGD/
aIoZ7le31krzwcYkdHSPJXP4cUP/+GHnCB1GlD8JZ6QgS2STS4faypwJ2f3E
lfc4l+UBoKaAtdDIsVQOF67qHxfs2BC2qAiPqQW5sHJpLqy98LhweBYX7FXQ
YS5cWhsXmmkuoBLqEwHPH+GhwuG694WQtzPfNWAvVJQrUbGR8Up+zBC9kz6b
nRcCy95lid/JsuUcy+yN3shS9RIxFVqWZhWROnSNDgEv2/pL9pZxN4xksmh2
gkWy94U+DePdy4Y1fZtgLzyhfe52YAfpCfYVgQV5UohNNNpUvSUpb1TPGtAl
WEFzolkLJ2ZpTrRwCMevFTfg94RflAJTGw9R5Q9opvTSeaoy6jSHo4l158Ez
c4EzjF1dx9fGsEgzLNv8kslgt35DgZAh/ZY5T1lFc6sBfxUiNXAOA3bXkif2
DQuBI3McR+ymHQC+zARyInOkkf6QwQmnAn00TFFOrKQ5EX2BkykOYe+FwIFL
HQcixwG25BN9vhcOUHh7Fw6E9kgQvDM9B2S8D2quohzw3iw7rZVzSTD/lPjg
dRcSE65zTEhd11Y3mTtVjhx60SHoocPy8/VO5lCxdILgyxs/TIwuJIKrnlgH
rRPmUXL69rIAfUNiPMs4GXATh1CwN1U6TRO0iZWIfzHCCDjB5ArrHK2tqUoX
0Yjfwhh26Rvvs/kd5yWfQC87/8IMsDeZKIOI2ly3N9qPO9pnSrSNZRAlfrnJ
MUPL+f7qpPXvOe8mddGagQGdnb6mBtf3hM7V1at6QmcdDOiFfDhBY3im5HCS
DhqPmjKOvEWKxu5q7E4aO7IpL1p3YRaF3qFIMoW5oQndxJrmX4x3mGIXBlRI
kwCINjDqt7C1Sb+o/5o3HPPRJDCbeOqHJNzZg7M99UMSnlxWizTho7u5LTqL
bWEMirwTLbBbJjrSqF/cX+J3wivHtXYT/dU98Z3oh9SLXZsTewSaRTawbrVw
SR/YcBLdZtSvC+ld2Qbey9ZFf7myrAT9U/cxuVXx/yRIv4KCeYOFRHpZqDUd
2zmidY36TbjUy/nROVQnyq/pqe6slxTV/6Wp3kD4gMSlQdnQQLvXQiD9RKjy
TmBe2Z2ulEMs9xy6PmurZa/KvcZLsxxraVoU4h79StP1f3XYzL6hrRCti+5V
eEZTPULQ3nxpb6H5gOmbXaprRdyePH+aMHJvn0Xu0GTe09zfhZ2yUp62Oe0l
hjH0BDT0mLEnubYuodYu1HReaKLNy6SbGjUK8omUm2hgWv2k/45Z9E+p7HUC
pPdaxW6K6WlFsEZSxmgLpytgrxMGyYGJpubO3alJOdZNUjMU0G53tpi3WqCx
2ov9/4hIwILagcbu6aAdturs4Yklu11ipv0ncgQjaN1XhbGrJ7Gb1rQCJJYJ
fk6guN05Ilf9vMMorRxbyYGXFYfQEAzqSOCJJTOPgTeZiVLKr/U0dmIcorHf
l5EaA1Pq4VFbNw9/mK1dK00NWkJjwHG2qzocbsyUubuuLLV1fFea2jgHAI6F
Zt+p/foAtUMT9Y0ctX3wbmfo+w81raceYfzggi0yODQLqhw9F1MZYIQzRGQ2
icXPSQudBT2dfluU3Hvlk9sJ9yYBcnuRfliTOf4FVy6H0/IOvKMU9TczvZ16
uOgT9I2WUBReoYPCguvAL2dIwoHQRFpedOcJ94qKhugBvF9BNDWdPPi/SVdW
lyKomSPdZpb+iQAb0g1eZFPhs19PUHhtbhCDXeQp/FVOfvf/LoXfmqRw/uRj
8wCZU+KbIvO9CTLPMl6Ql/dklm1W+//vknn/LDKn5hhbM4D/r70vgbekqO4u
Xnff+7aZNyuMwzYwoIIIqBFFjT5N0ET0c4sEoogIYgSMnysYBR6KIiiColEE
FTGCRnCJUVwzcUniFr+PxMQoYdFEjRqXKFmQ6OT9T53Tdbq7qru6b983d2Du
73fvvKmu7q7zP6fOqTp16lRsFPhHC/hiiPwDfiVI5bwGpyrYD7rTQiwn8TUZ
NbfzqqQrgiCzM9cqo9lXKjSv5udh8oUxAzKVYHSOcSrPvD6rUY6daG+m36x8
zDmwWH7uMhImARZ5/eHEceMkx43aOcpizg0XX08DabKP79XIJxhWSBYmcROI
S5T+x5AjpO0AaU2ssK805MVGN27aiMX9FId77Uj6N3LcS6p8TagXvMu+xbqV
6KARjJppDSSzuMOxitgwmpHHThV3flF/dj3kuag/0lYTUV+bi3oJ6Mvts9nt
gegduDwQh4otMehYWOigqOpYt8fOD/LpkSCTb6TtHgUbHR/tu9v50dSnCtah
+bgQmnV7DfjccJlkGpvKl8LaV9Nv8iqN8F3HJj4vEvUn2mpV1DfWoH5uAfWz
jbIwC/htFXiz82P9Qg/Wvsn4sRaHwjaA0q6M1IV4CrxQ+d/kr1lNv8nXjfoo
od4m9AVDyXZ+tCUAtkmyj7fVvLH8m4B6WkT9VPuOSVDM9B07kC/xAOkT25NJ
oHKxJWHdKweQtEaGq0+5qwH40kgAT7PVCgDuDwAz/EXCOcDV37qrAcjnezXm
AHlhEUCSu3sBwGn89aC7GmxL/PBABo8ctrNt+wo7Nw7cfldE7OVhxAo7eyhF
Nikz6pXUP9ffJRE7z4OY71BYOlRsCMQGQIxxsoPu8Z1NtPPjywfbNJ4P98/2
Hz5XqedDfor3cmqHwgaM2HRVOz9DXu1hiG/rGcfp8eAcHpNF/prV9Js8VINl
T6QY9QyduPuZgYXgvbsOAy/gh1eSyJQYyJE+wcnrvvZC/6fSVG6/a/PLHkdR
l9A7zCO7WbmXc14qtbOdiCtjcuzbxP7+ZCfF7oOwrxP5a1L6Ta7kx1CGv6Et
O0Ejx0k6xnfoSqXqzsTT/nsaZ3wu9zTmJMfjyTEkP1OvXpHjTYK8CZ5pcmfh
SFZ+MXWwW8NsUW0a+8Eid+0uE8gMVsMb3mTT8yEgu/AvqKxm/Hs7p+NOg39v
jbnYEh/Dhl7OzxiUaxu5TJgnhV0zu1jjzd9+UyOn+jjkYlCujQ822nCwRmFH
SGwu8zsxp6qJcm8J88nuMhzbSRQxm3h2sawTy+AX6PXYCGuTKhuAdum+MHt4
nvpChpFOjUjpNxE9Zmc3tuzHGkPrZejvtAfuRoWNRbt418i7qvuHM5g0HsTA
jCnsLdoFuGdeUwQcW3g/yF+zmn6T6zRekxBGNakYTsoSoQ0RIhfOkL9mNf0W
Dys9bALg2zax8L3MKN2z2ur0X+4c8G2TJk3hd6VjwRSGVf19n4kFbdHsyHBF
D2iUYCGjrNK5f4IOXxvYsjcY9ZlcYcw/O7AvC6R04BG7d+Rwb5oRSRYjE7Ow
sgvDJgx3ieAu+O7a8FnfAK1GYnqCdU/8/YTJR/UKLnvHBKLKG1Cx4oUkQzcY
m6bczrgzyauFCQsiacj/NQl7lxTiZ3K1rynE/5TLrp1AxJ9sXw0ZRrwfJcSb
sYNhnPj+VHnUJOzDczCnJ3M1JLdD1CGfpAPAv8uXsAZO06EHTBbinOcQGuNv
jB6KmOFPl3+QLOAqY6OLEFH0DWPDw2Sn6ks1ByZhV6rjyvSvGTe8gm9hmm9N
+E4mAZeOEO5Ifs+J4s5Asg1vZw4gswyaY3v0AAss0J8Sc4RuA89JbPa5leHH
EBbpm4oSHDz798tfyJm4Mf9TXeeyFO5TLMEhoThSL0zYpM76srKHq5ZLuhj2
C6ZIxiZ+9K9OEGP4cG3EfN4mVTlDFpBFGijyUw8ncC5tYU8vM245BBByxrhX
KG6ge0yKavoGFa/BeWcYRyKyFmKNgJjnG8ltYVMuYEyBUFOkdIcxfL9x59pM
JC/yM5AoVN9G36f7Kkb8nmmZgGrc3PiefScMwhlSX5KbTxa0P+TatC1/lS2T
GPvnmB5wxbERveF6KxUPoP1ghBHmgnygWBrZzbhcUZMJ8akK4n/nslbZqMaN
7s32nfDBYdp8O1WyWhtOPKg+sjuSKH6lYS7v1C3CfDPXptBfVhJbjVMSR08Q
0jaoJTmeUbbDYov0V4xkFDQ7TmfUIp1ex7UxBcFohE3jW7j4DqagJdh0vMk4
wLZZO2ePMG4g+zOuLSnLYFiwwI6wXh4wXqObvaPc0rV8yJ5inHQjtxIZeT6x
HrEx2B79K76OgJq2w8Mxc2S17DDBFHZvvu0iLjuF/w+1fqFx0w8crzKRvYJi
/SQsHF/MQKDy2TuCRV6MvODsERmDVt1H3jQp3eVGW4yxi+gmJDbhnUIF/nAA
Fv4Rd8TxRf4Up1wrsQoRYJKd8GYQn5tUu35ucg4N3qrK8b3V2Gl7S5/QuBmz
TjVxU4AxvIXr01xGCWwmodfgywyxHrkUuyMwYflvZgYfcS+8wOwR8xQaNj1m
shgxpxhxZD0j/pHLjp1ARlhndLKWqbB18TP1MLpQiLWYFBZYCzItuF6Tw1+0
IKygHq84dcjkcaDlGtWYQV0lGzvwhYMQKRtlbAdQMcLA0EKmiV/CXTvKcdAP
pHS2ITcF8PYMaQKtJntjeEo1AJQPUFDDIXbw5CF5vH31s4x1Kr0Z/3vchKDL
06h5btftrlWZoIsx4ycM74mehIlrFdpzufanStAumUh3y9jwte0cAl9sdEQy
RfiE4G7BvI+GrjvK57KCmKLNd46Iz26g5Z9gH7eb4zIBSm+QM21yH+8CKAKg
rztsalNFToLToicM70a/g3ITUYpmjjXU0x536c/2E3vMx84JMXTgGCBuTAe5
xdZrTPcTezLTzoO+tjp9o0/XrKs2LhnPnQ1eq4MTtFNw7cWi/4t9IeDCtjla
n+czcmNy6NyJYN5Ev2m5iVO2uO3Wef9ofx4eYTgqMBLdj29DXBeiicS/D9lG
Nnz4yrbYp7XKtHNn4kZZp/TEDTuzHUJ6ZTsgvpwB1Oa/583T1+uW8pbEFulx
InmRkF/kma+6aPurrzncrKbfZPsF7z18+8UfvO/ixR+4Xwu8YaIQ2vjW1nhz
mghRMn0qcIv43AsV2pBauKixnVBWepAnDO0n1H17oe1SS3NaGwX/9lNOOQVf
s53+ws/F+LFDzGhvyx5W9LQDC9+kT4lcfSNXu9JIJ7czV5Rh8SXlMpD3LS4/
weRZ087goqb0M4AlRio/98p3HQ5ZHEUqW+HLUw0ZPmgp7NP7DS+giBzaUvJ+
n2dy+JMPK5QF5tgsM40w88jp/KW3HyYw0/f9bzv4cx978z3mjj7jDYeYlIoU
6hGg8zEqCER9M3/NDP0mb9SMUFtJF03T3qvd/WYD/zc9dQPLn2Qfrna7YoQs
3D9FlcmWrCMVc2JT0DQyx5qgIXhQZg7IO/r6c/c3c5bs7hyS6DC6o3w68jZp
4tS2WpZUzGTaJzfoXGFpIwYl3FskMtoeFWarSiYSDHd2y3nSLh9NLGcGWjtt
v/yqe4NMkDw/IlOG7zQuqBBfbDnFQJmOQcy+TA36glGf2B3ZG2t6UE8843WQ
7xulyphvgBrLlBLyDQOIwCNoQtqiscU+slVOmmZuWcM5rCi5z1x2j9yNNCrL
MkxefmTsVhTsGqaJzBPbsIVnWNr09KXVmCevN06k0LXk/DaIFwYvNxlnlcAX
Oi3czhLicsrEzsZEkXs0m1hZPQY0s6NquT/jViIKTzZXNHJlg21lecBFnSXr
kzEU3iIjL9lZA0HaU55h1Vhclph2TEjLSozx3/7R1x0lPBjByvBmLUiKzB/v
1ZYFvo7Rk7LiNbCNyz/YLYT9ZGZARzRRCLuE36Mj2H7QnOUlFv6NgT6wrJWk
D2w/89wL+uPBHsb1/sUWPFhfNfH4DvvhAAd7w6cDlY8zI8X/U8jlMtsK1jqp
Ft/3CDrfIjrAAEO2xkBfYlKIDSdDOlozyQNC8Im10Ov8FhpKyPQEOSudj3Cr
Ce0HR8K7IU5qe8CYNfebTHl8ajti+8MFBjXXYrMCrfMPd6f7YYzd+EMrxvdS
Xwm5o9HEkDK9JhhuzMkzY4MeNkT1DRBkVqmqnfgGtGWDnOXbFnthrGcYJJH1
YjPara0ZAvTK9OTJRsn5vG0yFGK+lTM27Gp9RA998/nP6o3TAwQ0/MQ4Fyv2
E0H1DajFyaEa45U8DmGqRd1W8uAbj/Skmn3CsMoKAwbma+UZsavT6/09Pilq
ajIuI/f467nBdJDuQbZsBU5RmIqvGsvlNbYLlUc81OtnelX1mBX/uvreyrdR
1vwhHR+dij9pO/M9VhGsa1QEqah8oa67DPAYEwhLZ4MOuKct7uOghuly7Xbn
OTQyfaFm4DXb68BLXG5kyXnkIQqUZnDtOBzo3an07t6Yu8k4QTw0Z26bxShP
1WG5aovzHCJ5WhmuzfXKToy+HiqcZHYewWW7tWZnQosc6flXv+kgaRu+ZHNW
Vzm4dPEH7hPNwQwKUU4xh5qmSZXNVhu9ouWpN9D19PXgeQ+llbDTHELbBSXa
6+5zOa/16zW1RFPQa2B4d+DYu/cp40RfMsyY4Xeocd826rOXbXDsOpin3kDX
09drTmlo7Air/MqNBoDz/fQGG4Q0wDxXVnw28W3YQz/nWfwpjWIW8/+F2R6j
7PrgeHLg8s8tQjLNX3jtfYQTHga6nr5ecwBEJGsr7plVvXJVB/Ydwrd93vBE
JXb6uaZxQJKhueWAbNOdl8fZq1Bz8HYtGeviG1LWxORiDS133BHOjxjoevp6
zfESjdydr5mA9stizLe/xt/9+TasQ81RlqrkBt3S2OnHmmqfxd+2z2ZYwKwQ
1Z3Zr+CrpsVSX6D2dLl25ENjuTpXo45XV7kKoMYaCL7GjTyy8sjj/IuXnmFo
+LHQmTX2aOjhFIsO9Bt2VT7dWMcjHfJk3Xq9nEcxXa4d+dBW7PN5ATw9sgvv
7MAyhaV/h7HCh4HkgyK5ueDXs2qARHq2HKxsuvOXD0HAEkpuMzn3BWZo2P9G
lG+heuM6yyKubqwTYLbGCbDQJ58HOgTjVmMVGbIjxWYBXGjUsuUJ0Ais5uER
5PFKIW/ashrKUc4h49FS/2dgTLWoG8vqGb+RpcHHmj5Zna9Db3cNo1EfnJzk
3IvNdLfgNPagrLGF41PFkO2ChurK+NXPVhTAifVcY6fkCCLGeB8tf7dxXiCE
rLhAnP4O00gi68XKwLRfBqi3rO1HBnixGfPtl3KzWUtSMj3M8RAFA40Vu9dy
daOqT/A3apEwjEMk0n9iuiW/Htvm042TFLCJF9AbT+2Y9pTNRHJxWDOwWtcP
F2+1xVg1xewc+7d/lbeNkpJcIo+JdfwwF8sKXHMRLRWqLBfXdGYbu/Pupvhz
uMNdDHir5FoDC6LG3StrPWlTeyp6Ap0C38IX8kbGTkVX+fsNNKlRdrOcLMCM
DPpBTBmGRYkDXVIpPa8N6FkYdDS84jkZEXTr5yJf7AOZ3O/0hDuFspb0FeE9
5Rlk8wSJwvk68WCLcYK/h+PBt7noaW14kDoeyCDLy4NelU+C7oo9qze7RiYw
uFgEo9QwLflRp3ka7cfI/MCQTkIRQbeNoEpPVWw6qMiSbULX1Dbj9xYmkX1j
fT98YdOOZmK3Ea3u8QQI7pUzBP77teFLzfAOdCW98sLa8tlXKtCRFQ1LkIgz
kQU3RM5QvhhL3GeN+rSK5bcbqRKtYb0M2tAPg3j8LZsp9HARiY4R7EfTrSMi
GTRfo8jYgKBGZY69tsqgba/7YIuJFwZYsp4iXV+WdDRVMJEHCAVhbZZpqvCl
SU/qYcTGPhmRz3nRdGQYgQdhxsTPeefjFVfQkCxUeUHfZl5YvzKlZ383EyHb
9RB2dL5hn1Y4+VmqqQHOPsh371X20W0RmU4xOLHxfvNOEdmNKCVFVAa4oI0Y
YLqvHcDsMERT4Sz8Q2P1KnaiIcASwDcd6iCaRYS50DLe65UPrUsTiHHk1BW7
FV7YFK9wUKdM2VYHh9Ua5Fzt12an8W6Oo8nWAm4wCZLzbjv+7A/Zl3pk9G59
Idkxf+5i/r8aSGPUhN1FBgplTIAb2qH5JNe22uQivmBgIm4NHrasSo5f+nDF
E7UXmqUaLWiz62LH5c/1gAwZLk9fc+vi08ViF8+76jDBPLeLUZhXU4/48rUq
kBMBmdq0T19ivIL5cmcbJ7GJT0X75oZHn3VZjnuuoqNwb8xHEpZ1JBhd1obL
2kVEoW82jD1JrocF6Aa++awlwKO8eTIP0jQLoHIsiRfV8iF2e3Nv0Paa4jYG
3Xbae4ODk7T2TgLnuBPTzkYM5AhEn3Ze52gSTJfriZ6YTEDHnWB2Jmq0Vg0+
3ODIofDLHMvldyKjQYHECycL2pVJHDvj7/a0T5cD/LRSDS11rSsSp4EmZdAN
6CXTlAOxZ7THm1HWg3V57NZowEpAE7gMNMZwOwvQY8kzOx3QEsirUWq6M2Eb
PYAmubp9bSyC+WesOmFcaWRDyJX1a3mNZqOn/Umo218wWVja9/aTMna6sxYt
mH6eDGsSAGNQkdYjepJtKFaI7y23xS61OJRnW8JK12Jj4abdQCkTVSgDJasW
bYWqHgxA5Xrua2qxeZplPqYjcNzCI4qEDQhe+i8hMPYMkr15WocISzXQGytw
svbeStU1Q2gJDkjbq2sRtWFpGXb3wxMLDyI2qSFNhxmEXAQTDGc+tdT6rxzr
sLub/2iytFVui6M9bSKDCoLfGIvUGPqRx45jv5DuBUfYwsG8M8A6qlrcUIOy
6/D1gx32oGBbN2KB4C5iP1yGoGKsrcHWH2M4cDL2FOMxwbpdoA06sIdRqrM4
JYL53t3TsilLa0Bez48BtuAStI62AVbJ/3b5+xUuRzoi0BB7JrcHW1DWh8gu
5v/zYTuI167BgfqGEM4m1a6SXHzrbblFeRahbAidQPjai4zNqTDPD5e9YJia
xOZCYoTRIftGmD4+peABN0rX7hEENJO5fdX/VK9rWXZ30zBx9gON5s4AZ1nH
Kq9oQccCVZ+O9Y7kbfNobaC8NhMzGBgJxPJOm/GD2FKZ4m+fTDJq3k4+EmqL
pinOwwMd5GCs0GWNujLVujLkQPLJX2pJD5ilV46C5TYhKxjUtHdontl2BXBU
NIvKMcLyBKE0fqGst++jdOW9/IOjuRVAsI0+JBA3eRqVWTIDAnhea9ysasgQ
iI3AhTONPdKaxvax4/i9qn0cf48f0wj1WHYPBTE1fkl8VQSiQ0EUzi9s5cAK
L06wpMCgtM1M0wMlLM1YobQxrAOfunTZt0Mas2CxfQP5gSU8ILCyabM2QBSx
9gi5uphh5Tkn0P6yPC3Wi7Qna7NS/1fJdMeKcp0ajTJKQYiNX37rTRKfSYxd
W+cYm/0cB27bWegAfluspiHGDft8sIyG1YbYMz339OuF+RWA2atrCebEKo44
ZIeW0IDwvjwC2+Is1K4qZAhowlYwXEN8xHqUPj4S1c01ErzS0JbWivxm7G4h
YI1fZOuNmIV1KLDCU4JMBFh/xPot7TJ6cisoKwK6qiWKVDyL0lnEy03ZwBb8
md/+gkiMkyhdrFPQw8D5dLFvHjBtYQmI87kRuFNeDNxHo7fjInG+W43ItgWb
0pauRelaIDwPsPfHhZEQr0wWeCgbbfqCcJusLOTOFVCvQDhBK4Jd95JHHtsK
8YJk47u6JdjrAOk9AfGpo0PcoJOLU1loD5/ioNCxNNcVUQi+k6lc1QbBTX6Z
JUdxA4yJbo55C35ngGFK6NHVPjCEyIb81iEj5xNTu7myRkzrFcPoIFcU8EII
X4oaPwUvXwCgqwHoHNp1sYOx2U89FaVkvbZss6dls034LY2C36JpcrHsUaNd
65G0srjteHvYu8nwezgw3YzyLztMm/3TU+3UaMhq+aZnlOfWdfmR0Gx2suzh
F8k1ISDp57oiVPTx9eKpJk0YZ2yCKFWlkCJwqI3njIJb/vH14t1rBHBsuGHb
jvKgZGXtF9yV4gNv3g+e68Jnjxm8iryt7Q+3Oi9JcDbkQ2lVE0pnjQ2ljTUi
1hWqyt43dhATWiRCJae1CSwD7elpgM1skOmFiiJWLxszVhWJWtcXTOh5yz0L
MNEBXSijPujxFIX0vG9ox8kg9MpZOGLhJTHwIdwIvrhhG/jk2A+1YpYLQG8Y
AjfBUDSZw9AzHsbfPjlbaAPambWgxYa78aEc1eDQrh0xLaOjNFZ54dIE5go+
bNa0weaMWmz4GEN4IuHsJYGykXjtDyJYH4nz+hpBXN8H1MA3oO5oXhE0Dr7e
u7YN2C+OAftMro1957JzfqynB3CuoO9xHYpXjz0ZYn2oU3RVGcUdwssqIlLj
5lOVvTwvXhdmUjVU+0UxTPqIZpKN7V2Z9P7MrH/l8vu2Yda6mp7lC5JpzS8w
SfHLq93LK1M+fq13/JKRhOZXvmGE2vbCWn7Z6DEKhlwyLg002dEhJWBOTtW4
cXbvFcjgPwon1/rHhaS+fIvOjpPvtE8rdPbYE+mVfSpHgvnsU4i7G+2j9Rgx
rDKfb8Gr5W6+NYzuoKzF9iCGXjLwh1Lrj8C4ioPStwhT4VnhhRE80+P68Cyo
Oqbw8Wx3+2g9Bwr3yOfF8AxO9D/kr5mh/picqeHjBO2j5dkP5dDvxLw1Nb1u
fBwsGUC97qQNYGjQ4nPdsQOoYA+D6yPPtUDWph8eJY2+J0++jz+0+r0hyJVK
l/K5fEdmiJ6/VC1cYESyt6clmxwHcguXhjjwnBgOnMG1O+Te9ybX79RDFmp6
yFgYQqxghmi7VDvk8DFks2NI3iWCDDkthiEjZMz3psQfgSEVp4jPzRXNi+3C
jwF+VZcULzgzJNrohHjCyekLRicNGZ1nx/BkhDz33kT2nXiy2t9JaBg+EmPA
jkWiYjFnzFAzRhzvJTuS6YV1uhZyIvvcDXtzA7Qqy0JcelYEl3rJZT8o1zZy
mVhCWZs7cq7Sm3x+ga6abYAXlhdK3CQ7yuT7uLSvh0uDEJdOjuFSHynrB+Xa
+KAhnFbsvpojsTmNV9X0r7GySgyQXtwvO8338TTAnjtBeq6ZNyfW8sYGEY0r
1Twlz8XcFXoRYXJTI7Op0pl841XHIWqMGSb8TPkWenMNxxbPv+aw8to3lF9g
MS2Yt8k3RTqAX6t72BC/U+Rj8qS5eKoFtZ6VeGyvqeQ57Bc9TzbY3tfE68D5
mt4Vw7vkfkZN1hOPAIWPkq7wTwxZxGJoI//u4eHfdM6/qfzQuONquWYDT/tL
+M696RrTwVx5jrjC3z7zUOZSVE8PMyrb9trr7lO2YDrFdNRow8elgz1cmlW9
DEoUF6m3UZufVMsvu+WiOT078wue5HsKW2L5MFfTZeqZcaVte7mvhjVcAXix
R74Yi9DYwYf5vR3mYqPMaod5qjHPu8nRtbDHLrp5zizE375WVsx4oc/4ILMv
HFCTL3p/BbaAUnG7+Pf1tII6LikLAmctYCIrTpKZ5PAs9gLPbI1kRWFUkOcW
GDUo3qDh9E3zjsghc2MgEqxNAI9iCSj4YpiDd69a8GxGiWzL8s9jjJ1yILEq
SfFj2gDrW9eq76++dRIaUy0QeQNSWQyjnohNNWvGRhgf4mBMNYz4HgIkF/DX
Vlz6Mdd60WUv2H7qRW+U77tRbI9b4lS0NGyHAxBnDcAMcGpSONw3y4tbZSiX
Q2d8a1A+quqxFYnVXpvV7CdgmCXMoK3x8TXmN/O3TQFGux8Xr/shfhg53m4G
rfP30nbOM4rVvFQe1ipv+ExIHut7eUfMChOZNGQqfAjRbo4UzyYZHOYIfUMh
ZEdQs4hW+QW3FLKFocbzGQkEGZyw/P2GyYcejzLq8ygHXv4Jn29TcQ77NPfI
qDXoRGc3tnjeTon55vD4NQDuiBy4cxVwfCwrTsmSuTR2LFJWax7WY+n0P/ka
/MaxG8Qk74rPc9seLd/asEOm7G4KWgvfZJneGXVAz1VcG9N5rDnycFVyYNBE
uh08FTnycTIGmfK6ajvtPxIsyQ+5Njl5eAh7E5cd1gaTgV9kSJWPDIwbtwb1
T0cYeHfltHHTUEwqWDqezEXwfkRvXx34R6n7xYIgptMbu18+wNCvU3rFBt4e
SXILm8c+PCh3HBtxm7FWLhaerMbmR2MEZBbz/9VgVNYuDqPgu6LUyV9wbawD
ICUdh39geIcp5gep0vYWsKT+/kO07D9q/1GrkvGKJajoYwAaYuojB9ogjAKj
H5gn2Hhx6N6hQfHlyA4DVVG+W0fBqLhQKG8oZWjqKDA2DHeA0APMrTAfwQHg
8OugV1EONpOh8nuMHfJg7E7zhFjZSfyyQ+a6Ky4UrVtZrwuq347CwhsqkcX5
J3KHFY4MGeoQIYWNV5ioUdDJ49og4hshd+1KFThccGjVrR98SQwYM681zhZh
YAfjgySImIRh5+luCrhGIGTTSKm3kLY9YBQsKk8LLK+PhEUKvxHW1zEDgN1R
8etLppobt7qbQSVo0aagc7dIF//u0gKSHmUxAtkN2119NBejmfO5bVHsu7I6
3XbTZQdoDRBUAMExXhTBkXs8KnMIprWQe6cXWglIVqul3k1DiNH423ZLi1U2
HjE+sDWtfOTV4i2Xb91+81sP8HXh8oFdwb7SO60yKDS+tNt370hrWqY10GVX
hMysrD/IrB7UlbRt37riACEt757VIM4xk8aHJS3DbJKlbzmwhY2F7nmP1rSK
t2X5+aAXX7OKftPtin68JaieRhq8RSKwZrttU6lbHTwKwUQgHruafhNNbGj4
EVSAvdOaN4cU1L3GTWh5bLEDCKXmsNaleIGltx9GewET/j3vqsPyEMF64mmI
vwb9xSSvuPHNW0Wx+4LiQPlo1HbaBshWDqRJaMvyhIXiK+WcNbe02sqPoUfp
1d7a0brGLpRtcWTJEpaZjiWr1vWgxtyVbhm01fVE+XbdHR9J6D5OUHP+Zfil
05uXVRWoVxS3cipoWss9czRaC5veFK2LpmllZG9HcM7ZRO0wXS7XToTe6C/3
1dHoL+wnU/Rvk9YEF9T28tCvdtjm9Qa90u/rwh2HHG13aMXOg/eMBGbYHZjq
5DP3NQaHrjFgeDY0xeb24kR/OixRVkE5WqAfSoM+xI42K3ZXUCz3N9fgMDcm
HApHDHbEIdagcW4xbdBy+ua70+fZk17t6GMmTVJQlXLqkP1a1RNp+eac4Nyk
T1rSshiu7omMUKacjsYolqo9/MJH29VGIK28KlqVvDHTtXuN5C30QFdwuW5F
6KpI4ZoeSAragY4GMJakjX5WkQju9HQlxS2fdGFB8bALUTI38QY7jZkoyS3j
0xdru9OVabpkHhL2rEXQQgtRvlH2er+4kbld14IC3wzZLjSVXJMjkRGdZaWi
Eta35MZi/j+mZfEpL31fxXU+ZlrW1TCnLUH0kYWfEi1Bt16fZKTlzV8bRqBA
zrAXqRozBWtrlHInMsSDjmapw+FJqFaElgo3NlbJyE9iaSAjtVknHUeC3tN+
KFhTw41OZHAkM/K4psiZKSyBZHWkxZ4zML5kUmv8XNy9C/niutZZblfTbyJI
kGB2hIJ3DvWc6ikr3Gs4ncOMfe6TNXxJJKQLNWI1ibjyProRszPNRd1vOAKa
sB/+M93+mO4gV+R2jxHxzXPerrbJ2qGNZHQ7Gr5jyJg0KN+ODzr+lD1td4sG
cTYS2NU10tsJXd/UtSOSvLG6j6RFM+Xa+Lyby75mWFznWoFWkcZNE4HXiBmC
5spV8cEOQOncuHaaVJ+JRGxVjZhNCGy9pezh3gphuszYrRy4hjjZo0xT9p5V
ftG622Rg1FtSHStrAxwl8yXjfPuXMz6xe+bn/WJFM50JgazntDcZpAsbWWTD
y5vUMyLxSsuOh82TAVVv2Wj4WJkncRl64FZXNQ4ltWaaX5gMTdVLPphhuTaa
iXHEdxWoN/P131VljejN+fskqfo2grbdVF1DfaLYR76W6XJtgIQV218xojwR
kaQTv9MeyIop2LOlEC7m/+sRQ55E/DHX7juvyjYu+wBDyMUyD8G8Y0sLJGdr
RHJPpRJ3RJ9mJDEH6DWtCY9CMCKREAK88b3GHinOM+k3aujSVnBWBHOvHYxk
36lGeCYGK/LtUj0oSpw5RAIYa3xnaqRwR2MXm/bDWtZMtvI8zNg8MYRDbPqP
Gb/47F2FgDb9rhQEsW7E6Ro2WhoyTUPxuAf6uXaSCKnwYV/mw3lXHaZPj5m4
5g9r+LAv80HR4OHD+1aMkG3yiqnQWGZYZQa+ak+JpH00U/kZSP1QcYltprfh
i6Yp3nAYGiyXttzWp7Wmn/eMk5L8U7NhuTwvKoXMU7ODeYHp55odS4JvoZz7
s34V5d+xdFSzsNHPm+wbnmvc3FySdhSc5OkOo7fudPf9qiRTCo5ix3mzferj
CzR6fNQ7msaKhrax4VnhRaYontVjHOjHDvcoKcbt/N1i5ESnHUGh5zjknIu+
EHg7qq053ox+rHM8Lft353cwmRVG+iKEORGoj8Li+rDl5SDkmp3tj1ibG4vM
HE4FlO+D2mEQOGGVWO0DgrudL8V+QGm9wSIScryWUjYvWZyN3w8bActbqTAr
w2LPULTrddv0OakP7IJXRWZ8waZZGKqAnbrUQhXyv5YyGY4MFb1uCkhNLR0v
wOSLm3P4bSlNgYMmSZp8EA3CEFVzyiqI/P7WcKbH1tC81r7GK0VrUcF3jnRL
UZryi5IvylIo0/kkkwicKs7WQX8QkYuEpCfxSM8a19UEPFv5oU0g1Z38l8hG
GWqeTz+xOilIVD1SF9o7Gj2tPUL3slroSL7sea9a9iii5agKeksmIt1A+USI
vLG+Tik2ynPqQwDCV9P/0xg3a48oqiOVNE7UMzfUYPiYKAwDh7EVJdAHn4xn
ojLN048NL4p1r/aI4Gn8KIWg8ZmC9bnGo6skuU+qoJh/fDkRimdu5Y30KTt1
1KQv0bjkcVUA2rWDVl7VrD8UKUWb682E0+45YonnXPHjmrBzCRZo865H8nzA
qSMVi7mhTaqBKw5Yz7E3NfpTezSuxxQBI1nbRIKWljss1TopGi4CyidnvtBx
3/ltLklzUoSJtnoFXKyxJ5NFQPPoHJo0h2ZzrSydGgWO+FDMlEeWfODsXgSH
pnKr8jTBxp9NmX6W+kPjIfZJBTT2LqJBWL2oCYOsnJKd+pUv4FudsJNnkV5f
TI+cFel9fn/0UvLftEjvlpzeNKf3nCZ603Jmc18YMtLDGV9G471B7zT+nEb5
miK9j+2P3r1yejPQRr1/Ky4kRXovDNNrcyFYmSynx/YRfaAjupJ/+PdoxIi/
PuTStOd3vqA/ukmX0uRiABppmHLPIt0k9X/URDcPb1WuZu/rWa4kI3CWp239
lWc62iOdpWHEoUUSifHvakcizQV8byZVQQnAyUkzl5P4z2MjkSSVZDbLOfbh
JnKsO/AVF77vcHHLe99yMn4eRB0Pd7zF3lbwsPRDxEJOhBVFEPH5MBG+eWx0
epXcv5Pgt1XcA7WVdIGdc+MvG+KP329UGrxomlZIWiWF6dhq+nlBpXHbTNO6
U/uMNa04H2hX/hmJy7uatKtJu5q0q0m7mrSrSZPUpOCu6V3YTMooT7dre/Hn
T4o09/+Cv+7pOaWf03dV2lVpV6UOlf4cP1NwuNqzigZY+DjE2DPbUAR3/36B
Bx2tHsQnI2D+/Y/Grgzg2KMTbfFZXA1frAzRWp9J4KLBMh0iueVYAMQl20x4
hXet9T/fVbifuoPPZbyA/3+DsQs6T682Bg05xjYG0SfvlydwwBcW2fKcY5XG
lJ/vKty32hisG8h5K+c2NWbV01QxtnHD+QpXOA5pw37O1xi3BRn/HultYPmd
/gZazqfP5/9jQQJeyxPqGpherYqxKYnPHDpZFV9ZeOM6/1tchftUm7Rg7Akj
KLu0sUm46Q/4O583iVYTbuXaiBLazQtV+VX+dlmJH6AyxBjBEc/jBgBr3keD
YcKisRuy1rviy/kpOJMJpm4rFQ8hOY9c/r7Y2DXelzKhNNjgwHIYzAcsf2k1
duo1VIZ1RWxipQg2FZx+kLHbdNCLaRlzPvIZdiV5toyu4WedwsSibRAfu4I9
OJRxQKQC9j7ioIJNRtZr6OSLB/BdOJcdB31gk8be9ZdZWvCOu/MXK5a8Wvsn
qonrjCxm1iO5dw1CB9jGdGKr/4lZPTgkTBfY++E3PpFbjX+x8sV8r4jMARGE
9iEyq2uatiaiDVtGALS55YPIenbtcYjXHMctfSUzAi2FWaPTwLj7/wl/oWeP
rQEnGYE4/xNnIyAlS82Sw0fDIHz3e1JmJxfZfxkb3YuWPMJYyZH8H68xxc/9
3bXkLH3BJgNIbzGum/26kS5Nx3JI8RdNHoGCxW2JQpHDIWE/EYpKC50cDQCW
fVPqsdEHFViAJt3Mz8M9N0g9buUf6lbORD6Pt4NpvQZdhjmZOsfyU0YOE3VN
hdrZViIJhgvHyW2hh9p6CBi6sVTvkya3srlM/JZqwutd8btU8T7h2mnkyzik
Gf/HjurbHX4p6P1LY7n5eld8D4XqEXlxcrkqFkgaucwbkP9UNf7cvPHZnHHH
ieF7mEKxjuG/pcou0M2yz03fop4Jsbc9Kj1CFV/u3jRKx5FW8n2Dgkgaa6og
M5lHXKjo5Sa/T5p2+PL3Q6Ygjp8wvHZMDbDU3F/dAmm2jI7tprEM7LubDtvT
G+gAsRSk1dsvcCj+X1V8kiu+ShUflbdhJFERCPmYryJ8SSTMC7YeJPl6hkye
h6lSvl2DR0y457v8PNgR7o7/rqgDPHaQkAGuf1OXrldPKvedAFOm+gDb8xCl
8TwilmkREx6xMHTtyl5l83pVX5IWdRVA3k//R6oYzbNeN/s0PnATuvsXRYoH
v1K34YvENX+XN366bNwhCMJaxLmzsvi2eoJSFnonEDK6sHTCTsp7BRG065el
sn8wEh/vUEJv/nmpHrIT/YDvF9T/wIPweao5XqUy3eodqX7HWa6q3Ko7H061
LNntBFPAH0m9oeuke5bqYQgoCZikkwKuxxbJK6jmS/Pb0/eo4gNcsb9288s4
pRMyqIjJleP14DL4inrs/VXjjlTlymZ2EgW2+lBCt6nHflZd050EX2Izv7NO
DI5WZb4RwdvUvXjHrJ86tintO1yqOxwamlYVk8iNzXlUkhkqWrKt0mNTxMOz
jN2q6zNdo/Vr1qgT26+H8XgE+tLoFBYeqWzZi1Xxs12x7rXOlo0iUYJwEgQ3
0+BK9Zr6RWawQwhLK7kC4TSQsE2J1LOuseRKroOTKIRBujer8cS7TZFAuoXH
E+WeF9BuPfIgJBseKUxFCoVtyQg6wKejBpea4kcENBlNNj1jCmi76phi5iOq
yt8wpXgo/FHY/nCrca0BeyFWyi+YfoDvRSvhi7JSFKt4bPNnMcP+b3UJO/hl
1g1SYLxuyRHIri6Bdq1DZxZPfUCOgB0owxUkIo3XwHPC7pqPq7dicPhoJt3a
hYVrS+2NeTI+ZznUBsgphQHvXvxFYssf5g0e4BDkTBED+3yzu4xlDTiL0F0w
inyCsTzhy58xqmca6736uUPq03w33gs2fMYhlUEZrFG3KrHMymL5HnXtgNK1
0H3SlIi2JIW2WFmZgSRqp8AXjHU3LhrbyYEMdy2alcjnSPfYgqvCwtRS1pKr
q48YPNIUuz9aOZtfpsmEvvw5efSyQgzJGz5Hu7eOPHTp3q9tl5ypa6iIaJyM
JgUZpaJz6M/CmoL0oCVj2bHF2KN8bnTPcbs9TU/qp5NIrIT6mekCUFYAyNQb
GqGZL7ckOTjMZvPdyiC3kdWsIKumAP58Gw19rWnNMytbc5JXW/d+EIb1TvQC
JC0+23AKWe5hV2iMrKJLj1WPn8tfXxlD8eavR6liQf7TnqdOzHiqVtV9JCdi
EGJ4WDdFKtGCMRJx71veWQ01D7TSf1VVDszvzLCm9jfq0i3SouUaz1PlWPrv
MrbK9DICHP/KSzuHteb/UNfvzVRBaEQOvyNvYCF4lap/rMkF7IuqGLywboas
5kmD8pPwgcZjzj9S48zEoME/Vrcdo67p1DywTguO0Ayd41vq+u+o+y5T5VhO
GwoCvJn7y+r66e6+Ed01XV9urX72PlV+ffG+BGLyl6agKloMkOoEJvMKDM+f
Llbl0o+OMsXPV6mmfTe8TevkAvejshR5wFPTm1YjolYdsLY57SWNCF6yFco2
/bHqZrzj++rag41r/mjKoJm3K6AMWpNe29PaC2qfRq+NNHFfrwFyxgdkLOgW
3QEWTe9QlzCxPCi/i6LqxExJ9xetSx+7pESpsMTlgGWkwLCEfbHocpKqQzr2
RA9LQiqmN+0Q0vR9SWu0ayf9haqy1sH1EFMkhx/426oYTqta/TIs6xch5jZq
uZUDbXMkv71e4uOtxbQ2zrdcUb0lPV3dQsMDW6zRhxnh6JS7q+IrcuoG5YcY
U1jy+aTnvS9Xt8DcMj/+ShWfkr9gqEMzeWMttfTfFSCL+i1Mxm+o+z5sug0u
huXaXV9umZsJI1EMZySJI8dNItjrl+o2YnJgjSitPi6/haWuLA8sJt/gIngW
pGO80r1og2rEDY7E4zwklsWkzxFFZAfzqAvVEr88pWV5IgqX7DVtR693t2iB
vcw1p1XHDs0iang4/j4dSW+g6zRTUJHCPs1QpJBwbb/6ysp4oVobfHkApt3Z
GFXQpJkjcWCPrlPXYdUTky/3CGveqGDzjwlS7f+8w7Vz5xkWqN7ZRxf3qucI
YxkrlvEjAt2+PLuQTR4m2wZucQ/UgWVQjLWKY+AbERzm6Pu6ps+jmf5K6Juy
0bR6UUMWT3HlicYuY8oM8xhT/HzRXUvW6Quz7R+eyMPPUmXP1fdaRg33UoTc
pC6pIMtks74vU41JuexQVflfqy9J0Wj09SuN9S92GSkMfKJ4aLv3sqE4WD0J
+WR5CVibsyNcK/1Dg/zIMny/7h5SFgzuR1tVMfTQJ1UVftHwGFUH05v/5L/R
l0TuxjkmiOxiAYWhbJVe+nInDZRkhj7EurPtA7WpfLajYT9V7BYc2/XwwNAg
lodj7dwzraivHSi0oqcnmxQpNMkIEMrJPXRfGqyfFCDn+A3433XIA+3D4rkC
sNWiip2BMmaQzWU3SgM8YwaeViAmSjsvllSTdsqBw2h6oEZbd7GpI4wZVp2q
quALpYtwBjB6//wFbmx9izHejoeBe/sRxCMdtX/moXaTuuVH7r3ACP5SbDfA
Pkl2TP3EyP564+16QH5N3RNS/QTlPvg/umk8hcV4WhaVf8nv2+huQdGj+Gum
6ZcO4BGipd5f60ez6Rnd5CtYCy/gbY8PVbdgqY5V4GtVcbNt11ESf+YeUmaZ
beXa56hi6KCX8d8YgMtaryyWADu4KT/B//+BtKW+S/Zh37t1h1prn25UxSBt
tigN9CFeeWz8gx0dWuDuyBvcrg+GbHwkL0fvfp4Zfw2J9YY8stE92ohu0jGM
Ry2Nr8r2+emqNd+VJ/Am3Q+WSMYHtmreHhkuOhgfJKNnhbFVFUvXKlt11oG4
qgPK32tspAUvSmrDHnivW6vMCmuVprAmn15aKu8rNKWd0e9VOcRp7xij2H0I
wDtK9SK1BLRD7LBZS8Z+RAo/cndVH8Ff7c3+4xyF76xSSEcQyGgRoym1oTOB
sXiJsRmVZQMEIuMfJs8I+BpXBW/PCrebojvgUZ7myYLYdn7sFpSusvW/qyiU
Z3xMP6M3G68wLLyAbbzeYfHHxhtj32zjH6eK35k/pI4/2UfVLZDUhzgghr/N
Tfwnvv7/+f9nKrAeqGkJWJFeDD6vcEYLf62RT7box8wVZYE+VOSx8AfnsBa2
dM67N7bqbiEL356TnXuax8Y7IgdlIvFxKr2g6eu1xNDbdtNb8CJH27SUj2bU
YtFlsX27ej/ElqMBTjB2NyK+kn0f5/PM2552W4lsCao6zeEXMuo6EEVGHAGj
7l6Y6hfuJEadGTaqAohT0b0IcEQ04tG2ysON1frwVmPOwQJ2i+dp91RPw4Cz
vTV/uGvux6tkTmsy71BkYpUXC8B2d2KKLZgYsT7dWKsacObyNia5WXGt8gQW
nnJqG1Z9mkA8lOzmqiJOi8aR9mVNWm9WfDHwArbieiHqw3nb0/NVccCKwwoy
hx+uij+eP2RNiC/gtLjV/5HLBqoMS1VbXLNlr7TOK3KuJiXeiF9i2hjxtzk8
YsQ90AxWx2tVsdjvwu1U5LHf93at0DFGUNNdOljIfvt52HPf8lhuR96gTB4+
ActdrxGGoVZrxXeJvs9jBk41QTOgxL4qFIMCV5uh4mFAjL5hxn6q1Eo+Owab
MT/JXzNLv8MPltoiKa7+1IFVMdO8WLavKcY78GElZKp9tpryo9FbU/3W0Wz1
CExqZ6v5ISP08xod3IO0vk7fF2GmrUc5g7KDgYAD4ZnL30+pR/pstXbcYtzi
USXnLH9naJVncKkqFlutAndkJVvRWvAt5G5XM32JKsYXIZPg868ZCywnLvPb
6sa7WeVrtbOUFw+hF2Uc9gtuLZr1M4XVftwGakdKvwMdaiOm9UB3y09yVE2P
5jz0AjbnB6hbkP+FDYfeQB0w59vypxViiG4yXr+nY136aFX8Vlf8aYXMSXmj
B0/g9oLEn3CVr5hgt/TYcBwIzQy9UhUHbPi2vDi+L9Qa8kxEQy5RvrfBdAU5
2XnhC7p7rKMB0idro8rr3qojpuWO6AkGa2Rk1z7osek15NV73NtJnn7I1Q46
bR/UymnZPvAovUYqsoJUmPx0HHqcX8c0gshB8l9VVbCCvp8tPomLfs4P5F4R
sNB62+Nf57AULHTPa9/tUW5nhTleYNSeWqM/O5mnQvMx0Wbh1jP7QMQclhmR
dPECJoffA+GT0MBb3AN18NGSyeeiutfzDDJf5JDELUzUkZooRlmHAv+5I+ov
VfEledMoKxE49yD1BL/djXoCv0yrh887grXxuMHV/pgqPi6vPTxeFUuMPOin
ZDgMwMM0ACzZGDuLhf+iCQpl+xj5Li/ndTW5VR65v8kBzGCw9GRIxchnuvNC
L2x2r8p0Eh98SRg88eBKCN6oip+aFw/P5iJ4jUTNyKq53Cpb56He1fYVf2fM
NHy3MHTSGz6krmGmOltDKktkZL+qH1b4xSwtixnxdsle03L8RnfLsar4a645
8f0504uWwseV7dQeQ15DYa0h7yCJBQG52RT2NxUi9d/j4NXh5ouuTZGykcQj
1gJcRvEWVRW74NjA60DfRzj6ygaeIdGYY/B0mGrLA9Q1GPku6ZB6xLxdcFsf
vTeokLv1nAIWN5qignq/ugYF5TH0+6gqH3Z3QpVJvB4GHNwHLlS1Mf6LMPT4
/JGj7FpNWWDD9xkmJy8/oRrfezsw8I9sN/6RCUI+3+ohjGh5u+6iyW+hWdTn
1LXXuaZmx6nyW+XlfB/w04PnpysS36rK4WdhFjxbFb/HdLP+ocFx5Ctnq7Xd
UDrTOWzxVeZ+cGTpGhx3M65Z2gV0rXtinSDcpMr3zotp6JKLHs9/ZPlcPqer
ayeWrqnQ6mxd6Ro5sjjG6Kn6gppSf0e9H7uOJcaoAYDIblerSdoLHJGyZCto
KYceP7h0s45fepNxTYxXAYWxAT50tuwO0QOejfhRNNf3ufZSXNDW+P6uaoHu
woj2u4e7ln5NXTvENSxSjJJWGLZDnAcO/6BqI06e5gUm+TsuusDRMiyPGvCB
H5A24XBXfI0pfnr1DfTNhXaDiD66fkiv9yCRf6CwgML6gbpG/aU6iBjgUT/k
MkyrkEVqN/cKOI/eqR7zF3RTkT6Mn5B0wOMwRIKVGdLhBUvkHIYDGDydRwDS
Nu0ub2Q05DIcuGuN196/je+Ua2jSFer6x/JrU7sV2o/veimeHeXBxbMZ8P03
RpovI9/b1eoyoDvQXQbvtOb/W+MSTS1f3mKs2MllybLBl7Eoq3PCwVe04JqN
OcFP1eWnuGbXzaneqy4d6NAj8ayMh0doiQV+Fn32v9S1dyx/9zX2g+6HgH6X
bbSSJMguYw7Q29FT4PuHo0CkjJcERMjkI1LGK4MiZPjc0911syl+prmpnObt
ktJl6nGsE9/HZbvxVw9d1qtyfNTQZQAQMSta4Gv496r81sSZTZOfIqLVqaSL
K8PRpdM39hy3T+ur7tUDEWH5bDGcNMJSICJMHyo6h/6s5BFEtBe8JJLxDuPI
T7jnwFN0qDynpH+76Sf26E6afprpAk9WgMfUp1ls1Vcy3VfyJ7P0onPAaS8x
B082Vi1wh4Gp/G1uM8haco2aRQNm1WO7SCwPTTuq8vb38XDq86ocp93xcEp2
ItE5DRyX6BtOXZGDkNxqXFRKn06Y2fLAoTujsjKjdARBQbJqVcdQKPTxeES1
VGupRureFRzRzV5hXI44uI8/5PD4qXEdlOwq38abFqbPLD0OgwessmFug0g1
ns+eoGFlRkO3SUDHNtPtkIzpk01x0yxy8UCaMf683ZGBoW5+Wguv5ILS76lb
YZngu/xbo5VJlp/wyJ8vEMr2sZ5jMbo+Vu12GOijMb5vbKC+y4uevFi/lR0T
GIPIYog2tbcyPlKGLvJwuZddhDqNyXZuJWZStGGZ+xMmXJl6ra/PfFQh875q
vUq669Pd8xPPO5PCO22HTZ5lKkcLZHrYJu2XcVEgI+P/qz4mfRZXE5HiYr9E
ZQWJWv48XwFypaaSNcFflBr5eHq4vfZdLvspE+wTMW3+tA7+FYOm0tkXRnW8
kKaVrRAv9YXwM11Z6u/Hqe7HX8gbWTh3QyRRnt4ohVS0RH8m2oDJA243SrS5
TBIg2bvod0R9YlkxSfpk2AqSrACJqbNqo1JaMNHfd1VhSqQviqjCd6PjgMCg
/3GEXOVpWJxJGRRMirGG63v5i1M/+oMy+lF3JYW72E39DtVERFvZMVP6m8b1
S+zZ4DF5edj0MKOVTKI1SZ/Dpv5YlRVYZcJxqU4tpFqczzTddEvUeR5RKrtR
lP8lb0uicZDb36LfWB0KJRi5YSRF5ocbD0v+MrmHXW+/q56NbaudDhHC8pxE
BsrpWZiYHiUv43qIqPr7Uj3Akyfx4/GDeE4tgB5tNNPqeYWZCHwln1H1IXj5
GIZXh+GmkaRGUg/2/0GlerBVt5XqYQy9X/H93qgmtCE8PPEpyebX8XoEZFfc
QyJDEMhrhNT64QgOm8WGrztc1exZqqpwW5pf4DRLsqRpwvcZJh9bLKli9HrS
Inztj9W1RWMHYDXdLrnIWOeWRgNrw/mEz7MapUkrUdbYYcKyWTn5U+Rn4BEd
KrJ7YQpyiSHbNxUp0A+vNsU17dE6KwvtinfWYUtiAzYktvmeSELwFasqv8xb
SC5KyD8Gft9zT8Ly6Ybik5pVaSxgSWQ9XrF7pqIA7ima0rG9x+rjhfxF3PF6
Wzw0bjb+9PyNmbb3eDjt4AovRvZi7PtgQK1zvbEnar6169BefePTyF2EEdtt
4SX5H3cLBnmr5Ra9xmQHCNPgLpLlYF0Wvl/Ye3heEXsMHcAx17LJ6Mf8uC7q
YXojvwtygWHLZ409zvREvpM3mYEwmFIEgWB9H75SaHBMo7E5nfsECED4wD8p
IH+fy7bgf/NtHjcHb9Oj+QspAYuRjeFSvg2WFHGQNPxlFwjqPJwxv5ofC18i
ZdTIqw1xmuCZ/BiMB5FlA9sYSQQYm93V6w+0bDIP5P9/NicweyEXidueToKd
ooFZIrdZeCJebRd5SQSQKvgN/MU2ccnWTysSlCMhld3zhgGaotiNwSFchLA3
9EPEgf5G3oBGnvN6APYIPJW/G1zxvqr4iTlYw3upYkxsPKKQFUTBFPrbjOxy
xh7S13Lj4AvE6S+0iRoXLb0zG9S7QrQKsU2dKVZyeY7eJF505yuo7pw2gUcx
ticy1p/mpmK1ioJpeunUvMVhhTv1TAdyeYhT7mKRBNi75/Y0Tg7oqcYuI77K
WL16pbEjYDJoVocP0cHQ+rdxi7COhZWgaceESAXciN8grpplcYa1bp1m8RQH
LYVf6SNHaBRr7WYiwd/X0P8srHoEADCm3LCjfKxsO+Nf5tfUmBiR1r0uurN2
7/sVVdWg1CMldl4DdXd+ApyW6DuQieu4tU/g1vFwjdr0exYTGEXxnaE72ZFE
rIZgT1E51ubxtlhHBGHceoK/diD5zqH+2tR4myIgLeuIVX3QtNX/Xk+0PF75
PComl5IU/0Qewrubfl9dwxh2C0ptd6MTxVFOO3pMPmjVPU5lRH+OUZ92Pe4g
P1Ub/MU32FdoQXk9//9nfFcvgsKx1ODb/fmLiHmWiGtU7aNdcbn2sf5n9y5W
oyHQTqzm/aTaINwBRkT6VDPMGuAj4OT/OEJK56HHyIIiB0xxxyUl4aHiRAuc
SNuXchBNbmHb6fdy8zf7iwMRewHZDDz7S7ad1HQ7GU4hdGIDYeN4L2YvIuuP
bJ1+nSpGIA7ma+K9UWkOCtPBY2rp7EF+5/uAo5P8llF6BhXPPdYUBydQ1pi3
nMJ3Y4QOF9XnCCwLGZq5h0BmhTmRvHnn4H/sOdCSLOoTcykeEY/mndjsL+4k
wOWHeARYFCB2GmCq0EmAYaEu4S8cQLUCTKOXsiJodDEf439TvQSXa0dI8Gh4
bPW/t50En2RhggTLyooceg9plOGqHeGZROKK1YkDWVlCaSsMb7Yfp3iWCd/g
L44QT7a4wPk6/kIFc0g5fGK38Re5eJkdj1XFgMOei5E+QhVflDd2iEmvjkQV
GXwEAUnJ4ciJn3+Ot4/Tx95eIO39nL2m992AxXN9kHFf/7Pn/dSdTMUJllPf
zsXavYjpBMXz2dNpKXUu/Pa251FZ9i/qkTfKm1h87q+uYSbH4nMfVYwtnom/
cZv9xVv9xVog/sMhCTweZux85JnUbHvUaB4pm9/0GXsTOvKQvyDxGf5iu8w2
DULBYwyq4caCQ/Y0fuWMPPl4fs1u/wsDEiFi\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"e6f89225-18dc-425b-a4fe-961206a4c848"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Fig. S7: Heat maps with higher ambient nitrogen and lower flushing rate\
\>", "Section",
 CellChangeTimes->{{3.842910239343411*^9, 3.8429102623791637`*^9}, {
  3.844784779829102*^9, 3.844784790906665*^9}, {3.8456448268610497`*^9, 
  3.84564482982432*^9}},ExpressionUUID->"9e9990be-590f-4938-a31a-\
ffdcd626af7c"],

Cell["Run simulations and format results", "Subsection",
 CellChangeTimes->{{3.842910318954228*^9, 
  3.8429103252839537`*^9}},ExpressionUUID->"80541c09-bf96-4603-bbc2-\
587a86568fbd"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Low Nenv, low flushing rate, no fish", \
"Subsubsection"]], "Subsection",
 CellChangeTimes->{{3.839063728408949*^9, 3.839063733412635*^9}, {
  3.843928861896461*^9, 
  3.8439288776419992`*^9}},ExpressionUUID->"d120667f-68bd-475c-984f-\
b1e470966287"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh", ",", 
    "LfunH"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.835958776293939*^9, 3.835958776660214*^9}, {
  3.8377032594274473`*^9, 3.837703260246002*^9}, {3.839082427041387*^9, 
  3.839082430646604*^9}, {3.839083364883099*^9, 3.839083365601475*^9}, {
  3.839083627849914*^9, 3.839083629073236*^9}, {3.843929040203124*^9, 
  3.843929043882115*^9}},
 CellLabel->
  "In[374]:=",ExpressionUUID->"48cea61b-f6a8-43ec-8c9f-c9ec6ead44ce"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"No", " ", "prey", " ", "no", " ", "fish"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"X", "=", "0"}], 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P0", "=", "0"}], 
    RowBox[{"(*", 
     RowBox[{"kp", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H0"}], "*)"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jX", "=", 
     FractionBox[
      RowBox[{"jXm", " ", "X"}], 
      RowBox[{"X", "+", "KX"}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"environment", ":", " ", 
     RowBox[{"flushing", " ", "rate", " ", "and", " ", "N", " ", "level"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jN", "=", 
     FractionBox[
      RowBox[{"jNm", " ", "\[CapitalNu]"}], 
      RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jNi0", " ", "=", " ", 
     FractionBox[
      RowBox[{"jNm", " ", "\[CapitalNu]"}], 
      RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"light", " ", "function", " ", "parameters"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tStartStress", "=", "600"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "use", " ", "nested", " ", "Table", " ", "to", " ", "run", " ", 
     "simulations", " ", "at", " ", "different", " ", "values", " ", "of", 
     " ", "LHigh", " ", "and", " ", "tHigh"}], "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"stressRunsnoPnoX1", " ", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"jX", "=", 
               FractionBox[
                RowBox[{"jXm", " ", "X"}], 
                RowBox[{"X", "+", "KX"}]]}], ",", " ", 
              RowBox[{"jN", "=", 
               FractionBox[
                RowBox[{"jNm", " ", "\[CapitalNu]"}], 
                RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ","}], "*)"}], 
            RowBox[{
             RowBox[{"jHT", "=", "j0HT"}], ",", 
             RowBox[{"rNS", "=", 
              RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
             RowBox[{"VH0", "=", 
              RowBox[{"kv", "*", "H0"}]}], ",", " ", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
               RowBox[{"jNi0", " ", "=", " ", 
                FractionBox[
                 RowBox[{"jNm", " ", "\[CapitalNu]"}], 
                 RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ","}], "*)"}], 
             "states", ",", " ", "rNH", ",", " ", "S", ",", "H", ",", "VH", 
             ",", "P", ",", "Ni", ",", "jNi", ",", "\[Rho]C", ",", " ", "jCP",
              ",", " ", "jHG", ",", "\[Rho]N", ",", "jeC", ",", "jCO2", ",", 
             "A", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
             ",", "cROS1", ",", "jSG", ",", "jST", ",", "jNw", ",", "F", ",", 
             "fh", ",", "LfunH", ",", "tsolve", ",", " ", 
             "addtimetostatevars", ",", "eqs", ",", "inis", ",", "sol", ",", 
             "t", ",", "tEvals", ",", "addtmax", ",", "minGrowth", ",", 
             "minSSU", ",", "minHSU", ",", "growthFinal", ",", "SSUfinal", 
             ",", "HSUfinal", ",", "tmax"}], 
            RowBox[{"(*", 
             RowBox[{
             "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
              "intermediate", " ", "output", " ", "values", " ", "in", " ", 
              "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"tmax", "=", 
             RowBox[{"tStartStress", "+", "tHigh", "+", "100"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"light", " ", "function"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"LfunH", "=", 
             RowBox[{"L", "+", " ", 
              RowBox[{"LHigh", "*", 
               RowBox[{"HeavisideTheta", "[", 
                RowBox[{"t", "-", "tStartStress"}], "]"}]}], " ", "-", "  ", 
              RowBox[{"LHigh", "*", 
               RowBox[{"HeavisideTheta", "[", 
                RowBox[{"t", "-", 
                 RowBox[{"(", 
                  RowBox[{"tStartStress", "+", "tHigh"}], ")"}]}], 
                "]"}]}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"light", " ", "is", " ", "L", " ", "for", " ", "t"}], 
              "<", 
              RowBox[{
               RowBox[{"tStartStress", " ", "and", " ", "L"}], "+", 
               RowBox[{"LHigh", " ", "if", " ", "tStartStress"}]}], " ", 
              "\[LessEqual]", " ", "t", " ", "<", " ", 
              RowBox[{"tStartStress", "+", " ", 
               RowBox[{"tHigh", " ", "and", " ", "L", " ", "if", " ", "t"}]}],
               "\[GreaterEqual]", " ", 
              RowBox[{"tStartStress", "+", " ", "tHigh"}]}], " ", "*)"}], 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
              RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
             FractionBox[
              RowBox[{"A", " ", "B", " ", 
               RowBox[{"(", 
                RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
              RowBox[{
               RowBox[{
                SuperscriptBox["A", "2"], " ", "B"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox["B", "2"]}], "+", 
               RowBox[{
                SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
               RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
               RowBox[{
                SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
            RowBox[{"(*", 
             RowBox[{"same", " ", "as", " ", 
              FractionBox["1", 
               RowBox[{
                FractionBox["1", "\[Rho]"], "+", 
                FractionBox["1", "A"], "+", 
                FractionBox["1", "B"], "-", 
                FractionBox["1", 
                 RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fh", "[", 
              RowBox[{
               RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
             RowBox[{"Piecewise", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", 
                  RowBox[{"y", "<", "0"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"kv", " ", "*", "y"}], ",", 
                  RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
              "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", "Calculations", " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"jHG", "=", 
             RowBox[{
              RowBox[{"F", "[", "jHGm", "]"}], "[", 
              RowBox[{
               RowBox[{"yC", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Rho]C", " ", 
                   RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                  
                  RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                  RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                SuperscriptBox["nNH", 
                 RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"jSG", "=", 
             RowBox[{
              RowBox[{"F", "[", "jSGm", "]"}], "[", 
              RowBox[{
               RowBox[{"jCP", " ", "yC"}], ",", 
               FractionBox[
                RowBox[{"rNS", "+", 
                 FractionBox[
                  RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"\[Rho]N", "=", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
                RowBox[{"nNH", " ", "jHG"}]}], " ", 
               RowBox[{"(*", 
                SuperscriptBox["yN", 
                 RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jeC", "=", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"jX", "-", 
                FractionBox["jHG", "yC"], "+", 
                FractionBox[
                 RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], 
            ";", " ", "\[IndentingNewLine]", 
            RowBox[{"jCO2", "=", 
             RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jL", "=", 
             RowBox[{"A", " ", "astar", "*", "LfunH"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"rCH", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"jHT", "+", 
                FractionBox[
                 RowBox[{"jHG", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
              "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"rCS", "=", 
             RowBox[{"\[Sigma]CS", 
              RowBox[{"(", 
               RowBox[{"j0ST", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
                 SuperscriptBox["yC", 
                  RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jeL", "=", 
             RowBox[{"jL", "-", 
              FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jNPQ", "=", 
             FractionBox["1", 
              RowBox[{
               FractionBox["1", "jeL"], "+", 
               FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
            RowBox[{"cROS1", "=", 
             FractionBox[
              RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jST", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"rNH", "=", 
             RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"A", "=", 
             RowBox[{"1.256307", "+", 
              RowBox[{"1.385969", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "6.479055"}], " ", 
                 RowBox[{"S", "/", "H"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jNw", "=", " ", 
             RowBox[{
              RowBox[{"\[Rho]N", "*", 
               RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
              RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"tsolve", "=", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Rho]C", ",", 
                 RowBox[{"jCP", "-", 
                  RowBox[{"jSG", " ", 
                   SuperscriptBox["yC", 
                    RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"jCP", ",", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"F", "[", "jCPm", "]"}], "[", 
                   RowBox[{
                    RowBox[{"jL", " ", "yCL"}], ",", 
                    RowBox[{"rCS", "+", 
                    FractionBox[
                    RowBox[{"H", " ", 
                    RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
                  RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"jNi", ",", " ", 
                 FractionBox[
                  RowBox[{"jNm", " ", "*", "Ni"}], 
                  RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
              "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"states", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"tsolve", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
                "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"addtimetostatevars", "=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"#", "\[Rule]", 
                  RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", 
               "states"}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
            RowBox[{"eqs", "=", 
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
                   "\[Equal]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Lambda]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
                "tsolve"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"S", 
                    RowBox[{"(", 
                    RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"H", 
                    RowBox[{"(", 
                    RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                  RowBox[{"fh", "[", 
                   RowBox[{"t", ",", " ", 
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"d", "*", 
                    RowBox[{"(", " ", 
                    RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                    " ", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                    ")"}], "/", 
                    RowBox[{"(", " ", 
                    RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
                  
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"P", "*", 
                    RowBox[{"(", 
                    RowBox[{"rp", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                    ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
                "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"inis", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], 
                   "\[Equal]", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
                "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"sol", "=", 
             RowBox[{
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Join", "[", 
                  RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"#", "&"}], "/@", "states"}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
                RowBox[{"Method", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<EquationSimplification\>\"", "\[Rule]", 
                   "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"outputs", " ", "to", " ", "record"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"minimum", " ", "host", " ", "growth", " ", 
              RowBox[{"rate", ":", " ", 
               RowBox[{
               "see", " ", "if", " ", "growth", " ", "ever", " ", "went", " ",
                 "negative"}]}]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "evaluate", " ", "host", " ", "growth", " ", "rate", " ", "at", 
              " ", "all", " ", "points", " ", "from", " ", "the", " ", 
              "start", " ", "of", " ", "stress", " ", "to", " ", "the", " ", 
              "end", " ", "of", " ", "the", " ", "run", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "EXCEPT", " ", "when", " ", "t", " ", "is", " ", "exactly", 
                 " ", "equal", " ", "to", " ", "tStartStress", " ", "and", 
                 " ", "tStartStress"}], " ", "+", 
                RowBox[{
                "tHigh", " ", "because", " ", "at", " ", "these", " ", 
                 "points", " ", "one", " ", "of", " ", "the", " ", 
                 "HeavisideTheta", " ", "functions", " ", "has", " ", "an", 
                 " ", "argument", " ", "of", " ", "0", " ", "which", " ", 
                 "is", " ", "not", " ", "evaluated", " ", "so", " ", "the", 
                 " ", "growth", " ", "values", " ", "are", " ", 
                 "inaccurate"}]}], ")"}], " ", "and", " ", "record", " ", 
              "the", " ", "minimum", " ", "of", " ", "these", " ", "values"}],
              "*)"}], "\[IndentingNewLine]", 
            RowBox[{"tEvals", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{"t", ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"t", ",", 
                    RowBox[{"tStartStress", "+", "1"}], ",", 
                    RowBox[{"tStartStress", "+", "tHigh", "-", "1"}]}], 
                   "}"}]}], "]"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{"t", ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"t", ",", 
                    RowBox[{"tStartStress", "+", "tHigh", "+", "1"}], ",", 
                    " ", "tmax"}], "}"}]}], "]"}]}], "}"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"minGrowth", "=", 
             RowBox[{"Min", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}], "/", 
                    RowBox[{"H", "[", "t", "]"}]}], "}"}], "/.", "sol"}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "tEvals"}], "}"}]}], "]"}], "]"}], 
              "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"min", " ", "S", " ", "SU", " ", "C"}], "-", "lim"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"minSSU", "=", 
             RowBox[{"Min", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Evaluate", "@", 
                  RowBox[{"Flatten", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"jSGm", ",", 
                    RowBox[{"jCP", " ", "yC"}]}], "]"}], "/", 
                    RowBox[{"Min", "[", 
                    RowBox[{"jSGm", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"rNS", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"H", " ", "\[Rho]N"}], ")"}], "/", "S"}]}], ")"}],
                     "/", "nNS"}]}], "]"}]}], "]"}], "/.", 
                    "addtimetostatevars"}], "/.", "sol"}], "}"}]}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "tEvals"}], "}"}]}], "]"}], "]"}], 
              "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"min", " ", "H", " ", "SU", " ", "C"}], "-", "lim"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"minHSU", "=", 
             RowBox[{"Min", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Evaluate", "@", 
                  RowBox[{"Flatten", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"jHGm", ",", 
                    RowBox[{"yC", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Rho]C", " ", 
                    RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}]}], "]"}], 
                    "/", 
                    RowBox[{"Min", "[", 
                    RowBox[{"jHGm", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                    
                    RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                    RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                    RowBox[{"nNH", "^", 
                    RowBox[{"-", "1"}]}]}]}], "]"}]}], "]"}], "/.", 
                    "addtimetostatevars"}], "/.", "sol"}], "}"}]}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "tEvals"}], "}"}]}], "]"}], "]"}], 
              "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "growth", " ", "and", " ", "SU", " ", "limitations", " ", "100", 
              " ", "days", " ", "after", " ", "end", " ", "of", " ", "stress",
               " ", 
              RowBox[{"(", "tmax", ")"}]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"addtmax", "=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"#", "\[Rule]", 
                  RowBox[{"#", "[", "tmax", "]"}]}], ")"}], "&"}], "/@", 
               "states"}], ")"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"growthFinal", "=", 
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
                 RowBox[{"H", "[", "tmax", "]"}]}], "}"}], "/.", "sol"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"SSUfinal", "=", 
             RowBox[{"Evaluate", "@", 
              RowBox[{"Flatten", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Log", "[", 
                   RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"jSGm", ",", 
                    RowBox[{"jCP", " ", "yC"}]}], "]"}], "/", 
                    RowBox[{"Min", "[", 
                    RowBox[{"jSGm", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"rNS", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"H", " ", "\[Rho]N"}], ")"}], "/", "S"}]}], ")"}],
                     "/", "nNS"}]}], "]"}]}], "]"}], "/.", "addtmax"}], "/.", 
                 "sol"}], "}"}]}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"HSUfinal", "=", 
             RowBox[{"Evaluate", "@", 
              RowBox[{"Flatten", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Log", "[", 
                   RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"jHGm", ",", 
                    RowBox[{"yC", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Rho]C", " ", 
                    RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}]}], "]"}], 
                    "/", 
                    RowBox[{"Min", "[", 
                    RowBox[{"jHGm", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                    
                    RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                    RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                    RowBox[{"nNH", "^", 
                    RowBox[{"-", "1"}]}]}]}], "]"}]}], "]"}], "/.", 
                  "addtmax"}], "/.", "sol"}], "}"}]}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
             "minGrowth", ",", "minSSU", ",", "minHSU", ",", "growthFinal", 
              ",", "SSUfinal", ",", "HSUfinal"}], "}"}]}]}], 
          RowBox[{"(*", "output", "*)"}], "]"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"LHigh", ",", " ", 
           RowBox[{"{", 
            RowBox[{
            "20", ",", "21", ",", "22", ",", "23", ",", "24", ",", "25", ",", 
             "26", ",", "27", ",", " ", "28", ",", " ", "29", ",", " ", "30", 
             ",", " ", "31", ",", " ", "32", ",", "33", ",", "34", ",", 
             "35"}], "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"(*", 
        RowBox[{"pulse", " ", "magnitudes", " ", "tested", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "note", " ", "total", " ", "magnitude", " ", "is", " ", "LHigh"}], 
           " ", "+", " ", "L"}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"{", 
        RowBox[{"tHigh", ",", " ", "7", ",", "35", ",", " ", "2"}], "}"}]}], 
      RowBox[{"(*", 
       RowBox[{"pulse", " ", "durations", " ", 
        RowBox[{"tested", ":", " ", 
         RowBox[{
         "from", " ", "7", " ", "to", " ", "35", " ", "in", " ", "intervals", 
          " ", "of", " ", "2", " ", "days"}]}]}], "*)"}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.829487218238818*^9, 3.829487340830228*^9}, {
   3.8294873806880217`*^9, 3.8294874269672832`*^9}, {3.829500896388752*^9, 
   3.829500908802194*^9}, {3.829501112152754*^9, 3.829501135257264*^9}, {
   3.829501241084306*^9, 3.829501241884633*^9}, {3.829501574167392*^9, 
   3.829501583580276*^9}, {3.829501617509512*^9, 3.829501677659926*^9}, {
   3.829502006849699*^9, 3.829502018495438*^9}, {3.829502160201325*^9, 
   3.82950223384923*^9}, {3.8295022721812687`*^9, 3.829502276730755*^9}, {
   3.829502317230337*^9, 3.829502339304162*^9}, {3.829502370881653*^9, 
   3.829502379957067*^9}, {3.8295024856903963`*^9, 3.829502501672971*^9}, {
   3.8295026555033817`*^9, 3.829502733674634*^9}, {3.8295029041631002`*^9, 
   3.829502912860187*^9}, {3.829503002399979*^9, 3.829503045174202*^9}, {
   3.8295032577389793`*^9, 3.829503290274219*^9}, {3.829503324066503*^9, 
   3.8295033442922907`*^9}, {3.829503387185981*^9, 3.829503398911695*^9}, {
   3.829503465386711*^9, 3.829503477793399*^9}, {3.8295035165436783`*^9, 
   3.829503590048273*^9}, {3.829503717870039*^9, 3.829503764094996*^9}, {
   3.8295041592721233`*^9, 3.829504196908506*^9}, {3.829504285599513*^9, 
   3.829504288353764*^9}, {3.829504386966423*^9, 3.82950440838068*^9}, {
   3.82950523169444*^9, 3.8295052665875473`*^9}, {3.8295053132579403`*^9, 
   3.829505450966359*^9}, {3.829507916540868*^9, 3.829508163555718*^9}, {
   3.8295082659983253`*^9, 3.829508285142787*^9}, {3.829508326042542*^9, 
   3.829508608124104*^9}, {3.829508694018161*^9, 3.82950871713163*^9}, {
   3.829508754940113*^9, 3.82950876919207*^9}, {3.8295088345374937`*^9, 
   3.829508837273567*^9}, 3.8295089867975197`*^9, 3.829509149320486*^9, {
   3.829509416306684*^9, 3.829509434104252*^9}, {3.8295095387162743`*^9, 
   3.829509598505484*^9}, {3.82950965984171*^9, 3.829509663163797*^9}, {
   3.8295097156808157`*^9, 3.8295097296355886`*^9}, {3.829509804004746*^9, 
   3.829509812154416*^9}, {3.82950995658786*^9, 3.829510005047759*^9}, 
   3.829510068085787*^9, 3.829511235559108*^9, {3.8295112728201523`*^9, 
   3.82951127307434*^9}, {3.829511787966587*^9, 3.8295117927206793`*^9}, {
   3.829511870384144*^9, 3.829511878312793*^9}, {3.829511915702517*^9, 
   3.829511929463889*^9}, {3.829511986188163*^9, 3.829511987731019*^9}, {
   3.8295120591987543`*^9, 3.8295120673081417`*^9}, {3.8295133548668423`*^9, 
   3.8295133552911863`*^9}, 3.8295135246752567`*^9, 3.82951434134858*^9, {
   3.829514554726305*^9, 3.829514555866014*^9}, {3.829514615523479*^9, 
   3.829514622281967*^9}, {3.829514944354291*^9, 3.8295150106590223`*^9}, {
   3.82951507235223*^9, 3.8295150758519287`*^9}, {3.8295154366645412`*^9, 
   3.829515446450766*^9}, {3.829516276513648*^9, 3.8295162800638733`*^9}, {
   3.829516591557345*^9, 3.829516608131502*^9}, {3.829517198428339*^9, 
   3.829517201439293*^9}, {3.829517323071352*^9, 3.8295173266107197`*^9}, {
   3.8295175178345337`*^9, 3.8295175216479473`*^9}, {3.8295555718361998`*^9, 
   3.829555591214752*^9}, {3.82955601623978*^9, 3.829556019550569*^9}, {
   3.8295562145780287`*^9, 3.829556222658545*^9}, {3.829556448150885*^9, 
   3.8295564514081182`*^9}, {3.829933661570964*^9, 3.829933661748317*^9}, {
   3.829933866781752*^9, 3.8299338787818937`*^9}, {3.829934217792124*^9, 
   3.8299342214335546`*^9}, {3.829934447451603*^9, 3.829934457829863*^9}, {
   3.8299347049167747`*^9, 3.829934709007524*^9}, {3.829935274414411*^9, 
   3.829935309478222*^9}, {3.8299355608814583`*^9, 3.8299355662085667`*^9}, {
   3.8299357921733522`*^9, 3.8299358025776463`*^9}, {3.829936063257595*^9, 
   3.829936066806546*^9}, {3.829936263938973*^9, 3.829936297215189*^9}, {
   3.829936556330872*^9, 3.8299365602933702`*^9}, {3.829936789903631*^9, 
   3.8299367991636066`*^9}, {3.829937101196032*^9, 3.8299371045224333`*^9}, {
   3.830116985089054*^9, 3.83011704818042*^9}, {3.830117283054928*^9, 
   3.830117285992*^9}, {3.830117622251795*^9, 3.830117635409677*^9}, {
   3.8301179303521967`*^9, 3.8301179341011877`*^9}, {3.8301181285397177`*^9, 
   3.830118137419471*^9}, {3.8301184273465033`*^9, 3.8301184304682093`*^9}, {
   3.8311319840930557`*^9, 3.831132110666339*^9}, {3.83113214208764*^9, 
   3.831132170886119*^9}, {3.831132490373948*^9, 3.831132495002697*^9}, {
   3.8311331691345377`*^9, 3.831133175209016*^9}, {3.831822771215622*^9, 
   3.83182279235844*^9}, {3.831823062704329*^9, 3.831823204545065*^9}, {
   3.831823262504127*^9, 3.8318234376809063`*^9}, {3.831902060020858*^9, 
   3.831902074704687*^9}, {3.83198594704652*^9, 3.831985951686501*^9}, {
   3.835957132624877*^9, 3.835957154422502*^9}, {3.8359571908360977`*^9, 
   3.83595723410119*^9}, {3.8359572678539057`*^9, 3.8359573400486097`*^9}, {
   3.83595739268198*^9, 3.835957413284924*^9}, {3.835957467086043*^9, 
   3.8359574740651083`*^9}, {3.835957508680011*^9, 3.835957512901635*^9}, {
   3.835957550798182*^9, 3.835957562332097*^9}, {3.835957592611458*^9, 
   3.835957624208508*^9}, {3.835957720622128*^9, 3.835957794725771*^9}, {
   3.8359579316199083`*^9, 3.8359579440670424`*^9}, {3.8359585510594*^9, 
   3.835958552204524*^9}, {3.8359585988951817`*^9, 3.8359586040853662`*^9}, {
   3.835969184864643*^9, 3.835969190701868*^9}, {3.835971692690229*^9, 
   3.835971715818289*^9}, {3.835971801995998*^9, 3.835971823019558*^9}, {
   3.8361460311842422`*^9, 3.83614603842451*^9}, 3.837624597968054*^9, {
   3.8376246373535357`*^9, 3.837624701015994*^9}, {3.8376247386388807`*^9, 
   3.8376247519976482`*^9}, {3.837624862552038*^9, 3.8376248636496267`*^9}, 
   3.837625324827827*^9, {3.837701994245088*^9, 3.837702003413064*^9}, {
   3.837702074061858*^9, 3.837702152448566*^9}, {3.837702202519824*^9, 
   3.837702226147334*^9}, {3.837702398500094*^9, 3.83770240006094*^9}, {
   3.837719864262343*^9, 3.837719884452879*^9}, {3.837720184196424*^9, 
   3.837720212868043*^9}, {3.837720248076042*^9, 3.837720265306219*^9}, {
   3.837720343243413*^9, 3.837720367724112*^9}, {3.837720488254046*^9, 
   3.837720490417639*^9}, {3.837720660083946*^9, 3.837720660632824*^9}, {
   3.837720720300218*^9, 3.837720722077948*^9}, 3.837720806225874*^9, {
   3.837723786840288*^9, 3.8377238065871677`*^9}, {3.837723837641962*^9, 
   3.8377239934166183`*^9}, 3.837724063277957*^9, {3.83772450990772*^9, 
   3.8377245169411087`*^9}, {3.839064049300655*^9, 3.839064064772105*^9}, {
   3.839064094783701*^9, 3.839064103415638*^9}, {3.83906472867107*^9, 
   3.83906474064463*^9}, {3.839064782635664*^9, 3.839064899163911*^9}, {
   3.839064929194893*^9, 3.839065010752234*^9}, 3.839082382207344*^9, 
   3.843928369499057*^9, {3.843929051739538*^9, 3.8439291387447567`*^9}, {
   3.844464406983601*^9, 3.8444644637104197`*^9}, {3.854025548363031*^9, 
   3.854025558360572*^9}},
 CellLabel->
  "In[375]:=",ExpressionUUID->"a993aa59-e0f6-44d3-9531-c02c3d4f1b8f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"save", " ", "the", " ", "output"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<stressRunsnoPnoX1\>\"", ",", "stressRunsnoPnoX1"}], " ", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.839082397676797*^9, 3.839082404119104*^9}, {
  3.843929166193017*^9, 3.843929172011045*^9}},
 CellLabel->
  "In[385]:=",ExpressionUUID->"40ae94f6-88f0-402a-95fb-b573643979d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Low Nenv, low flushing rate, with fish", \
"Subsubsection"]], "Subsection",
 CellChangeTimes->{{3.8390824401318407`*^9, 3.839082449730575*^9}, {
  3.843928883274074*^9, 
  3.843928890796056*^9}},ExpressionUUID->"3976df7c-7618-403a-b6ec-\
ba1313710de9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh", ",", 
    "LfunH"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.835958776293939*^9, 3.835958776660214*^9}, {
  3.8377032594274473`*^9, 3.837703260246002*^9}, {3.83908338439825*^9, 
  3.839083385347395*^9}, {3.843929181494027*^9, 3.843929181995719*^9}},
 CellLabel->
  "In[386]:=",ExpressionUUID->"766b2a79-da83-4e39-9161-d3f0523f3743"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"No", " ", "prey", " ", "with", " ", "fish"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"X", "=", "0"}], 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P0", "=", 
     RowBox[{"(*", "0", "*)"}], 
     RowBox[{"kp", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H0"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jX", "=", 
     FractionBox[
      RowBox[{"jXm", " ", "X"}], 
      RowBox[{"X", "+", "KX"}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"environment", ":", " ", 
     RowBox[{"flushing", " ", "rate", " ", "and", " ", "N", " ", "level"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}]}], 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jN", "=", 
     FractionBox[
      RowBox[{"jNm", " ", "\[CapitalNu]"}], 
      RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jNi0", " ", "=", " ", 
     FractionBox[
      RowBox[{"jNm", " ", "\[CapitalNu]"}], 
      RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"light", " ", "function", " ", "parameters"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tStartStress", "=", "600"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stressRunsPnoX1", " ", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"jX", "=", 
               FractionBox[
                RowBox[{"jXm", " ", "X"}], 
                RowBox[{"X", "+", "KX"}]]}], ",", " ", 
              RowBox[{"jN", "=", 
               FractionBox[
                RowBox[{"jNm", " ", "\[CapitalNu]"}], 
                RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ","}], "*)"}], 
            RowBox[{
             RowBox[{"jHT", "=", "j0HT"}], ",", 
             RowBox[{"rNS", "=", 
              RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
             RowBox[{"VH0", "=", 
              RowBox[{"kv", "*", "H0"}]}], ",", " ", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
               RowBox[{"jNi0", " ", "=", " ", 
                FractionBox[
                 RowBox[{"jNm", " ", "\[CapitalNu]"}], 
                 RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ","}], "*)"}], 
             "states", ",", " ", "rNH", ",", " ", "S", ",", "H", ",", "VH", 
             ",", "P", ",", "Ni", ",", "jNi", ",", "\[Rho]C", ",", " ", "jCP",
              ",", " ", "jHG", ",", "\[Rho]N", ",", "jeC", ",", "jCO2", ",", 
             "A", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
             ",", "cROS1", ",", "jSG", ",", "jST", ",", "jNw", ",", "F", ",", 
             "fh", ",", "LfunH", ",", "tsolve", ",", " ", 
             "addtimetostatevars", ",", "eqs", ",", "inis", ",", "sol", ",", 
             "t", ",", "tEvals", ",", "addtmax", ",", "minGrowth", ",", 
             "minSSU", ",", "minHSU", ",", "growthFinal", ",", "SSUfinal", 
             ",", "HSUfinal", ",", "tmax"}], 
            RowBox[{"(*", 
             RowBox[{
             "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
              "intermediate", " ", "output", " ", "values", " ", "in", " ", 
              "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"tmax", "=", 
             RowBox[{"tStartStress", "+", "tHigh", "+", "100"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"light", " ", "function"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"LfunH", "=", 
             RowBox[{"L", "+", " ", 
              RowBox[{"LHigh", "*", 
               RowBox[{"HeavisideTheta", "[", 
                RowBox[{"t", "-", "tStartStress"}], "]"}]}], " ", "-", "  ", 
              RowBox[{"LHigh", "*", 
               RowBox[{"HeavisideTheta", "[", 
                RowBox[{"t", "-", 
                 RowBox[{"(", 
                  RowBox[{"tStartStress", "+", "tHigh"}], ")"}]}], 
                "]"}]}]}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
              RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
             FractionBox[
              RowBox[{"A", " ", "B", " ", 
               RowBox[{"(", 
                RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
              RowBox[{
               RowBox[{
                SuperscriptBox["A", "2"], " ", "B"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox["B", "2"]}], "+", 
               RowBox[{
                SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
               RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
               RowBox[{
                SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
            RowBox[{"(*", 
             RowBox[{"same", " ", "as", " ", 
              FractionBox["1", 
               RowBox[{
                FractionBox["1", "\[Rho]"], "+", 
                FractionBox["1", "A"], "+", 
                FractionBox["1", "B"], "-", 
                FractionBox["1", 
                 RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fh", "[", 
              RowBox[{
               RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
             RowBox[{"Piecewise", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", 
                  RowBox[{"y", "<", "0"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"kv", " ", "*", "y"}], ",", 
                  RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", "Calculations", " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"jHG", "=", 
             RowBox[{
              RowBox[{"F", "[", "jHGm", "]"}], "[", 
              RowBox[{
               RowBox[{"yC", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Rho]C", " ", 
                   RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                  
                  RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                  RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                SuperscriptBox["nNH", 
                 RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"jSG", "=", 
             RowBox[{
              RowBox[{"F", "[", "jSGm", "]"}], "[", 
              RowBox[{
               RowBox[{"jCP", " ", "yC"}], ",", 
               FractionBox[
                RowBox[{"rNS", "+", 
                 FractionBox[
                  RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"\[Rho]N", "=", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
                RowBox[{"nNH", " ", "jHG"}]}], " ", 
               RowBox[{"(*", 
                SuperscriptBox["yN", 
                 RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jeC", "=", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"jX", "-", 
                FractionBox["jHG", "yC"], "+", 
                FractionBox[
                 RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], 
            ";", " ", "\[IndentingNewLine]", 
            RowBox[{"jCO2", "=", 
             RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jL", "=", 
             RowBox[{"A", " ", "astar", " ", "LfunH"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"rCH", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"jHT", "+", 
                FractionBox[
                 RowBox[{"jHG", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
              "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"rCS", "=", 
             RowBox[{"\[Sigma]CS", 
              RowBox[{"(", 
               RowBox[{"j0ST", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
                 SuperscriptBox["yC", 
                  RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jeL", "=", 
             RowBox[{"jL", "-", 
              FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jNPQ", "=", 
             FractionBox["1", 
              RowBox[{
               FractionBox["1", "jeL"], "+", 
               FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
            RowBox[{"cROS1", "=", 
             FractionBox[
              RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jST", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"rNH", "=", 
             RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"A", "=", 
             RowBox[{"1.256307", "+", 
              RowBox[{"1.385969", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "6.479055"}], " ", 
                 RowBox[{"S", "/", "H"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jNw", "=", " ", 
             RowBox[{
              RowBox[{"\[Rho]N", "*", 
               RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
              RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"tsolve", "=", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Rho]C", ",", 
                 RowBox[{"jCP", "-", 
                  RowBox[{"jSG", " ", 
                   SuperscriptBox["yC", 
                    RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"jCP", ",", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"F", "[", "jCPm", "]"}], "[", 
                   RowBox[{
                    RowBox[{"jL", " ", "yCL"}], ",", 
                    RowBox[{"rCS", "+", 
                    FractionBox[
                    RowBox[{"H", " ", 
                    RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
                  RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"jNi", ",", " ", 
                 FractionBox[
                  RowBox[{"jNm", " ", "*", "Ni"}], 
                  RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
              "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"states", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"tsolve", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
                "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"addtimetostatevars", "=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"#", "\[Rule]", 
                  RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", 
               "states"}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
            RowBox[{"eqs", "=", 
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
                   "\[Equal]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Lambda]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
                "tsolve"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"S", 
                    RowBox[{"(", 
                    RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"H", 
                    RowBox[{"(", 
                    RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                  RowBox[{"fh", "[", 
                   RowBox[{"t", ",", "  ", 
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"d", "*", 
                    RowBox[{"(", " ", 
                    RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                    " ", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                    ")"}], "/", 
                    RowBox[{"(", " ", 
                    RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
                  
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"P", "*", 
                    RowBox[{"(", 
                    RowBox[{"rp", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                    ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
                "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"inis", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], 
                   "\[Equal]", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
                "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"sol", "=", 
             RowBox[{
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Join", "[", 
                  RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"#", "&"}], "/@", "states"}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
                RowBox[{"Method", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<EquationSimplification\>\"", "\[Rule]", 
                   "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"outputs", " ", "to", " ", "record"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"minimum", " ", "host", " ", "growth", " ", 
              RowBox[{"rate", ":", " ", 
               RowBox[{
               "see", " ", "if", " ", "growth", " ", "ever", " ", "went", " ",
                 "negative"}]}]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"tEvals", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{"t", ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"t", ",", 
                    RowBox[{"tStartStress", "+", "1"}], ",", 
                    RowBox[{"tStartStress", "+", "tHigh", "-", "1"}]}], 
                   "}"}]}], "]"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{"t", ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"t", ",", 
                    RowBox[{"tStartStress", "+", "tHigh", "+", "1"}], ",", 
                    " ", "tmax"}], "}"}]}], "]"}]}], "}"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"minGrowth", "=", 
             RowBox[{"Min", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}], "/", 
                    RowBox[{"H", "[", "t", "]"}]}], "}"}], "/.", "sol"}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "tEvals"}], "}"}]}], "]"}], "]"}], 
              "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"min", " ", "S", " ", "SU", " ", "C"}], "-", "lim"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"minSSU", "=", 
             RowBox[{"Min", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Evaluate", "@", 
                  RowBox[{"Flatten", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"jSGm", ",", 
                    RowBox[{"jCP", " ", "yC"}]}], "]"}], "/", 
                    RowBox[{"Min", "[", 
                    RowBox[{"jSGm", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"rNS", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"H", " ", "\[Rho]N"}], ")"}], "/", "S"}]}], ")"}],
                     "/", "nNS"}]}], "]"}]}], "]"}], "/.", 
                    "addtimetostatevars"}], "/.", "sol"}], "}"}]}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "tEvals"}], "}"}]}], "]"}], "]"}], 
              "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"min", " ", "H", " ", "SU", " ", "C"}], "-", "lim"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"minHSU", "=", 
             RowBox[{"Min", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Evaluate", "@", 
                  RowBox[{"Flatten", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"jHGm", ",", 
                    RowBox[{"yC", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Rho]C", " ", 
                    RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}]}], "]"}], 
                    "/", 
                    RowBox[{"Min", "[", 
                    RowBox[{"jHGm", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                    
                    RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                    RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                    RowBox[{"nNH", "^", 
                    RowBox[{"-", "1"}]}]}]}], "]"}]}], "]"}], "/.", 
                    "addtimetostatevars"}], "/.", "sol"}], "}"}]}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "tEvals"}], "}"}]}], "]"}], "]"}], 
              "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "growth", " ", "and", " ", "SU", " ", "limitations", " ", "100", 
              " ", "days", " ", "after", " ", "end", " ", "of", " ", "stress",
               " ", 
              RowBox[{"(", "tmax", ")"}]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"addtmax", "=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"#", "\[Rule]", 
                  RowBox[{"#", "[", "tmax", "]"}]}], ")"}], "&"}], "/@", 
               "states"}], ")"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"growthFinal", "=", 
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
                 RowBox[{"H", "[", "tmax", "]"}]}], "}"}], "/.", "sol"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"SSUfinal", "=", 
             RowBox[{"Evaluate", "@", 
              RowBox[{"Flatten", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Log", "[", 
                   RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"jSGm", ",", 
                    RowBox[{"jCP", " ", "yC"}]}], "]"}], "/", 
                    RowBox[{"Min", "[", 
                    RowBox[{"jSGm", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"rNS", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"H", " ", "\[Rho]N"}], ")"}], "/", "S"}]}], ")"}],
                     "/", "nNS"}]}], "]"}]}], "]"}], "/.", "addtmax"}], "/.", 
                 "sol"}], "}"}]}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"HSUfinal", "=", 
             RowBox[{"Evaluate", "@", 
              RowBox[{"Flatten", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Log", "[", 
                   RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"jHGm", ",", 
                    RowBox[{"yC", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Rho]C", " ", 
                    RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}]}], "]"}], 
                    "/", 
                    RowBox[{"Min", "[", 
                    RowBox[{"jHGm", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                    
                    RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                    RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                    RowBox[{"nNH", "^", 
                    RowBox[{"-", "1"}]}]}]}], "]"}]}], "]"}], "/.", 
                  "addtmax"}], "/.", "sol"}], "}"}]}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
             "minGrowth", ",", "minSSU", ",", "minHSU", ",", "growthFinal", 
              ",", "SSUfinal", ",", "HSUfinal"}], "}"}]}]}], 
          RowBox[{"(*", "output", "*)"}], "]"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"LHigh", ",", " ", 
           RowBox[{"{", 
            RowBox[{
            "20", ",", "21", ",", "22", ",", "23", ",", "24", ",", "25", ",", 
             "26", ",", "27", ",", " ", "28", ",", " ", "29", ",", " ", "30", 
             ",", " ", "31", ",", " ", "32", ",", "33", ",", "34", ",", 
             "35"}], "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"(*", 
        RowBox[{"pulse", " ", "magnitudes", " ", "tested", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "note", " ", "total", " ", "magnitude", " ", "is", " ", "LHigh"}], 
           " ", "+", " ", "L"}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"{", 
        RowBox[{"tHigh", ",", " ", "7", ",", "35", ",", " ", "2"}], "}"}]}], 
      RowBox[{"(*", 
       RowBox[{"pulse", " ", "durations", " ", 
        RowBox[{"tested", ":", " ", 
         RowBox[{
         "from", " ", "7", " ", "to", " ", "35", " ", "in", " ", "intervals", 
          " ", "of", " ", "2", " ", "days"}]}]}], "*)"}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8359586917368517`*^9, 3.8359588118216963`*^9}, {
   3.835968657512773*^9, 3.835968665082685*^9}, {3.835968697155053*^9, 
   3.835968727993424*^9}, {3.835968761932632*^9, 3.8359688513647547`*^9}, {
   3.8361460635347357`*^9, 3.8361460703898363`*^9}, {3.8376252940608*^9, 
   3.837625317320253*^9}, 3.837625391172155*^9, {3.8377024264917507`*^9, 
   3.83770243993944*^9}, {3.837718969007213*^9, 3.837718969489081*^9}, 
   3.837724151999593*^9, 3.837724316578732*^9, {3.839082502712061*^9, 
   3.8390825540896597`*^9}, 3.8439283795882883`*^9, {3.843929189886451*^9, 
   3.843929217909889*^9}, {3.844464477668337*^9, 3.8444645067600517`*^9}, {
   3.854025580559146*^9, 3.8540255918482733`*^9}},
 CellLabel->
  "In[387]:=",ExpressionUUID->"daa11fc8-1ac0-4835-91ff-38c332626f5f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"saving", " ", "the", " ", "output"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<stressRunsPnoX1\>\"", ",", "stressRunsPnoX1"}], " ", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.83113622232788*^9, 3.831136248679153*^9}, {
   3.8318234468167353`*^9, 3.831823449545583*^9}, 3.8359586097157*^9, {
   3.835958838444078*^9, 3.835958841219817*^9}, 3.836146195582004*^9, {
   3.837625385773529*^9, 3.8376253866000423`*^9}, {3.839082560403515*^9, 
   3.8390825655018806`*^9}, 3.843929224983363*^9},
 CellLabel->
  "In[397]:=",ExpressionUUID->"e251465f-25cc-4f6c-a0da-c3f887c713c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Higher Nenv, lower flushing rate, no fish", \
"Subsubsection"]], "Subsection",
 CellChangeTimes->{{3.839082890360909*^9, 3.839082892705474*^9}, {
  3.843928964177239*^9, 
  3.843928973130859*^9}},ExpressionUUID->"b4ca0cfc-d4b5-49c9-89a4-\
c9d2d7e9e0df"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh", ",", 
    "LfunH"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.835958776293939*^9, 3.835958776660214*^9}, {
   3.8377032594274473`*^9, 3.837703260246002*^9}, {3.839082427041387*^9, 
   3.839082430646604*^9}, {3.839083364883099*^9, 3.839083365601475*^9}, {
   3.839083615814026*^9, 3.8390836199449043`*^9}, 3.8439292341938066`*^9},
 CellLabel->
  "In[398]:=",ExpressionUUID->"422eb948-2c62-4d54-8932-6faa60d81342"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"No", " ", "prey", " ", "no", " ", "fish"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"X", "=", "0"}], 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P0", "=", "0"}], 
    RowBox[{"(*", 
     RowBox[{"kp", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H0"}], "*)"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jX", "=", 
     FractionBox[
      RowBox[{"jXm", " ", "X"}], 
      RowBox[{"X", "+", "KX"}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"environment", ":", " ", 
     RowBox[{"flushing", " ", "rate", " ", "and", " ", "N", " ", "level"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d", "=", "500"}], 
    RowBox[{"(*", "1660", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"6", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}]}], 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jN", "=", 
     FractionBox[
      RowBox[{"jNm", " ", "\[CapitalNu]"}], 
      RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jNi0", " ", "=", " ", 
     FractionBox[
      RowBox[{"jNm", " ", "\[CapitalNu]"}], 
      RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"light", " ", "function", " ", "parameters"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tStartStress", "=", "600"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stressRunsnoPnoXN", " ", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"jX", "=", 
               FractionBox[
                RowBox[{"jXm", " ", "X"}], 
                RowBox[{"X", "+", "KX"}]]}], ",", " ", 
              RowBox[{"jN", "=", 
               FractionBox[
                RowBox[{"jNm", " ", "\[CapitalNu]"}], 
                RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ","}], "*)"}], 
            RowBox[{
             RowBox[{"jHT", "=", "j0HT"}], ",", 
             RowBox[{"rNS", "=", 
              RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
             RowBox[{"VH0", "=", 
              RowBox[{"kv", "*", "H0"}]}], ",", " ", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
               RowBox[{"jNi0", " ", "=", " ", 
                FractionBox[
                 RowBox[{"jNm", " ", "\[CapitalNu]"}], 
                 RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ","}], "*)"}], 
             "states", ",", " ", "rNH", ",", " ", "S", ",", "H", ",", "VH", 
             ",", "P", ",", "Ni", ",", "jNi", ",", "\[Rho]C", ",", " ", "jCP",
              ",", " ", "jHG", ",", "\[Rho]N", ",", "jeC", ",", "jCO2", ",", 
             "A", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
             ",", "cROS1", ",", "jSG", ",", "jST", ",", "jNw", ",", "F", ",", 
             "fh", ",", "LfunH", ",", "tsolve", ",", " ", 
             "addtimetostatevars", ",", "eqs", ",", "inis", ",", "sol", ",", 
             "t", ",", "tEvals", ",", "addtmax", ",", "minGrowth", ",", 
             "minSSU", ",", "minHSU", ",", "growthFinal", ",", "SSUfinal", 
             ",", "HSUfinal", ",", "tmax"}], 
            RowBox[{"(*", 
             RowBox[{
             "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
              "intermediate", " ", "output", " ", "values", " ", "in", " ", 
              "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"tmax", "=", 
             RowBox[{"tStartStress", "+", "tHigh", "+", "100"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"light", " ", "function"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"LfunH", "=", 
             RowBox[{"L", "+", " ", 
              RowBox[{"LHigh", "*", 
               RowBox[{"HeavisideTheta", "[", 
                RowBox[{"t", "-", "tStartStress"}], "]"}]}], " ", "-", "  ", 
              RowBox[{"LHigh", "*", 
               RowBox[{"HeavisideTheta", "[", 
                RowBox[{"t", "-", 
                 RowBox[{"(", 
                  RowBox[{"tStartStress", "+", "tHigh"}], ")"}]}], 
                "]"}]}]}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
              RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
             FractionBox[
              RowBox[{"A", " ", "B", " ", 
               RowBox[{"(", 
                RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
              RowBox[{
               RowBox[{
                SuperscriptBox["A", "2"], " ", "B"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox["B", "2"]}], "+", 
               RowBox[{
                SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
               RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
               RowBox[{
                SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
            RowBox[{"(*", 
             RowBox[{"same", " ", "as", " ", 
              FractionBox["1", 
               RowBox[{
                FractionBox["1", "\[Rho]"], "+", 
                FractionBox["1", "A"], "+", 
                FractionBox["1", "B"], "-", 
                FractionBox["1", 
                 RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fh", "[", 
              RowBox[{
               RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
             RowBox[{"Piecewise", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", 
                  RowBox[{"y", "<", "0"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"kv", " ", "*", "y"}], ",", 
                  RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
              "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", "Calculations", " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"jHG", "=", 
             RowBox[{
              RowBox[{"F", "[", "jHGm", "]"}], "[", 
              RowBox[{
               RowBox[{"yC", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Rho]C", " ", 
                   RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                  
                  RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                  RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                SuperscriptBox["nNH", 
                 RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"jSG", "=", 
             RowBox[{
              RowBox[{"F", "[", "jSGm", "]"}], "[", 
              RowBox[{
               RowBox[{"jCP", " ", "yC"}], ",", 
               FractionBox[
                RowBox[{"rNS", "+", 
                 FractionBox[
                  RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"\[Rho]N", "=", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
                RowBox[{"nNH", " ", "jHG"}]}], " ", 
               RowBox[{"(*", 
                SuperscriptBox["yN", 
                 RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jeC", "=", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"jX", "-", 
                FractionBox["jHG", "yC"], "+", 
                FractionBox[
                 RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], 
            ";", " ", "\[IndentingNewLine]", 
            RowBox[{"jCO2", "=", 
             RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jL", "=", 
             RowBox[{"A", " ", "astar", "*", "LfunH"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"rCH", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"jHT", "+", 
                FractionBox[
                 RowBox[{"jHG", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
              "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"rCS", "=", 
             RowBox[{"\[Sigma]CS", 
              RowBox[{"(", 
               RowBox[{"j0ST", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
                 SuperscriptBox["yC", 
                  RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jeL", "=", 
             RowBox[{"jL", "-", 
              FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jNPQ", "=", 
             FractionBox["1", 
              RowBox[{
               FractionBox["1", "jeL"], "+", 
               FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
            RowBox[{"cROS1", "=", 
             FractionBox[
              RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jST", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"rNH", "=", 
             RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"A", "=", 
             RowBox[{"1.256307", "+", 
              RowBox[{"1.385969", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "6.479055"}], " ", 
                 RowBox[{"S", "/", "H"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jNw", "=", " ", 
             RowBox[{
              RowBox[{"\[Rho]N", "*", 
               RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
              RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"tsolve", "=", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Rho]C", ",", 
                 RowBox[{"jCP", "-", 
                  RowBox[{"jSG", " ", 
                   SuperscriptBox["yC", 
                    RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"jCP", ",", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"F", "[", "jCPm", "]"}], "[", 
                   RowBox[{
                    RowBox[{"jL", " ", "yCL"}], ",", 
                    RowBox[{"rCS", "+", 
                    FractionBox[
                    RowBox[{"H", " ", 
                    RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
                  RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"jNi", ",", " ", 
                 FractionBox[
                  RowBox[{"jNm", " ", "*", "Ni"}], 
                  RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
              "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"states", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"tsolve", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
                "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"addtimetostatevars", "=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"#", "\[Rule]", 
                  RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", 
               "states"}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
            RowBox[{"eqs", "=", 
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
                   "\[Equal]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Lambda]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
                "tsolve"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"S", 
                    RowBox[{"(", 
                    RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"H", 
                    RowBox[{"(", 
                    RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                  RowBox[{"fh", "[", 
                   RowBox[{"t", ",", "  ", 
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"d", "*", 
                    RowBox[{"(", " ", 
                    RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                    " ", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                    ")"}], "/", 
                    RowBox[{"(", " ", 
                    RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
                  
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"P", "*", 
                    RowBox[{"(", 
                    RowBox[{"rp", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                    ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
                "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"inis", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], 
                   "\[Equal]", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
                "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"sol", "=", 
             RowBox[{
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Join", "[", 
                  RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"#", "&"}], "/@", "states"}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
                RowBox[{"Method", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<EquationSimplification\>\"", "\[Rule]", 
                   "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"outputs", " ", "to", " ", "record"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"minimum", " ", "host", " ", "growth", " ", 
              RowBox[{"rate", ":", " ", 
               RowBox[{
               "see", " ", "if", " ", "growth", " ", "ever", " ", "went", " ",
                 "negative"}]}]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "evaluate", " ", "host", " ", "growth", " ", "rate", " ", "at", 
              " ", "all", " ", "points", " ", "from", " ", "the", " ", 
              "start", " ", "of", " ", "stress", " ", "to", " ", "the", " ", 
              "end", " ", "of", " ", "the", " ", "run", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "EXCEPT", " ", "when", " ", "t", " ", "is", " ", "exactly", 
                 " ", "equal", " ", "to", " ", "tStartStress", " ", "and", 
                 " ", "tStartStress"}], " ", "+", 
                RowBox[{
                "tHigh", " ", "because", " ", "at", " ", "these", " ", 
                 "points", " ", "one", " ", "of", " ", "the", " ", 
                 "HeavisideTheta", " ", "functions", " ", "has", " ", "an", 
                 " ", "argument", " ", "of", " ", "0", " ", "which", " ", 
                 "is", " ", "not", " ", "evaluated", " ", "so", " ", "the", 
                 " ", "growth", " ", "values", " ", "are", " ", 
                 "inaccurate"}]}], ")"}], " ", "and", " ", "record", " ", 
              "the", " ", "minimum", " ", "of", " ", "these", " ", "values"}],
              "*)"}], "\[IndentingNewLine]", 
            RowBox[{"tEvals", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{"t", ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"t", ",", 
                    RowBox[{"tStartStress", "+", "1"}], ",", 
                    RowBox[{"tStartStress", "+", "tHigh", "-", "1"}]}], 
                   "}"}]}], "]"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{"t", ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"t", ",", 
                    RowBox[{"tStartStress", "+", "tHigh", "+", "1"}], ",", 
                    " ", "tmax"}], "}"}]}], "]"}]}], "}"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"minGrowth", "=", 
             RowBox[{"Min", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}], "/", 
                    RowBox[{"H", "[", "t", "]"}]}], "}"}], "/.", "sol"}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "tEvals"}], "}"}]}], "]"}], "]"}], 
              "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"min", " ", "S", " ", "SU", " ", "C"}], "-", "lim"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"minSSU", "=", 
             RowBox[{"Min", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Evaluate", "@", 
                  RowBox[{"Flatten", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"jSGm", ",", 
                    RowBox[{"jCP", " ", "yC"}]}], "]"}], "/", 
                    RowBox[{"Min", "[", 
                    RowBox[{"jSGm", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"rNS", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"H", " ", "\[Rho]N"}], ")"}], "/", "S"}]}], ")"}],
                     "/", "nNS"}]}], "]"}]}], "]"}], "/.", 
                    "addtimetostatevars"}], "/.", "sol"}], "}"}]}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "tEvals"}], "}"}]}], "]"}], "]"}], 
              "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"min", " ", "H", " ", "SU", " ", "C"}], "-", "lim"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"minHSU", "=", 
             RowBox[{"Min", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Evaluate", "@", 
                  RowBox[{"Flatten", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"jHGm", ",", 
                    RowBox[{"yC", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Rho]C", " ", 
                    RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}]}], "]"}], 
                    "/", 
                    RowBox[{"Min", "[", 
                    RowBox[{"jHGm", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                    
                    RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                    RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                    RowBox[{"nNH", "^", 
                    RowBox[{"-", "1"}]}]}]}], "]"}]}], "]"}], "/.", 
                    "addtimetostatevars"}], "/.", "sol"}], "}"}]}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "tEvals"}], "}"}]}], "]"}], "]"}], 
              "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "growth", " ", "and", " ", "SU", " ", "limitations", " ", "100", 
              " ", "days", " ", "after", " ", "end", " ", "of", " ", "stress",
               " ", 
              RowBox[{"(", "tmax", ")"}]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"addtmax", "=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"#", "\[Rule]", 
                  RowBox[{"#", "[", "tmax", "]"}]}], ")"}], "&"}], "/@", 
               "states"}], ")"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"growthFinal", "=", 
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
                 RowBox[{"H", "[", "tmax", "]"}]}], "}"}], "/.", "sol"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"SSUfinal", "=", 
             RowBox[{"Evaluate", "@", 
              RowBox[{"Flatten", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Log", "[", 
                   RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"jSGm", ",", 
                    RowBox[{"jCP", " ", "yC"}]}], "]"}], "/", 
                    RowBox[{"Min", "[", 
                    RowBox[{"jSGm", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"rNS", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"H", " ", "\[Rho]N"}], ")"}], "/", "S"}]}], ")"}],
                     "/", "nNS"}]}], "]"}]}], "]"}], "/.", "addtmax"}], "/.", 
                 "sol"}], "}"}]}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"HSUfinal", "=", 
             RowBox[{"Evaluate", "@", 
              RowBox[{"Flatten", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Log", "[", 
                   RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"jHGm", ",", 
                    RowBox[{"yC", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Rho]C", " ", 
                    RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}]}], "]"}], 
                    "/", 
                    RowBox[{"Min", "[", 
                    RowBox[{"jHGm", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                    
                    RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                    RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                    RowBox[{"nNH", "^", 
                    RowBox[{"-", "1"}]}]}]}], "]"}]}], "]"}], "/.", 
                  "addtmax"}], "/.", "sol"}], "}"}]}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
             "minGrowth", ",", "minSSU", ",", "minHSU", ",", "growthFinal", 
              ",", "SSUfinal", ",", "HSUfinal"}], "}"}]}]}], 
          RowBox[{"(*", "output", "*)"}], "]"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"LHigh", ",", " ", 
           RowBox[{"{", 
            RowBox[{
            "20", ",", "21", ",", "22", ",", "23", ",", "24", ",", "25", ",", 
             "26", ",", "27", ",", " ", "28", ",", " ", "29", ",", " ", "30", 
             ",", " ", "31", ",", " ", "32", ",", "33", ",", "34", ",", 
             "35"}], "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"(*", 
        RowBox[{"pulse", " ", "magnitudes", " ", "tested", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "note", " ", "total", " ", "magnitude", " ", "is", " ", "LHigh"}], 
           " ", "+", " ", "L"}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"{", 
        RowBox[{"tHigh", ",", " ", "7", ",", "35", ",", " ", "2"}], "}"}]}], 
      RowBox[{"(*", 
       RowBox[{"pulse", " ", "durations", " ", 
        RowBox[{"tested", ":", " ", 
         RowBox[{
         "from", " ", "7", " ", "to", " ", "35", " ", "in", " ", "intervals", 
          " ", "of", " ", "2", " ", "days"}]}]}], "*)"}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.829487218238818*^9, 3.829487340830228*^9}, {
   3.8294873806880217`*^9, 3.8294874269672832`*^9}, {3.829500896388752*^9, 
   3.829500908802194*^9}, {3.829501112152754*^9, 3.829501135257264*^9}, {
   3.829501241084306*^9, 3.829501241884633*^9}, {3.829501574167392*^9, 
   3.829501583580276*^9}, {3.829501617509512*^9, 3.829501677659926*^9}, {
   3.829502006849699*^9, 3.829502018495438*^9}, {3.829502160201325*^9, 
   3.82950223384923*^9}, {3.8295022721812687`*^9, 3.829502276730755*^9}, {
   3.829502317230337*^9, 3.829502339304162*^9}, {3.829502370881653*^9, 
   3.829502379957067*^9}, {3.8295024856903963`*^9, 3.829502501672971*^9}, {
   3.8295026555033817`*^9, 3.829502733674634*^9}, {3.8295029041631002`*^9, 
   3.829502912860187*^9}, {3.829503002399979*^9, 3.829503045174202*^9}, {
   3.8295032577389793`*^9, 3.829503290274219*^9}, {3.829503324066503*^9, 
   3.8295033442922907`*^9}, {3.829503387185981*^9, 3.829503398911695*^9}, {
   3.829503465386711*^9, 3.829503477793399*^9}, {3.8295035165436783`*^9, 
   3.829503590048273*^9}, {3.829503717870039*^9, 3.829503764094996*^9}, {
   3.8295041592721233`*^9, 3.829504196908506*^9}, {3.829504285599513*^9, 
   3.829504288353764*^9}, {3.829504386966423*^9, 3.82950440838068*^9}, {
   3.82950523169444*^9, 3.8295052665875473`*^9}, {3.8295053132579403`*^9, 
   3.829505450966359*^9}, {3.829507916540868*^9, 3.829508163555718*^9}, {
   3.8295082659983253`*^9, 3.829508285142787*^9}, {3.829508326042542*^9, 
   3.829508608124104*^9}, {3.829508694018161*^9, 3.82950871713163*^9}, {
   3.829508754940113*^9, 3.82950876919207*^9}, {3.8295088345374937`*^9, 
   3.829508837273567*^9}, 3.8295089867975197`*^9, 3.829509149320486*^9, {
   3.829509416306684*^9, 3.829509434104252*^9}, {3.8295095387162743`*^9, 
   3.829509598505484*^9}, {3.82950965984171*^9, 3.829509663163797*^9}, {
   3.8295097156808157`*^9, 3.8295097296355886`*^9}, {3.829509804004746*^9, 
   3.829509812154416*^9}, {3.82950995658786*^9, 3.829510005047759*^9}, 
   3.829510068085787*^9, 3.829511235559108*^9, {3.8295112728201523`*^9, 
   3.82951127307434*^9}, {3.829511787966587*^9, 3.8295117927206793`*^9}, {
   3.829511870384144*^9, 3.829511878312793*^9}, {3.829511915702517*^9, 
   3.829511929463889*^9}, {3.829511986188163*^9, 3.829511987731019*^9}, {
   3.8295120591987543`*^9, 3.8295120673081417`*^9}, {3.8295133548668423`*^9, 
   3.8295133552911863`*^9}, 3.8295135246752567`*^9, 3.82951434134858*^9, {
   3.829514554726305*^9, 3.829514555866014*^9}, {3.829514615523479*^9, 
   3.829514622281967*^9}, {3.829514944354291*^9, 3.8295150106590223`*^9}, {
   3.82951507235223*^9, 3.8295150758519287`*^9}, {3.8295154366645412`*^9, 
   3.829515446450766*^9}, {3.829516276513648*^9, 3.8295162800638733`*^9}, {
   3.829516591557345*^9, 3.829516608131502*^9}, {3.829517198428339*^9, 
   3.829517201439293*^9}, {3.829517323071352*^9, 3.8295173266107197`*^9}, {
   3.8295175178345337`*^9, 3.8295175216479473`*^9}, {3.8295555718361998`*^9, 
   3.829555591214752*^9}, {3.82955601623978*^9, 3.829556019550569*^9}, {
   3.8295562145780287`*^9, 3.829556222658545*^9}, {3.829556448150885*^9, 
   3.8295564514081182`*^9}, {3.829933661570964*^9, 3.829933661748317*^9}, {
   3.829933866781752*^9, 3.8299338787818937`*^9}, {3.829934217792124*^9, 
   3.8299342214335546`*^9}, {3.829934447451603*^9, 3.829934457829863*^9}, {
   3.8299347049167747`*^9, 3.829934709007524*^9}, {3.829935274414411*^9, 
   3.829935309478222*^9}, {3.8299355608814583`*^9, 3.8299355662085667`*^9}, {
   3.8299357921733522`*^9, 3.8299358025776463`*^9}, {3.829936063257595*^9, 
   3.829936066806546*^9}, {3.829936263938973*^9, 3.829936297215189*^9}, {
   3.829936556330872*^9, 3.8299365602933702`*^9}, {3.829936789903631*^9, 
   3.8299367991636066`*^9}, {3.829937101196032*^9, 3.8299371045224333`*^9}, {
   3.830116985089054*^9, 3.83011704818042*^9}, {3.830117283054928*^9, 
   3.830117285992*^9}, {3.830117622251795*^9, 3.830117635409677*^9}, {
   3.8301179303521967`*^9, 3.8301179341011877`*^9}, {3.8301181285397177`*^9, 
   3.830118137419471*^9}, {3.8301184273465033`*^9, 3.8301184304682093`*^9}, {
   3.8311319840930557`*^9, 3.831132110666339*^9}, {3.83113214208764*^9, 
   3.831132170886119*^9}, {3.831132490373948*^9, 3.831132495002697*^9}, {
   3.8311331691345377`*^9, 3.831133175209016*^9}, {3.831822771215622*^9, 
   3.83182279235844*^9}, {3.831823062704329*^9, 3.831823204545065*^9}, {
   3.831823262504127*^9, 3.8318234376809063`*^9}, {3.831902060020858*^9, 
   3.831902074704687*^9}, {3.83198594704652*^9, 3.831985951686501*^9}, {
   3.835957132624877*^9, 3.835957154422502*^9}, {3.8359571908360977`*^9, 
   3.83595723410119*^9}, {3.8359572678539057`*^9, 3.8359573400486097`*^9}, {
   3.83595739268198*^9, 3.835957413284924*^9}, {3.835957467086043*^9, 
   3.8359574740651083`*^9}, {3.835957508680011*^9, 3.835957512901635*^9}, {
   3.835957550798182*^9, 3.835957562332097*^9}, {3.835957592611458*^9, 
   3.835957624208508*^9}, {3.835957720622128*^9, 3.835957794725771*^9}, {
   3.8359579316199083`*^9, 3.8359579440670424`*^9}, {3.8359585510594*^9, 
   3.835958552204524*^9}, {3.8359585988951817`*^9, 3.8359586040853662`*^9}, {
   3.835969184864643*^9, 3.835969190701868*^9}, {3.835971692690229*^9, 
   3.835971715818289*^9}, {3.835971801995998*^9, 3.835971823019558*^9}, {
   3.8361460311842422`*^9, 3.83614603842451*^9}, 3.837624597968054*^9, {
   3.8376246373535357`*^9, 3.837624701015994*^9}, {3.8376247386388807`*^9, 
   3.8376247519976482`*^9}, {3.837624862552038*^9, 3.8376248636496267`*^9}, 
   3.837625324827827*^9, {3.837701994245088*^9, 3.837702003413064*^9}, {
   3.837702074061858*^9, 3.837702152448566*^9}, {3.837702202519824*^9, 
   3.837702226147334*^9}, {3.837702398500094*^9, 3.83770240006094*^9}, {
   3.837719864262343*^9, 3.837719884452879*^9}, {3.837720184196424*^9, 
   3.837720212868043*^9}, {3.837720248076042*^9, 3.837720265306219*^9}, {
   3.837720343243413*^9, 3.837720367724112*^9}, {3.837720488254046*^9, 
   3.837720490417639*^9}, {3.837720660083946*^9, 3.837720660632824*^9}, {
   3.837720720300218*^9, 3.837720722077948*^9}, 3.837720806225874*^9, {
   3.837723786840288*^9, 3.8377238065871677`*^9}, {3.837723837641962*^9, 
   3.8377239934166183`*^9}, 3.837724063277957*^9, {3.83772450990772*^9, 
   3.8377245169411087`*^9}, {3.839064049300655*^9, 3.839064064772105*^9}, {
   3.839064094783701*^9, 3.839064103415638*^9}, {3.83906472867107*^9, 
   3.83906474064463*^9}, {3.839064782635664*^9, 3.839064899163911*^9}, {
   3.839064929194893*^9, 3.839065010752234*^9}, 3.839082382207344*^9, {
   3.839083658906871*^9, 3.839083660737275*^9}, {3.839083771144102*^9, 
   3.839083785413768*^9}, {3.839453944303252*^9, 3.839453962089118*^9}, {
   3.8394543517416773`*^9, 3.839454353480588*^9}, {3.839455023676545*^9, 
   3.839455029559887*^9}, 3.8439284615872803`*^9, {3.843929246274379*^9, 
   3.8439292758100433`*^9}, {3.8444645195852327`*^9, 3.844464569546338*^9}, {
   3.854025600958815*^9, 3.854025611019074*^9}},
 CellLabel->
  "In[399]:=",ExpressionUUID->"bdf78c03-ca88-48e8-9423-b46e87c03187"],

Cell[BoxData[
 RowBox[{"Save", "[", 
  RowBox[{"\"\<stressRunsnoPnoXN\>\"", ",", "stressRunsnoPnoXN"}], " ", 
  "]"}]], "Input",
 CellChangeTimes->{{3.839082397676797*^9, 3.839082404119104*^9}, {
  3.8390837901736927`*^9, 3.839083793504696*^9}},
 CellLabel->
  "In[409]:=",ExpressionUUID->"ecb12596-2f9d-4f35-a308-22324047b738"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Higher Nenv, lower flushing rate, with fish", \
"Subsubsection"]], "Subsection",
 CellChangeTimes->{{3.839082905004142*^9, 3.839082907074972*^9}, {
  3.84392897528053*^9, 
  3.84392898440952*^9}},ExpressionUUID->"d5a01e2e-45e5-43c5-a833-\
a5ec0348badb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh", ",", 
    "LfunH"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.835958776293939*^9, 3.835958776660214*^9}, {
  3.8377032594274473`*^9, 3.837703260246002*^9}, {3.83908338439825*^9, 
  3.839083385347395*^9}, {3.843929296899988*^9, 3.843929297407896*^9}},
 CellLabel->
  "In[410]:=",ExpressionUUID->"14857592-ab30-4b92-8568-5bb4b2b490e5"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"No", " ", "prey", " ", "with", " ", "fish"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"X", "=", "0"}], 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P0", "=", 
     RowBox[{"(*", "0", "*)"}], 
     RowBox[{"kp", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H0"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jX", "=", 
     FractionBox[
      RowBox[{"jXm", " ", "X"}], 
      RowBox[{"X", "+", "KX"}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"environment", ":", " ", 
     RowBox[{"flushing", " ", "rate", " ", "and", " ", "N", " ", "level"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d", "=", "500"}], 
    RowBox[{"(*", "1660", "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"6", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}]}], 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jN", "=", 
     FractionBox[
      RowBox[{"jNm", " ", "\[CapitalNu]"}], 
      RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jNi0", " ", "=", " ", 
     FractionBox[
      RowBox[{"jNm", " ", "\[CapitalNu]"}], 
      RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tStartStress", "=", "600"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stressRunsPnoXN", " ", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"jX", "=", 
               FractionBox[
                RowBox[{"jXm", " ", "X"}], 
                RowBox[{"X", "+", "KX"}]]}], ",", " ", 
              RowBox[{"jN", "=", 
               FractionBox[
                RowBox[{"jNm", " ", "\[CapitalNu]"}], 
                RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ","}], "*)"}], 
            RowBox[{
             RowBox[{"jHT", "=", "j0HT"}], ",", 
             RowBox[{"rNS", "=", 
              RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
             RowBox[{"VH0", "=", 
              RowBox[{"kv", "*", "H0"}]}], ",", " ", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
               RowBox[{"jNi0", " ", "=", " ", 
                FractionBox[
                 RowBox[{"jNm", " ", "\[CapitalNu]"}], 
                 RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ","}], "*)"}], 
             "states", ",", " ", "rNH", ",", " ", "S", ",", "H", ",", "VH", 
             ",", "P", ",", "Ni", ",", "jNi", ",", "\[Rho]C", ",", " ", "jCP",
              ",", " ", "jHG", ",", "\[Rho]N", ",", "jeC", ",", "jCO2", ",", 
             "A", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
             ",", "cROS1", ",", "jSG", ",", "jST", ",", "jNw", ",", "F", ",", 
             "fh", ",", "LfunH", ",", "tsolve", ",", " ", 
             "addtimetostatevars", ",", "eqs", ",", "inis", ",", "sol", ",", 
             "t", ",", "tEvals", ",", "addtmax", ",", "minGrowth", ",", 
             "minSSU", ",", "minHSU", ",", "growthFinal", ",", "SSUfinal", 
             ",", "HSUfinal", ",", "tmax"}], 
            RowBox[{"(*", 
             RowBox[{
             "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
              "intermediate", " ", "output", " ", "values", " ", "in", " ", 
              "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"tmax", "=", 
             RowBox[{"tStartStress", "+", "tHigh", "+", "100"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"light", " ", "function"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"LfunH", "=", 
             RowBox[{"L", "+", " ", 
              RowBox[{"LHigh", "*", 
               RowBox[{"HeavisideTheta", "[", 
                RowBox[{"t", "-", "tStartStress"}], "]"}]}], " ", "-", "  ", 
              RowBox[{"LHigh", "*", 
               RowBox[{"HeavisideTheta", "[", 
                RowBox[{"t", "-", 
                 RowBox[{"(", 
                  RowBox[{"tStartStress", "+", "tHigh"}], ")"}]}], 
                "]"}]}]}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
              RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
             FractionBox[
              RowBox[{"A", " ", "B", " ", 
               RowBox[{"(", 
                RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
              RowBox[{
               RowBox[{
                SuperscriptBox["A", "2"], " ", "B"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox["B", "2"]}], "+", 
               RowBox[{
                SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
               RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
               RowBox[{
                SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
            RowBox[{"(*", 
             RowBox[{"same", " ", "as", " ", 
              FractionBox["1", 
               RowBox[{
                FractionBox["1", "\[Rho]"], "+", 
                FractionBox["1", "A"], "+", 
                FractionBox["1", "B"], "-", 
                FractionBox["1", 
                 RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fh", "[", 
              RowBox[{
               RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
             RowBox[{"Piecewise", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", 
                  RowBox[{"y", "<", "0"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"kv", " ", "*", "y"}], ",", 
                  RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
              "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", "Calculations", " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"jHG", "=", 
             RowBox[{
              RowBox[{"F", "[", "jHGm", "]"}], "[", 
              RowBox[{
               RowBox[{"yC", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Rho]C", " ", 
                   RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                  
                  RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                  RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                SuperscriptBox["nNH", 
                 RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"jSG", "=", 
             RowBox[{
              RowBox[{"F", "[", "jSGm", "]"}], "[", 
              RowBox[{
               RowBox[{"jCP", " ", "yC"}], ",", 
               FractionBox[
                RowBox[{"rNS", "+", 
                 FractionBox[
                  RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"\[Rho]N", "=", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
                RowBox[{"nNH", " ", "jHG"}]}], " ", 
               RowBox[{"(*", 
                SuperscriptBox["yN", 
                 RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jeC", "=", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"jX", "-", 
                FractionBox["jHG", "yC"], "+", 
                FractionBox[
                 RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], 
            ";", " ", "\[IndentingNewLine]", 
            RowBox[{"jCO2", "=", 
             RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jL", "=", 
             RowBox[{"A", " ", "astar", " ", "LfunH"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"rCH", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"jHT", "+", 
                FractionBox[
                 RowBox[{"jHG", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
              "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"rCS", "=", 
             RowBox[{"\[Sigma]CS", 
              RowBox[{"(", 
               RowBox[{"j0ST", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
                 SuperscriptBox["yC", 
                  RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jeL", "=", 
             RowBox[{"jL", "-", 
              FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jNPQ", "=", 
             FractionBox["1", 
              RowBox[{
               FractionBox["1", "jeL"], "+", 
               FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
            RowBox[{"cROS1", "=", 
             FractionBox[
              RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jST", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"rNH", "=", 
             RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"A", "=", 
             RowBox[{"1.256307", "+", 
              RowBox[{"1.385969", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "6.479055"}], " ", 
                 RowBox[{"S", "/", "H"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jNw", "=", " ", 
             RowBox[{
              RowBox[{"\[Rho]N", "*", 
               RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
              RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"tsolve", "=", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Rho]C", ",", 
                 RowBox[{"jCP", "-", 
                  RowBox[{"jSG", " ", 
                   SuperscriptBox["yC", 
                    RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"jCP", ",", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"F", "[", "jCPm", "]"}], "[", 
                   RowBox[{
                    RowBox[{"jL", " ", "yCL"}], ",", 
                    RowBox[{"rCS", "+", 
                    FractionBox[
                    RowBox[{"H", " ", 
                    RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
                  RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"jNi", ",", " ", 
                 FractionBox[
                  RowBox[{"jNm", " ", "*", "Ni"}], 
                  RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
              "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"states", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"tsolve", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
                "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"addtimetostatevars", "=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"#", "\[Rule]", 
                  RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", 
               "states"}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
            RowBox[{"eqs", "=", 
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
                   "\[Equal]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Lambda]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
                "tsolve"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"S", 
                    RowBox[{"(", 
                    RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"H", 
                    RowBox[{"(", 
                    RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                  RowBox[{"fh", "[", 
                   RowBox[{"t", ",", "  ", 
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"d", "*", 
                    RowBox[{"(", " ", 
                    RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                    " ", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                    ")"}], "/", 
                    RowBox[{"(", " ", 
                    RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
                  
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"P", "*", 
                    RowBox[{"(", 
                    RowBox[{"rp", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                    ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
                "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"inis", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], 
                   "\[Equal]", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
                "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"sol", "=", 
             RowBox[{
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Join", "[", 
                  RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"#", "&"}], "/@", "states"}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
                RowBox[{"Method", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<EquationSimplification\>\"", "\[Rule]", 
                   "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"outputs", " ", "to", " ", "record"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"minimum", " ", "host", " ", "growth", " ", 
              RowBox[{"rate", ":", " ", 
               RowBox[{
               "see", " ", "if", " ", "growth", " ", "ever", " ", "went", " ",
                 "negative"}]}]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"tEvals", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{"t", ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"t", ",", 
                    RowBox[{"tStartStress", "+", "1"}], ",", 
                    RowBox[{"tStartStress", "+", "tHigh", "-", "1"}]}], 
                   "}"}]}], "]"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{"t", ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"t", ",", 
                    RowBox[{"tStartStress", "+", "tHigh", "+", "1"}], ",", 
                    " ", "tmax"}], "}"}]}], "]"}]}], "}"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"minGrowth", "=", 
             RowBox[{"Min", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}], "/", 
                    RowBox[{"H", "[", "t", "]"}]}], "}"}], "/.", "sol"}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "tEvals"}], "}"}]}], "]"}], "]"}], 
              "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"min", " ", "S", " ", "SU", " ", "C"}], "-", "lim"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"minSSU", "=", 
             RowBox[{"Min", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Evaluate", "@", 
                  RowBox[{"Flatten", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"jSGm", ",", 
                    RowBox[{"jCP", " ", "yC"}]}], "]"}], "/", 
                    RowBox[{"Min", "[", 
                    RowBox[{"jSGm", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"rNS", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"H", " ", "\[Rho]N"}], ")"}], "/", "S"}]}], ")"}],
                     "/", "nNS"}]}], "]"}]}], "]"}], "/.", 
                    "addtimetostatevars"}], "/.", "sol"}], "}"}]}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "tEvals"}], "}"}]}], "]"}], "]"}], 
              "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"min", " ", "H", " ", "SU", " ", "C"}], "-", "lim"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"minHSU", "=", 
             RowBox[{"Min", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Evaluate", "@", 
                  RowBox[{"Flatten", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"jHGm", ",", 
                    RowBox[{"yC", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Rho]C", " ", 
                    RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}]}], "]"}], 
                    "/", 
                    RowBox[{"Min", "[", 
                    RowBox[{"jHGm", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                    
                    RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                    RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                    RowBox[{"nNH", "^", 
                    RowBox[{"-", "1"}]}]}]}], "]"}]}], "]"}], "/.", 
                    "addtimetostatevars"}], "/.", "sol"}], "}"}]}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "tEvals"}], "}"}]}], "]"}], "]"}], 
              "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "growth", " ", "and", " ", "SU", " ", "limitations", " ", "100", 
              " ", "days", " ", "after", " ", "end", " ", "of", " ", "stress",
               " ", 
              RowBox[{"(", "tmax", ")"}]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"addtmax", "=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"#", "\[Rule]", 
                  RowBox[{"#", "[", "tmax", "]"}]}], ")"}], "&"}], "/@", 
               "states"}], ")"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"growthFinal", "=", 
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "'"}], "[", "tmax", "]"}], "/", 
                 RowBox[{"H", "[", "tmax", "]"}]}], "}"}], "/.", "sol"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"SSUfinal", "=", 
             RowBox[{"Evaluate", "@", 
              RowBox[{"Flatten", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Log", "[", 
                   RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"jSGm", ",", 
                    RowBox[{"jCP", " ", "yC"}]}], "]"}], "/", 
                    RowBox[{"Min", "[", 
                    RowBox[{"jSGm", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"rNS", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"H", " ", "\[Rho]N"}], ")"}], "/", "S"}]}], ")"}],
                     "/", "nNS"}]}], "]"}]}], "]"}], "/.", "addtmax"}], "/.", 
                 "sol"}], "}"}]}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"HSUfinal", "=", 
             RowBox[{"Evaluate", "@", 
              RowBox[{"Flatten", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Log", "[", 
                   RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"jHGm", ",", 
                    RowBox[{"yC", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Rho]C", " ", 
                    RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}]}], "]"}], 
                    "/", 
                    RowBox[{"Min", "[", 
                    RowBox[{"jHGm", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                    
                    RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                    RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                    RowBox[{"nNH", "^", 
                    RowBox[{"-", "1"}]}]}]}], "]"}]}], "]"}], "/.", 
                  "addtmax"}], "/.", "sol"}], "}"}]}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
             "minGrowth", ",", "minSSU", ",", "minHSU", ",", "growthFinal", 
              ",", "SSUfinal", ",", "HSUfinal"}], "}"}]}]}], 
          RowBox[{"(*", "output", "*)"}], "]"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"LHigh", ",", " ", 
           RowBox[{"{", 
            RowBox[{
            "20", ",", "21", ",", "22", ",", "23", ",", "24", ",", "25", ",", 
             "26", ",", "27", ",", " ", "28", ",", " ", "29", ",", " ", "30", 
             ",", " ", "31", ",", " ", "32", ",", "33", ",", "34", ",", 
             "35"}], "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"(*", 
        RowBox[{"pulse", " ", "magnitudes", " ", "tested", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "note", " ", "total", " ", "magnitude", " ", "is", " ", "LHigh"}], 
           " ", "+", " ", "L"}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"{", 
        RowBox[{"tHigh", ",", " ", "7", ",", "35", ",", " ", "2"}], "}"}]}], 
      RowBox[{"(*", 
       RowBox[{"pulse", " ", "durations", " ", 
        RowBox[{"tested", ":", " ", 
         RowBox[{
         "from", " ", "7", " ", "to", " ", "35", " ", "in", " ", "intervals", 
          " ", "of", " ", "2", " ", "days"}]}]}], "*)"}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8359586917368517`*^9, 3.8359588118216963`*^9}, {
   3.835968657512773*^9, 3.835968665082685*^9}, {3.835968697155053*^9, 
   3.835968727993424*^9}, {3.835968761932632*^9, 3.8359688513647547`*^9}, {
   3.8361460635347357`*^9, 3.8361460703898363`*^9}, {3.8376252940608*^9, 
   3.837625317320253*^9}, 3.837625391172155*^9, {3.8377024264917507`*^9, 
   3.83770243993944*^9}, {3.837718969007213*^9, 3.837718969489081*^9}, 
   3.837724151999593*^9, 3.837724316578732*^9, {3.839082502712061*^9, 
   3.8390825540896597`*^9}, {3.839083840251685*^9, 3.839083850841913*^9}, {
   3.839453988476757*^9, 3.839454001401516*^9}, {3.8394543576277227`*^9, 
   3.8394543584608803`*^9}, {3.8394550388170433`*^9, 3.8394550450049353`*^9}, 
   3.843928471795437*^9, {3.843929304920784*^9, 3.8439293243857822`*^9}, {
   3.844464590595649*^9, 3.844464613634351*^9}, {3.854025619381749*^9, 
   3.854025630542727*^9}},
 CellLabel->
  "In[411]:=",ExpressionUUID->"16411036-096e-459c-b778-9edecd8362ca"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<stressRunsPnoXN\>\"", ",", "stressRunsPnoXN"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.83113622232788*^9, 3.831136248679153*^9}, {
   3.8318234468167353`*^9, 3.831823449545583*^9}, 3.8359586097157*^9, {
   3.835958838444078*^9, 3.835958841219817*^9}, 3.836146195582004*^9, {
   3.837625385773529*^9, 3.8376253866000423`*^9}, {3.839082560403515*^9, 
   3.8390825655018806`*^9}, {3.8390838555793047`*^9, 3.839083861207708*^9}, 
   3.843929334555869*^9},
 CellLabel->
  "In[421]:=",ExpressionUUID->"55f94681-a84d-494f-a953-5b431319f740"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Format results", "Subsubsection"]], "Subsection",
 CellChangeTimes->{{3.842910318954228*^9, 3.8429103252839537`*^9}, 
   3.843928831405106*^9},ExpressionUUID->"d1f7ed48-d05b-4214-918f-\
c53850b7d971"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"recover", " ", "the", " ", "outputs"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Get", "[", "\"\<stressRunsnoPnoX1\>\"", " ", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Get", "[", "\"\<stressRunsPnoX1\>\"", " ", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Get", "[", "\"\<stressRunsnoPnoXN\>\"", " ", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Get", "[", "\"\<stressRunsPnoXN\>\"", " ", "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.836508768411532*^9, 3.836508805531746*^9}, {
   3.8376285092319393`*^9, 3.8376285300774918`*^9}, {3.837628657624733*^9, 
   3.837628675500853*^9}, {3.839084706548952*^9, 3.8390847276053343`*^9}, {
   3.8390847724415503`*^9, 3.8390847775951138`*^9}, {3.8390848225224524`*^9, 
   3.839084856091297*^9}, {3.839085320874138*^9, 3.839085326784363*^9}, {
   3.842910355107561*^9, 3.842910355902298*^9}, 3.843929342418458*^9},
 CellLabel->
  "In[422]:=",ExpressionUUID->"3b81099f-29b9-4b99-8c9f-e468d00a0509"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "say", " ", "the", " ", "system", " ", "only", " ", "bleached", " ", 
      "if", " ", "growth", " ", "was", " ", "neg", " ", "and", " ", "both", 
      " ", "SUs", " ", "were", " ", "C"}], "-", "limited"}], ",", " ", 
    RowBox[{
    "recovered", " ", "if", " ", "all", " ", "returned", " ", "to", " ", 
     "positive"}], ",", " ", 
    RowBox[{
    "no", " ", "stress", " ", "if", " ", "all", " ", "remained", " ", 
     "positive"}], ",", " ", 
    RowBox[{
    "mild", " ", "stress", " ", "if", " ", "at", " ", "least", " ", "one", 
     " ", "went", " ", "negative"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "if", " ", "the", " ", "min", " ", "of", " ", "the", " ", "three", " ", 
     "is", " ", "negative", " ", "but", " ", "the", " ", "max", " ", "of", 
     " ", "the", " ", "three", " ", "is", " ", "positive"}], ",", " ", 
    RowBox[{
    "then", " ", "at", " ", "least", " ", "one", " ", "is", " ", 
     "negative"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"makeMatrixS", "=", 
     RowBox[{"Table", "[", " ", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "Separate", ",", "minGrowthVals", ",", "minSSUVals", ",", 
           "minHSUVals", ",", "growthFinalVals", ",", "SSUFinalVals", ",", 
           "HSUFinalVals", ",", " ", "Vals", ",", " ", "Matrix"}], "}"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Separate", "=", 
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"holdm", ",", "1"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "select", " ", "each", " ", "set", " ", "of", " ", "outputs"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"minGrowthVals", "=", 
           RowBox[{"Separate", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{
           "mininimum", " ", "growth", " ", "from", " ", "each", " ", 
            "simulation", " ", "is", " ", "the", " ", "first", " ", "element",
             " ", "of", " ", "Separate"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"minSSUVals", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Separate", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"minHSUVals", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Separate", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"growthFinalVals", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Separate", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "]"}]}], ";", " ", 
          RowBox[{"(*", 
           RowBox[{
           "growth", " ", "100", " ", "days", " ", "after", " ", "stress", 
            " ", "ends"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"SSUFinalVals", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Separate", "[", 
             RowBox[{"[", "5", "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"HSUFinalVals", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Separate", "[", 
             RowBox[{"[", "6", "]"}], "]"}], "]"}]}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"Vals", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"minGrowthVals", "[", 
                  RowBox[{"[", "num", "]"}], "]"}], ">", "0"}], " ", "&&", 
                " ", 
                RowBox[{
                 RowBox[{"minHSUVals", "[", 
                  RowBox[{"[", "num", "]"}], "]"}], "\[GreaterEqual]", " ", 
                 "0"}], " ", "&&", " ", 
                RowBox[{
                 RowBox[{"minSSUVals", "[", 
                  RowBox[{"[", "num", "]"}], "]"}], "\[GreaterEqual]", " ", 
                 "0"}]}], ",", " ", "1", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"minGrowthVals", "[", 
                    RowBox[{"[", "num", "]"}], "]"}], ",", 
                    RowBox[{"minHSUVals", "[", 
                    RowBox[{"[", "num", "]"}], "]"}], ",", 
                    RowBox[{"minSSUVals", "[", 
                    RowBox[{"[", "num", "]"}], "]"}]}], "]"}], "<", "0"}], 
                  "  ", "&&", " ", 
                  RowBox[{
                   RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"minGrowthVals", "[", 
                    RowBox[{"[", "num", "]"}], "]"}], ",", 
                    RowBox[{"minHSUVals", "[", 
                    RowBox[{"[", "num", "]"}], "]"}], ",", 
                    RowBox[{"minSSUVals", "[", 
                    RowBox[{"[", "num", "]"}], "]"}]}], "]"}], 
                   "\[GreaterEqual]", " ", "0"}]}], ",", " ", "2", ",", " ", 
                 RowBox[{"If", "[", " ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"minGrowthVals", "[", 
                    RowBox[{"[", "num", "]"}], "]"}], "<", "0"}], "&&", " ", 
                    RowBox[{
                    RowBox[{"minHSUVals", "[", 
                    RowBox[{"[", "num", "]"}], "]"}], "<", "0"}], "&&", " ", 
                    RowBox[{
                    RowBox[{"minSSUVals", "[", 
                    RowBox[{"[", "num", "]"}], "]"}], "<", "0"}], "&&", 
                    RowBox[{
                    RowBox[{"growthFinalVals", "[", 
                    RowBox[{"[", "num", "]"}], "]"}], ">", "0"}], " ", "&&", 
                    " ", 
                    RowBox[{
                    RowBox[{"HSUFinalVals", "[", 
                    RowBox[{"[", "num", "]"}], "]"}], "\[GreaterEqual]", " ", 
                    "0"}], "&&", " ", 
                    RowBox[{
                    RowBox[{"SSUFinalVals", "[", 
                    RowBox[{"[", "num", "]"}], "]"}], "\[GreaterEqual]", " ", 
                    "0"}]}], ",", "3", ",", " ", "4"}], "]"}]}], "]"}]}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"num", ",", " ", "1", ",", "240", ",", " ", "1"}], 
              "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
            "turn", " ", "the", " ", "values", " ", "into", " ", "a", " ", 
             "15", "x16", " ", 
             RowBox[{"matrix", ":", " ", 
              RowBox[{"rows", " ", "are", " ", "light", " ", "levels"}]}]}], 
            ",", " ", 
            RowBox[{"columns", " ", "are", " ", "light", " ", "durations"}]}],
            "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Matrix", "=", 
           RowBox[{"ArrayReshape", "[", 
            RowBox[{"Vals", ",", " ", 
             RowBox[{"{", 
              RowBox[{"15", ",", " ", "16"}], "}"}]}], "]"}]}], ";", " ", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"rows", " ", "are", " ", 
             RowBox[{"tHigh", "'"}], "s"}], ",", " ", 
            RowBox[{"columns", " ", "are", " ", 
             RowBox[{"LHigh", "'"}], "s"}]}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"{", "Matrix", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"holdm", ",", " ", 
         RowBox[{"{", 
          RowBox[{
          "stressRunsnoPnoX1", ",", "stressRunsPnoX1", ",", 
           "stressRunsnoPnoXN", ",", "stressRunsPnoXN"}], "}"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"name", " ", "the", " ", "matrices", " ", "to", " ", "plot"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixnoPnoX1", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"makeMatrixS", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixPnoX1", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"makeMatrixS", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixnoPXN", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"makeMatrixS", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", "1"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixPXN", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"makeMatrixS", "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", "1"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.836508807437653*^9, 3.836508835851046*^9}, 
   3.8376288441470633`*^9, {3.837628927422818*^9, 3.837628934403661*^9}, {
   3.837628968936076*^9, 3.8376289705646753`*^9}, {3.8390849005264063`*^9, 
   3.83908496340801*^9}, {3.839085003767371*^9, 3.839085098451292*^9}, {
   3.839156519218565*^9, 3.83915654841302*^9}, {3.8391575316269484`*^9, 
   3.8391576333069687`*^9}, {3.839158245968568*^9, 3.839158345529716*^9}, {
   3.839158381273773*^9, 3.839158386236435*^9}, {3.8391584517583933`*^9, 
   3.8391585513671093`*^9}, {3.839158668053301*^9, 3.839158675430134*^9}, {
   3.842651953633617*^9, 3.8426519544687757`*^9}, {3.8426520431698217`*^9, 
   3.842652054225278*^9}, {3.842910383449236*^9, 3.842910409049676*^9}, {
   3.8439293568385477`*^9, 3.843929383265152*^9}, {3.844464634235898*^9, 
   3.8444646569440002`*^9}},
 CellLabel->
  "In[426]:=",ExpressionUUID->"e45bdd39-642a-4b96-910a-2321dba48a3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot results", "Subsection",
 CellChangeTimes->{{3.8429104254262667`*^9, 
  3.842910427340074*^9}},ExpressionUUID->"98fec004-205b-4e46-8f39-\
2f1696e29f45"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"padding5", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"25", 
        RowBox[{"(*", "left", "*)"}], ",", "10"}], 
       RowBox[{"(*", "right", "*)"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"25", 
        RowBox[{"(*", "bottom", "*)"}], ",", "10"}], " ", 
       RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"low", " ", "Nenv"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotS7a", "=", 
    RowBox[{"MatrixPlot", "[", 
     RowBox[{
      RowBox[{"Reverse", "[", "MatrixnoPnoX1", "]"}], ",", " ", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<a) No fish, \!\(\*SubscriptBox[\(N\), \
\(env\)]\)=1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\), d=1660\>\""}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
         RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
         " ", "12"}], 
        RowBox[{"(*", 
         RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
      RowBox[{"ImagePadding", "\[Rule]", "padding5"}], ",", " ", 
      RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
      RowBox[{"Mesh", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"ColorRules", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "\[Rule]", " ", 
          RowBox[{"RGBColor", "[", "\"\<#55F32C\>\"", 
           RowBox[{"(*", "hexadecimal", "*)"}], "]"}]}], ",", " ", 
         RowBox[{"2", "\[Rule]", " ", 
          RowBox[{"RGBColor", "[", "\"\<#D8E67D\>\"", 
           RowBox[{"(*", 
            RowBox[{"#57", "D138"}], "*)"}], "]"}]}], ",", 
         RowBox[{"3", "\[Rule]", " ", 
          RowBox[{"RGBColor", "[", "\"\<#7DB7E6\>\"", 
           RowBox[{"(*", " ", 
            RowBox[{"#98", "C28D"}], "*)"}], "]"}]}], ",", " ", 
         RowBox[{"4", "\[Rule]", 
          RowBox[{"RGBColor", "[", "\"\<#AFB3AE\>\"", "]"}]}]}], "}"}]}], ",",
       " ", 
      RowBox[{"FrameTicks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"15", ",", " ", "\"\<7\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"12", ",", " ", "\"\<13\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"9", ",", " ", "\"\<19\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"6", ",", " ", "\"\<25\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", " ", "\"\<31\>\""}], "}"}]}], "}"}], ",", " ",
            "None"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", " ", "35"}], 
              RowBox[{"(*", "20", "*)"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"6", ",", " ", "40"}], 
              RowBox[{"(*", "25", "*)"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"11", ",", "45"}], 
              RowBox[{"(*", " ", "30", "*)"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"16", ",", " ", "50"}], 
              RowBox[{"(*", "35", "*)"}], "}"}]}], "}"}], ",", " ", "None"}], 
          "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"FrameTicksStyle", "\[Rule]", 
       RowBox[{"Directive", "[", "18", "]"}]}]}], 
     RowBox[{"(*", 
      RowBox[{"change", " ", "font", " ", "size"}], "*)"}], "]"}]}], " ", 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotS7b", "=", 
    RowBox[{"MatrixPlot", "[", 
     RowBox[{
      RowBox[{"Reverse", "[", "MatrixPnoX1", "]"}], ",", " ", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<b) Fish, \!\(\*SubscriptBox[\(N\), \
\(env\)]\)=1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\), d=1660\>\""}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
         RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
         " ", "12"}], 
        RowBox[{"(*", 
         RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
      RowBox[{"ImagePadding", "\[Rule]", "padding5"}], ",", " ", 
      RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
      RowBox[{"Mesh", "\[Rule]", "True"}], 
      RowBox[{"(*", 
       RowBox[{",", 
        RowBox[{"Mesh", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", " ", "2"}], "}"}], ",", " ", 
           RowBox[{"{", "1", "}"}]}], "}"}]}]}], "*)"}], 
      RowBox[{"(*", "True", "*)"}], ",", " ", 
      RowBox[{"ColorRules", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "\[Rule]", " ", 
          RowBox[{"RGBColor", "[", "\"\<#55F32C\>\"", 
           RowBox[{"(*", "hexadecimal", "*)"}], "]"}]}], ",", " ", 
         RowBox[{"2", "\[Rule]", " ", 
          RowBox[{"RGBColor", "[", "\"\<#D8E67D\>\"", 
           RowBox[{"(*", 
            RowBox[{"#57", "D138"}], "*)"}], "]"}]}], ",", 
         RowBox[{"3", "\[Rule]", " ", 
          RowBox[{"RGBColor", "[", "\"\<#7DB7E6\>\"", 
           RowBox[{"(*", " ", 
            RowBox[{"#98", "C28D"}], "*)"}], "]"}]}], ",", " ", 
         RowBox[{"4", "\[Rule]", 
          RowBox[{"RGBColor", "[", "\"\<#AFB3AE\>\"", "]"}]}]}], "}"}]}], ",", 
      RowBox[{"FrameTicks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"15", ",", " ", "\"\<7\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"12", ",", " ", "\"\<13\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"9", ",", " ", "\"\<19\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"6", ",", " ", "\"\<25\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", " ", "\"\<31\>\""}], "}"}]}], "}"}], ",", " ",
            "None"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", " ", "35"}], 
              RowBox[{"(*", "20", "*)"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"6", ",", " ", "40"}], 
              RowBox[{"(*", "25", "*)"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"11", ",", "45"}], 
              RowBox[{"(*", " ", "30", "*)"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"16", ",", " ", "50"}], 
              RowBox[{"(*", "35", "*)"}], "}"}]}], "}"}], ",", " ", "None"}], 
          "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"FrameTicksStyle", "\[Rule]", 
       RowBox[{"Directive", "[", "18", "]"}]}]}], "]"}]}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotS7c", "=", 
    RowBox[{"MatrixPlot", "[", 
     RowBox[{
      RowBox[{"Reverse", "[", "MatrixnoPXN", "]"}], ",", " ", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<c) No fish, \!\(\*SubscriptBox[\(N\), \
\(env\)]\)=6*\!\(\*SuperscriptBox[\(10\), \(-7\)]\), d=500\>\""}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
         RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
         " ", "12"}], 
        RowBox[{"(*", 
         RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
      RowBox[{"ImagePadding", "\[Rule]", "padding5"}], ",", " ", 
      RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
      RowBox[{"Mesh", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"ColorRules", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "\[Rule]", " ", 
          RowBox[{"RGBColor", "[", "\"\<#55F32C\>\"", 
           RowBox[{"(*", "hexadecimal", "*)"}], "]"}]}], ",", " ", 
         RowBox[{"2", "\[Rule]", " ", 
          RowBox[{"RGBColor", "[", "\"\<#D8E67D\>\"", 
           RowBox[{"(*", 
            RowBox[{"#57", "D138"}], "*)"}], "]"}]}], ",", 
         RowBox[{"3", "\[Rule]", " ", 
          RowBox[{"RGBColor", "[", "\"\<#7DB7E6\>\"", 
           RowBox[{"(*", " ", 
            RowBox[{"#98", "C28D"}], "*)"}], "]"}]}], ",", " ", 
         RowBox[{"4", "\[Rule]", 
          RowBox[{"RGBColor", "[", "\"\<#AFB3AE\>\"", "]"}]}]}], "}"}]}], ",",
       " ", 
      RowBox[{"FrameTicks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"15", ",", " ", "\"\<7\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"12", ",", " ", "\"\<13\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"9", ",", " ", "\"\<19\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"6", ",", " ", "\"\<25\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", " ", "\"\<31\>\""}], "}"}]}], "}"}], ",", " ",
            "None"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", " ", "35"}], 
              RowBox[{"(*", "20", "*)"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"6", ",", " ", "40"}], 
              RowBox[{"(*", "25", "*)"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"11", ",", "45"}], 
              RowBox[{"(*", " ", "30", "*)"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"16", ",", " ", "50"}], 
              RowBox[{"(*", "35", "*)"}], "}"}]}], "}"}], ",", " ", "None"}], 
          "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"FrameTicksStyle", "\[Rule]", 
       RowBox[{"Directive", "[", "18", "]"}]}]}], 
     RowBox[{"(*", 
      RowBox[{"change", " ", "font", " ", "size"}], "*)"}], "]"}]}], " ", 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotS7d", "=", 
   RowBox[{"MatrixPlot", "[", 
    RowBox[{
     RowBox[{"Reverse", "[", "MatrixPXN", "]"}], ",", " ", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<d) Fish, \!\(\*SubscriptBox[\(N\), \
\(env\)]\)=6*\!\(\*SuperscriptBox[\(10\), \(-7\)]\), d=500\>\""}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
        RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", " ",
         "12"}], 
       RowBox[{"(*", 
        RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", "padding5"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
     RowBox[{"Mesh", "\[Rule]", "True"}], ",", " ", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[Rule]", " ", 
         RowBox[{"RGBColor", "[", "\"\<#55F32C\>\"", 
          RowBox[{"(*", "hexadecimal", "*)"}], "]"}]}], ",", " ", 
        RowBox[{"2", "\[Rule]", " ", 
         RowBox[{"RGBColor", "[", "\"\<#D8E67D\>\"", 
          RowBox[{"(*", 
           RowBox[{"#57", "D138"}], "*)"}], "]"}]}], ",", 
        RowBox[{"3", "\[Rule]", " ", 
         RowBox[{"RGBColor", "[", "\"\<#7DB7E6\>\"", 
          RowBox[{"(*", " ", 
           RowBox[{"#98", "C28D"}], "*)"}], "]"}]}], ",", " ", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RGBColor", "[", "\"\<#AFB3AE\>\"", "]"}]}]}], "}"}]}], ",", 
     
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"15", ",", " ", "\"\<7\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"12", ",", " ", "\"\<13\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"9", ",", " ", "\"\<19\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"6", ",", " ", "\"\<25\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"3", ",", " ", "\"\<31\>\""}], "}"}]}], "}"}], ",", " ", 
          "None"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", " ", "35"}], 
             RowBox[{"(*", "20", "*)"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"6", ",", " ", "40"}], 
             RowBox[{"(*", "25", "*)"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"11", ",", "45"}], 
             RowBox[{"(*", " ", "30", "*)"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"16", ",", " ", "50"}], 
             RowBox[{"(*", "35", "*)"}], "}"}]}], "}"}], ",", " ", "None"}], 
         "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "18", "]"}]}]}], "]"}]}], " ", 
  ";"}]}], "Input",
 CellChangeTimes->{{3.842910454392231*^9, 3.8429105950558977`*^9}, {
  3.84291068968927*^9, 3.842910692675996*^9}, {3.844464708947106*^9, 
  3.844464735641603*^9}, {3.845826126373707*^9, 3.8458261266606903`*^9}},
 CellLabel->
  "In[431]:=",ExpressionUUID->"57d64b52-bfb1-4b59-b37b-cd839b4f5bf0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"make", " ", "legend"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"heatmapLeg", "=", 
    RowBox[{"SwatchLegend", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#55F32C\>\"", 
         RowBox[{"(*", "hexadecimal", "*)"}], "]"}], ",", " ", 
        RowBox[{"RGBColor", "[", "\"\<#D8E67D\>\"", 
         RowBox[{"(*", 
          RowBox[{"#57", "D138"}], "*)"}], "]"}], ",", "   ", 
        RowBox[{"RGBColor", "[", "\"\<#7DB7E6\>\"", 
         RowBox[{"(*", 
          RowBox[{"#98", "C28D"}], "*)"}], "]"}], ",", " ", 
        RowBox[{"RGBColor", "[", "\"\<#AFB3AE\>\"", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Not stressed\>\"", ",", "\"\<Mildly stressed\>\"", ",", " ", 
        "\"\<Bleached and \\n recovered\>\"", ",", " ", 
        "\"\<Bleached with \\n mortality\>\""}], "}"}], ",", " ", 
      RowBox[{"LegendMarkerSize", "\[Rule]", "30"}]}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.842652915937355*^9, 3.842653012058477*^9}, {
   3.84265304327975*^9, 3.842653053466496*^9}, {3.842653095372312*^9, 
   3.84265310491206*^9}, 3.8429106629300213`*^9, 3.8456448748217487`*^9},
 CellLabel->
  "In[436]:=",ExpressionUUID->"e6e7b8aa-4d62-4d5d-9c30-5fb9dccbcdac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SheatmapFig", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"GraphicsGrid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"plotS7a", ",", " ", "plotS7b"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"plotS7c", ",", " ", "plotS7d"}], "}"}]}], "}"}], ",", " ", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"Spacings", "\[Rule]", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", 
             RowBox[{"-", "20"}]}], 
            RowBox[{"(*", 
             RowBox[{"left", " ", "to", " ", "right"}], "*)"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "10", ",", "10", ",", "10"}], 
            RowBox[{"(*", 
             RowBox[{"top", " ", "to", " ", "bottom"}], "*)"}], "}"}]}], 
          "}"}]}], ",", " ", 
        RowBox[{"Frame", "\[Rule]", "False"}], 
        RowBox[{"(*", 
         RowBox[{",", " ", 
          RowBox[{"AspectRatio", "\[Rule]", 
           RowBox[{"1", "/", "GoldenRatio"}]}]}], "*)"}], ",", " ", 
        RowBox[{"Alignment", "\[Rule]", " ", "Bottom"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Light pulse duration (d)\>\"", ",", 
        "\"\<Light pulse magnitude (mol photons \!\(\*SuperscriptBox[\(m\), \
\(-2\)]\) \!\(\*SuperscriptBox[\(d\), \(-1\)]\))\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Bottom"}], "}"}], ",", 
      RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
         RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
         " ", "16"}], "]"}]}]}], "]"}], ",", 
    RowBox[{"Placed", "[", 
     RowBox[{"heatmapLeg", ",", 
      RowBox[{"(*", "Bottom", "*)"}], 
      RowBox[{"{", 
       RowBox[{"1.5", ",", "0.8"}], 
       RowBox[{"(*", 
        RowBox[{"x", ",", " ", 
         RowBox[{"y", " ", "position"}], ",", " ", "0", ",", 
         RowBox[{
         "0", " ", "is", " ", "the", " ", "lower", " ", "left", " ", "corner",
           " ", "of", " ", "the", " ", "plot"}]}], "*)"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.842910628036718*^9, 3.842910650201458*^9}, {
   3.843125391399907*^9, 3.843125393001503*^9}, {3.843929405918692*^9, 
   3.843929408368888*^9}, 3.844464747221427*^9},
 CellLabel->
  "In[437]:=",ExpressionUUID->"14db7a86-18d0-41bb-ba77-7a2228511f1d"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     GraphicsBox[{{}, {{
         InsetBox[
          GraphicsBox[{
            RasterBox[CompressedData["
1:eJzt0DEOQDAUxvEmDsBkMTnJu4PELJGYbUbHcwMmYmIhNmb6dgOhXuP7kibN
f2p/YZpHmaOUco/jHUffY15NJW8hn1cR+r0e8CbqWr2ZEl5/2qW9X5rPWd9W
vYEK3khNrTdc7tJ8bPe03d92T2n+T3na7vy2P5zN+MPZjD+czfS3neH/rb+0
/0rr8If/nzv84f/nDv9v+w5xXycK
             "], {{0, 0}, {16, 15}}, {0, 1}], {{
             Antialiasing -> False, 
              GrayLevel[
               NCache[-1 + GoldenRatio, 0.6180339887498949]], 
              
              LineBox[{{{0, 15}, {16, 15}}, {{0, 14}, {16, 14}}, {{0, 13}, {
               16, 13}}, {{0, 12}, {16, 12}}, {{0, 11}, {16, 11}}, {{0, 10}, {
               16, 10}}, {{0, 9}, {16, 9}}, {{0, 8}, {16, 8}}, {{0, 7}, {16, 
               7}}, {{0, 6}, {16, 6}}, {{0, 5}, {16, 5}}, {{0, 4}, {16, 
               4}}, {{0, 3}, {16, 3}}, {{0, 2}, {16, 2}}, {{0, 1}, {16, 
               1}}, {{0, 0}, {16, 0}}}]}, {Antialiasing -> False, 
              GrayLevel[
               NCache[-1 + GoldenRatio, 0.6180339887498949]], 
              
              LineBox[{{{0, 0}, {0, 15}}, {{1, 0}, {1, 15}}, {{2, 0}, {2, 
               15}}, {{3, 0}, {3, 15}}, {{4, 0}, {4, 15}}, {{5, 0}, {5, 
               15}}, {{6, 0}, {6, 15}}, {{7, 0}, {7, 15}}, {{8, 0}, {8, 
               15}}, {{9, 0}, {9, 15}}, {{10, 0}, {10, 15}}, {{11, 0}, {11, 
               15}}, {{12, 0}, {12, 15}}, {{13, 0}, {13, 15}}, {{14, 0}, {14, 
               15}}, {{15, 0}, {15, 15}}, {{16, 0}, {16, 15}}}]}}}, Frame -> 
           True, FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                FormBox["\"7\"", TraditionalForm]}, {3.5, 
                FormBox["\"13\"", TraditionalForm]}, {6.5, 
                FormBox["\"19\"", TraditionalForm]}, {9.5, 
                FormBox["\"25\"", TraditionalForm]}, {12.5, 
                FormBox["\"31\"", TraditionalForm]}}, None}, {{{0.5, 
                FormBox["35", TraditionalForm]}, {5.5, 
                FormBox["40", TraditionalForm]}, {10.5, 
                FormBox["45", TraditionalForm]}, {15.5, 
                FormBox["50", TraditionalForm]}}, None}}, FrameTicksStyle -> 
           Directive[18], GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{25, 10}, {25, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
             Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02],
              "RangePadding" -> Scaled[0.05]}, PlotLabel -> 
           FormBox["\"a) No fish, \\!\\(\\*SubscriptBox[\\(N\\), \
\\(env\\)]\\)=1*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\), d=1660\"", 
             TraditionalForm]], 
          NCache[{
            Rational[931, 2], -896}, {465.5, -896}], 
          ImageScaled[{0.5, 0}], {931, 896}], 
         InsetBox[
          GraphicsBox[{
            RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDgB2IBIAaxQ8Hgqn0dGLyzFwODY/aj4tQV//YVBJ7al4HB
M/trV0Hg6aBz52ATxxVu1BIfbP4d6uE50sJ/sIXncA3/wRZuwzX8B1v4jIb/
4Ay3oR7+gy0cRsN/cIbPaPgPb/HRcB4N/5EsPhr+o+E/ksVHw39gxQFL8bba

             "], {{0, 0}, {16, 15}}, {0, 1}], {{Antialiasing -> False, 
              GrayLevel[
               NCache[-1 + GoldenRatio, 0.6180339887498949]], 
              
              LineBox[{{{0, 15}, {16, 15}}, {{0, 14}, {16, 14}}, {{0, 13}, {
               16, 13}}, {{0, 12}, {16, 12}}, {{0, 11}, {16, 11}}, {{0, 10}, {
               16, 10}}, {{0, 9}, {16, 9}}, {{0, 8}, {16, 8}}, {{0, 7}, {16, 
               7}}, {{0, 6}, {16, 6}}, {{0, 5}, {16, 5}}, {{0, 4}, {16, 
               4}}, {{0, 3}, {16, 3}}, {{0, 2}, {16, 2}}, {{0, 1}, {16, 
               1}}, {{0, 0}, {16, 0}}}]}, {Antialiasing -> False, 
              GrayLevel[
               NCache[-1 + GoldenRatio, 0.6180339887498949]], 
              LineBox[{{{0, 0}, {0, 15}}, {{1, 0}, {1, 15}}, {{2, 0}, {2, 
               15}}, {{3, 0}, {3, 15}}, {{4, 0}, {4, 15}}, {{5, 0}, {5, 
               15}}, {{6, 0}, {6, 15}}, {{7, 0}, {7, 15}}, {{8, 0}, {8, 
               15}}, {{9, 0}, {9, 15}}, {{10, 0}, {10, 15}}, {{11, 0}, {11, 
               15}}, {{12, 0}, {12, 15}}, {{13, 0}, {13, 15}}, {{14, 0}, {14, 
               15}}, {{15, 0}, {15, 15}}, {{16, 0}, {16, 15}}}]}}}, Frame -> 
           True, FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                FormBox["\"7\"", TraditionalForm]}, {3.5, 
                FormBox["\"13\"", TraditionalForm]}, {6.5, 
                FormBox["\"19\"", TraditionalForm]}, {9.5, 
                FormBox["\"25\"", TraditionalForm]}, {12.5, 
                FormBox["\"31\"", TraditionalForm]}}, None}, {{{0.5, 
                FormBox["35", TraditionalForm]}, {5.5, 
                FormBox["40", TraditionalForm]}, {10.5, 
                FormBox["45", TraditionalForm]}, {15.5, 
                FormBox["50", TraditionalForm]}}, None}}, FrameTicksStyle -> 
           Directive[18], GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{25, 10}, {25, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
             Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02],
              "RangePadding" -> Scaled[0.05]}, PlotLabel -> 
           FormBox["\"b) Fish, \\!\\(\\*SubscriptBox[\\(N\\), \
\\(env\\)]\\)=1*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\), d=1660\"", 
             TraditionalForm]], {1376.5, -896}, 
          ImageScaled[{0.5, 0}], {931, 896}]}, {
         InsetBox[
          GraphicsBox[{
            RasterBox[CompressedData["
1:eJzt0LEJgDAQheGAA2hl7yS3g+ACgrWdpeO5QdwglnZam9wAgoX4cr4HB+Hv
8jX92A6Fc66MV8VL707nZdbtUusWYb/v55EWZNJtsvq08Lij/St3T/p/6/k3
fzRPq/5oblb90Xzoj+lGfxudzvRHcKA/pg/9bXf60x/Bgf6YPm/3C10VpnQ=

             "], {{0, 0}, {16, 15}}, {0, 1}], {{Antialiasing -> False, 
              GrayLevel[
               NCache[-1 + GoldenRatio, 0.6180339887498949]], 
              
              LineBox[{{{0, 15}, {16, 15}}, {{0, 14}, {16, 14}}, {{0, 13}, {
               16, 13}}, {{0, 12}, {16, 12}}, {{0, 11}, {16, 11}}, {{0, 10}, {
               16, 10}}, {{0, 9}, {16, 9}}, {{0, 8}, {16, 8}}, {{0, 7}, {16, 
               7}}, {{0, 6}, {16, 6}}, {{0, 5}, {16, 5}}, {{0, 4}, {16, 
               4}}, {{0, 3}, {16, 3}}, {{0, 2}, {16, 2}}, {{0, 1}, {16, 
               1}}, {{0, 0}, {16, 0}}}]}, {Antialiasing -> False, 
              GrayLevel[
               NCache[-1 + GoldenRatio, 0.6180339887498949]], 
              
              LineBox[{{{0, 0}, {0, 15}}, {{1, 0}, {1, 15}}, {{2, 0}, {2, 
               15}}, {{3, 0}, {3, 15}}, {{4, 0}, {4, 15}}, {{5, 0}, {5, 
               15}}, {{6, 0}, {6, 15}}, {{7, 0}, {7, 15}}, {{8, 0}, {8, 
               15}}, {{9, 0}, {9, 15}}, {{10, 0}, {10, 15}}, {{11, 0}, {11, 
               15}}, {{12, 0}, {12, 15}}, {{13, 0}, {13, 15}}, {{14, 0}, {14, 
               15}}, {{15, 0}, {15, 15}}, {{16, 0}, {16, 15}}}]}}}, Frame -> 
           True, FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                FormBox["\"7\"", TraditionalForm]}, {3.5, 
                FormBox["\"13\"", TraditionalForm]}, {6.5, 
                FormBox["\"19\"", TraditionalForm]}, {9.5, 
                FormBox["\"25\"", TraditionalForm]}, {12.5, 
                FormBox["\"31\"", TraditionalForm]}}, None}, {{{0.5, 
                FormBox["35", TraditionalForm]}, {5.5, 
                FormBox["40", TraditionalForm]}, {10.5, 
                FormBox["45", TraditionalForm]}, {15.5, 
                FormBox["50", TraditionalForm]}}, None}}, FrameTicksStyle -> 
           Directive[18], GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{25, 10}, {25, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
             Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02],
              "RangePadding" -> Scaled[0.05]}, PlotLabel -> 
           FormBox["\"c) No fish, \\!\\(\\*SubscriptBox[\\(N\\), \
\\(env\\)]\\)=6*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\), d=500\"", 
             TraditionalForm]], 
          NCache[{
            Rational[931, 2], -1802}, {465.5, -1802}], 
          ImageScaled[{0.5, 0}], {931, 896}], 
         InsetBox[
          GraphicsBox[{
            RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDgB2IBIAaxQ8Hgqn0dGLyzFwODY/aj4vjFv30Fgaf2ZWDw
zP7aVRB4SrL4YPPXUA/P0fAf2PAcaeE/2MJzuIb/YAu34Rr+gy18RsN/cIbb
aPgPD/HR8B8N/9HwHw3/0fAfDf/R8B8N/8EWPqPhPzjDjVriAF4tbQ8=
             "], {{0,
              0}, {16, 15}}, {0, 1}], {{Antialiasing -> False, 
              GrayLevel[
               NCache[-1 + GoldenRatio, 0.6180339887498949]], 
              
              LineBox[{{{0, 15}, {16, 15}}, {{0, 14}, {16, 14}}, {{0, 13}, {
               16, 13}}, {{0, 12}, {16, 12}}, {{0, 11}, {16, 11}}, {{0, 10}, {
               16, 10}}, {{0, 9}, {16, 9}}, {{0, 8}, {16, 8}}, {{0, 7}, {16, 
               7}}, {{0, 6}, {16, 6}}, {{0, 5}, {16, 5}}, {{0, 4}, {16, 
               4}}, {{0, 3}, {16, 3}}, {{0, 2}, {16, 2}}, {{0, 1}, {16, 
               1}}, {{0, 0}, {16, 0}}}]}, {Antialiasing -> False, 
              GrayLevel[
               NCache[-1 + GoldenRatio, 0.6180339887498949]], 
              
              LineBox[{{{0, 0}, {0, 15}}, {{1, 0}, {1, 15}}, {{2, 0}, {2, 
               15}}, {{3, 0}, {3, 15}}, {{4, 0}, {4, 15}}, {{5, 0}, {5, 
               15}}, {{6, 0}, {6, 15}}, {{7, 0}, {7, 15}}, {{8, 0}, {8, 
               15}}, {{9, 0}, {9, 15}}, {{10, 0}, {10, 15}}, {{11, 0}, {11, 
               15}}, {{12, 0}, {12, 15}}, {{13, 0}, {13, 15}}, {{14, 0}, {14, 
               15}}, {{15, 0}, {15, 15}}, {{16, 0}, {16, 15}}}]}}}, Frame -> 
           True, FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                FormBox["\"7\"", TraditionalForm]}, {3.5, 
                FormBox["\"13\"", TraditionalForm]}, {6.5, 
                FormBox["\"19\"", TraditionalForm]}, {9.5, 
                FormBox["\"25\"", TraditionalForm]}, {12.5, 
                FormBox["\"31\"", TraditionalForm]}}, None}, {{{0.5, 
                FormBox["35", TraditionalForm]}, {5.5, 
                FormBox["40", TraditionalForm]}, {10.5, 
                FormBox["45", TraditionalForm]}, {15.5, 
                FormBox["50", TraditionalForm]}}, None}}, FrameTicksStyle -> 
           Directive[18], GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{25, 10}, {25, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
             Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02],
              "RangePadding" -> Scaled[0.05]}, PlotLabel -> 
           FormBox["\"d) Fish, \\!\\(\\*SubscriptBox[\\(N\\), \
\\(env\\)]\\)=6*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\), d=500\"", 
             TraditionalForm]], {1376.5, -1802}, 
          ImageScaled[{0.5, 0}], {931, 896}]}}, {}}, ImageSize -> Full, {
      PlotRangePadding -> {6, 5}}, ImageSize -> Full], 
     "\"Light pulse duration (d)\"", 
     "\"Light pulse magnitude (mol photons \\!\\(\\*SuperscriptBox[\\(m\\), \
\\(-2\\)]\\) \\!\\(\\*SuperscriptBox[\\(d\\), \\(-1\\)]\\))\""}, "Labeled", 
    DisplayFunction -> (GridBox[{{
        ItemBox[
         RotationBox[#2, BoxRotation -> 1.5707963267948966`], BaseStyle -> 
         Directive[FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 16], 
         DefaultBaseStyle -> "LabeledLabel"], 
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {"", 
        ItemBox[#3, BaseStyle -> 
         Directive[FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 16], 
         DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 2}]& ), 
    InterpretationFunction -> (RowBox[{"Labeled", "[", 
       RowBox[{#, ",", 
         RowBox[{"{", 
           RowBox[{#2, ",", #3}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"Left", ",", "Bottom"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontColor", "\[Rule]", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                   "16"}], "]"}]}]}], "}"}]}], "]"}]& )], 
   TemplateBox[{
    "\"Not stressed\"", "\"Mildly stressed\"", 
     "\"Bleached and \\n recovered\"", "\"Bleached with \\n mortality\""}, 
    "SwatchLegend", DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   AbsoluteThickness[1.6], 
                   RGBColor[
                   0.3333333333333333, 0.9529411764705882, 
                    0.17254901960784313`]], 
                  RectangleBox[{0, 0}, {30, 30}, "RoundingRadius" -> 0]}, 
                 AspectRatio -> Full, ImageSize -> {30, 30}, PlotRangePadding -> 
                 None, ImagePadding -> Automatic, 
                 BaselinePosition -> (Scaled[0.3666666666666667] -> 
                  Baseline)], #}, {
                GraphicsBox[{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   AbsoluteThickness[1.6], 
                   RGBColor[
                   0.8470588235294118, 0.9019607843137255, 
                    0.49019607843137253`]], 
                  RectangleBox[{0, 0}, {30, 30}, "RoundingRadius" -> 0]}, 
                 AspectRatio -> Full, ImageSize -> {30, 30}, PlotRangePadding -> 
                 None, ImagePadding -> Automatic, 
                 BaselinePosition -> (Scaled[0.3666666666666667] -> 
                  Baseline)], #2}, {
                GraphicsBox[{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   AbsoluteThickness[1.6], 
                   RGBColor[
                   0.49019607843137253`, 0.7176470588235294, 
                    0.9019607843137255]], 
                  RectangleBox[{0, 0}, {30, 30}, "RoundingRadius" -> 0]}, 
                 AspectRatio -> Full, ImageSize -> {30, 30}, PlotRangePadding -> 
                 None, ImagePadding -> Automatic, 
                 BaselinePosition -> (Scaled[0.3666666666666667] -> 
                  Baseline)], #3}, {
                GraphicsBox[{
                  Directive[
                   EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                   PointSize[0.5], 
                   AbsoluteThickness[1.6], 
                   RGBColor[
                   0.6862745098039216, 0.7019607843137254, 
                    0.6823529411764706]], 
                  RectangleBox[{0, 0}, {30, 30}, "RoundingRadius" -> 0]}, 
                 AspectRatio -> Full, ImageSize -> {30, 30}, PlotRangePadding -> 
                 None, ImagePadding -> Automatic, 
                 BaselinePosition -> (Scaled[0.3666666666666667] -> 
                  Baseline)], #4}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
      Background -> Automatic, StripOnInput -> False]& ), 
    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             
             TemplateBox[<|
              "color" -> RGBColor[
                0.3333333333333333, 0.9529411764705882, 
                 0.17254901960784313`]|>, "RGBColorSwatchTemplate"], ",", 
             
             TemplateBox[<|
              "color" -> RGBColor[
                0.8470588235294118, 0.9019607843137255, 
                 0.49019607843137253`]|>, "RGBColorSwatchTemplate"], ",", 
             
             TemplateBox[<|
              "color" -> RGBColor[
                0.49019607843137253`, 0.7176470588235294, 
                 0.9019607843137255]|>, "RGBColorSwatchTemplate"], ",", 
             
             TemplateBox[<|
              "color" -> RGBColor[
                0.6862745098039216, 0.7019607843137254, 0.6823529411764706]|>,
               "RGBColorSwatchTemplate"]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
         RowBox[{"LegendMarkerSize", "\[Rule]", "30"}]}], "]"}]& ), Editable -> 
    True]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", 
           RowBox[{"{", 
             RowBox[{"1.5`", ",", "0.8`"}], "}"}]}], "]"}]}], 
     "]"}]& )]], "Output",
 CellChangeTimes->{
  3.842910666018312*^9, 3.842910697983708*^9, {3.843125369090308*^9, 
   3.8431253941065598`*^9}, 3.8445106058413877`*^9, 3.845644880284762*^9, 
   3.845826149447668*^9, 3.854044875502572*^9},
 CellLabel->
  "Out[437]=",ExpressionUUID->"66f280f2-500d-4d47-902f-28c26d471552"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<S_bleach_heatmaps.pdf\>\"", ",", "SheatmapFig", ",", "\"\<PDF\>\""}], 
   "]"}], " "}]], "Input",
 CellChangeTimes->{{3.843125469972723*^9, 3.843125502003683*^9}, 
   3.843929419627016*^9},
 CellLabel->"In[60]:=",ExpressionUUID->"3d136fa1-53d4-481d-9905-2e3ca9de8c11"],

Cell[BoxData["\<\"S_bleach_heatmaps.pdf\"\>"], "Output",
 CellChangeTimes->{3.8431255076683693`*^9, 3.8456448856089783`*^9, 
  3.845826184367848*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"cc255ffe-350a-461a-aaa5-ce0e4371f00a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Fig. S8 and S11: Time series of post-bleaching dynamics with and without fish\
\
\>", "Section",
 CellChangeTimes->{{3.8430594423025208`*^9, 3.843059454921899*^9}, {
  3.845644954304714*^9, 3.8456449780696983`*^9}, {3.846192125642976*^9, 
  3.8461921260379763`*^9}},ExpressionUUID->"852b1c09-a002-43ac-bfbc-\
b2b0f7e73e0a"],

Cell[CellGroupData[{

Cell["Run Simulations", "Subsection",
 CellChangeTimes->{{3.836562426870637*^9, 3.836562457245138*^9}, {
  3.837163188517445*^9, 3.837163208863208*^9}, {3.83770069038804*^9, 
  3.837700704084516*^9}, {3.839763627718816*^9, 3.839763630302581*^9}, {
  3.843059471278329*^9, 
  3.843059472011567*^9}},ExpressionUUID->"e53f3936-0c54-40a8-8284-\
3c6afceab94f"],

Cell[CellGroupData[{

Cell["No Fish", "Subsubsection",
 CellChangeTimes->{{3.839763863903047*^9, 
  3.839763866051803*^9}},ExpressionUUID->"a02df39a-fe7c-471a-b551-\
28eb4cfb8a0d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh", ",", 
    "LfunH"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.831830789369714*^9, 3.8318307905412607`*^9}, {
   3.835995882215592*^9, 3.83599588299831*^9}, {3.8363089619914494`*^9, 
   3.836308970966587*^9}, {3.836309185335792*^9, 3.8363091870313787`*^9}, 
   3.8363138138722897`*^9, {3.837700683112805*^9, 3.837700684629079*^9}},
 CellLabel->
  "In[727]:=",ExpressionUUID->"14f5dc0e-490b-4939-a989-4c1436e85a27"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"no", " ", "fish"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"P0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jN", "=", 
     FractionBox[
      RowBox[{"jNm", " ", "\[CapitalNu]"}], 
      RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jNi0", " ", "=", " ", 
     FractionBox[
      RowBox[{"jNm", " ", "\[CapitalNu]"}], 
      RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", "=", 
     RowBox[{"1.1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jX", "=", 
     FractionBox[
      RowBox[{"jXm", " ", "X"}], 
      RowBox[{"X", "+", "KX"}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"light", " ", "function", " ", "parameters"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tStartStress", "=", "600"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LHigh", "=", " ", "35"}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tHigh", "=", "30"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "1000"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"light", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LfunH", "=", 
     RowBox[{"L", "+", " ", 
      RowBox[{"LHigh", "*", 
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"t", "-", "tStartStress"}], "]"}]}], " ", "-", "  ", 
      RowBox[{"LHigh", "*", 
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"t", "-", 
         RowBox[{"(", 
          RowBox[{"tStartStress", "+", "tHigh"}], ")"}]}], "]"}]}]}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
      RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
     FractionBox[
      RowBox[{"A", " ", "B", " ", 
       RowBox[{"(", 
        RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["A", "2"], " ", "B"}], "+", 
       RowBox[{"A", " ", 
        SuperscriptBox["B", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
       RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
       RowBox[{
        SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"same", " ", "as", " ", 
     FractionBox["1", 
      RowBox[{
       FractionBox["1", "\[Rho]"], "+", 
       FractionBox["1", "A"], "+", 
       FractionBox["1", "B"], "-", 
       FractionBox["1", 
        RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fh", "[", 
      RowBox[{
       RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
     RowBox[{"Piecewise", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"y", "<", "0"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"kv", " ", "*", "y"}], ",", 
          RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "Calculations", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jHG", "=", 
     RowBox[{
      RowBox[{"F", "[", "jHGm", "]"}], "[", 
      RowBox[{
       RowBox[{"yC", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Rho]C", " ", 
           RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
          RowBox[{"\[Alpha]", "*", "jN"}], "+", 
          RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
        SuperscriptBox["nNH", 
         RowBox[{"-", "1"}]]}]}], "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"jSG", "=", 
     RowBox[{
      RowBox[{"F", "[", "jSGm", "]"}], "[", 
      RowBox[{
       RowBox[{"jCP", " ", "yC"}], ",", 
       FractionBox[
        RowBox[{"rNS", "+", 
         FractionBox[
          RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Rho]N", "=", 
     RowBox[{"Max", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
        RowBox[{"\[Alpha]", "*", "jN"}], "+", 
        RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
        RowBox[{"nNH", " ", "jHG"}]}], " ", 
       RowBox[{"(*", 
        SuperscriptBox["yN", 
         RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jeC", "=", 
     RowBox[{"Max", "[", 
      RowBox[{
       RowBox[{"jX", "-", 
        FractionBox["jHG", "yC"], "+", 
        FractionBox[
         RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], ";"}], 
   " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jCO2", "=", 
     RowBox[{"jeC", " ", "kCO2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jL", "=", 
     RowBox[{"A", " ", "astar", " ", "LfunH"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rCH", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"jHT", "+", 
        FractionBox[
         RowBox[{"jHG", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
      "\[Sigma]CH"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rCS", "=", 
     RowBox[{"\[Sigma]CS", 
      RowBox[{"(", 
       RowBox[{"j0ST", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
         SuperscriptBox["yC", 
          RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jeL", "=", 
     RowBox[{"jL", "-", 
      FractionBox["jCP", "yCL"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jNPQ", "=", 
     FractionBox["1", 
      RowBox[{
       FractionBox["1", "jeL"], "+", 
       FractionBox["1", "kNPQ"]}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cROS1", "=", 
     FractionBox[
      RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jST", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rNH", "=", 
     RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A", "=", 
     RowBox[{"1.256307", "+", 
      RowBox[{"1.385969", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "6.479055"}], " ", 
         RowBox[{"S", "/", "H"}]}]]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jNw", "=", " ", 
     RowBox[{
      RowBox[{"\[Rho]N", "*", 
       RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
      RowBox[{"nNS", "*", "jSG"}]}]}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tsolve", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Rho]C", ",", 
         RowBox[{"jCP", "-", 
          RowBox[{"jSG", " ", 
           SuperscriptBox["yC", 
            RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"jCP", ",", 
         FractionBox[
          RowBox[{
           RowBox[{"F", "[", "jCPm", "]"}], "[", 
           RowBox[{
            RowBox[{"jL", " ", "yCL"}], ",", 
            RowBox[{"rCS", "+", 
             FractionBox[
              RowBox[{"H", " ", 
               RowBox[{"(", 
                RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
          RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"jNi", ",", " ", 
         FractionBox[
          RowBox[{"jNm", " ", "*", "Ni"}], 
          RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
      "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"states", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"tsolve", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], "}"}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"addtimetostatevars", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#", "\[Rule]", 
          RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", "states"}], 
      ")"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqs", "=", 
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
           "\[Equal]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Lambda]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
             "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", "tsolve"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"S", 
             RowBox[{"(", 
              RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
            "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"H", 
             RowBox[{"(", 
              RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
            "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
          RowBox[{"fh", "[", 
           RowBox[{"t", ",", "  ", 
            RowBox[{
             RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"d", "*", 
              RowBox[{"(", " ", 
               RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], " ", 
             "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Zeta]", "*", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                 "S"}], "+", " ", 
                RowBox[{"ep", "*", "P"}], " ", "-", 
                RowBox[{"jNi", "*", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], ")"}], 
              "/", 
              RowBox[{"(", " ", 
               RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
            "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"P", "*", 
             RowBox[{"(", 
              RowBox[{"rp", "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"kp", "*", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                  RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"kp", "*", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
              ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
        "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inis", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], "\[Equal]", 
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
        "tsolve"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solRecovNoP", "=", 
     RowBox[{
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Join", "[", 
          RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
        RowBox[{
         RowBox[{"#", "&"}], "/@", "states"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
        RowBox[{"Method", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<EquationSimplification\>\"", "\[Rule]", "\"\<Residual\>\""}], 
          "}"}]}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836574971850909*^9, 3.836575001348812*^9}, {3.8377007138884783`*^9, 
   3.8377007309776583`*^9}, {3.839763938158043*^9, 3.83976397647167*^9}, {
   3.839764031461659*^9, 3.839764052776661*^9}, 3.83976408568211*^9, {
   3.839764151609365*^9, 3.839764152402811*^9}, {3.839764337286881*^9, 
   3.839764338003037*^9}, {3.839764372331621*^9, 3.8397644292310123`*^9}, 
   3.8439282545254593`*^9, {3.844464770581729*^9, 3.844464818770474*^9}, {
   3.8540256714257727`*^9, 3.854025678212936*^9}},
 CellLabel->
  "In[728]:=",ExpressionUUID->"098e6716-0968-4ce4-9bb5-8917faabf4d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["With Fish", "Subsubsection",
 CellChangeTimes->{{3.839763863903047*^9, 3.839763866051803*^9}, {
  3.839764468715926*^9, 
  3.8397644705790377`*^9}},ExpressionUUID->"5af3c812-f427-4aeb-bd2b-\
36498e22a024"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh", ",", 
    "LfunH"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.831830789369714*^9, 3.8318307905412607`*^9}, {
   3.835995882215592*^9, 3.83599588299831*^9}, {3.8363089619914494`*^9, 
   3.836308970966587*^9}, {3.836309185335792*^9, 3.8363091870313787`*^9}, 
   3.8363138138722897`*^9, {3.837700683112805*^9, 3.837700684629079*^9}},
 CellLabel->
  "In[764]:=",ExpressionUUID->"02ba2fff-9f89-459a-a527-e55b7b467add"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"with", " ", "fish"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"P0", "=", 
     RowBox[{"kp", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H0"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jN", "=", 
     FractionBox[
      RowBox[{"jNm", " ", "\[CapitalNu]"}], 
      RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jNi0", " ", "=", " ", 
     FractionBox[
      RowBox[{"jNm", " ", "\[CapitalNu]"}], 
      RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", "=", 
     RowBox[{"1.1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jX", "=", 
     FractionBox[
      RowBox[{"jXm", " ", "X"}], 
      RowBox[{"X", "+", "KX"}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"light", " ", "function", " ", "parameters"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tStartStress", "=", "600"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LHigh", "=", " ", "35"}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tHigh", "=", "30"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "1000"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"light", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LfunH", "=", 
     RowBox[{"L", "+", " ", 
      RowBox[{"LHigh", "*", 
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"t", "-", "tStartStress"}], "]"}]}], " ", "-", "  ", 
      RowBox[{"LHigh", "*", 
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"t", "-", 
         RowBox[{"(", 
          RowBox[{"tStartStress", "+", "tHigh"}], ")"}]}], "]"}]}]}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
      RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
     FractionBox[
      RowBox[{"A", " ", "B", " ", 
       RowBox[{"(", 
        RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["A", "2"], " ", "B"}], "+", 
       RowBox[{"A", " ", 
        SuperscriptBox["B", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
       RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
       RowBox[{
        SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"same", " ", "as", " ", 
     FractionBox["1", 
      RowBox[{
       FractionBox["1", "\[Rho]"], "+", 
       FractionBox["1", "A"], "+", 
       FractionBox["1", "B"], "-", 
       FractionBox["1", 
        RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fh", "[", 
      RowBox[{
       RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
     RowBox[{"Piecewise", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"y", "<", "0"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"kv", " ", "*", "y"}], ",", 
          RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "Calculations", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jHG", "=", 
     RowBox[{
      RowBox[{"F", "[", "jHGm", "]"}], "[", 
      RowBox[{
       RowBox[{"yC", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Rho]C", " ", 
           RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
          RowBox[{"\[Alpha]", "*", "jN"}], "+", 
          RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
        SuperscriptBox["nNH", 
         RowBox[{"-", "1"}]]}]}], "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"jSG", "=", 
     RowBox[{
      RowBox[{"F", "[", "jSGm", "]"}], "[", 
      RowBox[{
       RowBox[{"jCP", " ", "yC"}], ",", 
       FractionBox[
        RowBox[{"rNS", "+", 
         FractionBox[
          RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Rho]N", "=", 
     RowBox[{"Max", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
        RowBox[{"\[Alpha]", "*", "jN"}], "+", 
        RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
        RowBox[{"nNH", " ", "jHG"}]}], " ", 
       RowBox[{"(*", 
        SuperscriptBox["yN", 
         RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jeC", "=", 
     RowBox[{"Max", "[", 
      RowBox[{
       RowBox[{"jX", "-", 
        FractionBox["jHG", "yC"], "+", 
        FractionBox[
         RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], ";"}], 
   " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jCO2", "=", 
     RowBox[{"jeC", " ", "kCO2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jL", "=", 
     RowBox[{"A", " ", "astar", " ", "LfunH"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rCH", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"jHT", "+", 
        FractionBox[
         RowBox[{"jHG", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
      "\[Sigma]CH"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rCS", "=", 
     RowBox[{"\[Sigma]CS", 
      RowBox[{"(", 
       RowBox[{"j0ST", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
         SuperscriptBox["yC", 
          RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jeL", "=", 
     RowBox[{"jL", "-", 
      FractionBox["jCP", "yCL"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jNPQ", "=", 
     FractionBox["1", 
      RowBox[{
       FractionBox["1", "jeL"], "+", 
       FractionBox["1", "kNPQ"]}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cROS1", "=", 
     FractionBox[
      RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jST", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rNH", "=", 
     RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A", "=", 
     RowBox[{"1.256307", "+", 
      RowBox[{"1.385969", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "6.479055"}], " ", 
         RowBox[{"S", "/", "H"}]}]]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jNw", "=", " ", 
     RowBox[{
      RowBox[{"\[Rho]N", "*", 
       RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
      RowBox[{"nNS", "*", "jSG"}]}]}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tsolve", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Rho]C", ",", 
         RowBox[{"jCP", "-", 
          RowBox[{"jSG", " ", 
           SuperscriptBox["yC", 
            RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"jCP", ",", 
         FractionBox[
          RowBox[{
           RowBox[{"F", "[", "jCPm", "]"}], "[", 
           RowBox[{
            RowBox[{"jL", " ", "yCL"}], ",", 
            RowBox[{"rCS", "+", 
             FractionBox[
              RowBox[{"H", " ", 
               RowBox[{"(", 
                RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
          RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"jNi", ",", " ", 
         FractionBox[
          RowBox[{"jNm", " ", "*", "Ni"}], 
          RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
      "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"states", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"tsolve", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], "}"}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"addtimetostatevars", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#", "\[Rule]", 
          RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", "states"}], 
      ")"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqs", "=", 
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
           "\[Equal]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Lambda]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
             "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", "tsolve"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"S", 
             RowBox[{"(", 
              RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
            "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"H", 
             RowBox[{"(", 
              RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
            "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
          RowBox[{"fh", "[", 
           RowBox[{"t", ",", 
            RowBox[{
             RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"d", "*", 
              RowBox[{"(", " ", 
               RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], " ", 
             "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Zeta]", "*", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                 "S"}], "+", " ", 
                RowBox[{"ep", "*", "P"}], " ", "-", 
                RowBox[{"jNi", "*", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], ")"}], 
              "/", 
              RowBox[{"(", " ", 
               RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
            "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"P", "*", 
             RowBox[{"(", 
              RowBox[{"rp", "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"kp", "*", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                  RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"kp", "*", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
              ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
        "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inis", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], "\[Equal]", 
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
        "tsolve"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solRecovP", "=", 
     RowBox[{
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Join", "[", 
          RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
        RowBox[{
         RowBox[{"#", "&"}], "/@", "states"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
        RowBox[{"Method", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<EquationSimplification\>\"", "\[Rule]", "\"\<Residual\>\""}], 
          "}"}]}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836574971850909*^9, 3.836575001348812*^9}, {3.8377007138884783`*^9, 
   3.8377007309776583`*^9}, {3.839763938158043*^9, 3.83976397647167*^9}, {
   3.839764031461659*^9, 3.839764052776661*^9}, 3.83976408568211*^9, {
   3.839764151609365*^9, 3.839764152402811*^9}, {3.839764337286881*^9, 
   3.839764338003037*^9}, {3.839764372331621*^9, 3.8397644292310123`*^9}, {
   3.8397644929773703`*^9, 3.83976451038557*^9}, 3.84392826665142*^9, {
   3.844464832147129*^9, 3.84446486292172*^9}, {3.854025721206547*^9, 
   3.85402572926381*^9}},
 CellLabel->
  "In[765]:=",ExpressionUUID->"59a55bcf-d963-4a0e-b5d7-cd410c693113"]
}, Open  ]],

Cell[CellGroupData[{

Cell["With fish, carrying capacity depends on interstitial volume", \
"Subsubsection",
 CellChangeTimes->{{3.840114845395227*^9, 
  3.84011487097932*^9}},ExpressionUUID->"2ac27891-7593-45db-a1df-\
7d489f693713"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh", ",", 
    "LfunH"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.831830789369714*^9, 3.8318307905412607`*^9}, {
   3.835995882215592*^9, 3.83599588299831*^9}, {3.8363089619914494`*^9, 
   3.836308970966587*^9}, {3.836309185335792*^9, 3.8363091870313787`*^9}, 
   3.8363138138722897`*^9, {3.837700683112805*^9, 3.837700684629079*^9}},
 CellLabel->
  "In[801]:=",ExpressionUUID->"8a63db7d-2b8d-4795-b870-0e8374812bd0"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "constant", " ", "scaling", " ", "fish", " ", "biomass", " ", "to", " ", 
    "interstitial", " ", "volume", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"from", " ", "qunatile", " ", "regression"}], ",", " ", 
      RowBox[{
      "see", " ", "Supplementary", " ", "information", " ", "on", " ", 
       "parameterization"}]}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"kpv", " ", "=", " ", "13.66"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"with", " ", "fish"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P0", "=", 
     RowBox[{"kpv", "*", 
      RowBox[{"(", "vi", ")"}], "VH0"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jN", "=", 
     FractionBox[
      RowBox[{"jNm", " ", "\[CapitalNu]"}], 
      RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jNi0", " ", "=", " ", 
     FractionBox[
      RowBox[{"jNm", " ", "\[CapitalNu]"}], 
      RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", "=", 
     RowBox[{"1.1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jX", "=", 
     FractionBox[
      RowBox[{"jXm", " ", "X"}], 
      RowBox[{"X", "+", "KX"}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"light", " ", "function", " ", "parameters"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tStartStress", "=", "600"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LHigh", "=", " ", "35"}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tHigh", "=", "30"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "1000"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"light", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LfunH", "=", 
     RowBox[{"L", "+", " ", 
      RowBox[{"LHigh", "*", 
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"t", "-", "tStartStress"}], "]"}]}], " ", "-", "  ", 
      RowBox[{"LHigh", "*", 
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"t", "-", 
         RowBox[{"(", 
          RowBox[{"tStartStress", "+", "tHigh"}], ")"}]}], "]"}]}]}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
      RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
     FractionBox[
      RowBox[{"A", " ", "B", " ", 
       RowBox[{"(", 
        RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["A", "2"], " ", "B"}], "+", 
       RowBox[{"A", " ", 
        SuperscriptBox["B", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
       RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
       RowBox[{
        SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"same", " ", "as", " ", 
     FractionBox["1", 
      RowBox[{
       FractionBox["1", "\[Rho]"], "+", 
       FractionBox["1", "A"], "+", 
       FractionBox["1", "B"], "-", 
       FractionBox["1", 
        RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fh", "[", 
      RowBox[{
       RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
     RowBox[{"Piecewise", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"y", "<", "0"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"kv", " ", "*", "y"}], ",", 
          RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "Calculations", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jHG", "=", 
     RowBox[{
      RowBox[{"F", "[", "jHGm", "]"}], "[", 
      RowBox[{
       RowBox[{"yC", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Rho]C", " ", 
           RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
          RowBox[{"\[Alpha]", "*", "jN"}], "+", 
          RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
        SuperscriptBox["nNH", 
         RowBox[{"-", "1"}]]}]}], "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"jSG", "=", 
     RowBox[{
      RowBox[{"F", "[", "jSGm", "]"}], "[", 
      RowBox[{
       RowBox[{"jCP", " ", "yC"}], ",", 
       FractionBox[
        RowBox[{"rNS", "+", 
         FractionBox[
          RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Rho]N", "=", 
     RowBox[{"Max", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
        RowBox[{"\[Alpha]", "*", "jN"}], "+", 
        RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
        RowBox[{"nNH", " ", "jHG"}]}], " ", 
       RowBox[{"(*", 
        SuperscriptBox["yN", 
         RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jeC", "=", 
     RowBox[{"Max", "[", 
      RowBox[{
       RowBox[{"jX", "-", 
        FractionBox["jHG", "yC"], "+", 
        FractionBox[
         RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], ";"}], 
   " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jCO2", "=", 
     RowBox[{"jeC", " ", "kCO2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jL", "=", 
     RowBox[{"A", " ", "astar", " ", "LfunH"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rCH", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"jHT", "+", 
        FractionBox[
         RowBox[{"jHG", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
      "\[Sigma]CH"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rCS", "=", 
     RowBox[{"\[Sigma]CS", 
      RowBox[{"(", 
       RowBox[{"j0ST", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
         SuperscriptBox["yC", 
          RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jeL", "=", 
     RowBox[{"jL", "-", 
      FractionBox["jCP", "yCL"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jNPQ", "=", 
     FractionBox["1", 
      RowBox[{
       FractionBox["1", "jeL"], "+", 
       FractionBox["1", "kNPQ"]}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cROS1", "=", 
     FractionBox[
      RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jST", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rNH", "=", 
     RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A", "=", 
     RowBox[{"1.256307", "+", 
      RowBox[{"1.385969", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "6.479055"}], " ", 
         RowBox[{"S", "/", "H"}]}]]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jNw", "=", " ", 
     RowBox[{
      RowBox[{"\[Rho]N", "*", 
       RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
      RowBox[{"nNS", "*", "jSG"}]}]}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tsolve", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Rho]C", ",", 
         RowBox[{"jCP", "-", 
          RowBox[{"jSG", " ", 
           SuperscriptBox["yC", 
            RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"jCP", ",", 
         FractionBox[
          RowBox[{
           RowBox[{"F", "[", "jCPm", "]"}], "[", 
           RowBox[{
            RowBox[{"jL", " ", "yCL"}], ",", 
            RowBox[{"rCS", "+", 
             FractionBox[
              RowBox[{"H", " ", 
               RowBox[{"(", 
                RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
          RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"jNi", ",", " ", 
         FractionBox[
          RowBox[{"jNm", " ", "*", "Ni"}], 
          RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
      "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"states", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"tsolve", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], "}"}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"addtimetostatevars", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#", "\[Rule]", 
          RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", "states"}], 
      ")"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqs", "=", 
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
           "\[Equal]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Lambda]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
             "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", "tsolve"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"S", 
             RowBox[{"(", 
              RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
            "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"H", 
             RowBox[{"(", 
              RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
            "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
          RowBox[{"fh", "[", 
           RowBox[{"t", ",", "  ", 
            RowBox[{
             RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"d", "*", 
              RowBox[{"(", " ", 
               RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], " ", 
             "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Zeta]", "*", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                 "S"}], "+", " ", 
                RowBox[{"ep", "*", "P"}], " ", "-", 
                RowBox[{"jNi", "*", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], ")"}], 
              "/", 
              RowBox[{"(", " ", 
               RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
            "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"P", "*", 
             RowBox[{"(", 
              RowBox[{"rp", "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"kpv", "*", "vi", "*", "VH"}], "-", 
                  RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"kpv", "*", "vi", "*", "VH"}], ")"}]}]}], ")"}]}], "/.",
             "addtimetostatevars"}], ")"}]}]}], " ", "\[IndentingNewLine]", 
        "}"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inis", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], "\[Equal]", 
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
        "tsolve"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solRecovPv", "=", 
     RowBox[{
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Join", "[", 
          RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
        RowBox[{
         RowBox[{"#", "&"}], "/@", "states"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
        RowBox[{"Method", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<EquationSimplification\>\"", "\[Rule]", "\"\<Residual\>\""}], 
          "}"}]}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836574971850909*^9, 3.836575001348812*^9}, {3.8377007138884783`*^9, 
   3.8377007309776583`*^9}, {3.839763938158043*^9, 3.83976397647167*^9}, {
   3.839764031461659*^9, 3.839764052776661*^9}, 3.83976408568211*^9, {
   3.839764151609365*^9, 3.839764152402811*^9}, {3.839764337286881*^9, 
   3.839764338003037*^9}, {3.839764372331621*^9, 3.8397644292310123`*^9}, {
   3.8397644929773703`*^9, 3.83976451038557*^9}, {3.84011491234695*^9, 
   3.840114951736103*^9}, {3.840115446072855*^9, 3.840115453404004*^9}, {
   3.840115483540786*^9, 3.84011552909902*^9}, {3.840115634627873*^9, 
   3.8401156429887447`*^9}, 3.843928279584909*^9, {3.844464882612814*^9, 
   3.8444649524959097`*^9}, {3.8540257465069427`*^9, 3.85402575566409*^9}},
 CellLabel->
  "In[802]:=",ExpressionUUID->"691ef095-4da3-4c18-8b2a-16c5cc4dea18"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Plot results (Fig. S8: fish carrying capacity scaled to interstitial biomass)\
\
\>", "Subsection",
 CellChangeTimes->{{3.839763645100462*^9, 3.8397636473908043`*^9}, {
  3.843076118318022*^9, 3.843076131651843*^9}, {3.845644985174514*^9, 
  3.845644988360793*^9}},ExpressionUUID->"abeffc88-68d8-4a64-9e86-\
bee6006470a5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"paddingS8", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"60", 
       RowBox[{"(*", "left", "*)"}], ",", "15"}], 
      RowBox[{"(*", "right", "*)"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"30", 
       RowBox[{"(*", "bottom", "*)"}], ",", "10"}], " ", 
      RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotS8a", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "@", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Log", "[", 
                RowBox[{
                 RowBox[{"Min", "[", 
                  RowBox[{"jHGm", ",", 
                   RowBox[{"yC", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Rho]C", " ", 
                    RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}]}], "]"}], 
                 "/", 
                 RowBox[{"Min", "[", 
                  RowBox[{"jHGm", ",", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                    
                    RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                    RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                    RowBox[{"nNH", "^", 
                    RowBox[{"-", "1"}]}]}]}], "]"}]}], "]"}], "/.", 
               "addtimetostatevars"}], "/.", "solRecovNoP"}], " ", "}"}]}]}], 
          ",", 
          RowBox[{"Evaluate", "@", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Log", "[", 
                RowBox[{
                 RowBox[{"Min", "[", 
                  RowBox[{"jHGm", ",", 
                   RowBox[{"yC", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Rho]C", " ", 
                    RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}]}], "]"}], 
                 "/", 
                 RowBox[{"Min", "[", 
                  RowBox[{"jHGm", ",", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                    
                    RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                    RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                    RowBox[{"nNH", "^", 
                    RowBox[{"-", "1"}]}]}]}], "]"}]}], "]"}], "/.", 
               "addtimetostatevars"}], "/.", "solRecovP"}], " ", "}"}]}]}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "850"}], 
         RowBox[{"(*", "tmax", "*)"}], "}"}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", "\"\<a) Host biomass C-/N-limitation\>\""}], 
        ",", 
        RowBox[{"ImagePadding", "\[Rule]", "paddingS8"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", " ", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "12"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"500", ",", "0"}], "}"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], 
          RowBox[{"(*", 
           RowBox[{",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "Dashed"}], "}"}], ",", 
            " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "Dashed"}], "}"}]}], 
           "*)"}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
            RowBox[{"(*", "right", "*)"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
            RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"(*", "True", "*)"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "0", ",", " ", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", 
                 ",", "0.05"}], "}"}], ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"(*", "None", "*)"}], 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"2", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.2\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"4", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.4\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"6", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.6\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"8", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.8\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "6"}]]}], ",", " ", "\"\<1.0\>\""}], "}"}]}],
                 "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], "*)"}], 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Relative\>\"", ",", "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "10"}], 
          RowBox[{"(*", 
           RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
        " ", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "12"}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], "]"}], ",", 
      RowBox[{"RegionPlot", "[", 
       RowBox[{
        RowBox[{"tStartStress", "<", "t", "<", 
         RowBox[{"tStartStress", "+", "tHigh"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "850"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", " ", 
        RowBox[{"Frame", "\[Rule]", " ", "False"}], ",", " ", 
        RowBox[{"Mesh", "->", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"GrayLevel", "[", 
          RowBox[{"0.09", ",", " ", "0.06"}], "]"}]}]}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotS8b", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "@", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Log", "[", 
                RowBox[{
                 RowBox[{"Min", "[", 
                  RowBox[{"jSGm", ",", 
                   RowBox[{"jCP", " ", "yC"}]}], "]"}], "/", 
                 RowBox[{"Min", "[", 
                  RowBox[{"jSGm", ",", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"rNS", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"H", " ", "\[Rho]N"}], ")"}], "/", "S"}]}], ")"}],
                     "/", "nNS"}]}], "]"}]}], "]"}], "/.", 
               "addtimetostatevars"}], "/.", "solRecovNoP"}], " ", "}"}]}]}], 
          ",", 
          RowBox[{"Evaluate", "@", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Log", "[", 
                RowBox[{
                 RowBox[{"Min", "[", 
                  RowBox[{"jSGm", ",", 
                   RowBox[{"jCP", " ", "yC"}]}], "]"}], "/", 
                 RowBox[{"Min", "[", 
                  RowBox[{"jSGm", ",", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"rNS", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"H", " ", "\[Rho]N"}], ")"}], "/", "S"}]}], ")"}],
                     "/", "nNS"}]}], "]"}]}], "]"}], "/.", 
               "addtimetostatevars"}], "/.", "solRecovP"}], " ", "}"}]}]}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "850"}], 
         RowBox[{"(*", "tmax", "*)"}], "}"}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<a) Symbiont biomass C-/N-limitation\>\""}], ",", 
        RowBox[{"ImagePadding", "\[Rule]", "paddingS8"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", " ", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "12"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"500", ",", "0"}], "}"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], 
          RowBox[{"(*", 
           RowBox[{",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "Dashed"}], "}"}], ",", 
            " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "Dashed"}], "}"}]}], 
           "*)"}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
            RowBox[{"(*", "right", "*)"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
            RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"(*", "True", "*)"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "0", ",", " ", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", 
                 ",", "0.05"}], "}"}], ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"(*", "None", "*)"}], 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"2", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.2\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"4", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.4\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"6", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.6\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"8", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.8\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "6"}]]}], ",", " ", "\"\<1.0\>\""}], "}"}]}],
                 "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], "*)"}], 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Relative\>\"", ",", "None"}], "}"}], 
           RowBox[{"(*", 
            RowBox[{"\\n", " ", "makes", " ", "line", " ", "break"}], "*)"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "10"}], 
          RowBox[{"(*", 
           RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
        " ", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "12"}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], "]"}], ",", 
      RowBox[{"RegionPlot", "[", 
       RowBox[{
        RowBox[{"tStartStress", "<", "t", "<", 
         RowBox[{"tStartStress", "+", "tHigh"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "850"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", " ", 
        RowBox[{"Frame", "\[Rule]", " ", "False"}], ",", " ", 
        RowBox[{"Mesh", "->", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"GrayLevel", "[", 
          RowBox[{"0.09", ",", " ", "0.06"}], "]"}]}]}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotS8c", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "@", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Rho]C", "/.", "addtimetostatevars"}], "/.", 
              "solRecovNoP"}], " ", "}"}]}]}], ",", 
          RowBox[{"Evaluate", "@", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Rho]C", "/.", "addtimetostatevars"}], "/.", 
              "solRecovP"}], " ", "}"}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "850"}], 
         RowBox[{"(*", "tmax", "*)"}], "}"}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<c) Fixed carbon shared with host (\[Rho]C)\>\""}], ",", 
        RowBox[{"ImagePadding", "\[Rule]", "paddingS8"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", " ", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "12"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"500", ",", "0"}], "}"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], 
          RowBox[{"(*", 
           RowBox[{",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "Dashed"}], "}"}], ",", 
            " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "Dashed"}], "}"}]}], 
           "*)"}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
            RowBox[{"(*", "right", "*)"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
            RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"(*", "True", "*)"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "0", ",", " ", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", 
                 ",", "0.05"}], "}"}], ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"(*", "None", "*)"}], 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"2", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.2\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"4", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.4\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"6", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.6\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"8", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.8\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "6"}]]}], ",", " ", "\"\<1.0\>\""}], "}"}]}],
                 "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], "*)"}], 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<mol C C-mol \!\(\*SuperscriptBox[\(S\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(d\), \(-1\)]\)\>\"", ",", "None"}], "}"}], 
           RowBox[{"(*", 
            RowBox[{"\\n", " ", "makes", " ", "line", " ", "break"}], "*)"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "10"}], 
          RowBox[{"(*", 
           RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
        " ", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "12"}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], "]"}], ",", 
      RowBox[{"RegionPlot", "[", 
       RowBox[{
        RowBox[{"tStartStress", "<", "t", "<", 
         RowBox[{"tStartStress", "+", "tHigh"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "850"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", " ", 
        RowBox[{"Frame", "\[Rule]", " ", "False"}], ",", " ", 
        RowBox[{"Mesh", "->", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"GrayLevel", "[", 
          RowBox[{"0.09", ",", " ", "0.06"}], "]"}]}]}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotS8d", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "@", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Rho]N", "/.", "addtimetostatevars"}], "/.", 
              "solRecovNoP"}], " ", "}"}]}]}], ",", 
          RowBox[{"Evaluate", "@", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Rho]N", "/.", "addtimetostatevars"}], "/.", 
              "solRecovP"}], " ", "}"}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "850"}], 
         RowBox[{"(*", "tmax", "*)"}], "}"}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<d) Nitrogen shared with symbiont (\[Rho]N)\>\""}], ",", 
        RowBox[{"ImagePadding", "\[Rule]", "paddingS8"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", " ", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "12"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"500", ",", "0"}], "}"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], 
          RowBox[{"(*", 
           RowBox[{",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "Dashed"}], "}"}], ",", 
            " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "Dashed"}], "}"}]}], 
           "*)"}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
            RowBox[{"(*", "right", "*)"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
            RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"(*", "True", "*)"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "0", ",", " ", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", 
                 ",", "0.05"}], "}"}], ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"(*", "None", "*)"}], 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"2", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.2\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"4", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.4\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"6", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.6\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"8", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.8\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "6"}]]}], ",", " ", "\"\<1.0\>\""}], "}"}]}],
                 "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], "*)"}], 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<mol N C-mol \!\(\*SuperscriptBox[\(H\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(d\), \(-1\)]\)\>\"", ",", "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "10"}], 
          RowBox[{"(*", 
           RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
        " ", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "12"}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], "]"}], ",", 
      RowBox[{"RegionPlot", "[", 
       RowBox[{
        RowBox[{"tStartStress", "<", "t", "<", 
         RowBox[{"tStartStress", "+", "tHigh"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "850"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", " ", 
        RowBox[{"Frame", "\[Rule]", " ", "False"}], ",", " ", 
        RowBox[{"Mesh", "->", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"GrayLevel", "[", 
          RowBox[{"0.09", ",", " ", "0.06"}], "]"}]}]}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotS8e", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "@", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Zeta]", "*", 
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[Alpha]"}], ")"}], "jNw", "*", 
                RowBox[{"S", "/", 
                 RowBox[{"(", " ", 
                  RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
               "addtimetostatevars"}], "/.", "solRecovNoP"}], " ", "}"}]}]}], 
          ",", 
          RowBox[{"Evaluate", "@", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Zeta]", "*", 
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[Alpha]"}], ")"}], "jNw", "*", 
                RowBox[{"S", "/", 
                 RowBox[{"(", " ", 
                  RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
               "addtimetostatevars"}], "/.", "solRecovP"}], " ", "}"}]}]}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "850"}], 
         RowBox[{"(*", "tmax", "*)"}], "}"}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", "\"\<e) Waste nitrogen from symbiont\>\""}], 
        ",", 
        RowBox[{"ImagePadding", "\[Rule]", "paddingS8"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", " ", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "12"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"500", ",", "0"}], "}"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], 
          RowBox[{"(*", 
           RowBox[{",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "Dashed"}], "}"}], ",", 
            " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "Dashed"}], "}"}]}], 
           "*)"}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
            RowBox[{"(*", "right", "*)"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
            RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"(*", "True", "*)"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "0", ",", " ", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", 
                 ",", "0.05"}], "}"}], ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"(*", "None", "*)"}], 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"2", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.2\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"4", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.4\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"6", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.6\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"8", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.8\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "6"}]]}], ",", " ", "\"\<1.0\>\""}], "}"}]}],
                 "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], "*)"}], 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<mol N \!\(\*SuperscriptBox[\(L\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(d\), \(-1\)]\)\>\"", ",", "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "10"}], 
          RowBox[{"(*", 
           RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
        " ", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "12"}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], "]"}], ",", 
      RowBox[{"RegionPlot", "[", 
       RowBox[{
        RowBox[{"tStartStress", "<", "t", "<", 
         RowBox[{"tStartStress", "+", "tHigh"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "850"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", " ", 
        RowBox[{"Frame", "\[Rule]", " ", "False"}], ",", " ", 
        RowBox[{"Mesh", "->", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"GrayLevel", "[", 
          RowBox[{"0.09", ",", " ", "0.06"}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{"Opacity", "[", 
         RowBox[{"0.05", ",", " ", "Gray"}], "]"}], "*)"}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotS8f", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "@", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Ni", "/.", "addtimetostatevars"}], "/.", 
              "solRecovNoP"}], " ", "}"}]}]}], ",", 
          RowBox[{"Evaluate", "@", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Ni", "/.", "addtimetostatevars"}], "/.", "solRecovP"}],
              " ", "}"}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "850"}], 
         RowBox[{"(*", "tmax", "*)"}], "}"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<f) Interstitial nitrogen\>\""}], 
        ",", 
        RowBox[{"ImagePadding", "\[Rule]", "paddingS8"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", " ", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "12"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"500", ",", "0"}], "}"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], 
          RowBox[{"(*", 
           RowBox[{",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "Dashed"}], "}"}], ",", 
            " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "Dashed"}], "}"}]}], 
           "*)"}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
            RowBox[{"(*", "right", "*)"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
            RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"(*", "True", "*)"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"1", "*", 
                  SuperscriptBox["10", 
                   RowBox[{"-", "7"}]]}], ",", " ", 
                 "\"\<1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"2", "*", 
                  SuperscriptBox["10", 
                   RowBox[{"-", "7"}]]}], ",", 
                 "\"\<2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"3", "*", 
                  SuperscriptBox["10", 
                   RowBox[{"-", "7"}]]}], ",", " ", 
                 "\"\<3*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], 
                "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"(*", "None", "*)"}], 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "500", ",", " ", "550", ",", " ", "600", ",", " ", "650", ",", 
               " ", "700", ",", " ", "750", ",", " ", "800", ",", " ", 
               "850"}], "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<mol N \!\(\*SuperscriptBox[\(L\), \(-1\)]\)\>\"", ",", 
             "None"}], "}"}], 
           RowBox[{"(*", 
            RowBox[{"\\n", " ", "makes", " ", "line", " ", "break"}], "*)"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Time (d)\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
        " ", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "10"}], 
          RowBox[{"(*", 
           RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
        " ", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "12"}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], "]"}], ",", 
      RowBox[{"RegionPlot", "[", 
       RowBox[{
        RowBox[{"tStartStress", "<", "t", "<", 
         RowBox[{"tStartStress", "+", "tHigh"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "850"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", " ", 
        RowBox[{"Frame", "\[Rule]", " ", "False"}], ",", " ", 
        RowBox[{"Mesh", "->", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"GrayLevel", "[", 
          RowBox[{"0.09", ",", " ", "0.06"}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{"Opacity", "[", 
         RowBox[{"0.05", ",", " ", "Gray"}], "]"}], "*)"}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotS8g", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"H", "'"}], "[", "t", "]"}], "/", 
              RowBox[{"H", "[", "t", "]"}]}], "}"}], "/.", "solRecovNoP"}], 
           " ", "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"H", "'"}], "[", "t", "]"}], "/", 
              RowBox[{"H", "[", "t", "]"}]}], "}"}], "/.", "solRecovP"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "850"}], 
         RowBox[{"(*", "tmax", "*)"}], "}"}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", "\"\<g) Host specific growth rate\>\""}], ",", 
        RowBox[{"ImagePadding", "\[Rule]", "paddingS8"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", " ", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "12"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"500", ",", "0"}], "}"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], 
          RowBox[{"(*", 
           RowBox[{",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "Dashed"}], "}"}], ",", 
            " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "Dashed"}], "}"}]}], 
           "*)"}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
            RowBox[{"(*", "right", "*)"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
            RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"(*", "True", "*)"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "0", ",", " ", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", 
                 ",", "0.05"}], "}"}], ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"(*", "None", "*)"}], 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"2", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.2\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"4", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.4\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"6", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.6\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"8", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.8\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "6"}]]}], ",", " ", "\"\<1.0\>\""}], "}"}]}],
                 "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], "*)"}], 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<C-mol H C-mol \!\(\*SuperscriptBox[\(H\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(d\), \(-1\)]\)\>\"", ",", "None"}], "}"}], 
           RowBox[{"(*", 
            RowBox[{"\\n", " ", "makes", " ", "line", " ", "break"}], "*)"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Time (d)\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
        " ", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "10"}], 
          RowBox[{"(*", 
           RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
        " ", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "12"}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], "]"}], ",", 
      RowBox[{"RegionPlot", "[", 
       RowBox[{
        RowBox[{"tStartStress", "<", "t", "<", 
         RowBox[{"tStartStress", "+", "tHigh"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "850"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", " ", 
        RowBox[{"Frame", "\[Rule]", " ", "False"}], ",", " ", 
        RowBox[{"Mesh", "->", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"GrayLevel", "[", 
          RowBox[{"0.09", ",", " ", "0.06"}], "]"}]}]}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"recovTSLeg", "=", 
    RowBox[{"LineLegend", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<Fish absent\>\"", ",", "\"\<Fish present\>\""}], "}"}], 
      ",", " ", 
      RowBox[{"LegendMarkerSize", "\[Rule]", "60"}]}], 
     RowBox[{"(*", 
      RowBox[{",", " ", 
       RowBox[{"LegendLayout", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Row\>\"", ",", "1"}], "}"}]}]}], "*)"}], "]"}]}], ";"}],
   "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8430596864386787`*^9, 3.843059702508069*^9}, {
   3.843059752573063*^9, 3.843059762559935*^9}, {3.843059804934993*^9, 
   3.843059808487565*^9}, {3.843059842109631*^9, 3.843059843612018*^9}, {
   3.843059902516555*^9, 3.8430599048232203`*^9}, {3.843059936064399*^9, 
   3.843059998193398*^9}, {3.843060064477817*^9, 3.843060263018993*^9}, {
   3.8430603089558496`*^9, 3.843060313732294*^9}, {3.843060391316787*^9, 
   3.843060473032546*^9}, {3.8430605046928473`*^9, 3.8430605712661247`*^9}, {
   3.843060645402214*^9, 3.843060658579397*^9}, {3.843060701936737*^9, 
   3.8430607897787647`*^9}, {3.843060828218183*^9, 3.843060865866229*^9}, {
   3.843075567362769*^9, 3.843075614113703*^9}, {3.843075778163581*^9, 
   3.8430757782500257`*^9}, {3.8430758788233547`*^9, 
   3.8430760643763638`*^9}, {3.8444649757430573`*^9, 3.844465112849481*^9}, 
   3.8445107697396803`*^9},
 CellLabel->
  "In[839]:=",ExpressionUUID->"7d58e060-0b4b-44ae-8ad9-ffaebc99a49c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"recovTSFig", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"plotS8a", ",", " ", "plotS8b"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"plotS8c", ",", "plotS8d"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"plotS8e", ",", "plotS8f"}], "}"}], ",", " ", 
        RowBox[{"{", "plotS8g", "}"}]}], "}"}], ",", " ", 
      RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
      RowBox[{"Spacings", "\[Rule]", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", 
           RowBox[{"(*", "left", "*)"}], ",", 
           RowBox[{"-", "30"}]}], " ", 
          RowBox[{"(*", 
           RowBox[{"first", " ", 
            RowBox[{"(", "leftmost", ")"}], " ", "and", " ", "second", " ", 
            "col"}], "*)"}], 
          RowBox[{"(*", 
           RowBox[{"left", " ", "to", " ", "right"}], "*)"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", 
           RowBox[{"(*", "top", "*)"}], ",", "0", 
           RowBox[{"(*", 
            RowBox[{"first", " ", "and", " ", "second", " ", "rows"}], "*)"}],
            ",", "0", " ", 
           RowBox[{"(*", 
            RowBox[{"second", " ", "and", " ", "third"}], "*)"}], " ", ",", 
           "0"}], 
          RowBox[{"(*", 
           RowBox[{"top", " ", "to", " ", "bottom"}], "*)"}], "}"}]}], 
        "}"}]}], ",", " ", 
      RowBox[{"Frame", "\[Rule]", "False"}], 
      RowBox[{"(*", 
       RowBox[{",", " ", 
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"1", "/", "GoldenRatio"}]}]}], "*)"}], ",", " ", 
      RowBox[{"Alignment", "\[Rule]", " ", "Bottom"}]}], "]"}], ",", 
    RowBox[{"Placed", "[", 
     RowBox[{"recovTSLeg", ",", 
      RowBox[{"(*", "Bottom", "*)"}], 
      RowBox[{"{", 
       RowBox[{"0.95", ",", " ", "0.22"}], 
       RowBox[{"(*", 
        RowBox[{"x", ",", " ", 
         RowBox[{"y", " ", "position", " ", "of", " ", "legend"}]}], "*)"}], 
       "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.843075638461226*^9, 3.8430757311045933`*^9}, {
  3.843075807284779*^9, 3.843075809926508*^9}, {3.843076081640551*^9, 
  3.843076082346599*^9}, {3.8431258380518417`*^9, 3.8431258384105587`*^9}, {
  3.844465121231571*^9, 3.844465147187207*^9}},
 CellLabel->
  "In[848]:=",ExpressionUUID->"d91f9993-998b-4b05-b5db-b91fe2cbf1c5"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[
             {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1:eJwl1Xk8VF8bAHBLlkqSshfRptAeJToP6VeJFoWSUpZKEckSLZg7OyEUSkm2
FkqSKHXJVqGUSFLZ92wz19IM3pP3n5nP93Puee5znnPOczUdPaxcxERERBTw
z7//Uy6XpUQgEAJME++WSAwjgLJayjcQHiuGT1lJbU5qT0Yg9PoFTLlXamd/
UFcgdHHPTPl4AMwPkQ+Cbx0uU05dbXLIfmUQRG6CKfe0m9zQMw+C6X+splz4
gaZ13iUIHvsdn3LM46LHuUFBcLLlc8I/u90SjFjeCYIPNmlT4ybsdSYtr4LA
cb3MlAfWV2kFfgsCa6vEO/98t8ltmhovCKaRC6fGd8eIJEnOCQbW+//nM24R
bTK0MhgsShQT/7ly23Rjc/1gGBgVS/7n21uubLxnHAwv9V2mLPFqo/5uk2AY
P7M76Z/dDXjr/poFg8zi7VPzE32q1lb9FwwH1rRO5VvzLGNN6o5guLjZYSqf
6UPc1ZfMg0GqdsntfzZefWqVlUUwLOneHv/PKelaehN7gkE8K//WP89a/nPF
w/3BsGF0bGrc5OTL5UHWwTD6wGYqnk9KjLaNbTCoWOhOredBi/cy3UPBMOPE
val8fmpaLRU7HAzmg8S9f85QLdO0cwyG9KIZU74812hBlmswrOqvnso3Nsc7
SZkRDDWFe6biZR3KWB54Nxh6V0ybcoXET7cNb4KBH64/5banMpk9P4LhzZ8V
U65bkBhyfyQYzOK0/v88Z8NJl7k0kNmxYMr7Fs2IvLGSBrcGVadcm/8rv2wn
DTrvK03ZzuFh8o6TNDjUPm/Kv0R9Q9/TaSA8Jj9lI+dUmX13afDnhdyUb5XW
hta9ogGSnD3lvcYPRHJe0yCwUXbKktkXvaNIGqjm/d/H+51X0gpo0M9+n/Bs
Ph/lr9jd6VlIg13zP1MPFHlI6YTBPYe3NNj4/Wj02poh5JW40H53EQ3u/1bT
XHd3CFU2TFc0Lsb5RITUdp8ZQtrKvE86JTSQptvXXTcYQr/CSrZOL6NBh/uQ
zd2Pg8j80mmd4g80OLU+yztKMIBSXuxvyyqnQZRJYmdM6QAS4RklJFbQYInp
vdWsawMox3X23MCPNJjn5FynvWwAadpm/930hQZu8e0N8kl9aHTNxPsn32nw
reeHotV/PWi/ewdxp54GlW3ZGSvru9Hj+1XGV3/QYLyr7lqvezdy1kh6evon
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
B4bO1jQ=
               "]]},
             Annotation[#, "Charting`Private`Tag$128354#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1:eJwl13k8VF8bAHBEJEWSSpS0oBLJEuE+0UaEskS7tCiilFKKmTszZgaliIof
lYRIJYmSg0TZkj1Kdolkm6WY8Z7m/ac+38+ce85znvOc515LPXx3HZUQExNL
wP/8+//E0SvSYhAMlrvSKhdocQiAskZOQDA8OJcj8vxFcx4NPAmG1vWFIg9K
W/8O6Q+GhyofRD58CVTDFENgU2CNyI/0NrntWxsCcY+aRB7o3RSjYxMCPq9a
RC4qp2r4Hw2ByoTvIsdmvsvMDQkBbmePyN5xEzy7hBAoGe0WeRNz/aauNyHQ
6v//34cNajSCm0LgdPWYyPc6vCUXjYXA4e0/Rd4ZK5Y0fQ4Fon/8f32BbfSm
0bUU+JguXfXP5nondHfZUuBpkoHIV+aaqWV5UcDK9YRo/O2cc0kL6BRIuzQu
cpbbE+3gexRwvHDk0z/nbg58PZhCAa+EyyIj3S073J9SoGJoj2h8qcqcr2U5
FLinoPPhnyulvnkbFlDgImz6+M/XxBQ+KxRSoOG3V/k/209YGg4WUSDl0FDF
Pytwz98pe0cB5mC1KL7a4VTBg/cUmPVrZs0/Rw+0Hr5aRoH/DvvV/rNz7+xS
t48UuOGxp/6flTs2rTKsoIBSwcuGf25uPXdNoYoCcy/QG/957+cWl7IaCnBl
/ERuK4UlV+spkLRYTPQ8sdn986kGCqjrTasT5bfIn3RrpIBFXtvnfxYnIgy3
NVHghdtNUTwe+Y/6DJopsOq5migf70wK72h8oUArooniX/7qyw6FFgr4OMmK
8kMzGBMIsA98fifaf89zuWcDrRTYce6pKD+eRPCOI98p8EF2S9k/d1aO9LZ0
UiB+pobI9+emZ8d0U4DRVC3yIXdP6q5eCpi4DojyveS+msPsHxR4o+ctmr+t
r1GtvJ8C02dvFa3/39rIAfoABZZd96n+533nrfM2/aJA0IVjov2o5kuECoYo
sLm1WrTfVol8p7xhChz0yBbl2z1y7bDeOAXYATqi/DSr3Q9L5VHAoMdC9LtL
+lxN9Qkcf72zaL6GDYziWCEFLll2ifLhVMrfLy9BBT0dLVE8tbtP/WFIUcFR
Jkh0/p9OO+gFyFGh8kS3yJUsw+NH51JhxveDovE6z34+X6dChQZmtsjXGhMn
BepUiH+VKNoP8vq71HM5FWx7kkTrD086bSvXpIKh915RfOqRT731VlMh2Xq3
KH7HZbI3Y9ZS4ci0KyJTczxfTa6jQvWBctH4LGv01cOQCjcP6ojy0fV1ocTH
DVTQmtgsOm8lv3OaumZUKICtovXPx2ifnbCkQuqsIJEb89vyy6ypYPcjWBSP
+8HHD7cfp0JN7Lho/jbxgPCPNCrsVXkoWn/V7KAgUyYVXExCRA5QoXqnh1Eh
4cT/449Xp3cfiaCCUMtbFE/xSuY+1etUsOwE0fw/1oTV10dS4cOfFtH6s9Zf
s424SQXt+o2i/Oub3CjZEk0F78NUUX73ENFmwltU8OxbIKqXq1tis3NiqbAo
UEZUjw933F3je4cK+185iOpr2PWeans8FY6+7xfVn5nnIznHe1QoNu0Q/e5x
Mo024wGON+S76HmmX8ZkURIV1u8zEK2XGfD03KVkKjhc+n//qw/KGtRPoUJE
f5IoXnVW7tekx1RwP6kg2p/3rYJKpUwq1LVNF+1fMrM8g5tNhXHlelH+40ob
w5vfUOHCzyTR/hzM08Ry3lJByVVbNN/07MvnohDOJ4ch8uHfnmuphVToOGu2
wsV+jMhftfOHXxGuP4uVKf62o8T8Y8YPDhbj8XRViRjZUeLsffV9O99RwbT+
Y97DhhGi6usMZfMSKmw+EVJGuT9CaC0Y+7T6PRWWLH9/1tVnhGi79t5qRhnO
V1V5VaHkCGETdHJ1STkVOnVti6L0h4nkV7t7siqoINnievTJxG9CbMws8X4l
FZqSN76YdfM3keMlPze4Gufz2rKMwwVDxFLX7L8mtVToPq762nfeL4K/Tvjx
6Recv/1HT0W97Sd2+/SRCS1UOB5ZJyOzq5/ITK0xj2ilwgEvt0D33h+E55Kk
5ye/UYEts3Je1OwfRI3c9jsrOqjAt023U9nfS6T03TgR9wOfp4nLetvfnYTE
sssa7H4qbEh8tHVRSCex74Dn14s/qWCcKdUTqNBJKDYYObgMUqFd6fuBl7od
xNXiVuM5wzheR95IT2Ub4fLfCulQHhXsJyaexpo1EYtbmEfO8HG8b4ebwy0a
iR7lQbT3DxVuKZvek9vYQJyLzLqoN0GFQRndxX+W1BFmVfMaVCapYPDFbN6k
VC0xTTZwnZSACnOcLHIjOmqImyTx84sQr9di/ajieyXhXvhga8kUFU6nXE3J
Ni4nlgqkkjLFSNAc8qPn7C8jfph4Td0WJ6FZfslQzaYS4llA5V5SggQ9R6nq
OxWFxIUXurk+00hY8fhDokpKHmExfFNpjyQJ3TVLY7ZrPyOm63D9LKVI0In4
u23QJpKo8nKrWjOdBEoa96ri9zQU/Shfe740CR061uE690rQvq4lDHEZEhqf
zRyVs2pBy9TJzgHsNQtCih21xtDPfb0WjTNIuCJ9/ck9pgBl3bGOK5Ql4YLi
HO5OPSEKbMzgPZ5Jwi1L5bogAyGCuQpOt+RIaNA3pnWsFyIZB/9nwbNI2Fu4
8PVi7JrwRrmTs0noe7qjz1lfiGI/mng5yZPwaXPTLOY6IVppJaahPYeEp5Iu
s7/pCtFmo4ioWiUSTk/GU63XCJGc//Dv/HkkcOOMn7muFqK6p7ttU5RJmJoY
ST20Sog8tFWkghaQcL6O/OWhJUQhqikBK1RJWJ1t6ae1XIi2u8nWyavhfKXZ
PpBbJkTyMT66f7FHjIfYA0uFKEHe4Ef1EhJUCo2C7ywRonyJIreLy0hw3RIw
+FJFiGjE8hyP5STM7JCp9V0oRDuCQhXtVpDw+37R2eULhKiFY1exVJOE18PZ
g1fmCRH/R4tZxSoSahxHVUflhWj9p/Eli/VJWFu1Oa1rmhD9XbfoOR87L7e5
+5iEEBVGb7KsW0+CocGOph4xIbJ1v+bJNCRB7XbpVKNAgI71aKaNbiAhLUvZ
NpQnQLcn3PXLCBJeejr7aP0UoEnNos1+diR4+2v6lFQKUDG7r8FmJwkRVgE2
9eUCxPw16/gKexKCBycpHR8EaN4Ld1aLAwnZSx2tx0sEaK3FeNVmJxIS5gi2
CvIF6JCTpuvCvSTIMbRVMzME6H1IhFfxCRLoRQHtKmECVB8Xd/GpFwkXq83e
VuP66MxJC40/ScKe53uCqAwBEg6+Tw7wxvX3ZIbMT4oAGbsJO1b5kaCtLFDP
vyhAaet83aMu4PobiXlDOSZAEZ0OOzwZJORKjv9dbSVA8YID7o6h+HzO9IfJ
bBKgxwt8vCyYuN5G1sf2WQhQ6U5W6AI2CYH5L3Y9MRWgqddF7yoj8Hm/iXy9
R1+AzkTpmxneIuFGs+TJDRoCFJIJOzRiSPD5Iv5tk7oAXfu4010+lgSz1ZrH
di7G80+dvNh/m4THkVdq/VQEqOtUUvZ/8SSkWq2OalUUIOfNSjrTH5LQIxFy
ZIekAHnQe/y6sJtcm34lSwiQX2lOdmEyCUmfrthOExcg9nY3s8spJNzu06GU
CiZRLGtVyJ5UEs612rmsmZxED8sn3hmmkWA6N2Ei+u8kKrBN2DH8mIT3nOFn
p3mTqCLC93pVOgkpgbMLvnMmUXM11D3OIGF0mcat3eOTqEdecT7zCQn/Ddro
l49OolGHLvejmfh+wvqbViOTaOpGdoLlUxLYdo9foN+TSK6O3rnkGQl1D5T/
WFEm0UIl15UCbFN/MQnXkD9opbPWyZbnJJyyz7MK/s1H62P+PHmVRcKgYdAD
92o+gqbykegXJLTP72ZNFPGR3YJ4w7PZJDwwUwx7kcdH7m4+gfYvSfgry9Xd
kcVHx+9avF2TQ4Lx2+S16ul8dK5VXlz2FQlZ9H4jxYd8dH1/FrMkF9d7r+M6
kxg+ik8gK+/n4f1t7V7qc52PHn93Ugh+TYJ5UuxEDpOPSg7zYk3ySXB+qZob
cZmP+EfNUjIRCf2+Eo8dPPhIKmXWQFghCYWu+jrm+/hI8UfbWq8iEnbYP9tq
6cJHa05Scpa9I2FRQUZsrA0fHTpd+v52Kb6vkoK1Fw34yOdp7IyAMhK2Xwhp
09flo0vDJ+x2fyChXEK/SWYVH0Wfndkwqxzfh4K/Y9LqfPQxwKGbWkXCmH/9
r72z+Kjx1VKtQ9Uk8Gq5nD8yfNTNHz1l/gk/f/987UtJPhJeujXGq8HrW3vr
Myd5aGb+MeOGz7i/vuvclsjnoQUC48tZtSTYLG/b3TDOQ/rBLRI+9fh9sPaP
W+IvHiIK07faNJDweX977fqfPGQrfoWt2YjrY8kR4kcvDx0jlyh2NuH3yb1T
Nc/beci/ZNgZNZPQa3XFvewbD4VIFd+J/0JC1feKB4IWHrob6rnUtZUErRD7
2VUNPPQ7RK1r61cSKr4svmtQx0ObLzU+NPqG3wdbr298V8NDd/yvH1vZhvN9
Z2B2YDUPDXlv11L+ToJfaqaWSyUPWR0T/ynVToLSX6kY93Ieun3wdToHO3fj
/n2MDzz0a4+/T08HCZc0xC5+KeUhy11rdBs6cT8tTm/d/Z6HYnf0DJd0kTCU
8NKf846HBjcnZGV3k3B3z+plBcU8tMnC9dzDHtz/nygUPynioRhjBaPoXvx+
7HFcWlLIQwN6H3lkH+4vJ42lxbFhFTXP/wcJ4uU1Op4Ij1+28fKRfhJO7FPY
/KsAj1cdN9v9kwTZTMmxOGxQfiK0HMD9MvrSV1/sGPljhfqDeP4ghZsn/o2X
WULV+EXCBpeSWPq/8RLNVopDJFj7PvMpxb41ESkl8ZsE3cLWsFV4vZ/j1mUj
2K+v/N37HJsYkmB1DJOQ+KvV3B3HF933xubzCAm+Oj6s5Xg//e3n5IpGcfyN
58Pk8X4tWnSqn43h/tj2OFQF5yOqrvf6vXESnswPzt9cwkM/KhMdIzkk1Pdd
OxCB82deumduCJeEqDqbpDGc35toToMvj4SlivOzAnD+zbLIPfZ/SJDflcf6
VMFDN9LNVIi/+P579VKTqnio9yGnde0ECd+rlRIjP/FQZOzxg7MFJDjVvzie
heuhO2jHsSoxGnBDJtP5X3nIJEBS6604DY6J6Tld+s5D13zf9mdI0MDbd8eG
WZ08tMFD1ydckgbXMu688ejjofBtc8/tkKFBvNMMreejPNQBlYYbZ9AgfYW0
6X0ODxmZ0nmrZGnQZkmrvIvvQ/sa3iVZORp4PqzkPBLykIFiK+WjPA16PGYe
nDmTj759fXB923wa2Nek+rot56OEpoYx/QU0aPfU6PLXxPe7VmbP4oU02G9k
vDcc39/ustPqHBUa/Ce/zOelHh/9zDJ9/mAxDf7MmTnUasZHXGZtrWAFDS6o
pjxa5cRHuaSUcf9KGvC6E1V4uH8EXt0QV69JgxP2rdvy3fho0j/hSLo2DTrD
PJT1DvLRtIMnx/fo0MD5tOLWPC8+UjCUUM42wPN7X35rcoWPanUNLyUa0mD2
Wte31GA+ilp1oo1tRIMg7rHhYgofKatXPzq8gQbzv7LLtRh8pDrzrrG8GQ3O
Vn4wZF/jozapqri/2NNujviGR/JRopiYWK85DQ78nmim3+QjDe7RD/kEzq91
r9UB3E+1O9a5nbSiwSkZS4dH/+H9tnq+dd5Mg18GWlkeiXyU0Ri7dNMWGsDC
9RTl+3ykVynon7+NBmnTGAmeuD8bvfp46b0NDWbFTMjHP8b99vlk27MdNAj4
XWk+L4OP8jJ0reJtafBILsOK8YSPzB7cmum/kwbI+Msch2d8ZBlxOF59Fw1+
fxzeTXvJRxKZroaT2NU1fOW0HD56V21X3bSbBiuv0HXLXvHRZgVTsevO+HwO
WlJ/4/fJlihFT8EeGnS5DmwZfctH07NlBM1uNBiCsBldBXxUWi+8le1Og7tt
48wqxEdblQfKTu3Dvxsxx67j99P2O+9Wtxykwec5q35XlPCRzOu8kpeHaPC0
ddWc8Pe4f7c83X/jMA3Wj7xw31rKRzaq8de3H6FBcJ1KfFoZH8ma39Ra7kkD
iWLxtF0f+KhiP7NoCnunS9UsLrZt4rmxnGM0sN7CXbemnI/kCk+G3zxOg6ax
lOkIu6r90IrTJ2hwuQ952Fbw0U4NO9cVJ/F5GxTyXCr5aLaV1bDYKRoonGi3
q8euPmLC+or9XO/jcdsqPrJPXvEmyocGr2Z+na+D378KpYucfE/TYO1Tz5Jb
2DW9c37Z+OL7RlH1/IPtoCVcLHEG3w/jtMTnn/B46/FX37CLPHiHp9fw0Wev
nw55Z2kwHHJ9swv2rvRGqt85GixfNXa3D1uxsnKR7XkavHNxXKr9mY/qBouz
NQNowHx3l3cUO3pWnt20Czif93+tTcB2Wvu0tw2bS48s/YytZJ8c/PoizueA
fbVYLR81+MYtiAmkwa22PMfV2DGRN56fuUSDzLHIg47YLs9Dbewu0+DO6H9i
/tjKtVe6tIJokPphsVEkdtOof5DkFRpsKk1QTMO+PffkvHbsw3HeiW+x9xgc
ynxzlQYpA1k9VdgLnF22xQbj8ejx4Bfs5vO27WdD8P1LdCjs+Pd8jGXgTgoN
7guenO3Bdnu1QXEVlQZKZ0Hyn1Wa16ZLkTR4vfTU5XbsFv7yzR3Y1kbc/ibs
uwsXfcun4X5yf4VrBba76ZyA23QaPDFr+fT63/N7peXPMWigv2G1+yPs1suC
FPtQGvSNSggisOPjx2A1kwYJhpvzz2Dve9v/ZTqLBtd/RqX/y4dnTNnwOLZG
X07cKmwf32TpLja+H/vzFk/h/AZsJxd/DsP5urwPPmFfXXrYEIXTwMXLQj4O
m/HXwvZJBA0KtqjGeGBfq1M9EneNBt9P5LWswE6kN0deiMTzJZz5lIjPO/VA
TsrRGzRw/TQz6l89PDOOLth9E9d3cbHFDOzCfvtB3WgadDwbuOiB6+lDsc60
xbdoYF7uoDID+3PcTBW5GBp8M5auSMf112lXtu1HLA22LaWSPbh+f65MPtB4
mwYGRMbdIOyxKer5kjs0WBFv0CuPLZllkXQvjgZOmTcsV+P6X6GcI9yTiOt9
uZBjiO/P2t9R87bdw/1m74+Upx9xP/pwZo3hfRqMpxfXrcDeeknHfU4SDcyM
r+dI4/t4ou3hy4+PaHB67AH9Ab7ffq+ola9ScD89dv2bGHZg5KGu5FTcD8d0
B/fifsC2VJ1DfUwD+lxkLfOOj9IfRXmbZtJAsC6qxrSQj4ZOU5elv8Tnswra
5F7j98O2Q6Z3cmjg721Ub4L705S6hWPoKxpYZtT8OJKL71vdn6tH8mgw5ToS
+hT3t3XGZ1oWvaXBxq4Y6xUv8Pfv1MEb4SW4vxDTD17H38OXhWLfTr7H9SZz
ovk+7q9UwX0t61Ia1Kx5ujArjY9uTHQhqQ80aJhXL1WZwkeZvONDVytwPCGS
rT1JfNT323fHmVoauB1Jupsdh+uxPVjKpR33w2WHPtaz+Ojwd3VHgw4asBKW
5D5i/stPUbxiJw0+RqLagFA+uvB1msGnLpz/Ys+oOXR8v5tDPbb30aBKnE9b
F4L7Uc11ZDpEgysLpQm1AD7aVJQYuGSSBn5CyrSsQ3yUXfT6+B/sqElBmBN+
/2kVNzjXCWgQxjpyjbMf5+PdTP3QKXwfshdJr9/LR99LLvwckqDDlap9Y3HO
fHTlg/3eghl0MIpcFL8Sf4/nfZoy2z+fDqp+Ca809XH+2g6KxenTQccguXga
fv8Pxnh4h66nw9H9wr8r8fdzqv3RZn8DOqholz7a/peH1ItOPrM1ooN4ygW3
UC4PzX54/pDQhA53PfTejAzh573CCg9vokPvUf9P/75XUjk5IVoOdAg/mv52
P/4+WzJrtniODx1ufDLYsO0SD7UM1N2/eZoOS7/yH2pfxN9r5XcsfX3pYNUY
e002gIdkmStoWmfo0H7HpKHsDA+NS5hLx52jw/7cQDk9Lx76wD81K+QyHRzj
FH+9dOUhv+6PC21YdGCt4x0PX89DRW/o+m0P6fCfR4XfaA8Xlexa71iVTAel
CsEy3S4uKu1v981/RAfJC5beXu1cVDHf7MndVDxe/X1qYwsXNfiParpm4HyU
6NlGfeKi/tUH1Wpe0GFcQ/AjMpeL5sRvkCkupkPXYAzrPJOLlNb3rnz+jg4R
6crO7nQuUi6P2nKvhA4eSsVjG6lctIg/RL1aSoewdxERnMtctMIpWWBaTocf
UQ2wyZeLTOQUx158pkOLtuE3fWcuOhw08C25nQ7DRsJh/cVcVKM0NzGygw62
g9IBT1W4CJ6YHrrcSQdN9bowzflctLiN1enQjc9nHmjLKnBRC6HVN9FHB0Fa
W0CsOBftmnZ02PE3HR5fPiZb3MVBRXHhz82G6fD83Nudv79zkJ5B9lnNETp8
40uPKH/loNlHp3EmR+mwR0nvp1M9B5WX3v+TwqUDP4gnwyrhIEt2m4RQQIfr
XZ5785I46LnG9JIfQjpkeX1MDU7kIPU3OvS6KTp8np7rZRHHQcKBIOk0cQZY
KfcmP7zJQa/tFsk5STHgzMfvDHkKB62fs2feYzkGUHV10tbv46AHacGN0bMY
sDlsqdYpVw5StEyJDZ7NgKTjAcWxuzho+Cx3obMCA26oHtD7tJ2DMuqjF4sp
MeBr9cGwJwYctPz2Z02XRQx4JqMg/XkGB910yVdbp8qAuYrf6NclOUhsXspc
OTUGkOFTVIupcfT1RtBU0WIGWDxs6zw1Po6iwjSbdDQYUDXN6urot3EkZqNY
JbOMAdXUeV+XNY+j0zKC4i7sdW0JjlA7jmzotZl3VjBgyfTnHKPScSQRfIUh
pc3Af9+tLxZkjCM/8xNB7dgv1TfwTz4aR20Tu86+WcWA5IOBHXmJ4+j1Ra0D
Z9bg312rtnBvjKMzZ+sMv+kyIJqU2f7sHB6vV7A6Vw/vr2ZR7Jj3OLL9nbo0
ah3ez8sDo1JHx5GW99VZ1usZwMt/d5rlNI7aj2r3ZBvh51cHq4bqjaOdy5Va
rxszQG+yvKNw5TjK7xTWnNzAgN9RnyriVMfx35P1+eqmDHjzJcZlhvQ4mr4Y
ZU1gp5rwqJSJMXTua1pq40YGZN7p8PP8PYbs3YKjw80ZYMaWVVBsGEP580+y
j1swgGJqI5dUOoZWNTqFWBIMmHF/Y6/mqzF0O5oIUAMGPJfNMPF5NIam717l
zcd2nBWxRjcazz9nnkfdJga4ZRoIFUPGUOenKddMSwaYPs4ai/MaQw7Xftqx
rBgg/2Jn9EKHMVRg22DluZkBJuKykkz9MbRmZqEJsYUBG3xz3Fzkx9Ddj491
VbYyIIK7bCW3axTJMG+t4GA73r37dCB9FAVsDVlUs40BPgfWHSQPjKJuyVNz
0rczoEl/SZbDjxG0652zNMOaAV5LNHQ2zh1BhRQQHLJhgId687qDf34hHVg9
tnEHA+ZRbOevbEtBd4Xz+pVtGaAWV1dBPygGMm/Fvo9gP773ukxbShwCLg/U
V9oxIDQ0/5adpDh0mzSWp+xkwEL7zCMHxcRhF7+wkGrPgJHPfJujk2JQmJOe
s9+BAdyzOYrefDGIX095MHcXA7LpqkNBw2Kw6/FuZfHdDDDM1Ty7bhCvt3Ql
ewh7Lxra2tcnBudmV5z56MyAgkThT5fvYrCjX2lTsBsDZh9iO22tFoO/Canf
fx5iAKt74ebjGWLgKlujWuzLgP02L4/ke4mBYsfiWL8IBiw+O+Dc93mKMJ/N
yG8pYcCs6zkPouYKCXaMT4jOBAM+pHvqPgybJBr0rAqWGIVCpuGjJXeVJ4gG
m841S3xCgcjtFV4b+EPQgmmps06H4vM6vKSn9w9hkL1y+ST2xf0LH1h0/iGi
1U4t+uIXCrYGDysmmv8QTsNjM6LOhcIxNZP4hNI/RP0tqb7pQaFw68eGGPoD
7Hat+0PsUBjK5N+u2/eHqAvwnVeQGgo9CVOPLFr5BPVz/fv4tFA4c+IIJ6WJ
T+itMQ24/DgU5nzsl1Sq5xPXOiSbNmSEgvjhJ0fGK/mEje3d2y+ehgKlfsb0
xgI+Ubj0/aK0nFCg58tMV03iExmVKhrRJaGQEHd0PN2HTzA0SteebA+FbSaT
zxJl+cT9q8mUzR2hkH47sxVJ84n8Flr94s5QaJVs8+qU5BNjN60u1XWFQveO
RRlrp3jEoWlF78368P7iAlO6xnjExu43++SHQiFEffhcwTceMZz8nJ09EQq7
zYe0dV/wCDmJG9+uTYbC2m+zrt55xiM0D/jpeQlC4e3zbPnpmTzigLJuo9pU
KMguutfbk8ojKhgZS0MlmHBCcx0UJvCIR8dTct1mMMFq30h4G5tH7NX+r1eo
zIRLwSmVuZ48osDc89XAfCZ8n1e7y8iDR2jsWs1sXsAEcuNx25yDPOLHpTzt
LBUm1LZZRL115xEBlQ3eRxczYbtm0aZ+Bx4R6Tt7rGIFE7Z0mGW/MOcRJS+D
p24bMMHiqemxGQtxvOVba+iGTPjQlb2qVplHsNtm3T9rxISX4S06/ynxCEfp
eEvbDUyItmb3myjwiLY9ufSpjUzY+dVJ5po0j/gzMTzzmBUT4m/Lnknkcom1
lh4L1u9iwvzcFpe9jVwiMmhQTWE3E9yH5/5i1XOJ0ZyAZb+wT8cOWb+u5RI5
q8PWpjgzYTzefJf6Jy5BzMvevMgNz/dK/qL4By7h8EPqzLRDTOjvuPpL+TWX
OHst7WOdDxN2G82xoidyifoP6z89O82EpWS36s//uITRtIL6CF8mzCnaEOUQ
zyX+Xqj9vu0MEwbi1jlo3OES5OEJzptzTDDxHettvsklog3sNB5eZkJ42Z9j
Nxg4npbhS+dYTOAYyZSv9OUSh6o8hEfYTHCMeHY1wYdLyBbWU3aHMUHv3q++
+d5c4kByLlM/ggnHH9Z8lvfiEtJ+ITHDkUxAo6ua5h7hEnukFLK8bzPBift4
xylXLvFHV7ffMwXnd0Gqqt0mLvFQ4763UyoT4qo6PPkEl9g5b+6wVRoTFCWK
9JItuMSDv1yuRjqOj8O0m2bGJWzeF0h2ZDLhJBie/WzEJe6671Tfn8OEowNt
GtlruIQZ3cfV+T0TDjlvUWct5BK7At2uQCkTepwpfscXcAkvny1Jq8uYYJYc
JbttPpeIcVb7Lf6RCXvKF86XncclRlZUMTIr8X7zvvskKnCJR6VrcqTrmbDx
phVHSoZLKMgMKr3uZIK4wXheHo9DrJxsMk3uYkKhRkNjAZdDmA+/OxTZzYQN
O6WU33M4xMnmuIxjvUxoT4vl1o9xiPepOzbP/YnrLzBnicQwh7hkne7vPcIE
56z58jd+cIge9snaxWIssOD5Xgxs4RB/Hy7U+Yt9ym2z3tMvHEIBfQhtEGeB
+xfq+55mDmE6ttI8fBoLXNrLaM5NHCJyb1fKn+ksOCH0sCDqOYTZmn1X6mex
QOzGu++m1RwiuspOi72IBfRF9+WqijnE475J6lFVFpy+kvFZFRuJZ3wDNRYk
p7928yniED8NZaN4i3E8XwueKhRyCEgoFXhqsCAhP2P/obccYuA0UUdos6Be
MUl5WS6HsFRYd5VjxIJRyy3v9TI5xL3OMpcuYxbYMzKvs59wCEH2Ad3PG1jA
nu67rCeDQ+S6hbdnmLLAzNErKT6dQ6xN6rP0tGDBDfM7g0ppHGKhUYJ03RYW
vGpt/6b9kEMM751545kTCwIf1Fh/v8shdq594JXgzIJBFB3lgJ0uZmIZ7sKC
b7JPworvcIhjycfGju9hwXcVRKbe5hCtQ0XOS/axQPvGqatBMRyilHJR5doR
FkgqCEetbnKI/1J6kk6dZUF3e03oDjbOfyLx3NqfBWRSI3xhcQiX23cKNM+x
wLra8cpx7Nksuy9d51nQ++zAVTqTQwSffDl7XyAL3hsMR5YxOMRhHXqgbQgL
WO9VLx0hOcSKF8vtda6x4IqLbDA3iENQ06/um3mdBU+2vr8Vhd2W1OzVj92W
TCxZhx0THU5LvsGCDkMa0+cyh5AOGM9Tu8WCdXI9jwYCOUT/hpLls+NZEKJ4
5vZkAId4UnDk71AaCxqUb3r5nOEQAbnGjz88ZoHqYf/whdgWWTPdH6Sz4O+r
GvlSPw5Rk/wiz/kJ3n+itpE69nj4tMD8ZyzgLLg13Hwa19feJB7rFQuU1+WH
7PXG+eJ1ji9/z4I3F4L6HxznENdHch4Ksf97J2vsjr1ngO3UXMqCk3EmTXOw
+9v0s8M+sCA3wXY29RiHkCul+o9WsCAnTNP+2FEOsTtaYxTV4nyWzflifoRD
tOt5/HZvZ8Gq3c33Vh7kECOdamrbOlhwmTrDrvMAh5C49cVmfScLokI1diZg
L/vj8GhmNwtCOzzs5mMfKyL25/exIKg+2XDWfg4x6KhWofYbn2dvv6vMXg7B
P9v8qF3AgnwFCwMTVw4xY0V0faWQBZOJnUjowiFUmuwl8qZY0BN5OLoEe+PG
sv03xNlwqJum7Ih9dVqOkqUUGzLUEs77OHMIyegoapIcGzxu7nR8sZtDzHm5
88CxRXj8S7+tZxw4hHpEVaGlKhs+yAQmWGLrHbVdtkSNDYcDi9YoYTvMs/nR
tJgNKefXD7yy5xDXzm85a63BBv1Lmf3i2LJGZow12mxIkz2Sl2iH13ulnTlq
xIZt5zRmiO/gEErXUxU+GbMhfndYXrMNzsdxTf/0DWzoeNt4+xm25fwVGzxN
2XBj0L7rEDblgnpxgzkblv7tefDOmkMIjec35m5mQ0+iU9KN7RyClyspvLqL
DU5OBLFzK4fYni4QP7+bDTOiBg5pYt/9jyt1ygnvp6g5WwzbjPpjlqsLGyhx
2aMvtuB63lGppuuOvbL/gyq2XFuU+ffDbHCU/3ufZ8UhNKYtu0KcYUO1zeuJ
T5s4hD9nEcXwLBs+S+6cyMQu6VOir/Znw39N/iuuYR+vnB4x/zwbyDdVfFvs
jFs/439fZAPs7oytBA5hrJWVnxjChoCMr/frCA7BVEkvvEVhA81zg8lL7Ba5
hyVhVDZcCP/Ci8EOGrlVeYHGhsRo85/u2MWvA7/aM9lgklaf0G3BIeY+Odu+
hcWGS0X1p8qwPRNPdW9ks4FosD34GFuatn9QM5wNWpKluX7YewJchtUi2CCs
cFrshP34hP343GtseGUamGaMPeG+nT/jOhv83v11W4Rta7dpcgr71Pz7ulPm
HOJ/U6uJDQ==
               "]]},
             Annotation[#, "Charting`Private`Tag$128354#2"]& ]}, {}}, {
           GraphicsComplexBox[CompressedData["
1:eJxdl3tM1WUYxw8IBiJ5gINIhnLTEd4YRfOCnLPIC2mOeQ/lFErQYg61SYIt
SpRSJAGZIaGTsImKJKaIweRkisCY0pg5b1wMBK2GIUPxWp3n9/2+8/AP++z7
8H7f3/s+z/s8+K1KXvihvU6nW2Gn0/3/e7+5qCfMkGEqHzh64/nzAMuCiuSp
+QcVQ/f0PfSea5cfdTD0h3lzj4blj6UOhl7XFXEw2jyaOhh6/tSw4qQgL+pg
6KuyJnyX2edOHQz9g5rI4MhUV+pg6E/iQsakujpSB0MPGTE90Bw5WAsdDL35
xPhR+VfaqYOhW4SN0MHQg2Q96mCen+zHxPPTGPpK+R7qYH6/nAd1MPQ8OU/q
YOjn5D6og6EPyH1SB0M3SD5QB9vkl8kmv0xRJ49bMhs3a/fpbwHXW8/Pl/y+
9Xt9yJOs5+dNfmw9L09yg/Xv9eTJ1nhncqNV15GbrHyvFqyz/jTXgM+JbgTX
yd9z/8GyPvmC+JMHZX/kCbJ/cqx8n8nm+8lxcj5k2/NDvYJRn2DUI/ev1R8Y
9fbifbiTUU9g1A8Y9QJGfYBRD2DkP/en5TsY+U1/LZ/ByF/ej5avYOQnGPn4
4KVMfVdsBvPtxffE3wId+QcdDB35CB0MHfkJHQwd+QodDB35Cx0MHfkMHQwd
+Q0dDB35Dh0MHfkPHQwd9cD3QmPoqA++9xpDR71AB0NH/UAHQ0c9QQdDR31B
B0NHvUEH29y/yeb+qaMeoYOTu4vcntSqevTxO1DhdEz102EJO8t0ls2my9W7
w4d4K+6NsQw6N/mTZ3TlntY/8yUv2VKd4lWheLbPK2vC63zIG1es6Y6aqNiw
Vp+4LMdbxZev7ogfGEW+dXZo3PoYTxVvF3M93WIgH/N8GpMd6KbiF0VfLtyu
Jz9uvn0o+qYzOe7d7H1Jh5zI36a07M1cZ0d+2peaVzxTR46f+kVAqktfLThh
VaG3eU4v+eK0gpPRET+RFwgbwUslnrxS1iMPip8JvEv2Q46V/ZIfyPeQ2+V7
yeVyHmR3OS8VL+dJflvOW8XLfZBT5L5UvNynyea+yVo+kLV8IbdIPqn9av0B
jH4ARj8Aox+A0Q/A6Adg9AMw+gEY/QCMfgBGPwCjH3B/Wj/g/Wr9gP5aPwCj
H4DRD8DoB8x3rR+gXvH+87zr3pqRcVXV51fRhsfbXPwtiEc/gF7SO7Mq54w6
39b7Y+5N7hjL+sf6m7+vGOnwH587FXs3sCOAPL9xU3acm+Jn5sF5PUNU/Mb5
10uPtPhzPfhDn9ixPDG0zo98/H7KsOQBpTfq7+T++dtYcuuG38edrvLl96B/
MV9D138cPkflR9lsz7tRR0bTH/FYb7xnaX36UrV+6PTOlwcrlV6wui1raNFo
8o6IklnZM3zoj/7IetryUfwyN5WPaXtcOuM3eNEf8VivP3Hf2UJftb4u+5qT
4UulJ1Re3uqX4EWOyd1jLHX0pj/6L+vnitm8/vpI8ty/7FrTjR70RzzWO/tz
fs3JuyPJF9ua7afMU/obzk3p4SEe5KDOndN+vWSgP/o7/D4LXrI8+wdVb5M+
v/djmMfL9Ec81stxzapsPuFOLgq98CTK043sWLXlfnm/K3ngzczXW/fo6Y/5
ge/lo90HotuGkxsCbpYkHXSkP+KxXrXFPu7K0+HklmGb/m44o/Ti2HXdnV87
krd5DMb0XXCiP+YT+E3Zn1GQ+YkDuT5v15TITx/Vwh/xWG9ZQu9i1zwHcvKx
xI7nC+1U/QytqQyb/qgWPO5014KglTr6Y/6BX0FW+6jUEQ/J9jVXJ5uNf9Af
8Vivx6sqN3P+Q7KhrPRw0sV/yPElwTMjz98iO2yKckn9pbcW/piv4Be+ots+
v+0G/V8VNsIf8Vgvbces2w0tN7n+8TsR0X3Xyskxohup91h1I/wxv8Gvr9r6
veQcOQ/6Ix7rLZbvI/enWb+P3C7nQx4u50N/zIfsD3Lf9J8g+WCCP+Kx3lq5
X67vJ/dLfZHkBzlJ8oPvP+ZP+J2XfCfvlHqgP+Kx3l7Jb/JWyW/yKakP8iWp
D/pjvoXfa1Lv5DR5D+iPeKxnJ/VN7pf6Jn8j7wO5UN4H+mN+5rwo7x25TN5D
+iOe7728b+Tx8r6RLfI+kpvkfaQ/5nPOs/Lek1ulH9Af8awved/Jy+V9J/dJ
fyA/22HtD/TH/A+/w9LvyHrph/RHPNbbLf2NvF36GzlQ+iM5RPqjyWaeoN8N
mR/IxTJfmGz6P9erl/5O1vo7OVjmA7I2H9Af/7/YzDtq/pR5iP6It5lXyNq8
QtbmHfI7Mu+QMa+CMa+CMa+CMa+CMa+CMa+CMa+CMa/yPrR5FYx5lfmrzavs
39q8yv1p8yoY8yr9tXkVjHmV56PNq+zP2rzKfqLNq/8CkEyeCw==
            "], {
             {GrayLevel[0.09], AbsoluteThickness[1.6], Opacity[0.06], 
              EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
                 "]], 
                PolygonBox[CompressedData["
1:eJwt1Pdvz0Ecx/E7oxqjGqOaWqVKqbYoLUpbRbVmEBEREUREhEZEYu89Wnv7
JwgxYoQYIUaIEWKEGCFGiBFiPF95v3945F73zefzubv33X3bTa0aM6dWCGE4
6uAe7mMC6mMF7mAAcvAQD9DQn7mBmxiPRDzHMyRhIj7gIyYjGedxDgkYi8/4
hCb+zCVcxjh/ZhmuoRRd8RM/0AxT8A3fPesb6/AOg9ANt3HL16I5rsELDEQe
VuERypCLJ3jqc9caz+Csz1X1WYILKEE23uKNr20SXuG1Z9XgKq54bbSmDfiC
weiOEziJ0dA+FMUQDtL2xSjsQBq/DaUt0Djkxkgjz0C11ka/grYnUskt0Io8
E83JKdGy3mlETor2bqrqSi5BR/I8HNDY9Ef6HLaprvQraXthi+ZJfwhtPvqT
i6O92wF1yQmYTk5BIP/zPA2ZGguzyW2QTm4bLc/SnpHz0J5chSxyJ6QHe6c3
uTDaWHM1J3JBtKx3Wutb0b6lGuxDD/ojaPsgh5wb7dv6ZiK5XrRaaM4VWhuy
yPO1T+TyaFk1OqSzEm1virAAR1QHdMZRLPRcjItY6melFMexGF38DG3CL5Rr
nmjJt3f6Xg/TOaV/2Mfqhwz6u2kLg93ZbPp7VZdga2xKf7vvlc5Mbfpbfa90
RhrQr/Gzoj39io1+FjWH0zgV7KzrTO7RXKONpTH+4K/vpe7gIhzztWpN+Ty7
32utM/QSa4PdNd3Ju1gZ7L9Ed+43NvvadabeY32wu6s7ch3Lg919/Qc9xupg
d1V3eJf2PVqtVJP/qo10KQ==
                 "]]}]}, {}, {}, {}, {}}], {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{500., 0.},
         DisplayFunction->Identity,
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{
            FormBox["\"Relative\"", TraditionalForm], None}, {None, None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{60, 15}, {30, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotLabel->FormBox[
          "\"a) Host biomass C-/N-limitation\"", TraditionalForm],
         PlotRange->{{500, 850}, {-1.8878143544754142`, 2.127521095641062}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}], 
        NCache[{Rational[931, 2], -586}, {465.5, -586}], 
        ImageScaled[{0.5, 0}], {931, 585}], InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[
             {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
bINuP5tC7P8B5fQfvA==
               "]]},
             Annotation[#, "Charting`Private`Tag$128471#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
               "]]},
             Annotation[#, "Charting`Private`Tag$128471#2"]& ]}, {}}, {
           GraphicsComplexBox[CompressedData["
1:eJxdl3tM1WUYxw8IBiJ5gINIhnLTEd4YRfOCnLPIC2mOeQ/lFErQYg61SYIt
SpRSJAGZIaGTsImKJKaIweRkisCY0pg5b1wMBK2GIUPxWp3n9/2+8/AP++z7
8H7f3/s+z/s8+K1KXvihvU6nW2Gn0/3/e7+5qCfMkGEqHzh64/nzAMuCiuSp
+QcVQ/f0PfSea5cfdTD0h3lzj4blj6UOhl7XFXEw2jyaOhh6/tSw4qQgL+pg
6KuyJnyX2edOHQz9g5rI4MhUV+pg6E/iQsakujpSB0MPGTE90Bw5WAsdDL35
xPhR+VfaqYOhW4SN0MHQg2Q96mCen+zHxPPTGPpK+R7qYH6/nAd1MPQ8OU/q
YOjn5D6og6EPyH1SB0M3SD5QB9vkl8kmv0xRJ49bMhs3a/fpbwHXW8/Pl/y+
9Xt9yJOs5+dNfmw9L09yg/Xv9eTJ1nhncqNV15GbrHyvFqyz/jTXgM+JbgTX
yd9z/8GyPvmC+JMHZX/kCbJ/cqx8n8nm+8lxcj5k2/NDvYJRn2DUI/ev1R8Y
9fbifbiTUU9g1A8Y9QJGfYBRD2DkP/en5TsY+U1/LZ/ByF/ej5avYOQnGPn4
4KVMfVdsBvPtxffE3wId+QcdDB35CB0MHfkJHQwd+QodDB35Cx0MHfkMHQwd
+Q0dDB35Dh0MHfkPHQwd9cD3QmPoqA++9xpDR71AB0NH/UAHQ0c9QQdDR31B
B0NHvUEH29y/yeb+qaMeoYOTu4vcntSqevTxO1DhdEz102EJO8t0ls2my9W7
w4d4K+6NsQw6N/mTZ3TlntY/8yUv2VKd4lWheLbPK2vC63zIG1es6Y6aqNiw
Vp+4LMdbxZev7ogfGEW+dXZo3PoYTxVvF3M93WIgH/N8GpMd6KbiF0VfLtyu
Jz9uvn0o+qYzOe7d7H1Jh5zI36a07M1cZ0d+2peaVzxTR46f+kVAqktfLThh
VaG3eU4v+eK0gpPRET+RFwgbwUslnrxS1iMPip8JvEv2Q46V/ZIfyPeQ2+V7
yeVyHmR3OS8VL+dJflvOW8XLfZBT5L5UvNynyea+yVo+kLV8IbdIPqn9av0B
jH4ARj8Aox+A0Q/A6Adg9AMw+gEY/QCMfgBGPwCjH3B/Wj/g/Wr9gP5aPwCj
H4DRD8DoB8x3rR+gXvH+87zr3pqRcVXV51fRhsfbXPwtiEc/gF7SO7Mq54w6
39b7Y+5N7hjL+sf6m7+vGOnwH587FXs3sCOAPL9xU3acm+Jn5sF5PUNU/Mb5
10uPtPhzPfhDn9ixPDG0zo98/H7KsOQBpTfq7+T++dtYcuuG38edrvLl96B/
MV9D138cPkflR9lsz7tRR0bTH/FYb7xnaX36UrV+6PTOlwcrlV6wui1raNFo
8o6IklnZM3zoj/7IetryUfwyN5WPaXtcOuM3eNEf8VivP3Hf2UJftb4u+5qT
4UulJ1Re3uqX4EWOyd1jLHX0pj/6L+vnitm8/vpI8ty/7FrTjR70RzzWO/tz
fs3JuyPJF9ua7afMU/obzk3p4SEe5KDOndN+vWSgP/o7/D4LXrI8+wdVb5M+
v/djmMfL9Ec81stxzapsPuFOLgq98CTK043sWLXlfnm/K3ngzczXW/fo6Y/5
ge/lo90HotuGkxsCbpYkHXSkP+KxXrXFPu7K0+HklmGb/m44o/Ti2HXdnV87
krd5DMb0XXCiP+YT+E3Zn1GQ+YkDuT5v15TITx/Vwh/xWG9ZQu9i1zwHcvKx
xI7nC+1U/QytqQyb/qgWPO5014KglTr6Y/6BX0FW+6jUEQ/J9jVXJ5uNf9Af
8Vivx6sqN3P+Q7KhrPRw0sV/yPElwTMjz98iO2yKckn9pbcW/piv4Be+ots+
v+0G/V8VNsIf8Vgvbces2w0tN7n+8TsR0X3Xyskxohup91h1I/wxv8Gvr9r6
veQcOQ/6Ix7rLZbvI/enWb+P3C7nQx4u50N/zIfsD3Lf9J8g+WCCP+Kx3lq5
X67vJ/dLfZHkBzlJ8oPvP+ZP+J2XfCfvlHqgP+Kx3l7Jb/JWyW/yKakP8iWp
D/pjvoXfa1Lv5DR5D+iPeKxnJ/VN7pf6Jn8j7wO5UN4H+mN+5rwo7x25TN5D
+iOe7728b+Tx8r6RLfI+kpvkfaQ/5nPOs/Lek1ulH9Af8awved/Jy+V9J/dJ
fyA/22HtD/TH/A+/w9LvyHrph/RHPNbbLf2NvF36GzlQ+iM5RPqjyWaeoN8N
mR/IxTJfmGz6P9erl/5O1vo7OVjmA7I2H9Af/7/YzDtq/pR5iP6It5lXyNq8
QtbmHfI7Mu+QMa+CMa+CMa+CMa+CMa+CMa+CMa+CMa/yPrR5FYx5lfmrzavs
39q8yv1p8yoY8yr9tXkVjHmV56PNq+zP2rzKfqLNq/8CkEyeCw==
            "], {
             {GrayLevel[0.09], AbsoluteThickness[1.6], Opacity[0.06], 
              EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
                 "]], 
                PolygonBox[CompressedData["
1:eJwt1Pdvz0Ecx/E7oxqjGqOaWqVKqbYoLUpbRbVmEBEREUREhEZEYu89Wnv7
JwgxYoQYIUaIEWKEGCFGiBFiPF95v3945F73zefzubv33X3bTa0aM6dWCGE4
6uAe7mMC6mMF7mAAcvAQD9DQn7mBmxiPRDzHMyRhIj7gIyYjGedxDgkYi8/4
hCb+zCVcxjh/ZhmuoRRd8RM/0AxT8A3fPesb6/AOg9ANt3HL16I5rsELDEQe
VuERypCLJ3jqc9caz+Csz1X1WYILKEE23uKNr20SXuG1Z9XgKq54bbSmDfiC
weiOEziJ0dA+FMUQDtL2xSjsQBq/DaUt0Djkxkgjz0C11ka/grYnUskt0Io8
E83JKdGy3mlETor2bqrqSi5BR/I8HNDY9Ef6HLaprvQraXthi+ZJfwhtPvqT
i6O92wF1yQmYTk5BIP/zPA2ZGguzyW2QTm4bLc/SnpHz0J5chSxyJ6QHe6c3
uTDaWHM1J3JBtKx3Wutb0b6lGuxDD/ojaPsgh5wb7dv6ZiK5XrRaaM4VWhuy
yPO1T+TyaFk1OqSzEm1virAAR1QHdMZRLPRcjItY6melFMexGF38DG3CL5Rr
nmjJt3f6Xg/TOaV/2Mfqhwz6u2kLg93ZbPp7VZdga2xKf7vvlc5Mbfpbfa90
RhrQr/Gzoj39io1+FjWH0zgV7KzrTO7RXKONpTH+4K/vpe7gIhzztWpN+Ty7
32utM/QSa4PdNd3Ju1gZ7L9Ed+43NvvadabeY32wu6s7ch3Lg919/Qc9xupg
d1V3eJf2PVqtVJP/qo10KQ==
                 "]]}]}, {}, {}, {}, {}}], {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{500., 0.},
         DisplayFunction->Identity,
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{
            FormBox["\"Relative\"", TraditionalForm], None}, {None, None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{60, 15}, {30, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotLabel->FormBox[
          "\"a) Symbiont biomass C-/N-limitation\"", TraditionalForm],
         PlotRange->{{500, 850}, {-1.7129318332865526`, 1.8881004079386938`}},
         
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}], {1366.5, -586}, 
        ImageScaled[{0.5, 0}], {931, 585}]}, {InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[
             {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
AaWruov2YltYGk9MYwcOH7Sn/B8h+2TY
               "]]},
             Annotation[#, "Charting`Private`Tag$128588#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
               "]]},
             Annotation[#, "Charting`Private`Tag$128588#2"]& ]}, {}}, {
           GraphicsComplexBox[CompressedData["
1:eJxdl3tM1WUYxw8IBiJ5gINIhnLTEd4YRfOCnLPIC2mOeQ/lFErQYg61SYIt
SpRSJAGZIaGTsImKJKaIweRkisCY0pg5b1wMBK2GIUPxWp3n9/2+8/AP++z7
8H7f3/s+z/s8+K1KXvihvU6nW2Gn0/3/e7+5qCfMkGEqHzh64/nzAMuCiuSp
+QcVQ/f0PfSea5cfdTD0h3lzj4blj6UOhl7XFXEw2jyaOhh6/tSw4qQgL+pg
6KuyJnyX2edOHQz9g5rI4MhUV+pg6E/iQsakujpSB0MPGTE90Bw5WAsdDL35
xPhR+VfaqYOhW4SN0MHQg2Q96mCen+zHxPPTGPpK+R7qYH6/nAd1MPQ8OU/q
YOjn5D6og6EPyH1SB0M3SD5QB9vkl8kmv0xRJ49bMhs3a/fpbwHXW8/Pl/y+
9Xt9yJOs5+dNfmw9L09yg/Xv9eTJ1nhncqNV15GbrHyvFqyz/jTXgM+JbgTX
yd9z/8GyPvmC+JMHZX/kCbJ/cqx8n8nm+8lxcj5k2/NDvYJRn2DUI/ev1R8Y
9fbifbiTUU9g1A8Y9QJGfYBRD2DkP/en5TsY+U1/LZ/ByF/ej5avYOQnGPn4
4KVMfVdsBvPtxffE3wId+QcdDB35CB0MHfkJHQwd+QodDB35Cx0MHfkMHQwd
+Q0dDB35Dh0MHfkPHQwd9cD3QmPoqA++9xpDR71AB0NH/UAHQ0c9QQdDR31B
B0NHvUEH29y/yeb+qaMeoYOTu4vcntSqevTxO1DhdEz102EJO8t0ls2my9W7
w4d4K+6NsQw6N/mTZ3TlntY/8yUv2VKd4lWheLbPK2vC63zIG1es6Y6aqNiw
Vp+4LMdbxZev7ogfGEW+dXZo3PoYTxVvF3M93WIgH/N8GpMd6KbiF0VfLtyu
Jz9uvn0o+qYzOe7d7H1Jh5zI36a07M1cZ0d+2peaVzxTR46f+kVAqktfLThh
VaG3eU4v+eK0gpPRET+RFwgbwUslnrxS1iMPip8JvEv2Q46V/ZIfyPeQ2+V7
yeVyHmR3OS8VL+dJflvOW8XLfZBT5L5UvNynyea+yVo+kLV8IbdIPqn9av0B
jH4ARj8Aox+A0Q/A6Adg9AMw+gEY/QCMfgBGPwCjH3B/Wj/g/Wr9gP5aPwCj
H4DRD8DoB8x3rR+gXvH+87zr3pqRcVXV51fRhsfbXPwtiEc/gF7SO7Mq54w6
39b7Y+5N7hjL+sf6m7+vGOnwH587FXs3sCOAPL9xU3acm+Jn5sF5PUNU/Mb5
10uPtPhzPfhDn9ixPDG0zo98/H7KsOQBpTfq7+T++dtYcuuG38edrvLl96B/
MV9D138cPkflR9lsz7tRR0bTH/FYb7xnaX36UrV+6PTOlwcrlV6wui1raNFo
8o6IklnZM3zoj/7IetryUfwyN5WPaXtcOuM3eNEf8VivP3Hf2UJftb4u+5qT
4UulJ1Re3uqX4EWOyd1jLHX0pj/6L+vnitm8/vpI8ty/7FrTjR70RzzWO/tz
fs3JuyPJF9ua7afMU/obzk3p4SEe5KDOndN+vWSgP/o7/D4LXrI8+wdVb5M+
v/djmMfL9Ec81stxzapsPuFOLgq98CTK043sWLXlfnm/K3ngzczXW/fo6Y/5
ge/lo90HotuGkxsCbpYkHXSkP+KxXrXFPu7K0+HklmGb/m44o/Ti2HXdnV87
krd5DMb0XXCiP+YT+E3Zn1GQ+YkDuT5v15TITx/Vwh/xWG9ZQu9i1zwHcvKx
xI7nC+1U/QytqQyb/qgWPO5014KglTr6Y/6BX0FW+6jUEQ/J9jVXJ5uNf9Af
8Vivx6sqN3P+Q7KhrPRw0sV/yPElwTMjz98iO2yKckn9pbcW/piv4Be+ots+
v+0G/V8VNsIf8Vgvbces2w0tN7n+8TsR0X3Xyskxohup91h1I/wxv8Gvr9r6
veQcOQ/6Ix7rLZbvI/enWb+P3C7nQx4u50N/zIfsD3Lf9J8g+WCCP+Kx3lq5
X67vJ/dLfZHkBzlJ8oPvP+ZP+J2XfCfvlHqgP+Kx3l7Jb/JWyW/yKakP8iWp
D/pjvoXfa1Lv5DR5D+iPeKxnJ/VN7pf6Jn8j7wO5UN4H+mN+5rwo7x25TN5D
+iOe7728b+Tx8r6RLfI+kpvkfaQ/5nPOs/Lek1ulH9Af8awved/Jy+V9J/dJ
fyA/22HtD/TH/A+/w9LvyHrph/RHPNbbLf2NvF36GzlQ+iM5RPqjyWaeoN8N
mR/IxTJfmGz6P9erl/5O1vo7OVjmA7I2H9Af/7/YzDtq/pR5iP6It5lXyNq8
QtbmHfI7Mu+QMa+CMa+CMa+CMa+CMa+CMa+CMa+CMa/yPrR5FYx5lfmrzavs
39q8yv1p8yoY8yr9tXkVjHmV56PNq+zP2rzKfqLNq/8CkEyeCw==
            "], {
             {GrayLevel[0.09], AbsoluteThickness[1.6], Opacity[0.06], 
              EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
                 "]], 
                PolygonBox[CompressedData["
1:eJwt1Pdvz0Ecx/E7oxqjGqOaWqVKqbYoLUpbRbVmEBEREUREhEZEYu89Wnv7
JwgxYoQYIUaIEWKEGCFGiBFiPF95v3945F73zefzubv33X3bTa0aM6dWCGE4
6uAe7mMC6mMF7mAAcvAQD9DQn7mBmxiPRDzHMyRhIj7gIyYjGedxDgkYi8/4
hCb+zCVcxjh/ZhmuoRRd8RM/0AxT8A3fPesb6/AOg9ANt3HL16I5rsELDEQe
VuERypCLJ3jqc9caz+Csz1X1WYILKEE23uKNr20SXuG1Z9XgKq54bbSmDfiC
weiOEziJ0dA+FMUQDtL2xSjsQBq/DaUt0Djkxkgjz0C11ka/grYnUskt0Io8
E83JKdGy3mlETor2bqrqSi5BR/I8HNDY9Ef6HLaprvQraXthi+ZJfwhtPvqT
i6O92wF1yQmYTk5BIP/zPA2ZGguzyW2QTm4bLc/SnpHz0J5chSxyJ6QHe6c3
uTDaWHM1J3JBtKx3Wutb0b6lGuxDD/ojaPsgh5wb7dv6ZiK5XrRaaM4VWhuy
yPO1T+TyaFk1OqSzEm1virAAR1QHdMZRLPRcjItY6melFMexGF38DG3CL5Rr
nmjJt3f6Xg/TOaV/2Mfqhwz6u2kLg93ZbPp7VZdga2xKf7vvlc5Mbfpbfa90
RhrQr/Gzoj39io1+FjWH0zgV7KzrTO7RXKONpTH+4K/vpe7gIhzztWpN+Ty7
32utM/QSa4PdNd3Ju1gZ7L9Ed+43NvvadabeY32wu6s7ch3Lg919/Qc9xupg
d1V3eJf2PVqtVJP/qo10KQ==
                 "]]}]}, {}, {}, {}, {}}], {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{500., 0.},
         DisplayFunction->Identity,
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{
            FormBox[
            "\"mol C C-mol \\!\\(\\*SuperscriptBox[\\(S\\), \\(-1\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(d\\), \\(-1\\)]\\)\"", TraditionalForm], None}, {
           None, None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{60, 15}, {30, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotLabel->FormBox[
          "\"c) Fixed carbon shared with host (\[Rho]C)\"", TraditionalForm],
         PlotRange->{{500, 850}, {0., 1.3864623542211258`}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}], 
        NCache[{Rational[931, 2], -1172}, {465.5, -1172}], 
        ImageScaled[{0.5, 0}], {931, 585}], InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[
             {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
zML8P+L8d34=
               "]]},
             Annotation[#, "Charting`Private`Tag$128705#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
QvV3vHJfTNnWbuXvP5Q7YrYN+VD+P9iPX5Y=
               "]]},
             Annotation[#, "Charting`Private`Tag$128705#2"]& ]}, {}}, {
           GraphicsComplexBox[CompressedData["
1:eJxdl3tM1WUYxw8IBiJ5gINIhnLTEd4YRfOCnLPIC2mOeQ/lFErQYg61SYIt
SpRSJAGZIaGTsImKJKaIweRkisCY0pg5b1wMBK2GIUPxWp3n9/2+8/AP++z7
8H7f3/s+z/s8+K1KXvihvU6nW2Gn0/3/e7+5qCfMkGEqHzh64/nzAMuCiuSp
+QcVQ/f0PfSea5cfdTD0h3lzj4blj6UOhl7XFXEw2jyaOhh6/tSw4qQgL+pg
6KuyJnyX2edOHQz9g5rI4MhUV+pg6E/iQsakujpSB0MPGTE90Bw5WAsdDL35
xPhR+VfaqYOhW4SN0MHQg2Q96mCen+zHxPPTGPpK+R7qYH6/nAd1MPQ8OU/q
YOjn5D6og6EPyH1SB0M3SD5QB9vkl8kmv0xRJ49bMhs3a/fpbwHXW8/Pl/y+
9Xt9yJOs5+dNfmw9L09yg/Xv9eTJ1nhncqNV15GbrHyvFqyz/jTXgM+JbgTX
yd9z/8GyPvmC+JMHZX/kCbJ/cqx8n8nm+8lxcj5k2/NDvYJRn2DUI/ev1R8Y
9fbifbiTUU9g1A8Y9QJGfYBRD2DkP/en5TsY+U1/LZ/ByF/ej5avYOQnGPn4
4KVMfVdsBvPtxffE3wId+QcdDB35CB0MHfkJHQwd+QodDB35Cx0MHfkMHQwd
+Q0dDB35Dh0MHfkPHQwd9cD3QmPoqA++9xpDR71AB0NH/UAHQ0c9QQdDR31B
B0NHvUEH29y/yeb+qaMeoYOTu4vcntSqevTxO1DhdEz102EJO8t0ls2my9W7
w4d4K+6NsQw6N/mTZ3TlntY/8yUv2VKd4lWheLbPK2vC63zIG1es6Y6aqNiw
Vp+4LMdbxZev7ogfGEW+dXZo3PoYTxVvF3M93WIgH/N8GpMd6KbiF0VfLtyu
Jz9uvn0o+qYzOe7d7H1Jh5zI36a07M1cZ0d+2peaVzxTR46f+kVAqktfLThh
VaG3eU4v+eK0gpPRET+RFwgbwUslnrxS1iMPip8JvEv2Q46V/ZIfyPeQ2+V7
yeVyHmR3OS8VL+dJflvOW8XLfZBT5L5UvNynyea+yVo+kLV8IbdIPqn9av0B
jH4ARj8Aox+A0Q/A6Adg9AMw+gEY/QCMfgBGPwCjH3B/Wj/g/Wr9gP5aPwCj
H4DRD8DoB8x3rR+gXvH+87zr3pqRcVXV51fRhsfbXPwtiEc/gF7SO7Mq54w6
39b7Y+5N7hjL+sf6m7+vGOnwH587FXs3sCOAPL9xU3acm+Jn5sF5PUNU/Mb5
10uPtPhzPfhDn9ixPDG0zo98/H7KsOQBpTfq7+T++dtYcuuG38edrvLl96B/
MV9D138cPkflR9lsz7tRR0bTH/FYb7xnaX36UrV+6PTOlwcrlV6wui1raNFo
8o6IklnZM3zoj/7IetryUfwyN5WPaXtcOuM3eNEf8VivP3Hf2UJftb4u+5qT
4UulJ1Re3uqX4EWOyd1jLHX0pj/6L+vnitm8/vpI8ty/7FrTjR70RzzWO/tz
fs3JuyPJF9ua7afMU/obzk3p4SEe5KDOndN+vWSgP/o7/D4LXrI8+wdVb5M+
v/djmMfL9Ec81stxzapsPuFOLgq98CTK043sWLXlfnm/K3ngzczXW/fo6Y/5
ge/lo90HotuGkxsCbpYkHXSkP+KxXrXFPu7K0+HklmGb/m44o/Ti2HXdnV87
krd5DMb0XXCiP+YT+E3Zn1GQ+YkDuT5v15TITx/Vwh/xWG9ZQu9i1zwHcvKx
xI7nC+1U/QytqQyb/qgWPO5014KglTr6Y/6BX0FW+6jUEQ/J9jVXJ5uNf9Af
8Vivx6sqN3P+Q7KhrPRw0sV/yPElwTMjz98iO2yKckn9pbcW/piv4Be+ots+
v+0G/V8VNsIf8Vgvbces2w0tN7n+8TsR0X3Xyskxohup91h1I/wxv8Gvr9r6
veQcOQ/6Ix7rLZbvI/enWb+P3C7nQx4u50N/zIfsD3Lf9J8g+WCCP+Kx3lq5
X67vJ/dLfZHkBzlJ8oPvP+ZP+J2XfCfvlHqgP+Kx3l7Jb/JWyW/yKakP8iWp
D/pjvoXfa1Lv5DR5D+iPeKxnJ/VN7pf6Jn8j7wO5UN4H+mN+5rwo7x25TN5D
+iOe7728b+Tx8r6RLfI+kpvkfaQ/5nPOs/Lek1ulH9Af8awved/Jy+V9J/dJ
fyA/22HtD/TH/A+/w9LvyHrph/RHPNbbLf2NvF36GzlQ+iM5RPqjyWaeoN8N
mR/IxTJfmGz6P9erl/5O1vo7OVjmA7I2H9Af/7/YzDtq/pR5iP6It5lXyNq8
QtbmHfI7Mu+QMa+CMa+CMa+CMa+CMa+CMa+CMa+CMa/yPrR5FYx5lfmrzavs
39q8yv1p8yoY8yr9tXkVjHmV56PNq+zP2rzKfqLNq/8CkEyeCw==
            "], {
             {GrayLevel[0.09], AbsoluteThickness[1.6], Opacity[0.06], 
              EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
                 "]], 
                PolygonBox[CompressedData["
1:eJwt1Pdvz0Ecx/E7oxqjGqOaWqVKqbYoLUpbRbVmEBEREUREhEZEYu89Wnv7
JwgxYoQYIUaIEWKEGCFGiBFiPF95v3945F73zefzubv33X3bTa0aM6dWCGE4
6uAe7mMC6mMF7mAAcvAQD9DQn7mBmxiPRDzHMyRhIj7gIyYjGedxDgkYi8/4
hCb+zCVcxjh/ZhmuoRRd8RM/0AxT8A3fPesb6/AOg9ANt3HL16I5rsELDEQe
VuERypCLJ3jqc9caz+Csz1X1WYILKEE23uKNr20SXuG1Z9XgKq54bbSmDfiC
weiOEziJ0dA+FMUQDtL2xSjsQBq/DaUt0Djkxkgjz0C11ka/grYnUskt0Io8
E83JKdGy3mlETor2bqrqSi5BR/I8HNDY9Ef6HLaprvQraXthi+ZJfwhtPvqT
i6O92wF1yQmYTk5BIP/zPA2ZGguzyW2QTm4bLc/SnpHz0J5chSxyJ6QHe6c3
uTDaWHM1J3JBtKx3Wutb0b6lGuxDD/ojaPsgh5wb7dv6ZiK5XrRaaM4VWhuy
yPO1T+TyaFk1OqSzEm1virAAR1QHdMZRLPRcjItY6melFMexGF38DG3CL5Rr
nmjJt3f6Xg/TOaV/2Mfqhwz6u2kLg93ZbPp7VZdga2xKf7vvlc5Mbfpbfa90
RhrQr/Gzoj39io1+FjWH0zgV7KzrTO7RXKONpTH+4K/vpe7gIhzztWpN+Ty7
32utM/QSa4PdNd3Ju1gZ7L9Ed+43NvvadabeY32wu6s7ch3Lg919/Qc9xupg
d1V3eJf2PVqtVJP/qo10KQ==
                 "]]}]}, {}, {}, {}, {}}], {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{500., 0.},
         DisplayFunction->Identity,
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{
            FormBox[
            "\"mol N C-mol \\!\\(\\*SuperscriptBox[\\(H\\), \\(-1\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(d\\), \\(-1\\)]\\)\"", TraditionalForm], None}, {
           None, None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{60, 15}, {30, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotLabel->FormBox[
          "\"d) Nitrogen shared with symbiont (\[Rho]N)\"", TraditionalForm],
         PlotRange->{{500, 850}, {0., 0.011136437290036428`}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}], {1366.5, -1172}, 
        ImageScaled[{0.5, 0}], {931, 586}]}, {InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[
             {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
mCbu0d+19RDx/wBfaJ6b
               "]]},
             Annotation[#, "Charting`Private`Tag$128822#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
dCJEaRL9D49BgGw=
               "]]},
             Annotation[#, "Charting`Private`Tag$128822#2"]& ]}, {}}, {
           GraphicsComplexBox[CompressedData["
1:eJxdl3tM1WUYxw8IBiJ5gINIhnLTEd4YRfOCnLPIC2mOeQ/lFErQYg61SYIt
SpRSJAGZIaGTsImKJKaIweRkisCY0pg5b1wMBK2GIUPxWp3n9/2+8/AP++z7
8H7f3/s+z/s8+K1KXvihvU6nW2Gn0/3/e7+5qCfMkGEqHzh64/nzAMuCiuSp
+QcVQ/f0PfSea5cfdTD0h3lzj4blj6UOhl7XFXEw2jyaOhh6/tSw4qQgL+pg
6KuyJnyX2edOHQz9g5rI4MhUV+pg6E/iQsakujpSB0MPGTE90Bw5WAsdDL35
xPhR+VfaqYOhW4SN0MHQg2Q96mCen+zHxPPTGPpK+R7qYH6/nAd1MPQ8OU/q
YOjn5D6og6EPyH1SB0M3SD5QB9vkl8kmv0xRJ49bMhs3a/fpbwHXW8/Pl/y+
9Xt9yJOs5+dNfmw9L09yg/Xv9eTJ1nhncqNV15GbrHyvFqyz/jTXgM+JbgTX
yd9z/8GyPvmC+JMHZX/kCbJ/cqx8n8nm+8lxcj5k2/NDvYJRn2DUI/ev1R8Y
9fbifbiTUU9g1A8Y9QJGfYBRD2DkP/en5TsY+U1/LZ/ByF/ej5avYOQnGPn4
4KVMfVdsBvPtxffE3wId+QcdDB35CB0MHfkJHQwd+QodDB35Cx0MHfkMHQwd
+Q0dDB35Dh0MHfkPHQwd9cD3QmPoqA++9xpDR71AB0NH/UAHQ0c9QQdDR31B
B0NHvUEH29y/yeb+qaMeoYOTu4vcntSqevTxO1DhdEz102EJO8t0ls2my9W7
w4d4K+6NsQw6N/mTZ3TlntY/8yUv2VKd4lWheLbPK2vC63zIG1es6Y6aqNiw
Vp+4LMdbxZev7ogfGEW+dXZo3PoYTxVvF3M93WIgH/N8GpMd6KbiF0VfLtyu
Jz9uvn0o+qYzOe7d7H1Jh5zI36a07M1cZ0d+2peaVzxTR46f+kVAqktfLThh
VaG3eU4v+eK0gpPRET+RFwgbwUslnrxS1iMPip8JvEv2Q46V/ZIfyPeQ2+V7
yeVyHmR3OS8VL+dJflvOW8XLfZBT5L5UvNynyea+yVo+kLV8IbdIPqn9av0B
jH4ARj8Aox+A0Q/A6Adg9AMw+gEY/QCMfgBGPwCjH3B/Wj/g/Wr9gP5aPwCj
H4DRD8DoB8x3rR+gXvH+87zr3pqRcVXV51fRhsfbXPwtiEc/gF7SO7Mq54w6
39b7Y+5N7hjL+sf6m7+vGOnwH587FXs3sCOAPL9xU3acm+Jn5sF5PUNU/Mb5
10uPtPhzPfhDn9ixPDG0zo98/H7KsOQBpTfq7+T++dtYcuuG38edrvLl96B/
MV9D138cPkflR9lsz7tRR0bTH/FYb7xnaX36UrV+6PTOlwcrlV6wui1raNFo
8o6IklnZM3zoj/7IetryUfwyN5WPaXtcOuM3eNEf8VivP3Hf2UJftb4u+5qT
4UulJ1Re3uqX4EWOyd1jLHX0pj/6L+vnitm8/vpI8ty/7FrTjR70RzzWO/tz
fs3JuyPJF9ua7afMU/obzk3p4SEe5KDOndN+vWSgP/o7/D4LXrI8+wdVb5M+
v/djmMfL9Ec81stxzapsPuFOLgq98CTK043sWLXlfnm/K3ngzczXW/fo6Y/5
ge/lo90HotuGkxsCbpYkHXSkP+KxXrXFPu7K0+HklmGb/m44o/Ti2HXdnV87
krd5DMb0XXCiP+YT+E3Zn1GQ+YkDuT5v15TITx/Vwh/xWG9ZQu9i1zwHcvKx
xI7nC+1U/QytqQyb/qgWPO5014KglTr6Y/6BX0FW+6jUEQ/J9jVXJ5uNf9Af
8Vivx6sqN3P+Q7KhrPRw0sV/yPElwTMjz98iO2yKckn9pbcW/piv4Be+ots+
v+0G/V8VNsIf8Vgvbces2w0tN7n+8TsR0X3Xyskxohup91h1I/wxv8Gvr9r6
veQcOQ/6Ix7rLZbvI/enWb+P3C7nQx4u50N/zIfsD3Lf9J8g+WCCP+Kx3lq5
X67vJ/dLfZHkBzlJ8oPvP+ZP+J2XfCfvlHqgP+Kx3l7Jb/JWyW/yKakP8iWp
D/pjvoXfa1Lv5DR5D+iPeKxnJ/VN7pf6Jn8j7wO5UN4H+mN+5rwo7x25TN5D
+iOe7728b+Tx8r6RLfI+kpvkfaQ/5nPOs/Lek1ulH9Af8awved/Jy+V9J/dJ
fyA/22HtD/TH/A+/w9LvyHrph/RHPNbbLf2NvF36GzlQ+iM5RPqjyWaeoN8N
mR/IxTJfmGz6P9erl/5O1vo7OVjmA7I2H9Af/7/YzDtq/pR5iP6It5lXyNq8
QtbmHfI7Mu+QMa+CMa+CMa+CMa+CMa+CMa+CMa+CMa/yPrR5FYx5lfmrzavs
39q8yv1p8yoY8yr9tXkVjHmV56PNq+zP2rzKfqLNq/8CkEyeCw==
            "], {
             {GrayLevel[0.09], AbsoluteThickness[1.6], Opacity[0.06], 
              EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNVnVY1mcUvS8oqIiAiB2EjQom6qyZzJqB7dQZkzljTtbd3d3d3d3d3d3d
3Ttn5/jAH+e593e/N26e9ytZvmHW+oyIqEwRmZC9AKj/69sAi4EWQAWQC+QB
/YECoBAYYFkEbAssA1ryPK/luhXAcqAVMNBr2wCrgJVAa2ApsATI9xmF3tsP
GAvkACOALYAeQG9gVNT7PNJ+9wHGANk+r8B+LPe9PLccGA00BqYBQ4ESYBGw
EGgOzAZmAY0sG/uuGZa8a2egDuhuv7rZtxrfzz2DgXZAB2Au0NS/zXdM/F7g
72bAIOeGe+Z5TxPHm+kzZ9qPDOcnx7Up9+/ZzkO2zx/mOBljX9u4Z459zQKm
e10ZsDUw3PFw/ZbeMzFU+0Lb+the7brS70mhnihyHcrtx4RQTxS4br0cz2jH
Rr/XAJ2cq/GhnmPtxtoP+nwq9ybV7GTGBL2KeYecDxRD7wrZE1gH/R/gr1AP
jnO+mKtfgJ9CPUu/2YdtgVrfz/xvZ8nft3Jt2llW2z4EmOw9g72Oa+jfVKBL
yL8pjq3SseU5vnH2Z6XPK3KOJzhXA5z3Qud4ktesdz15/o6uG7/X2sa7Fvse
ns8+7eGaTrav9Hkn28rsb5X3T3FsPGehz2D+VzsvzNUm7+8a9bPBeWFPsG+b
ua6cnyyjpoFttm3cN9N7s72mieUc6yWOuTTqZzLT98zzXcR8359rv1sYixvY
FjWwkePyfcdc38/vJc5dntflux60tzSW2dYx1LsdbGNPtXLNllnf3E/tXT/y
UWtjpW2tbC+0bZXzTNsKr23rc9pYrvaZ9Gup/eJ3bdTzTq19pNzeeo5z1dw1
pv+dLXewTqz1712sF1uus96RM5e0h+ct8JnFrhf3kRvJKeyzDNeb/Mm+Yf+w
99jDG23b/E2dPDTdNvJsnc/p5r3dLTdZ3+B7i+3jWsex0WeWOr41zsMQ56iT
c1Pr/A33nbyHvFji76GOid9VDXJDv/ge9AzNWZ31Ut/L9dcDu4W473bg1lDf
3wTsEeLB+4G9Qrx5D3BXaE4eB/YJce56x8mzr2N+k/L7CPBQaGaeAZ4KzcY3
wFeh/ngFeMl1eh04IMSJ7wBvhWaD9eOcsEeeB/YL8e/nwCEhDnsfOCjEYd8D
h4V46xPgo9BcdYFf85Ly/ztwRIjPFsE2IalefwCXhjiuN2xXh3ioGfTLQzzb
HvqVId7KgH5ZiAc/AC4KcegXwMUhbv0BuCTEoczxnc7z4faVfr4AXBB6xwbg
zGtCb2Qp9KtC/NcS+hUhTt/TdWKNEuxHhfh4CvSHQzx2Dn1J+p9yLnBj6K27
Adgl9B9lBH4fk9Svo5NywTxMhrw7xG0XAi+G3r3psL/tmpwPPBh6V6fC/nSI
txjHk45lGuwvh7jwPOCW0Bt7pGvA/A/HmmtDczU2qYfYP78Cs5J4qHvSO8oZ
6gfZJ6nnWkA2T+KdLMhGSTzVFPKY0Nv4gO/mvTc7F8zDqKT4GXt/yNNCszUE
+qCkGR0GeUZo/iZCH580V7sCt4X4g+//KaFZLIB+XOg9u8N5ZA7bQZ4Qmu9D
Q73LvmWPvxfq83cZd9JbwDm7LzRr/F/wW4jHDw71eoV77U3326fAjKR34Q3X
jPVqzfwlcQn/m5wU4onOSVxJ7nnCtWQdOSufheZl9xBHkB/OZj2TuJOz+11o
fjnfj4VmnP9rSKR8G451DZj/o0M9yv78lzElvR33hvqVvUof29rPNpBzk/gw
D3JOEgfuHeIjchFrnu+6fwvMTHprjncNmP9H3ZfsyX1DnEW+Yo80cZ9UQS5M
4nbWfKjr/qx7l327f4h3yDnksOdCPHa6+4Y982poNjgXJ7rerHU2ZE3SO0me
ey3EdezfSvdwBeSCJP48MMSD/Zzvs0I5Z22/DtWXfNAhiRPIZ93MaczBz6E8
MH+dnEPy2Y8hTiN/5CRxCDmsMInHmIORzgM5ryyJ9ziXA5Nm88zQPHAW+N+2
b9K7Rq4qT+IrxjHYsXBWqj0vrHlj151c+GWID5mbXOdnEv1Keqc4Bx+HZoH1
L3IPkA/+DnEC+TgziZPJtR+G+JZ8/GeIk/8DVMMabA==
                 "]], 
                PolygonBox[CompressedData["
1:eJwt1Pdvz0Ecx/E7oxqjGqOaWqVKqbYoLUpbRbVmEBEREUREhEZEYu89Wnv7
JwgxYoQYIUaIEWKEGCFGiBFiPF95v3945F73zefzubv33X3bTa0aM6dWCGE4
6uAe7mMC6mMF7mAAcvAQD9DQn7mBmxiPRDzHMyRhIj7gIyYjGedxDgkYi8/4
hCb+zCVcxjh/ZhmuoRRd8RM/0AxT8A3fPesb6/AOg9ANt3HL16I5rsELDEQe
VuERypCLJ3jqc9caz+Csz1X1WYILKEE23uKNr20SXuG1Z9XgKq54bbSmDfiC
weiOEziJ0dA+FMUQDtL2xSjsQBq/DaUt0Djkxkgjz0C11ka/grYnUskt0Io8
E83JKdGy3mlETor2bqrqSi5BR/I8HNDY9Ef6HLaprvQraXthi+ZJfwhtPvqT
i6O92wF1yQmYTk5BIP/zPA2ZGguzyW2QTm4bLc/SnpHz0J5chSxyJ6QHe6c3
uTDaWHM1J3JBtKx3Wutb0b6lGuxDD/ojaPsgh5wb7dv6ZiK5XrRaaM4VWhuy
yPO1T+TyaFk1OqSzEm1virAAR1QHdMZRLPRcjItY6melFMexGF38DG3CL5Rr
nmjJt3f6Xg/TOaV/2Mfqhwz6u2kLg93ZbPp7VZdga2xKf7vvlc5Mbfpbfa90
RhrQr/Gzoj39io1+FjWH0zgV7KzrTO7RXKONpTH+4K/vpe7gIhzztWpN+Ty7
32utM/QSa4PdNd3Ju1gZ7L9Ed+43NvvadabeY32wu6s7ch3Lg919/Qc9xupg
d1V3eJf2PVqtVJP/qo10KQ==
                 "]]}]}, {}, {}, {}, {}}], {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{500., 0.},
         DisplayFunction->Identity,
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{
            FormBox[
            "\"mol N \\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(d\\), \\(-1\\)]\\)\"", TraditionalForm], None}, {
           None, None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{60, 15}, {30, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotLabel->FormBox[
          "\"e) Waste nitrogen from symbiont\"", TraditionalForm],
         PlotRange->{{500, 850}, {0., 0.000712244817049863}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}], 
        NCache[{Rational[931, 2], -1758}, {465.5, -1758}], 
        ImageScaled[{0.5, 0}], {931, 586}], InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[
             {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
A9y1PYI=
               "]]},
             Annotation[#, "Charting`Private`Tag$128939#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
               "]]},
             Annotation[#, "Charting`Private`Tag$128939#2"]& ]}, {}}, {
           GraphicsComplexBox[CompressedData["
1:eJxdl3tM1WUYxw8IBiJ5gINIhnLTEd4YRfOCnLPIC2mOeQ/lFErQYg61SYIt
SpRSJAGZIaGTsImKJKaIweRkisCY0pg5b1wMBK2GIUPxWp3n9/2+8/AP++z7
8H7f3/s+z/s8+K1KXvihvU6nW2Gn0/3/e7+5qCfMkGEqHzh64/nzAMuCiuSp
+QcVQ/f0PfSea5cfdTD0h3lzj4blj6UOhl7XFXEw2jyaOhh6/tSw4qQgL+pg
6KuyJnyX2edOHQz9g5rI4MhUV+pg6E/iQsakujpSB0MPGTE90Bw5WAsdDL35
xPhR+VfaqYOhW4SN0MHQg2Q96mCen+zHxPPTGPpK+R7qYH6/nAd1MPQ8OU/q
YOjn5D6og6EPyH1SB0M3SD5QB9vkl8kmv0xRJ49bMhs3a/fpbwHXW8/Pl/y+
9Xt9yJOs5+dNfmw9L09yg/Xv9eTJ1nhncqNV15GbrHyvFqyz/jTXgM+JbgTX
yd9z/8GyPvmC+JMHZX/kCbJ/cqx8n8nm+8lxcj5k2/NDvYJRn2DUI/ev1R8Y
9fbifbiTUU9g1A8Y9QJGfYBRD2DkP/en5TsY+U1/LZ/ByF/ej5avYOQnGPn4
4KVMfVdsBvPtxffE3wId+QcdDB35CB0MHfkJHQwd+QodDB35Cx0MHfkMHQwd
+Q0dDB35Dh0MHfkPHQwd9cD3QmPoqA++9xpDR71AB0NH/UAHQ0c9QQdDR31B
B0NHvUEH29y/yeb+qaMeoYOTu4vcntSqevTxO1DhdEz102EJO8t0ls2my9W7
w4d4K+6NsQw6N/mTZ3TlntY/8yUv2VKd4lWheLbPK2vC63zIG1es6Y6aqNiw
Vp+4LMdbxZev7ogfGEW+dXZo3PoYTxVvF3M93WIgH/N8GpMd6KbiF0VfLtyu
Jz9uvn0o+qYzOe7d7H1Jh5zI36a07M1cZ0d+2peaVzxTR46f+kVAqktfLThh
VaG3eU4v+eK0gpPRET+RFwgbwUslnrxS1iMPip8JvEv2Q46V/ZIfyPeQ2+V7
yeVyHmR3OS8VL+dJflvOW8XLfZBT5L5UvNynyea+yVo+kLV8IbdIPqn9av0B
jH4ARj8Aox+A0Q/A6Adg9AMw+gEY/QCMfgBGPwCjH3B/Wj/g/Wr9gP5aPwCj
H4DRD8DoB8x3rR+gXvH+87zr3pqRcVXV51fRhsfbXPwtiEc/gF7SO7Mq54w6
39b7Y+5N7hjL+sf6m7+vGOnwH587FXs3sCOAPL9xU3acm+Jn5sF5PUNU/Mb5
10uPtPhzPfhDn9ixPDG0zo98/H7KsOQBpTfq7+T++dtYcuuG38edrvLl96B/
MV9D138cPkflR9lsz7tRR0bTH/FYb7xnaX36UrV+6PTOlwcrlV6wui1raNFo
8o6IklnZM3zoj/7IetryUfwyN5WPaXtcOuM3eNEf8VivP3Hf2UJftb4u+5qT
4UulJ1Re3uqX4EWOyd1jLHX0pj/6L+vnitm8/vpI8ty/7FrTjR70RzzWO/tz
fs3JuyPJF9ua7afMU/obzk3p4SEe5KDOndN+vWSgP/o7/D4LXrI8+wdVb5M+
v/djmMfL9Ec81stxzapsPuFOLgq98CTK043sWLXlfnm/K3ngzczXW/fo6Y/5
ge/lo90HotuGkxsCbpYkHXSkP+KxXrXFPu7K0+HklmGb/m44o/Ti2HXdnV87
krd5DMb0XXCiP+YT+E3Zn1GQ+YkDuT5v15TITx/Vwh/xWG9ZQu9i1zwHcvKx
xI7nC+1U/QytqQyb/qgWPO5014KglTr6Y/6BX0FW+6jUEQ/J9jVXJ5uNf9Af
8Vivx6sqN3P+Q7KhrPRw0sV/yPElwTMjz98iO2yKckn9pbcW/piv4Be+ots+
v+0G/V8VNsIf8Vgvbces2w0tN7n+8TsR0X3Xyskxohup91h1I/wxv8Gvr9r6
veQcOQ/6Ix7rLZbvI/enWb+P3C7nQx4u50N/zIfsD3Lf9J8g+WCCP+Kx3lq5
X67vJ/dLfZHkBzlJ8oPvP+ZP+J2XfCfvlHqgP+Kx3l7Jb/JWyW/yKakP8iWp
D/pjvoXfa1Lv5DR5D+iPeKxnJ/VN7pf6Jn8j7wO5UN4H+mN+5rwo7x25TN5D
+iOe7728b+Tx8r6RLfI+kpvkfaQ/5nPOs/Lek1ulH9Af8awved/Jy+V9J/dJ
fyA/22HtD/TH/A+/w9LvyHrph/RHPNbbLf2NvF36GzlQ+iM5RPqjyWaeoN8N
mR/IxTJfmGz6P9erl/5O1vo7OVjmA7I2H9Af/7/YzDtq/pR5iP6It5lXyNq8
QtbmHfI7Mu+QMa+CMa+CMa+CMa+CMa+CMa+CMa+CMa/yPrR5FYx5lfmrzavs
39q8yv1p8yoY8yr9tXkVjHmV56PNq+zP2rzKfqLNq/8CkEyeCw==
            "], {
             {GrayLevel[0.09], AbsoluteThickness[1.6], Opacity[0.06], 
              EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
                 "]], 
                PolygonBox[CompressedData["
1:eJwt1Pdvz0Ecx/E7oxqjGqOaWqVKqbYoLUpbRbVmEBEREUREhEZEYu89Wnv7
JwgxYoQYIUaIEWKEGCFGiBFiPF95v3945F73zefzubv33X3bTa0aM6dWCGE4
6uAe7mMC6mMF7mAAcvAQD9DQn7mBmxiPRDzHMyRhIj7gIyYjGedxDgkYi8/4
hCb+zCVcxjh/ZhmuoRRd8RM/0AxT8A3fPesb6/AOg9ANt3HL16I5rsELDEQe
VuERypCLJ3jqc9caz+Csz1X1WYILKEE23uKNr20SXuG1Z9XgKq54bbSmDfiC
weiOEziJ0dA+FMUQDtL2xSjsQBq/DaUt0Djkxkgjz0C11ka/grYnUskt0Io8
E83JKdGy3mlETor2bqrqSi5BR/I8HNDY9Ef6HLaprvQraXthi+ZJfwhtPvqT
i6O92wF1yQmYTk5BIP/zPA2ZGguzyW2QTm4bLc/SnpHz0J5chSxyJ6QHe6c3
uTDaWHM1J3JBtKx3Wutb0b6lGuxDD/ojaPsgh5wb7dv6ZiK5XrRaaM4VWhuy
yPO1T+TyaFk1OqSzEm1virAAR1QHdMZRLPRcjItY6melFMexGF38DG3CL5Rr
nmjJt3f6Xg/TOaV/2Mfqhwz6u2kLg93ZbPp7VZdga2xKf7vvlc5Mbfpbfa90
RhrQr/Gzoj39io1+FjWH0zgV7KzrTO7RXKONpTH+4K/vpe7gIhzztWpN+Ty7
32utM/QSa4PdNd3Ju1gZ7L9Ed+43NvvadabeY32wu6s7ch3Lg919/Qc9xupg
d1V3eJf2PVqtVJP/qo10KQ==
                 "]]}]}, {}, {}, {}, {}}], {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{500., 0.},
         DisplayFunction->Identity,
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{
            FormBox[
            "\"mol N \\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\)\"", 
             TraditionalForm], None}, {
            FormBox["\"Time (d)\"", TraditionalForm], None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{{{0, 
              FormBox["0", TraditionalForm]}, {
              NCache[
               Rational[1, 10000000], 1.*^-7], 
              FormBox[
              "\"1*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
               TraditionalForm]}, {
              NCache[
               Rational[1, 5000000], 2.*^-7], 
              FormBox[
              "\"2*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
               TraditionalForm]}, {
              NCache[
               Rational[3, 10000000], 3.*^-7], 
              FormBox[
              "\"3*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
               TraditionalForm]}}, {}}, {{{500, 
              FormBox["500", TraditionalForm]}, {550, 
              FormBox["550", TraditionalForm]}, {600, 
              FormBox["600", TraditionalForm]}, {650, 
              FormBox["650", TraditionalForm]}, {700, 
              FormBox["700", TraditionalForm]}, {750, 
              FormBox["750", TraditionalForm]}, {800, 
              FormBox["800", TraditionalForm]}, {850, 
              FormBox["850", TraditionalForm]}}, {}}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{60, 15}, {30, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotLabel->FormBox["\"f) Interstitial nitrogen\"", TraditionalForm],
         PlotRange->{{500, 850}, {0., 3.5138739425769267`*^-7}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}], {1366.5, -1758}, 
        ImageScaled[{0.5, 0}], {931, 586}]}, {InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[
             {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
H7s0Oj9nxO0yLcxG+eHBfTofiFrH/ki7TsKjAxPuuD6nZd5ejcgh4UmUQxOu
f1vryl0XctF8VHDWDlvvsuf3E3lofTotLkKfbxwoT7W4gdazBouacLzFpIV3
EvlofRdD0ut9z2azsdU3SbCnttzHbo+JT5G9RULAHz16/aG//72JSAHKd1s4
9Poja97qb9+QQ1pk1uPnz27yTu6+TQIve+Ii9lneI+OGO6h/tq5vxO7YKzpa
epeEg7W99HrSQNIiKeseCS5ysvT5j0Rk/5fAIhJeOcYY4fqe27Mu0a2YhHa2
Uhr2a/ELhjYlJIzaPhmj15cN1Z8NS0kI3VWqh+N3PUwiQfM+Ws++VvfHnmNq
vV2xjATt1IO52N5i6SNi5SRs2RBG57vOZ5/iJpB37PzXgL0tRGdb3wM0fwb+
e0A/zwNUKitIuG4fQu//JA6YTac8JMHt7Aq6/c/q2ndfeITGf2f+X3o+UnR5
aM1H66lTP1nYekLeKTqVJNy/OTCC65cxSF6cV0WCwImX27FnNkbaf0a2+yVa
iuPjXpi0ub4a5Z9lCbuxmxNyZHMek8BcNE6fl2wKKvrJqkH1WZrSQI+f41Xt
Dk9IuFowh15vCO5qLNavJcHGoJHez7mu7bq8+Cna75xwpvd7L6QHvX4iP3p6
jB6P2r9/WLQ+I4GSspyP35fQPUP7bh0J5hON++j89lhSKqoeebV7PPbxPPlR
twYS9h1/9hF7rfeGguUvSPhKGcXi+ly22x45oxHl57S79H71t8E+927k70p+
23E8jiw/tPvBS5TfTu28gl0jdlI9oQn1p+b299jqX33EfP4jYTezawWOL6+V
GtzfjPIXe/5Rev4p4z1d24LWb4+2htPzW1rKdfFWEm4NLKbbt5KdxxlEFg49
T+/3VriVOD1pI8Hyp0I+fT6277HhtXYSpMw76f3h6PqmpYxXJCz1oej2tF78
dsahDhLeiY6I0PuN6U89uq9Re7p9S6DXu/0TfJlONJ/f9qT3d9x6obQxZO5F
BTdc35Hb84JedpEwQ2RqlF5fXFE8fPMNqv+sBDpflfir64W+JaFSxMWKni8c
Nsk7d6P3JQ2vwR5Q3/9auQetZ9w0lLHvjbvFv35PgtmrO/TnZbvO+5b0ov2R
zGs2dmAl2yq2D82/7+c+wu7Njlnv+QGt/xXG6POcneFXpc36STiTqULvtws8
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
diaueI/GY0Kxp19sCLF6p9aBBb0U3FLuGQ53CCG4rMVzhPooKEzlmb3WCCH0
/oyQPR9QfzKu1lz8OJjIGYhxTR6k4J6Sq8Kzfi4huOzi0rBPKN+/6Tq15yaX
OHTE6Y3fEAXGslHXh89yifltG82tRyg4seKiu+0fDhFU3bVJahTth+Z0BYlO
s4nXkzXfppFf1NVGnnnIJtZvLsj/8o2C2H/7F6T7s4mh26Ty8+8UjPmfi5D7
xiKsU1fMCv6J+vuZ6qsizylCqTPk+NlfFPSObXerYVBE/8IR/sHfaD1advoS
pUUR3tH3/DT/ov0c9+tyzSgmofdCpm3xPwqCzl4JTNdlEkKzL2iJTKL1uLlV
u3gPSVxiEUOvpyj4b1mU6pLlJGFfec2kZpqCpa5Z7TYMBrFkUiSzQIAFNfbt
ng/yg4jBzSenE2aw4OjWHd02DYHEHd/nB1mCLHDbI/7OriuAOF+47r6HEAve
HtPWeP/qImEwemmBrTALRo47WTo98Cdmrpnw3C7CgttP3ZQyAi8QL07avdCY
yYLkhP+sMqT8iMvXK1YtmsWCiHJLnxRHX+JQnzJ3higLnh68L5pv7E0sU2H1
DiMvG4jYfO7UWWLo0EeDdjEWMA1i7s9a4EbcS9yVXDmbBe0qpWpNBRbEhfab
P2+Is2D3uZUbvQ3P8UF6nuUVCRYYXhnbKj8SzRc197rDmMOCWjlTrUV3YvlN
Ee0SbpIs4F8w/DBdH8uPr9t80nIuC/ZsZBe3N8Tyj8xMfWIwjwWF7JVl/yGv
NBRYukqKBbmH/HZWI39hHA+Sns+CipNuG24jF1fUdk4if0jbejcBOeD3qk2D
0iyY/BT+MAjZaGNkbPMCFlRfNbB3RJbwGv1aIcMCveZlbEBuuX1gT85CFkRK
z9+igJw0UpIbs4gF8Y4d/j9Q+Y6tWiwSIMuCX6GmJnXI6s6Bjs5yqHyl95OT
kL9d63lovpgFRlmL/F2RSYUc3xUKLOhxXd/6uy6Wv9NudstcRRakHFlk/hB5
bpzHuj/IGZ9+WwUiX527frBRmQWBHwREvj+L5TvviTcqU0HtTT25nYu8JvRP
euYSFmSt0xu2R64QrLLzW8aCdU/vyxQ/jeWzieUlx5azoHt4j/hh5N0BwfPN
VrBA/fGPhBnIneNmDUtUWZAjkhQCtbH8X4Odeg3qLLiTMl8rriaWX7nCILF4
NYrX+6r9y5CDj2WMp2mwIFo4bMWtx7H8hW9cCrzXos+XrpIurY7l67z8oayk
zYL3DKnMrMpY/h8t+bu/kFc/e/tkCXLl5W3bW3RYMM3N3ZLCj+XvsY9yCtmA
4nfYeXPoI1S/ftW8MV0WgKOAi1FFLD/hr732U4IFSxN3zjEpRe1/hPk4A1jw
8RZrOrkklr+8KscyYBv6e3ZQy9fiWP5d7g9fLUMWrN1hvzamKJZfLxX1INmE
BS9laoUr7sby/6lWGXmaseBalI9HRX4svzpsoM10LwtKpQ+fHb8Ryw/5PMdl
xT4WsBsvSK1Blim0D+00Z4HIxrVHEnJj+WsNfrwwskQecMhyyI7lO1iq2sgd
ZAHpZ3235mos/wkZebLaFdV3qbC3YUwsvzU52e/2STTeKj7L20fH8ntL8oJT
3Fgwo+bEvrO8WP7UyJNsX3cWiML61IzIWP4mu6n36p4s+KR2+7l4WCw/T+uM
fex5FpQcuewkw4rl398TeJL0Y4H0rfxGPSqWX+sS7udxgQWjxS4NJ5jo+ak5
cTsuov43c/2DCkYsX352T/PfIBZolWn3MgJi+ZG95ruduCzIjC/9dcI3lp8y
ecR+fzALXAOCQm76xPJvyHqcNAhB+SJI3GUczWS1e0ODZcNQf4+1WxvlFcuf
Lq96/DySBZ9LrSreeMbyJdtfNpdFsaB3w8XLG5EVvr19f53HAu0I7rdLZ2L5
uqp/pskYFnSN9R49cDqWfzZWW2/DFRYsWlXn/P0UGg8FsHtpHAtS3S0nHZGj
6vbaz41nwX6tL6Ytbqg8025+nxJYcLxF6vPDk7H8vlOZRakpqH4GKf6FLrH8
Me7dx2GpLNBtar6+CVngGr/5/FUWeFZMRT5yRuXp6Brdn84CMUGx4NYTsXwr
owVrZmahfHbPd/USJzR+Of2efchLZmt0Vh2P5XvWlhRVZrNgzNy91wk5bKed
3sUc1D+dhf/dPYbyUag6aZvLgsXfWiQPIWfV/328IY8FDXdmnBdFfrTn6u7R
GyyIun3J2NUxlt8QeYb3Ip8FP9UkMuSROxqh5cZNFnhUWO/9zyGW3z93/qKQ
Wyw49nHAMBR5zLzP/kQBC8JmzGAbIk/HFF3dfhuN98u/RQWQJVo4vcp3WHBl
nqPv6PxYvtwCm5WTyCtLXezEqqL5K63U3DrvsuBf7by3f9dH83Xift8qvccC
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
36P4mpvHaiDDrS0OF3tR/c5eityNrNQd2mv+gQPWAi+fBiN3EmoDfwc48Lrx
kNxv5F0d+3I/DqL6XDPrl67kEfc9z5/87xMHZq65snQtclxG7fD1YQ7oVMs4
OyJbCJ0Y3f+VA9l17q+rkauSI+7qjaL2v/lDrhNZc33ROdVvHLDT0P4wiix5
Qmj83xgHzsk2SShWofFdm/E7Z4IDpztyPc8gbz5aV37pJxpPCxorKeTcn6MX
A39xYE7o8tAryFw1mLL4wwHTZb8vlCFvD+sWnJrkgAz7yuRf5LtLZ9YMTnFg
92DXQ/FqlA8erOG0TKP2pnxU5JGnhgNm5c3gwqiGzGNdZA921rNYQS5UxTlM
mSC/UXgeGiTEhch3oc2WyOVm8hKWIlzgNK/XO4O86uP2FwYzuTAcv+TFReSE
ILeoVbO4UOlS/TkY2fd22bxpUS6IX1zVdhVZR8pW5oYEF861vJyqRb6Wx2i/
PIcLN528Pr9Enr89J54hyQWh8plxHcij5ybkrOZx4ZVkvtgn5KPiSl2EFBft
Rx++HEVuzDROUZ/PhcXW9sa/kG+2XlYSWIDKk3dyw8zHqL96VLwbQj4tL5Iv
gRwm8iG9TYYLZy9erJ2P/DtV/FjlQi6snufBkUV23aizLH8RF150B/UrIr9q
tP9wRZYL49n2H5Yim7hQ2aQcF9Z1FDBUkYun85xPLebCkbi1xauRlyf8p2ot
zwWTGzHUOuRL1hWKWgpc2NCWUaCNLCCTIy2hyIUVUpYBG5BPt8SIDSDnr3n9
aRPym5iA6SolLoRO9/7cjGxq7jKeosyFi139dVuR70taDJ9XQfG5aHVSH3nl
C733Fku4MLdNrtUAOTZc9dWapVyQzlISBfw+0/kvRJdxocfxgNA2/D7Ryeo+
5BzD/MfYb2oH7j9azoWhDYo7tuP3cZoLEldw4VRHZjj2fcOHWd4rubDJX5+H
vVIwN2mfKhcSZUb2YV+uvBStrsYFpT3FDfh5goxArsgqLqQfuyaA7anvGtCD
vEO/coRA7v5rce6BOhfiDypH4fLuKdd3jVvNBbK1pVcPudxP7chZDdQ/LMYH
tyCrbZK23LOGCy5z067qIseNT+5SXYvq/9/XGRuRhYsGCcF1XCj6ICalg3z2
XMuGt8hP5aXrcfy7NR+tvq/JhevZV7U08Pu+5i6J1eJCdMkSdzX8fPegObt0
UPknmcdVkHtOrOov2siFJ/svqEgi712+oIu3iQv6y9iSYsgVvVNNbrpciImq
qRFCTjjaWqGyhQtZ8xqYuP/NVOLf+4t84VkEewzZ+01ebvtWLuy1vLhjBHmf
HeNyhD4X5plOibxDrljkFuZigP5+Jn/yFbJ6uyW5neDCnlclt5rw8w6ou/8C
LlTYbFtXhfxoT5uhkxEXXorHb0xD1hCv3EwYo/KJPbaPQ06qu7FusQkXCoTi
7SLx+DMh5Zt2cOEK73a3P/IaWP19624uNFRXNxxATtFhXpO2QO87n+OM84XF
jQMLZxzggsGOhTpfkEWXrAz7guxtYXyrB9lbsuFsnRUXJnPVFZ4g7/60YBvD
DvXvg3fdIpD/XM19N+TABX/QcZmPfEfm4oEORy5Y3/6zTBDZOcLs6ZNjqL8v
zLr6DeW//y6MFaQ7ofiHsh+/RM611AuyduXCstNGnqHINrObFKrPoPIJtA1N
oHwswbwWfduTC1rdM9/1IVf/9BZOPcuFztrC9Cbktf1yI+e9UPxJISoPeWbl
8QdrzqP6R+t62yIX+fy0SwziwraVrPO3H6F8814p3jOSC87fSz9uQ/PH08Ai
Ym8Uyjeaf6NXIwcsNh1czePC144Dq2SQ+w/4bB6I5sKMFUvlB9H8dL+2oevw
ZfS+KIWaCOTDN/1UdidzQf6Q47aXaL7LPd+ctyIP1efhVXtDNF/qS3IrOmu4
cNhvw9JPaH4Oi/Mg1/zlgpz98cw8tF5o0zR8pLwxGGql5qoTaL3SZtqroewR
DCJyn2wN0HqpxfeMzKPcYMjJOLriThzK/0tr17r1BMOvL7GNf6N4xMFVqR+n
FoYAuy86sz4YxWP7MVkdixBYVlJ+xofkESWdo/7eoSFQ+vSxlow/mm85HjZW
T0JgMmh+zV0vVL8wt2YlgVBYdSZactQDzSfztILGN4aCsc5TYeGTPCI1pz/z
1LlQ0PVdKbocrYdvPTr+50teKPTEdxVPH0XjR/PYV/ueUAh71s7ffQitL4r3
HnGWD4OYsRVW1215xM/7wlNBFmEQoD3QHmPFI3bmT87wORAGikean7KRk1In
RE5ZhkHzEUb5eWQ9anCOjXUYqMscTDiMTO1+rrjOPgxMf/56twpZojtW/51j
GLzasnL5Y0v8//MsCyTOhsGt9yoVv9H63WtcnrnhXBjsvmfj/hm5ZmABZ7VX
GGzTfKH8Htnl+czIRT5hYPwpk/UM+eaVoZSvfmEg49q6Kx55k9q9ijQyDBpb
aiU2Iocszq+8wgyDrsBfk6uQOyWyasKpMCAFVo8qIgd8u/L8PDsMjgi31Isg
V5dfeLMvJAxsUz6KtlvwCOlb53qMQ8Og9MyM1fXITmmnPmwNC4OvPd5mj5Bn
sQ+PqEaEgV/KDe51ZFtf61HFyDDQ2qp+Own5huu+H/+bcF+Xwwfuljd9QP7v
KI8fnP1dDoeiW82agXwfX8c//4F8lj3POsuBfAC/6kD2
               "]]},
             Annotation[#, "Charting`Private`Tag$129103#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1:eJwkm3lcTN8bxysiiTZSWoVKkkoRSk8pKZRCkqUFLYQQojT33plpX2YqKqK0
qFBkKRG36KtF0Y4kKdGuUpGU37nn95fX+9XMnXOe8yyf5znXIrcT9oeFBAQE
3gkLCDD/eh6+OFMAWFDVm39PsjXGxOThr0cFpixYJmrWw7DMtFOHTmxkQeGn
E0ulEPfZ9UmpW7DgkkmVM8MvU9xLWjexYPnk98sMX/nRduLyZhaM1jqWM+yz
Ya+SjTULzFwLhxi2jGysEt7KgsmV2RLSiJVabP2fbWMBcb1KleFRzcplZ2xZ
4N5etZThqvPm77XsWOAt4LiA4dTy50Ff7Vmw/ZXKKPO88wvWGiTtZEFxaWsR
w9vdH3TscGDBBisbb4bVHq2Ime3Ign2zvAQZnpyWBS/3sKAja00Ss78Ge9Uf
F/ai51Xy7Rm+fSPpmt5+Fki+ebuIYWpQZmvPAbRfK9uZDDua8P/ccGFBhcBp
AYZXRs3O3uPGguufU0UZnvGJu1vyEAtCfm5ZzHDLcoEZFYdZsPBwmyXDDy5c
eEh4sIB38t0ZhsMqRtwMvVhw5lDOLYZdZU9IDh5B9uJ3dDBs6NFNZ3qzQHib
gDKz/rn5B487H2eBTFfUHoY7p7cqLPBhQXWmMp/hoh2Or9+cZMHaYsuXDMek
1p0POs2C3m03+hn2GtqqseEMOk/b13MYewKUNY2eRftL8VrE8IJoU26OHwt2
Dy1RY3jg09NVhy+wIO3FLTmGS7VWtysEsKDyQM4487yr/vd4DRdZkFvfgX/v
VKWmSQSLBff7Zp1leLNcRv9GkgU5Wm1zGFb2VE6aoFjAFYzJYPY3lp9o/YDD
Ahv5hXsYrhaeN34kiAVKr98sZTh9Z1SmaggLri2YM4vhC2kiDs2hLEhZvQbb
326Ymh4TzoJ7QQ9FGNYwnbxvFcmC2JAhZYanos+5CkazoPG980aGG1uHxAt5
LHBddtaH4TsrvJ/7xLBAef29dIbZAd+8NeLQ+byL+sSw02sX+bZLLGBVxssy
69dZ+LEiPp4FmR937WB4ptcuP9tEFpwqdwxnuLXgrdrMqyzIMzZ4zvDDGdaN
z5OQ/9VyuhkO31XKPnudBfv/dooy9nRL36CnncICt3l/lRk2/Pm4rfMGsqfF
CWx/cbNV0dfSWDAc0SfP8DdejvGuDBaszls6hc/7s3qfWCYLnhjXVjIcq516
pTSLBd/8b7EYPnJRwSrgFguMj51cyDBUXf616g4LJrpP3GX2t0Be8mZvDguy
wuRcGA5sdtpefpcF6uKlagx/TUz/k56H7CUzhf1/y56BdPIBC17uOIXtf1/W
0PbAIxaEX6kTY1j2PTm+roAFcxreLWOYFf86bUEh8tcx050Mf3OYbzPyhAX2
4+9CGN4q4/y7pogFBW89SnF8NGal5jxH39/7ahqz3oWXhreGFbPA4+DbjQwT
O41+ub9A8R55mGT4u3TQjY2lLIiwP1XIsE392y0qr1hwaKSzC9s/Rm7sbxkL
Hp0tEGPsJ29/MOVDBQvOxn3F/k5J5ljnv2bBQP5JnG+6asZGYqpZwOnzmsew
LQ+ST7xlAf9zay/zvHzbMKuttSywru7KYlhBvOGnRj0LMgJubmaY/UbxunAj
C5q002qY/fREemxub0Lf31x7kuHt2/KGn79ngYLQY12GC8Qmkq42o/ygN47t
p1RlbunXwoJ/zcbYvpzwqKGdrSxwXLQa+3ev9furum0smG+WiPOTvajqprnt
LPgestSK4ccVRwd7OlhwZVOKP8PKoY+ulHWieChrfMRw30yrH0Q3ivfRUn1m
vTvKYhL396L4ebv2NMNPglo2rutH/vrw8x2GVTapDcj8YAG9JaOV4WBhn4Sf
gyyYIUgI4/xQWmhWM8yCBeNHlRjeyZnWf2eEBQdmeWP/fbpxW3zoGAvCckMX
Mqw6Ld7U/TcLjk1r/MU8L/RFW6/ZHxa8Kzj0lOFBUvOy8l9UD2Y6uDHsYOoL
fydZUO4yp49Z/zOB5z3v/7HgZskpLsNSbezKZgECVs44sIHh/+gs5QpBAiq2
n5Bm2C+52rdAiIB/Q9sEGdZiDVdkTCPg8YGs6Qx/PrBAOW46ATw1/YUMx2ww
8qWECdDoycHP26TkWuEzg4BQuw/HGR6f5Co5zyQgSojMxPnj063T20QIcI0/
28mwy7O35etnEfArLgbXS+lrI4qaogRcdX14iOFXAXKnZWej561/kczwhX0b
ymeIERC5Mrue4RVGBxVHEeeK759kuE0+5FTHHALavN7j/Bs3caesdi4BLwMV
sH0tP9YqFIsTcM5QF+ePP0/GTuZKEHBg0VIhhnOvyJclSRIwfe+cKuZ5rhdA
IVwK8SXhCwzPIzRuekkT8KjwjiReH1dCZ/M8AvKanfD+/MJ/F6rNJ+BuWgTO
z5r8to3CMgRU6fNwfm65XF7dgVjeKxv7Z1TSvd0vFhCwKnIR9l9ITfiSIkvA
VkdLnL+HM4mjLDkCnDqPY/9Nz/Ec3b+QAOM7QxYMOzzYzjKSJ6D7grYvwyKF
hrPkFQhIPB6azfDT5yqx44il+o/i+ni8VETxvSIB36+Z4/qoUjl4M1+JgMKD
wU4M1719r3NJmYBLu3JiGOY0Fj85rULAxsf6/zG8+mOWuf0iAm7/SvnBcFcb
742OKlp/ygVxxn5Xvvk5ii8mQN/RFuuTrX0u7f2IPT/k4XwxNbTZu2oJOv+e
tVif3PulM3ZrKQGSjpwR5nluk7JEqBra/w897N/zpwmKeqoTYHe2z5PhcpHu
2E0aBKRc+DqB69vcWsWlywi45jR5GfvrvMLMaZoErHmpZsNwq9wN3XbEAQtT
lBjmKYc+LV5OQKZxrjDDZktPWiRrEWBw4Sq2/4jmnrcXVyB/DCrA+eWmjume
fdoEmF7crY71zOplHetWIn+oa9zGsKiR5DE5HQJEbGMuMlxkOj72C7Gy2PAD
bG/LL0STLgEuns4DDKtsqxB9pEfAyWnWmtje9nlxsasIqMlXO4zt7ZiodEqf
gKXRJ5IYXnOAzNpugM7zv7RqhnsOeumtXI3Oo9ByjOEkL7uiOWuQP3d9lWbs
aXNi7aY+xFt6Zi1hWODMoppKQwKmPKwx378wyyl7LQFnZUykGD5EDHUEryOg
9C4X52uZoA/H3Ncj+/QV52B7h5f8MjdC+wlMcMDxx88mFxsTkLSm6hu2dzx/
ttAGAli3tgdjeyedv9SGWLLcDesHfqqrMm1CwNC4mSzD5llW2deAgCvKa6Zh
PZOjuyrAlABOcBjON1kP5J45mRFg1BUpgfVEoaDl2o0EkHviVzAsRnfXLDAn
4MI2IQeGn5fWOo0hbghdiX/fp7Lwa4MFAWKLuM8ZVq25cfzBJuSvR4+PY/3a
GPqbb0kAIbjPgNlP0MeTlM9mAv7cf3mCYcMve8RsrQg4TancZLj3m+nlFdYE
xF8bbmRYdCDtxcwtBHg8kvnLsMao8I8viFMajbE/W/71kC/aitZ3RB77u/u0
SsvL29D3ozwWM8wR1fL1sSFgvvBnHC9pklEp1rYof63aiOvvC9nBqiXbCWhW
cLqF85my/fgU4n97BrB++qf2cOkHOwKezBHF9lfSlrF/YE+AbY0z1gdGBn6B
kTsIeNhiiPPDXqPmWx47CXgtNyWH42Wj0TvTXQTMuaCI83mC9fVpCg4EWI3O
wvYvsBPQGUO8m1o/l+EmR7d9NbtRPEisxPpk1Lk05JYjAeFsd1uG53moPeLs
IWA0yzOQYb3jIV8OOBHgs7oE+7/dmZ45a/ciLhHox+cTsHWd9D6UzwuL1Jn9
RLFz3fsRH3SLdmU4J0witmw/ATerFyQwXMU/Rd84gPynYRz3Rz0JDb3+zgR8
lW7F/dGslNWyDi4EqLafxP2RRmaCuY4rAfbbPHD+2ZT7x0fUjQAT6TP4PA4/
2nftK+Luqw74vDhFzyueHyTgxs/XuD9KfakylnCIgOX/JWI9WlJJqZ4+TMDA
jlDsH221X222uSP7XT41g+Gp95v81T3Q+UbEpzD7U2zLyhT0JOBwtyD2T6Pv
og0fEXfKyS3B/jzgLZDvhfaTYIXz//nRN1q8IwSEdE3H+Sfhr86eI0dRfQ0v
wX/PnxbLNfcmIO7fH6zPG0VH85SOofqYr4vja0Ryd+tvxD8lek/g+i5XKFp/
HK1vd14aw7oq8mtyThCw/4F0C9ZT6hcPBvug+NK6KcOs/7j252jXkwS8vyZo
x3CkgWnR+lMELHn4MoThO0ZpXfNPE1D9NQrn49cbhecPIt7gJfodn4e1h2ml
L/J/w3YRxp4i9hXH0s8Q0CpYhvWN+p7lVwLPEvBi6XFcfze5RL5yPEeAQB5f
Eecfjx/Den4E7HIYFGSYfdxOec55ArI9t9Xi8zjzYMt3xLqNPqEMFwfM9yu5
QEC6oroGw5/Z59Kv+qN86pz0FPcvYR9qzgSgfCG03YthhZj1k7YXUby+PqnD
8PrEa8s0AwnwKvLG/u2U8m/XdBaKj7Z72P5+ma5UK2LWpgc4PuJzX+Y+Jgj4
/at/AX7+sTl7MkhkH3eZ9QwfWrF7WgyF6n3VrCMMv+5LyQlkExC7J+0Gjoc7
PbuPcghImyptxed7VF/IkUvADs/dSjieNQPvmAch/xux2s+we0+Zg24wiqfs
mP/7f7akoFIIAXLa2jj/r/Lae1s0lADtZ8q/8fxAI2PXL8TPVE7K4HzfNfCv
I4yA/Jt62N89Mg1v1YQTkCzrj/X7G3dq57MI9Hv3PfB56atVTWVHEkAvVHiH
+9PO+dmXowiQcHwRxrBQhvMOdjTy/4owFYY9D2VPnuARUMI1ymH283bxz8x9
fAJO6bKw3lndYWRvFYPsnfBLleGk1KC/BrGoPlftncHwNLeam6pxKD83eWJ7
H1m00E78EgHrs9vnMFzTdnBiAvGwYtxyhtek5GR0XSbgW6cNjqfrzr9sG+MJ
8GX3hjE8Xdn0T0kCAUfB6hXDR1vD0nMTCfiwxEYY19drDTZXrxDQ1f/NHOf3
/UrjwVeRHpw+k2I4WcEzzTeJgItnsnA/NKMlb5vrNQJkv73G+dj76sSvbdcJ
OBPph/uhOieL1HXJKJ9pFmF7rl0YvVU9hYDeP7ewvVM+vB+TvkFA333n+QzP
SFS9IZBKQO3pCTxPOObovaUf8dmXGbhfaFiQP/ohDfkvO8KG4XXv/iW/Skd6
kXZ9x+znxmUr6wcZBKiraJ/D+s4hdiT5Joq/zIsGWF/M/3Q9IhPlk5vTxHF+
aFCzOp+F9PyRC9i+RnE+Pw9nIz2nnYbtn7rjyTX7WwSIz9+E9dAs6embTW4T
wFXSM8f5uW7b8PI7KJ8pG+N5SxM/Pkk2Bz2/YGMuw8Z2XzYJ5xKgYrUM9xfp
EsuHhhC79b9bjutjje/V1rsonx2HIwyfjH5u8foe0ptGTukMv7cRGSzIQ/rF
fTH2tw1z7a+k30f2iUj5x3BG9VVz/gO0v9YW3P+IRXYOXHxIQLloD7bvqa0r
E488QvrGqA3njw+zz2/cnY/OY04r/j68ftG/sYCAd4RIBcM3w8QSdB4TsPN3
GJ6vzLF2MFMsJOCjfzr2D99ZKX2znhAgHXg1gdlPc3n35THEEmkHtzBsGrLK
tOMpin//HNzv3DwGKsVFBBSFzcL5QWzHtn9Jz5AeEniM7X3S0Kn1/HMCvhyR
/X/9VPR45kCjfiQ6GtdPo2m+SauKCTjkGbwdn28X4S9RQoCS3AmC4RlvIp36
ESv2Pcln2PvBlbWVLwiwtv46yHBdQqZs5ksCfjz00sL6MPDhL3YpAWb0G3es
Bw+WNLn8h+r1zKRrOH6t3jwyfkVAo57zGxy/2h/jFpYRsLf9FtaP1dJdp38h
3pcng/t3vfER+4Zy1O9pmWC9mNAqqJdXgfRH1X+Yp17OlYyqJGDt4HasNw9m
yw8eeY3qU3049u/yKI23llVIT0eq5TGs7WuQu6QafV+4aS/DcXvMIgXfIP1c
64H1wPgGW+9WxFUDbREMH1iyb8vTt6hfWXALz/9KZ3lpJtQQUCcqLY/7qR9n
Zp2pJWDynQ+2f3QD1WVXh/y9ThHrl5HC6DLtegJmRp//f35PTro5uwH1nx+6
sP2LOdncLsSZeY3Y/kuP5B/6rxHpPbO72P5hti83pjahfNLSje0/qF+jynpH
QMvAFLa/w8JPgvveo35G8Bi2/9N/3W2GH1C85BRg+6t0jtHzm1H9T/DA9g+q
nJY8jLj1qCi2f99dicC3HwkoqNHD9re7pLj/TgvyLw8/bM/8C5pGoZ/Q+krP
Yb2o4LJG3r2VAP/DdZgpC/M/Zp8JiM7Vxvr9u6bdB+U2AtQ61vQxz9sqceDx
X8Qnla/fZfj+6JH4D1+QHrKXwf2d7MdzZ/PbCYj4yO9l9nOxmLMrtgPVr0mH
cIbbM/j6Pl9RflT13MTw5vDr0ts6CWBLz8f+n+tze3jZN6RPOu9j/S7t8Lh2
xncUnyP/75/81v93rwPx9ZaV2P6tKnXRxV0EBJ6sx/Y3n/H5+LVuFN9PBrH9
s3t7t13oQXq8ewzbf27tb63dvah/2+1UwLBvvrCYfh/qPy7EDeH4vCrVK9FP
gPmXxSuY/ZiQypX9iENWRHgwnO6ulV05gPTebIfrOB9tXRuS+YOAp8vF3zLs
o7vJgzNIwMgGazxPaZTZscl1iICV/dex/6/767x0wzCqlzXZ2N9TvnhPl/+J
4vOEGM4/NixXV9ERAt6Gi0syPKHg8HwcceDZ0a/M87KeWMt3j6L8kVGNz9/B
0cTv/RjyV71cQ4anj61qLPtFgE3Oz2JmP3mxGnoFv5EeFYh2x/6vqxh9cxzV
e4VkTZxf3kr2XfqD9FnxUzwPeOI9w4o7gfrhCTa2t4foRIbvX1SfF1yfjfV4
1g+hQ5PInxMLcL/6wuKr844pAhat5NoxfKLjfZHZPwL6b73A8yAFslpOT4CE
h7/0Shg+V5RfLyFEQv9QMzDrXeJ0W0dgGgmuV54G4nr6KznyB2L+mEoBw6xL
cT2t00noahn8xrDWqlDLN8IkTAnJzmbs01xzMf3ZDBIWj4SqMBx8/JRgzkwS
emeaYvvqi3kcSBIhodpxA/b/9uy9T8NnkfDqSWgP8zye5XZZf1ESpt/XzWTY
uNP8zJHZJNzw2rIJ609qbd0eMRKEpr2vxvpKRXul1RwS9vgZYD286blqhOFc
EmJY1EqGf+5d0K0uTsK7+l3YXinjszctkCBhwH/bPwnmfOMFUKEkwbR4Ltbf
f/VH/40iHlPZhPVMdl33vk4pEqS3ZlrjfODTWtggTUKedD/u/6fPrZcpnUeC
9qEPjxm+f7vs9IP5JASsM/jNsLNVUU2qDAkeV2qwP4h9v7ciZgEJwxzqHJ4n
cjLCSFkSSgY0cP70VL3y3UeOBCI/qx3PQ4qjzF0Wou9f7cf67cV+9g1beRLu
r+rB9vWZODe1QYEEo454dXxflOi9V1uRhDl1Y3ge9nq162NFJRKEO+bgfsev
Ydf8OcokcG71PGJY7ZT1qb+I1Q7fwPclDeImb3tVSLj3MvMLs34yZ5XWx0Uk
zNTowPvV3qIRWqlKwkmR8LUMt3QpfCtcjH5fxkAS59MgyY3ZS0gotA3E+XnN
khkpCUtJ2DgmiufjX0v+/A1WI8GJE4T1SIzzjz3n1NH+09KwHoHJjnx3DRLy
FyucZbj/yntph2UkLPxxD8/jrxhW+1hoos8LaeL5yuamkmr95SQUH3TQZtY/
ejpfc4kWCQXzxY7hfkLydrD0ChK2SGpgf9p+N/mrkDYJrHVRHxie3BpnOox4
/e5luB9Z0Cdk+mklCRXy8ViP6IafhHIdEsoSqnE+3qLZZvJAl4RZi0axfQ9X
2Jhc1yOBsjL6g+PD89mG0FVo/W3vShhOnKm1wVefBItvQscZfnDzirGzAQnW
UXZ/mfVXW8wytl5NwrdVQ3yGv389Z2SwhoQhvSqcjwU539arGJIguiwD9yPy
i3etn72WhJFAC2xfgxcv140hjnW+iPODraveui/r0HpzF0sx7CVwY23VehJ8
BWRWMcxOFl9bYERCeLQhvs+4tiHQMNWYBDmDs3ieVvCpb03kBhL2OxfXMVwb
sHeNnwkJP0TEpfB8RL5y9UFA8XzXBfePwk8NV9uYkqC37Ukkw8pOmQZrzUi4
tkW9lOG14/MNlmwkYQfr//ebOxI4+uLmJEgohuL4P7bm56o/iGPyHuJ+MbjJ
dVWnBYpPWVcNhm+cqdGr2USC+NlCrK+fzjPRe2pJgrLmDzy/anyQo3tzMwmS
VWvxfcMPewVdvhUJK1XeWeJ5wXCYToA1CYLft9Uy+1nMH1/psYWEW+eW4/mp
sY7nSvutJDxzqNNnePfbJm3jbSQILBfB86iTxy20NWxI2O2WKMRw+JyHK6Rt
ScjW2IPzc8Yd1RVTiL8cWITntfQWvlb3dhI6+XX4/D70/FveYEdC5tAOrOd/
hh5fTtuTAJtjsT/PWfZJ89YOEiYHOVhfq5dv0by0k4Skt4uxvjb1eLKM2EWC
j+VJPA/dO2PZsqMOyL56Z24wfCYjXsNhN8oPH4zxfDzafIaGqSMJft2fsT9m
d/iqa+0hYfWxs9h+L6kOtQVOKF+9VMX549MiezWhvSScviQmy/Cv4uKl/Yhl
al3x9yVdVi59v4+EtGsO+DyX/7u25OV+ErJ2LsX3IRbXxZbkHiBh3fm50xl2
NvZfnOhMwoLMOuxP51u6VTkuyD631+L7l1h/R9UTriRccR3B/pyzsGyRkxsJ
g/6vcT4uKzRYZHGQhMsnoyYZ/uKYrqJziATD09JYX0z8klKRP0zCebc12gzP
jyeVZ7ijeCj/5MTwytWDSkOIrd8O8hi2ajyg1OJBgpm+K64XF6WNFO97ofN+
Y7yNWe/l98fsIo+QMO/T3SCGc68lcz2PovPdcwTPP8rcags3epPw03E2vp9s
U582oHQM+dN/Bvh+WOq+u0PjcRI+xlSuZNjcqPJ5uA8JiR+T8Xxqv+DfYfeT
JChl3sH5/OyrFepmp0g4EuGH9UJUuPNexdMkNKeWbWA4czs/+jfig6YC+H6s
eP7Ll/W+JNhtKjjP8PvmkV+5Z9B5H7E2ZngoWU0r7CwJdP9CPG8VPezocvgc
il+9aJxvF2uGxYEfymePpLC/Gv14Wi5/noRUURms73Y97P87hti+bq4h7i/P
K+vWXSAhJ/8czg/BG+wO5/gj/z1Yg+2ZMo2dGBKA8h95DffftZHfBE0CSWg/
WYzrW4+97OqFLKQnLA19cD8ia31kFLFWsGcaw/Kf/K/XEKheHB7A+kw/Nafu
NkmC58DRn3geoiW53o2N8qHJAPbXhHzfNFku8venznj+ked/891PxKenNb9m
uBLez34bRAI7OADPr9qFReFWMAmjIaJYr09UrvflhqB6tybuGdZLvGNZLqGo
nof3Y/2ltSu5ZX0YCfuuXsL6y2JhrcSCcHQeJX34vuDAZyGLYcTi/o5jjD+e
S9c/Xx2B9I3LxnGGeV7uOVmRqN6rKOL7g2zthC/sKBIO+DtpYT32s2K+czQJ
yWvP7Gb44+MJq3U8Eraq9+F5xsjFFYHz+Wj/czbi+92lIvxvr2NIWHL/MfaH
DdUvFmbGkmD19Be+j3KIGbGh4pA+sNj9gOETu9XY+y+RoJBzupPhEAXHAsPL
JGiqDczF+fNLaK90PFpPvvcKhp/cfKr8A/Gg9pUNDNcf7d9RmUBCgpoaMNyn
oxySkUjCuZ+l2J+Fx7YXEVdQ/c1YifWd0lNqcO9VVP+nFtcwv7eaeLhkTRIJ
HScOBTBsa/HNUeoayjdxwXOxnhGVjexHrPzK9TazP+KtVUn5dRJ0B0UOMpwY
5z+aloz+TrToYf20J2cZK4WEtzNNsT9Lv3v10fsGiueyUpyPfXe2RTqlkjDx
ZYcCww214yab09B+0++uwfXQVnrYIB2t1y7FmeHLVVrpizNQfZEbxf47ZrXJ
QfImCV5SnHKGH5uff9KXSULPktfGzHrlXsR4N2eREBZid4bhCyZ3lMqzUT6/
lovvBz4W/Vfz6BYJR92acX9ntO4zlXYb1StWPdav1wp+6/PvkBC0MRn3G1P6
Ut8Dc0g4E2c1zPCB+8sTvXNJkO39iuch9EqLLU53kT61DMvA/WTOgUnLeySs
0tzjyDCh6XfXII+EN8HncP/8JZPvuvg+CQ/IU/j+2mzpbWnJByQ0NHTg+Vla
aul/U4g3mKz7w/jndJXWc30PkX3rlDsYPnzt17LmRySoPrLA/GqhZEtZPgmf
FQ79Ylg9QTPqUQEJ5qbrsH1D5ptD2mMS5HdG4fu1rpj9w7xCZJ9zK3D/aCVx
Lj3wCQk3H/a+YfhWJM/B+ynKD8NpeN4sOvuWiFMRCSE9a/D7UEdDXj6xfIbO
dzEP77dK+JO3wXMSlndexf3ECvaY0mIa/b62Hb6vjRKQqJUoRvk9585WfJ9+
cRl7CrF8Yd5R/P7BhJlBXwnSX6ZHzuP7Rb993z+8IKG06tsphiXGziSWvUT+
c3TDLoZPno7e8qgU8d0oPE+qG8yaTP2PhPK0CXzfsOr4i7u8V0ivRibsw/OL
3o+ugWUkOM6uncnwiOeotHc5yl99JN7vrm9zX+2pICEj3gnPR/MPavhZViJ9
yZHE82CZL6aaBq/R91ceuon7rQN7W1SrSGiSWPAE5/OPvlES1UgPxI2+Z3jt
niiYQjx7bt0/rHebMod735Bw6j4X64E/O0rSP7xF8R4xiP1jb22zQ1kN0nun
xjkMF9mMiDyqRfVJKArPGxWq5jxNrSOhOzoV329ftFI/xqsn4d9iPVyPWl+B
cmADqm/HNmD/NTF3qj3aSEJk0dsvDKeUnGbvaSIhemQE3wcLmkQaWL5D/UHw
y1iG3Ypuftd/j/Tn0d34/Y6Xa4sTVT+Q4JKp2cWsf0nBhy0SzagfcQzG9uDo
/5ycRKxWFYbnjZ15Yvd6P5LwSeEbrjfmu7ovV7SgevGoCsdv+u//LmZ+QvuL
Dz2G+62k1EPcVpRvLQLw/d8hE9aWg5+RvufOwvmltH2vnmkbCUX7rzbi+hdk
KKf8BfnX3BtYn7RXDX1rbkf1qasV37+a+bypftyB6vUpcbyfG9K3H17+SkId
N/0JwwIFwVd9O0lYJK/ezLCL0yHK/hsJZ42W4vvw4knw0vlOQu6ULo535RuK
2+d2ofPx78R/DzT/s7oPsXxFSxO29/cmxcpuFC+/CrNxfg9/MD2rB9l/xhI8
T7qmzevl9pIQoSQlyvDfWu+6g31ofXpD+P2UfWesCk37kf6ZNnyB4SJZtRTl
ARIMIp3xvFyhSCh4ErGoVhi+Dwxw/nzs4w+kpy6VYf4oVLSzcJAEqbpT+H2j
dTcT1scPkXDdoA+/v3HF6ozqmWFk3z2JMQz/6bObteMn0hvzO4sYduJpD+qM
IPv5meB50pNVs9/NHSXhRamiPM6f774/60OseeiPFe43L5SmV46R4P5tJ86n
7xVvhGf9Qvnnd94Vhg1LLp4K+o2et+8qni/EH3Lac2ichCddyXieOzZzDZj9
IcHt/A6cbx1uS6urTJCgP2iD36fLtxmcM4U4dLkOzs8yw1UjH/8ivSRwxRfr
rUvZHwsnUX+4Sh/rgUbDoBfxU6hfcaPqmfXrt7hln/mH/LclCdeHOJYJb4cA
BayntYdxfVZVOKcrSMG/8WN4frXz1e/94kIUvBp8id8HeOjVaN6P+Ljt8r24
Xs25v/z1NAoezBfE/eupe1FS2dMpKIjIvMpw3Y6j40HCFNhBUAXDer8s2w7N
oGDn71mTDPOvLCkzm0nBWF76Kma9g8aCuSoiFKglVuP5+vYvn+KmEP8WFExh
+B7niX/LLAok3YpxPZbQiHd7IkrBfOsYrN99Xp+2SphNgbazEH4/7u3x7Tpn
xdD+dt7A9V1basWCnXMoePx1+mqcbx/NmtKdS8G112XLcb51/PZVXJyCJDoU
6wmbvy9e9yM+evTHR6yXk5Pvv5agIEerlMfwnI0BidmSFHxihWI96P3NkQiW
osBjpg2+j68KNfA4LE3B5Oz9WN8eqm8/LzufAkMdLp6//lXgRbyWoUD/ungD
w+Ul3+ZnLKCgvOI4ngfGuRsnB8pSsJFnNR/H4+w4DUc5CkIeGOD6veJeT57u
QgoullTjePqz03T9bHkKZszNi2b41Xh86VfEcjlsPP+IuT6w7bkCBcXeA/i+
/8BGi3fxihSsf3t9gGHNrqsuJ5UomCdsid83GosY7rZWRr///Rq+f3iha3V6
iQoFu4YOYP0a1ZT8dxJx4nprHO9O/mPcd4sosDmzBPunmso28TxVCjpb810Y
Hi5NSwhbjOy9fAWuL7TXn0WHliD7HX2B54URc+1uGy+l4GrBajwfcHyQqb9A
jYLmy/9w/lziOPVsEHEeN96b4cG/Oy0r1SlQH7h4CueHG7dr0jTQ+lXX4Plf
yCYhp4vLKBDetTUV+3OvY4eDJgW6l7eUMazCu+uts5yCQ5Vl2N59+jPGZmlR
MO2mI35/6PGHfawOxIKZV3D/xAl8IPJsBQX9c1difWq3WDTmsjaKl5anqQwr
lbvI+6ykQLm8F/ePPd4F6VY6FIitPY7fl8uXnKu9WJeCE+a/8Dybyj9U8Bex
QIYJtr/N3qfQpEfB/UfT2xheKCBVeXcVBd+PihQz/C3dc0eoPgWX7SQjGL5v
Rbe4GVAQy+oxxfl3YL670WoKngyTX5n9WMd6/5i/hgKH57vw+80yhi/9fiC2
/imG7dfRIidUYUjBdGl5PD+9R/qEp66lgH/p92acT9XK5gWsQ+vtUMV/3/xa
8fqu9RScslXwwP2Fj6/6SiMK0iW88fsZbfNe3xMxRv5sdP0+w3cKF61rR+xO
b8TvZ5lPe7v1kgkFg5fM8X2gRNbSpuNAwaxXH9gMt2wNcN5sivxnYlc+w1lD
dV2LzChwFXTrwP3/5WWnJhAvcbyN54Nm64mJho0UvF7xFc+r5rY1cXLN0fP2
vNTD81nOirkhFhRo7Ji+iuGbyzjxrpsosND7//sTp940q6y3pCAg7R5+f3bD
ad1b8zajeOnMxvVfVDZk1QBirQqjkww3FbUWlVmh/acp4/vtHjnF0gfWFBzc
/Bzff0+d3fs6eQsFd/Rl8HxUqiGxLnwrBS+ofqyH1HTffzi3jYILiyWzcD2K
kvly0IaCxoad+PM2vTu7bG0paJCNxfnAbXPsj/XbKdihlYPzybmM2jF1O5RP
JsOWML8fISQxJW1Pgd5SeXusX5xthAV2UCDxwR6/7/uwKEKsD7HP9xW4/pbL
vZZ+v5OCv7dzsT5qOTtLvnQXBZtntmI9OlhvqXrPAeXjXa/x+2rTdYOWJe1G
8esRgeNdNqpUJ8SRApdzxtg/tXqFDH33UHBERfAxw7DZFGkGFA+7BfwY3pnB
2rR1LwU1WfGKuD8Ser7NcB8F8uvHX/+/Xv/duWQ/BapqeZcY5hWt2ydxANWL
Xyw8P0qXO3/wL+IfcitwvS48W3Cky5mCL9VBuN68qR892eBCwTklt0iG23X0
zxe7onz14QqeN41FniLuuKH9cKSb8byg915wwkFkT8dHs3C8bv4RxTlEgYKu
z3qG9TJWXPY5TMGC8HX4/wtsEvK+ts+dAqlzkok4vznfSt/sQcEv/m/8/szx
oq7b+p4UDE2MY71Eyak/UPFC/mSrhvXl5bOHn4gdoeB2Qhyep9yqTyv5jdh+
qxvOl8912su/HkXrMXmA30eri1SpqfGm4OO1PPz733oOvCs6RkFZe6QE7u8t
r7VmHacgOGMZ1kcSGR87406g+C76he21RGhhP+GD8k/iOax3DJ0dR7xPovq5
+hi+b9xadHnC8RQFxkfScD13kWsUsjhNwe53vbg/9T0rLarrSwG3WwnrzZB6
O0nFM6j+V8g/ZDhJhyc76yzKv7vKv+N8EflGeRSxj4wkzpelPWLqX85R8GhN
N36f7r3lFu1qPwroQGucr/rSQw0Kz6N8a2qA/3+GgFC5UcYFlI/338PxPc95
hjnfn4JA7QpcbzSKzLdcDKAgMzgWz5+M5dj2XheRv2ctw+/L258t2bMrEMWr
/h3cb7rX/3MxZaF8ttwM598LOhs8VxAUpH2Wxf16VGTACTmSAt82Nn5/P7Xn
yVlhCuWb/yxxPci3HL84hDjD/TzWR5Xpa7if2Ki+Wn/E/z+gVfBsRAWHApG6
1VgvDXHOlWdwkV7QisLv40wXOT+dCqLg5vAQnl8tCL8AB4LR/t41xjKsOTcg
YF0IBW3p97E9jfkXH8uEUsBZMwP75/Z5rJFhxE/O7MD/P+VgPKHzNowCwloV
vw90diHlfTucgp7r/7YwHHqNnRUcQUHFjotYLyWpcL8ejKTg8Ho9/D783bQg
FYiiQEf6//PqF2oh+xSiKYi7+AhzY3Zowm/Etycq8P1Xl1Z4QwOPAsXvNw5g
PXE3QiKPj+L/aB9+n3POqqitkTEUrKH24/sSlfzoEK9YCmKSK3G91VvLL7WI
Q3riqJUpni8VxQioXkJ6xsJ7Hq7nJnFGU4hN6qP/Mv330ReX/JovU2DZNx/3
44EW8Q/z4ym4En8Yz/v55QmDMQkUhE3rxfOR9C1XtE4kIj3HWoDfTyp4c9Vz
yxUKyDOu+Dwq7a6lq19F+eagOc4nnxqut01LQufdBHj+Mbg7RaENcbtLC36/
dtrHG45F15Aeib+B71tlDqTFJVxH+WWWCr7PX/YlvcY3GcXH+j5sT6NDN8Xs
Uiiou5aM39e2/Z65ecUNlO/C3uP7LLcj2ZxZqcg+G9bh+nWm/1ZxJ2LLN974
fccQnzt/S9KQfdQVcTxc/ZljeD2dApg+ifvb3LN3fS9kUHC2+wWeJ5WM37vn
cJMCdqMbft+zIeB+n14m2q/OWRyf3/890BDPQvX2+Q68/z/Uo0O9iH817N/F
8JwZBSll2Uif/Z7A+UAl9HFL2i0KmuqvuDK8SuyJLHEb5RvdO34Mb4p+unPf
HQo+/LoZz/AeqWc8wxwKopRm4n7I+9Lzqnm5FHy7vQ3Xc5ZsscgQ4ug7ArOx
vrxaYl59F9W/Fbd1GM5Qeklk36PgzOpP+P7k8Y3SIm4eBcMly3F+a80s09/w
ANXDnjD8vtL03Mo7Yw9RvF2rw3pxgW5VV90jCgpFZfD7rJoPq5fczadg7WkD
fH7Ga966hBeg+vPxL75P2P6kJsnjMQWr8p27GT5oXPd+YyEFb5434HnS2eL6
eSpPUH9R+u4Xzm8bG7f/RXw+tRv3y1dfNUW8f0rBgBEP3/9sN84WyH9Gwdzr
vmoMz3jo7xtLo/oa0oDzh+uPQ9pUMQXdX9pkFPYh/alp0+VTQsH2uzHPR8XR
+t3XpDq/QPG5dGf75gm+yakbKvtsXlLwbHDuuEkP36S6ZZaMcSkFJeIXw3U/
8E00ZH++Xf4fBdW7VF82l/FNWqP+2zirjALK5sxqs3S+iXXAkeWllejvlst7
rffwTTIKdnTef42el6EmTVvwTQR+GiXfqEL2fFYJn3X5Jvle4tKsNyj+XC+7
qMzimyza/fDP2joKgq427eI94Jn81p2quPsB+Rt5ivgyEG2y49h39vVm5C/T
J32DiqJNcrNqjCM/UjB+w1POKzTa5JByWt6RTxRE/LNXeqcSbVIjtjlx6ReU
z5Ykx4hvijJZvll3x7x2VG/un6q1mhNlEsReOGdaB9Ljdj3v0usjTYz+9BFt
XynYFFXV92B/pEnmd77n1S5Ub0Y+L45wjzARWuyvGtZNwcnW579ALcJk34FD
LX49SF8WK15o/xpuItW4ertDH4o341+Hyg6EmwS++LhGchCd33BGPH9jmMmH
ydKhf4hPHLuQC+OhJvprc28PDCG9fjx/h1NOqEnPXUK56ieq753RGxwlQk0c
ri2dGfwL7b9hgq39LNhEqTnk4MnfFBQFmbAvHww26ZTpo/eOI30UZBbZNSPY
xJd3309nAvUrARstk82CTIyq5zcu/IvqrWQ/1fWBazJN9Lyu8CTK97VzHr07
yjWJYZv0fJiiQMjUXM3Un2PiVJy6qfQf+vzSZum4UbbJoknhtFwBNvg3Six9
c5Bt0rXW61+CIBueFlYYL39Bmdw7W7WXLcSGmoVuP9tEKZNzD1Y+PjaNDXcD
jEbP6ZMmGwZj5jlOZ4PsJbePBtqEyYwVYz5mwmwIiV+duSn3okm1155qrRls
uCNu8Xt5+XmTuJtFyxbMZIN3lv/RK1OnTPZ1KAcJirDhZe2CT3sLLUwWq7Db
exH79bj+2NMeTPfs+7ahaRYbAu8/t008GUvfT7S6WizKBt880dHk6lj6fNOd
X7dms8H6UtNFm5pYGqQldl4SY4PUgvSVvohFtp++x5rDhn4/j/McxDURTWJH
5rLBaMbKGXzE8RVrvXaKs6Fb9e6BK4gPzLj23wYJNugn3PVPQay2UUB1mSQb
/iPM9qYhHmAdDJSWYoPqMo+JVMSPil41TyL+NKXklIw4YHzZmi5ptP/dlmcS
EJuvjoytm8eGtRKd1lGIxU4P/iiaz0Ydx/B7AnH93R1bM2XYYJL3n6IP4it9
+Vn8BWwwc5CQ3YfYbdlC4QBZNnhut39ljljT/aKruxwbyk9PqWkiHkpte7Z9
IRumE/+tE0P8+PPGhevl2eDc2DPV8zaWJhQyzy5VYMPFBoGzrxBv3iNaL67I
hnPLNly7jlj88rGVfxDDNuGTpxE31dWEf1Vig7z3+3FzxNfF9bveKLMh8s8B
fWnE7lvjzQtV2LBLqlG+9U0svSL0T0raIjao20Q9zEBcJFSyx28xG/ZSM8SW
I+aYLMl3W4L2z3F+1oXOa0tAsNS2pWzoMf+gl4a4eXTb60XqbDgqK2I6F3Gq
Xp66mAYb6sIffX9eFUt7nZjHGUP8X/3q7d6If3c1G73WZIPTg3jvZ69j6eKl
GxIfLWfDjPTVWq6Ig91ujCZrsWHVLZUCQcQyLR65vtpsWFzQa7e2MpZe9XZE
WUmPDR/ygkTY5bH0H135vN+IdVWqXs5HXBxnala/ig3nX91oySiLpbc6RR0K
MWDDgIPq+uev0P471bOHDdH6pmjbmtJYOmHCSa/MhA2NQsURrGLkPwfIlzeA
DfkProj30rH0kpLMnQGmbIjYJuC2E3Fe0MhZ3Y1sSFgsFaHyPJaulIx6enUT
G4w3fpud8jSW/qteYu6zjQ2PxHQfmefH0i/Cvjda27BBMvFuJv9RLB3SP8dj
qS0bdhvKiH16GEvPf+AU2rydDa93ah088SCW1t4wUm2+kw0H5Itusu/F0i47
1XfL7WVD5nermjO3Yun/iEivF55sOLZhQKntWizdcPWq310v9Ps+igumI27P
zw5OOsKGsekp6zSSYumpvv8yznqz4VKyn9XJK7H0mj1TXzR92BC1cHqoSHws
na17win2HBvWK5wSdeIh/9t60YvwQ/7v3/MkJDqWfuUR7nfsPBtkUvQTH0eh
51/LvGzpzwa93j9LFSJjaXnRtrqJQOQvXwV+/wyNpSPbt285FMSG3n0ud4bY
sXTS5AEnu2B0HkL2sWsR35I95rUhhA3L/5M7zqbQ821Cg2XD2JBrcUBDkYyl
/z0peVkVyYbqYturXoGx9Nymt3WFUYy9FeRfXIylFYY+fbkZzYZ0Uq5WAbGh
+p9/BJ8NDo3E1Hv/WPpkrJ6RwSU2cIoOj3ufR/GTC1tUL7Nh++pV79/5xdJR
FTZO4vFsMH+7T8EC8a1/R/y6E9hgWV/+Ue1cLN1xNO3htSRk/wMrs2aeiaV3
mc9bMSOdDV7vyABA+cuN2+nTgXjuT55ss08s7fMq/2FxBhuefJX4dgZx2OY9
Rv6ZbLhP9Ik8PIHyU6gm4ZjFhjkNa9wdEKdXTrw0yEbnucK7/8/xWPr51utb
Bm+xYfazqFBrxK8jT0RX32aDy0hI/OixWPr9G6i/dYcNrF+f61IRd4pLLQjJ
Qfm66IS2PeLh7R1Oh3PZEGOWeG8a4n/8h9fN7rLBfscjlwJvlK/que3K99Dv
B0j17l4SS8vN2602idhb+tiWsbl8Wm2XxpHmPJQ/I3Yo96Xz6FWXx3MK7qPf
b5ot0xHBo+Fd5VDcAzbwF13I3s/h0dtkkwxOPWTDm2XfPbsDebTTnmPnbR+x
YX93coPCBR7tcWXDM618NoQXThMLPMOjfT+KC4oWIPteWVoy4sOjo/ffDyl9
zIZ1lfXF0p48Ouk6u+pGIRsa1t7a+/Qgj771eacE6wkb2HK5NqedeXSp66/4
tUXoPGK2+MzfzaN/HzbKzKXZoBD1df5ySx4tnDmnN7yYDRWCRt/3b+TRUl2t
2l4lbPDRfBuQZsKjtY6Q+Ytfovww+VfX05BHuxx/9V/CKzYMdmmub9Pk0cfu
xs86W4bsG6dB56nz6AuDntt2lLNBZ/C0X8ISHh13anbjnEo2bBjZnnBTiUdX
nN3+lapmwzxJi65qaR7dVLBIw+UNG64fThS1k+TRX38PHzV+y4ZF66Ju9M7l
0VMXLv38VcOG47+Fl3qK8ujZRe5rGmvZULQv/5K1CI+WnVzjf78Orf+sfIDF
DB6tx2oWOtbAhh2pfSFcIR5tUnx7k3UjG4Lyjqi8FuDRWwUvhqk3sSGg6NnM
nVPR9B4zmzfT36H4aZJ6Yz4RTbuzlaXaES+vjhn3/B1Nny4d3EW/R/n+4I7y
4tFomhB+kZj0AeVf5+nxW39G05GbYj+db2bD6YXJ+WJD0fSV4EOLdn9E/hT5
FAR/RNM/CMWOTS1s+JxdnybcH02bX2hKX/0J1b9yKdXNvdF04ulod7VWNpSu
i/xS3h1ND3hv1pD5zIYcjXerQrqi6Y3ugj3CbWwotg75wv0eTSc4P7k9injl
S5/NL75F0/2Op491fmFDiUvPLGPEZvZaKxvb2bDw9H2zsc5oOn5L52BpB1rf
0qSWfsR95tfvP/zKhk0Bx20Wo8+bbtjtm96J7PGq89NlxJfXSKyO+8aGb6vv
Jlii3+vVqfjF/s6GgodiqQZoPaBJFZ7uYsOQhYuqC1rv5cXr/Q92I3svOJL8
qgd9XmHEaEcPyg+r6VbPPvR5mZwps142HA7YEm8xgD4v7l6s18eGn+k3n+0b
RJ8XUaZU+1F9OLXw9Z1h9Hmh9xulBlA8GA1kGiB7X5rgCQv9YMPDHK9ro7+i
6Z4Rq7IhxKF2B070/Ymm474/ta4dYkPLjLlUETrf7jZfsZJh5K+2suuC0Plv
aF7x5t5PNgjfdJXxms6ju6qS7Xij6HzSpwbOIv8xus92tB1H51HlHp6C/I9/
22ihyR82ZEcITyjN49Hf0kc/ak8gfWjvk3JPhkfz4j2c506yoazNKllUAflr
wBb3agEOlGWV+FLI/yMspX23iHDAaVv//irg0Z9aUqMtF3DAwbfy89VzPPr6
u8aferIckFcLH/uL4t2lTsRRSY4DwvaNz/aifPC17LjK6EIO+G+YXS7B5dE9
99flpSpx4NOKI+O2MTx6LKSubnIpB6Qs9778fptHP2YLr+lW48CHDHlFwbs8
+nyg4dUGdQ50GNXDvPs8+u/p6wdvL+PAslfZbuqPefQ05yMjjis4cP6k+vqp
lzxawkBI5qE+By6HHpd1bubRdSsNLiQbcOC2ww/D2Z94dKymZ2vYag50nxBa
de8zj5ZReXPT1ZADK55ty/v6lUcrzL6yRtyIA6/+hbz5NcCjl33R3XNkI9qv
51/ytSCf7vl46Nkucw5sNgyqnzGdT99pil9kasGBirz/nNbP4NM6VZPdCyw5
kLbz4VaeKJ9eXVBx4T9rDgzrmF3tkeLTZpGuSSr2HPCNN7P2VuXTQrm7Df4i
DnySE7ZoCZ9++Wbbm3c7OHBg5Ti/dimfNpdYJxC9C9l/3jU11WV82iJW6tCk
Iwf4NbdfB63k05sTXy5vduYgfaS2xWM9nxZ5Ulj6yIUD3yNctr8x4tMVzXf3
8105sKX3YJ/OBj5trZAUvfkgB4xnluZ2AZ/emuz7M9+dAyVvhL4t3sSnbTOW
Po09xoGV1YOPa235tMQr+Z0njnNgV3ptwOh2Pl3zTbLf+gQH1mR6bJ5vz6e3
a0wpCZ3kwB1RcLXayaftbzdRPr7o+wNFiRxHPu2QF2y9zR/9/mnxLBsXPi1T
d7FDI4ADTToB+wxd+fS74dMB0y9y4GZZdamSG5921HfJfRrIgd6T2elfDvLp
PQWGUpoUBzSUFG6DB5/e96z7w4xQDhwt/djjdYxPH7pcNjiC+Mt157m6x/n0
sRMZMzvCkD9M2/dsBHHgIlcDOoIDM7cECJ/y4dPJ3Pe8czwO1KYb7bY4zaez
DuRnHuZzIM5w+qphxPfWxD3fEcMB8m3Ak6u+fLq427ZvZRwHRASHUzvP8On2
bWWWXfEc2Dbo0LDTD/mDWsaBpgQOCF7uUelG/PMfdaY0kQOO+xWOXTjPp6ff
35CWcpUD325fZcdd4NNLZfKnHJPR/nNXRt0M4NPaP2LnW6Zw4N9JRcUlF5G/
lJ/UMrjBgTciLe3XEW+6sMJJMo0D828lHY0I5NOeremPKm5yYGJVWoAlwad9
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
vtSlzLqB/T+Wor6v
               "]]},
             Annotation[#, "Charting`Private`Tag$129103#2"]& ]}, {}}, {
           GraphicsComplexBox[CompressedData["
1:eJxdl3tM1WUYxw8IBiJ5gINIhnLTEd4YRfOCnLPIC2mOeQ/lFErQYg61SYIt
SpRSJAGZIaGTsImKJKaIweRkisCY0pg5b1wMBK2GIUPxWp3n9/2+8/AP++z7
8H7f3/s+z/s8+K1KXvihvU6nW2Gn0/3/e7+5qCfMkGEqHzh64/nzAMuCiuSp
+QcVQ/f0PfSea5cfdTD0h3lzj4blj6UOhl7XFXEw2jyaOhh6/tSw4qQgL+pg
6KuyJnyX2edOHQz9g5rI4MhUV+pg6E/iQsakujpSB0MPGTE90Bw5WAsdDL35
xPhR+VfaqYOhW4SN0MHQg2Q96mCen+zHxPPTGPpK+R7qYH6/nAd1MPQ8OU/q
YOjn5D6og6EPyH1SB0M3SD5QB9vkl8kmv0xRJ49bMhs3a/fpbwHXW8/Pl/y+
9Xt9yJOs5+dNfmw9L09yg/Xv9eTJ1nhncqNV15GbrHyvFqyz/jTXgM+JbgTX
yd9z/8GyPvmC+JMHZX/kCbJ/cqx8n8nm+8lxcj5k2/NDvYJRn2DUI/ev1R8Y
9fbifbiTUU9g1A8Y9QJGfYBRD2DkP/en5TsY+U1/LZ/ByF/ej5avYOQnGPn4
4KVMfVdsBvPtxffE3wId+QcdDB35CB0MHfkJHQwd+QodDB35Cx0MHfkMHQwd
+Q0dDB35Dh0MHfkPHQwd9cD3QmPoqA++9xpDR71AB0NH/UAHQ0c9QQdDR31B
B0NHvUEH29y/yeb+qaMeoYOTu4vcntSqevTxO1DhdEz102EJO8t0ls2my9W7
w4d4K+6NsQw6N/mTZ3TlntY/8yUv2VKd4lWheLbPK2vC63zIG1es6Y6aqNiw
Vp+4LMdbxZev7ogfGEW+dXZo3PoYTxVvF3M93WIgH/N8GpMd6KbiF0VfLtyu
Jz9uvn0o+qYzOe7d7H1Jh5zI36a07M1cZ0d+2peaVzxTR46f+kVAqktfLThh
VaG3eU4v+eK0gpPRET+RFwgbwUslnrxS1iMPip8JvEv2Q46V/ZIfyPeQ2+V7
yeVyHmR3OS8VL+dJflvOW8XLfZBT5L5UvNynyea+yVo+kLV8IbdIPqn9av0B
jH4ARj8Aox+A0Q/A6Adg9AMw+gEY/QCMfgBGPwCjH3B/Wj/g/Wr9gP5aPwCj
H4DRD8DoB8x3rR+gXvH+87zr3pqRcVXV51fRhsfbXPwtiEc/gF7SO7Mq54w6
39b7Y+5N7hjL+sf6m7+vGOnwH587FXs3sCOAPL9xU3acm+Jn5sF5PUNU/Mb5
10uPtPhzPfhDn9ixPDG0zo98/H7KsOQBpTfq7+T++dtYcuuG38edrvLl96B/
MV9D138cPkflR9lsz7tRR0bTH/FYb7xnaX36UrV+6PTOlwcrlV6wui1raNFo
8o6IklnZM3zoj/7IetryUfwyN5WPaXtcOuM3eNEf8VivP3Hf2UJftb4u+5qT
4UulJ1Re3uqX4EWOyd1jLHX0pj/6L+vnitm8/vpI8ty/7FrTjR70RzzWO/tz
fs3JuyPJF9ua7afMU/obzk3p4SEe5KDOndN+vWSgP/o7/D4LXrI8+wdVb5M+
v/djmMfL9Ec81stxzapsPuFOLgq98CTK043sWLXlfnm/K3ngzczXW/fo6Y/5
ge/lo90HotuGkxsCbpYkHXSkP+KxXrXFPu7K0+HklmGb/m44o/Ti2HXdnV87
krd5DMb0XXCiP+YT+E3Zn1GQ+YkDuT5v15TITx/Vwh/xWG9ZQu9i1zwHcvKx
xI7nC+1U/QytqQyb/qgWPO5014KglTr6Y/6BX0FW+6jUEQ/J9jVXJ5uNf9Af
8Vivx6sqN3P+Q7KhrPRw0sV/yPElwTMjz98iO2yKckn9pbcW/piv4Be+ots+
v+0G/V8VNsIf8Vgvbces2w0tN7n+8TsR0X3Xyskxohup91h1I/wxv8Gvr9r6
veQcOQ/6Ix7rLZbvI/enWb+P3C7nQx4u50N/zIfsD3Lf9J8g+WCCP+Kx3lq5
X67vJ/dLfZHkBzlJ8oPvP+ZP+J2XfCfvlHqgP+Kx3l7Jb/JWyW/yKakP8iWp
D/pjvoXfa1Lv5DR5D+iPeKxnJ/VN7pf6Jn8j7wO5UN4H+mN+5rwo7x25TN5D
+iOe7728b+Tx8r6RLfI+kpvkfaQ/5nPOs/Lek1ulH9Af8awved/Jy+V9J/dJ
fyA/22HtD/TH/A+/w9LvyHrph/RHPNbbLf2NvF36GzlQ+iM5RPqjyWaeoN8N
mR/IxTJfmGz6P9erl/5O1vo7OVjmA7I2H9Af/7/YzDtq/pR5iP6It5lXyNq8
QtbmHfI7Mu+QMa+CMa+CMa+CMa+CMa+CMa+CMa+CMa/yPrR5FYx5lfmrzavs
39q8yv1p8yoY8yr9tXkVjHmV56PNq+zP2rzKfqLNq/8CkEyeCw==
            "], {
             {GrayLevel[0.09], AbsoluteThickness[1.6], Opacity[0.06], 
              EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
                 "]], 
                PolygonBox[CompressedData["
1:eJwt1Pdvz0Ecx/E7oxqjGqOaWqVKqbYoLUpbRbVmEBEREUREhEZEYu89Wnv7
JwgxYoQYIUaIEWKEGCFGiBFiPF95v3945F73zefzubv33X3bTa0aM6dWCGE4
6uAe7mMC6mMF7mAAcvAQD9DQn7mBmxiPRDzHMyRhIj7gIyYjGedxDgkYi8/4
hCb+zCVcxjh/ZhmuoRRd8RM/0AxT8A3fPesb6/AOg9ANt3HL16I5rsELDEQe
VuERypCLJ3jqc9caz+Csz1X1WYILKEE23uKNr20SXuG1Z9XgKq54bbSmDfiC
weiOEziJ0dA+FMUQDtL2xSjsQBq/DaUt0Djkxkgjz0C11ka/grYnUskt0Io8
E83JKdGy3mlETor2bqrqSi5BR/I8HNDY9Ef6HLaprvQraXthi+ZJfwhtPvqT
i6O92wF1yQmYTk5BIP/zPA2ZGguzyW2QTm4bLc/SnpHz0J5chSxyJ6QHe6c3
uTDaWHM1J3JBtKx3Wutb0b6lGuxDD/ojaPsgh5wb7dv6ZiK5XrRaaM4VWhuy
yPO1T+TyaFk1OqSzEm1virAAR1QHdMZRLPRcjItY6melFMexGF38DG3CL5Rr
nmjJt3f6Xg/TOaV/2Mfqhwz6u2kLg93ZbPp7VZdga2xKf7vvlc5Mbfpbfa90
RhrQr/Gzoj39io1+FjWH0zgV7KzrTO7RXKONpTH+4K/vpe7gIhzztWpN+Ty7
32utM/QSa4PdNd3Ju1gZ7L9Ed+43NvvadabeY32wu6s7ch3Lg919/Qc9xupg
d1V3eJf2PVqtVJP/qo10KQ==
                 "]]}]}, {}, {}, {}, {}}], {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{500., 0.},
         DisplayFunction->Identity,
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{
            FormBox[
            "\"C-mol H C-mol \\!\\(\\*SuperscriptBox[\\(H\\), \\(-1\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(d\\), \\(-1\\)]\\)\"", TraditionalForm], None}, {
            FormBox["\"Time (d)\"", TraditionalForm], None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{60, 15}, {30, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotLabel->FormBox[
          "\"g) Host specific growth rate\"", TraditionalForm],
         PlotRange->{{500, 850}, {-0.019350578732542773`, 
           0.02115810653352046}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}], 
        NCache[{Rational[931, 2], -2344.}, {465.5, -2344.}], 
        ImageScaled[{0.5, 0}], {931, 586}], 
       TagBox[InsetBox["", {1366.5, -2344.}, {Center, Bottom}, {931., 586.}],
        "InsetString"]}}, {}}, InsetBox[
     TemplateBox[{"\"Fish absent\"", "\"Fish present\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 60}, {60, 60}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {60, 60}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.43333333333333335`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 60}, {60, 60}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {60, 60}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.43333333333333335`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               
               TemplateBox[<|
                "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                "RGBColorSwatchTemplate"], ",", 
               
               TemplateBox[<|
                "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                "RGBColorSwatchTemplate"]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "60"}]}], "]"}]& )], 
     Scaled[{0.95, 0.22}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   DisplayFunction->Identity,
   ImageSize->Full,
   PlotRangePadding->{6, 5}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{
        Inset[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
                Line[CompressedData["
1:eJwl1Xk8VF8bAHBLlkqSshfRptAeJToP6VeJFoWSUpZKEckSLZg7OyEUSkm2
FkqSKHXJVqGUSFLZ92wz19IM3pP3n5nP93Puee5znnPOczUdPaxcxERERBTw
z7//Uy6XpUQgEAJME++WSAwjgLJayjcQHiuGT1lJbU5qT0Yg9PoFTLlXamd/
UFcgdHHPTPl4AMwPkQ+Cbx0uU05dbXLIfmUQRG6CKfe0m9zQMw+C6X+splz4
gaZ13iUIHvsdn3LM46LHuUFBcLLlc8I/u90SjFjeCYIPNmlT4ybsdSYtr4LA
cb3MlAfWV2kFfgsCa6vEO/98t8ltmhovCKaRC6fGd8eIJEnOCQbW+//nM24R
bTK0MhgsShQT/7ly23Rjc/1gGBgVS/7n21uubLxnHAwv9V2mLPFqo/5uk2AY
P7M76Z/dDXjr/poFg8zi7VPzE32q1lb9FwwH1rRO5VvzLGNN6o5guLjZYSqf
6UPc1ZfMg0GqdsntfzZefWqVlUUwLOneHv/PKelaehN7gkE8K//WP89a/nPF
w/3BsGF0bGrc5OTL5UHWwTD6wGYqnk9KjLaNbTCoWOhOredBi/cy3UPBMOPE
val8fmpaLRU7HAzmg8S9f85QLdO0cwyG9KIZU74812hBlmswrOqvnso3Nsc7
SZkRDDWFe6biZR3KWB54Nxh6V0ybcoXET7cNb4KBH64/5banMpk9P4LhzZ8V
U65bkBhyfyQYzOK0/v88Z8NJl7k0kNmxYMr7Fs2IvLGSBrcGVadcm/8rv2wn
DTrvK03ZzuFh8o6TNDjUPm/Kv0R9Q9/TaSA8Jj9lI+dUmX13afDnhdyUb5XW
hta9ogGSnD3lvcYPRHJe0yCwUXbKktkXvaNIGqjm/d/H+51X0gpo0M9+n/Bs
Ph/lr9jd6VlIg13zP1MPFHlI6YTBPYe3NNj4/Wj02poh5JW40H53EQ3u/1bT
XHd3CFU2TFc0Lsb5RITUdp8ZQtrKvE86JTSQptvXXTcYQr/CSrZOL6NBh/uQ
zd2Pg8j80mmd4g80OLU+yztKMIBSXuxvyyqnQZRJYmdM6QAS4RklJFbQYInp
vdWsawMox3X23MCPNJjn5FynvWwAadpm/930hQZu8e0N8kl9aHTNxPsn32nw
reeHotV/PWi/ewdxp54GlW3ZGSvru9Hj+1XGV3/QYLyr7lqvezdy1kh6evon
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
B4bO1jQ=
                 "]]}, "Charting`Private`Tag$128354#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                Line[CompressedData["
1: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
HOJ/U6uJDQ==
                 "]]}, "Charting`Private`Tag$128354#2"]}}, {}}, {
           
            GraphicsComplex[CompressedData["
1:eJxdl3tM1WUYxw8IBiJ5gINIhnLTEd4YRfOCnLPIC2mOeQ/lFErQYg61SYIt
SpRSJAGZIaGTsImKJKaIweRkisCY0pg5b1wMBK2GIUPxWp3n9/2+8/AP++z7
8H7f3/s+z/s8+K1KXvihvU6nW2Gn0/3/e7+5qCfMkGEqHzh64/nzAMuCiuSp
+QcVQ/f0PfSea5cfdTD0h3lzj4blj6UOhl7XFXEw2jyaOhh6/tSw4qQgL+pg
6KuyJnyX2edOHQz9g5rI4MhUV+pg6E/iQsakujpSB0MPGTE90Bw5WAsdDL35
xPhR+VfaqYOhW4SN0MHQg2Q96mCen+zHxPPTGPpK+R7qYH6/nAd1MPQ8OU/q
YOjn5D6og6EPyH1SB0M3SD5QB9vkl8kmv0xRJ49bMhs3a/fpbwHXW8/Pl/y+
9Xt9yJOs5+dNfmw9L09yg/Xv9eTJ1nhncqNV15GbrHyvFqyz/jTXgM+JbgTX
yd9z/8GyPvmC+JMHZX/kCbJ/cqx8n8nm+8lxcj5k2/NDvYJRn2DUI/ev1R8Y
9fbifbiTUU9g1A8Y9QJGfYBRD2DkP/en5TsY+U1/LZ/ByF/ej5avYOQnGPn4
4KVMfVdsBvPtxffE3wId+QcdDB35CB0MHfkJHQwd+QodDB35Cx0MHfkMHQwd
+Q0dDB35Dh0MHfkPHQwd9cD3QmPoqA++9xpDR71AB0NH/UAHQ0c9QQdDR31B
B0NHvUEH29y/yeb+qaMeoYOTu4vcntSqevTxO1DhdEz102EJO8t0ls2my9W7
w4d4K+6NsQw6N/mTZ3TlntY/8yUv2VKd4lWheLbPK2vC63zIG1es6Y6aqNiw
Vp+4LMdbxZev7ogfGEW+dXZo3PoYTxVvF3M93WIgH/N8GpMd6KbiF0VfLtyu
Jz9uvn0o+qYzOe7d7H1Jh5zI36a07M1cZ0d+2peaVzxTR46f+kVAqktfLThh
VaG3eU4v+eK0gpPRET+RFwgbwUslnrxS1iMPip8JvEv2Q46V/ZIfyPeQ2+V7
yeVyHmR3OS8VL+dJflvOW8XLfZBT5L5UvNynyea+yVo+kLV8IbdIPqn9av0B
jH4ARj8Aox+A0Q/A6Adg9AMw+gEY/QCMfgBGPwCjH3B/Wj/g/Wr9gP5aPwCj
H4DRD8DoB8x3rR+gXvH+87zr3pqRcVXV51fRhsfbXPwtiEc/gF7SO7Mq54w6
39b7Y+5N7hjL+sf6m7+vGOnwH587FXs3sCOAPL9xU3acm+Jn5sF5PUNU/Mb5
10uPtPhzPfhDn9ixPDG0zo98/H7KsOQBpTfq7+T++dtYcuuG38edrvLl96B/
MV9D138cPkflR9lsz7tRR0bTH/FYb7xnaX36UrV+6PTOlwcrlV6wui1raNFo
8o6IklnZM3zoj/7IetryUfwyN5WPaXtcOuM3eNEf8VivP3Hf2UJftb4u+5qT
4UulJ1Re3uqX4EWOyd1jLHX0pj/6L+vnitm8/vpI8ty/7FrTjR70RzzWO/tz
fs3JuyPJF9ua7afMU/obzk3p4SEe5KDOndN+vWSgP/o7/D4LXrI8+wdVb5M+
v/djmMfL9Ec81stxzapsPuFOLgq98CTK043sWLXlfnm/K3ngzczXW/fo6Y/5
ge/lo90HotuGkxsCbpYkHXSkP+KxXrXFPu7K0+HklmGb/m44o/Ti2HXdnV87
krd5DMb0XXCiP+YT+E3Zn1GQ+YkDuT5v15TITx/Vwh/xWG9ZQu9i1zwHcvKx
xI7nC+1U/QytqQyb/qgWPO5014KglTr6Y/6BX0FW+6jUEQ/J9jVXJ5uNf9Af
8Vivx6sqN3P+Q7KhrPRw0sV/yPElwTMjz98iO2yKckn9pbcW/piv4Be+ots+
v+0G/V8VNsIf8Vgvbces2w0tN7n+8TsR0X3Xyskxohup91h1I/wxv8Gvr9r6
veQcOQ/6Ix7rLZbvI/enWb+P3C7nQx4u50N/zIfsD3Lf9J8g+WCCP+Kx3lq5
X67vJ/dLfZHkBzlJ8oPvP+ZP+J2XfCfvlHqgP+Kx3l7Jb/JWyW/yKakP8iWp
D/pjvoXfa1Lv5DR5D+iPeKxnJ/VN7pf6Jn8j7wO5UN4H+mN+5rwo7x25TN5D
+iOe7728b+Tx8r6RLfI+kpvkfaQ/5nPOs/Lek1ulH9Af8awved/Jy+V9J/dJ
fyA/22HtD/TH/A+/w9LvyHrph/RHPNbbLf2NvF36GzlQ+iM5RPqjyWaeoN8N
mR/IxTJfmGz6P9erl/5O1vo7OVjmA7I2H9Af/7/YzDtq/pR5iP6It5lXyNq8
QtbmHfI7Mu+QMa+CMa+CMa+CMa+CMa+CMa+CMa+CMa/yPrR5FYx5lfmrzavs
39q8yv1p8yoY8yr9tXkVjHmV56PNq+zP2rzKfqLNq/8CkEyeCw==
             "], {{{
                EdgeForm[], 
                Directive[
                 AbsoluteThickness[1.6], 
                 GrayLevel[0.09], 
                 Opacity[0.06]], 
                GraphicsGroup[{
                  Polygon[CompressedData["
1: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
                   "]], 
                  Polygon[CompressedData["
1:eJwt1Pdvz0Ecx/E7oxqjGqOaWqVKqbYoLUpbRbVmEBEREUREhEZEYu89Wnv7
JwgxYoQYIUaIEWKEGCFGiBFiPF95v3945F73zefzubv33X3bTa0aM6dWCGE4
6uAe7mMC6mMF7mAAcvAQD9DQn7mBmxiPRDzHMyRhIj7gIyYjGedxDgkYi8/4
hCb+zCVcxjh/ZhmuoRRd8RM/0AxT8A3fPesb6/AOg9ANt3HL16I5rsELDEQe
VuERypCLJ3jqc9caz+Csz1X1WYILKEE23uKNr20SXuG1Z9XgKq54bbSmDfiC
weiOEziJ0dA+FMUQDtL2xSjsQBq/DaUt0Djkxkgjz0C11ka/grYnUskt0Io8
E83JKdGy3mlETor2bqrqSi5BR/I8HNDY9Ef6HLaprvQraXthi+ZJfwhtPvqT
i6O92wF1yQmYTk5BIP/zPA2ZGguzyW2QTm4bLc/SnpHz0J5chSxyJ6QHe6c3
uTDaWHM1J3JBtKx3Wutb0b6lGuxDD/ojaPsgh5wb7dv6ZiK5XrRaaM4VWhuy
yPO1T+TyaFk1OqSzEm1virAAR1QHdMZRLPRcjItY6melFMexGF38DG3CL5Rr
nmjJt3f6Xg/TOaV/2Mfqhwz6u2kLg93ZbPp7VZdga2xKf7vvlc5Mbfpbfa90
RhrQr/Gzoj39io1+FjWH0zgV7KzrTO7RXKONpTH+4K/vpe7gIhzztWpN+Ty7
32utM/QSa4PdNd3Ju1gZ7L9Ed+43NvvadabeY32wu6s7ch3Lg919/Qc9xupg
d1V3eJf2PVqtVJP/qo10KQ==
                   "]]}]}, {}, {}, {}, {}}}], {}}}, {
          DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
           AxesOrigin -> {500., 0.}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, PlotRangeClipping -> True, 
           ImagePadding -> {{60, 15}, {30, 10}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {500., 0.}, 
           DisplayFunction :> Identity, 
           Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{"Relative", None}, {None, None}}, FrameStyle -> 
           Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{60, 15}, {30, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotLabel -> 
           "a) Host biomass C-/N-limitation", 
           PlotRange -> {{500, 850}, {-1.8878143544754142`, 
             2.127521095641062}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], {
          Rational[931, 2], -586}, 
         ImageScaled[{0.5, 0}], {931, 585}], 
        Inset[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
                Line[CompressedData["
1:eJxN13k4lFHbAHBLaFEJpUiFKEkqSYnOTZJQZMmaSmSJIlpIYeaZNSKRtVT2
fUkq1JClhJItVLKULckyUyF85/N+1zfv/DPX7zrnvp/7rM+MjMMFUyc+Hh6e
dl4env/9dnG6LsQDAUD7/vFn2wsOAnjdyrkcAOYfyuctIbUi5Ud2AEgczZ73
sNDhX4GDAZBgHDfv036w9qZoIGw2Dpl3ynZta7ttgaD73HfeP/q07yobBEKz
7eV5l78lyXo7BUKssde8o3Iqcp4FBsJC8UPzdo+b/nPkfiCwlvwnXpuuqt1b
EghVEQfnPbqrQTbgYyBE3B8b/l8/6HZfIDURCO9TKPPtR6N4EgVXBIG8yqV5
zxhFaI9vC4I5i4J5a213UTE1CoKclf7z8dfFNKULXINgrC9hvj26yCdxNSUI
PildmXeBdbZiwIMgMHylOe86gS/uai+DgCfKat7f84XzfnwKAr++Y/Nuk354
M+1PEIguP/yf/gw1ZycxEvgt+8/4jsktDr+7jQQy7jDv1tLO0teHSXBcQGve
NiczkvSdSdC0SGPenbyXg2sIEty4rD5vTccU4WMPSJBpqDbvuOrW4LYSEoSc
Vp23iVY6T9ELEuRp/8eChdd87rBIUCbzH5/+5biNVEaCqqON+rces1HplqMD
nuUkiJKuaDASYCOJs+qPTr4igdV084uPVRPo4sMNdkcrSNCtHKupEDKBDPzd
lCrfkmCT/bHSzsdj6O+O2ZrcdhL8np796iTzA5l59JPvd5Bgxabri99EDKGc
tAatkE8k6D9wrM1eaAg5rk/Md/tCAqWbIiX6QwOoQVg/Rr6bBK5s91WfU/tQ
av9tl7gBEjyJJ78rE+pBx+/JC9H+kEA93mlZfnMDWtdBP+P1lwS346Wj29Xe
o++rhlm2kyTwJBkt8X9Rh3zCCq5unyZBgHb3gu0lr5Fm/coWyX8kiJwVTDyq
UoX4F/vuEJghASUrjjc+9hUKJ6Oh9lkSWOc9FGxOKEY2ZY/0KudI4Oxk9ap4
yxMkMyOQmMNDhkniF/ugbC4a2Os6F81LBvuDOyIXRCaivMt1tmQ+MqSI+lgd
tL2FrjxWeebBTwae//vsHw0Xt1rAtaDyb08dAa7rXa3rtwpyHZFSqighxLVd
73oq70Ku5TaQe378l4fs+va3LuK6IOZwXNlirn1bs/5kLOEaxETMI4WxvwwW
Ge8eZS008c4LWEqGnVJVpKmiSVZDcKuw2zIyDI35jynLTLGiava6mi8nQ6bg
VLX1wimWveC9qv0iZPi7/+7n3qFJlsIBHlnFFWRoUwtOF6qfZI0EnLkhJkoG
oet3SwdyJllPSqs7ZrCP7ygxoIdNsnR3h9xpFCfDp3L79/xmkyxh79FfpSvJ
8LvRTb5LdZLVlGtmlLqKDIIJV79cE59kOShKCvivxvU8LYgcb/7LClybell+
LRkcNmy+0Wf6l1XKV259VY4MojX52w4f+MNSfc9ev24nGYoCnFXsptisqR1S
+X+xszz8Mstb2ayyCG2dJlUyOCYnufI+ZrOMbG450tXIUL0uLljsHJt19vum
9PE9ZLg6aXYqpn2CFT1ts/M1IsPlj60Kf/PGWf82let6HiFDj8i/unrjUVZV
YIjrKxc8Hn7VH7ZL+lnNcXFXc13J8MdKK12ouI/VU5ROi3cjQ6SQdGi/Sx9r
drgq+bI7GcQ0edYZvv7OUree7d7iSYZoyX82jdRvrPQdF2zuXCGDecUi+cOi
PayQHhNDRyoZLhqpnOZ708GKn7G3OUbD8Z4ygnPqHayM1R6u++lkSPezbS5I
a2dVH2XQVjPJoN18J0M3uI01V1xeURdCBuOhl1tV7FpZXnd2aqpFkmHp25qt
resbWYE5YCh7lwzCNds2FsR9YN2qOWqzPIoMnxe6zJis/sDKmHO7OhhNhgUx
lyrbxBpYvecSC+/F43Z7gY9ym+tYFrriyoJJZJCM+9yof7GS5UD57tmLLdKd
p2oWXsHyrC4qLEsmQ2Hs6YScx69YTH1rzWupZEjitJ61mCpjRTG2BFqlkSH7
qG1twvoyVtLb6Qq1dDJMW43v8gx+yXppdN9wNIMM4zo79eK3lbBqQy6E1meS
QaXHMySC/JzV9g6aMrLI0F1rJSv76Snr+3JRCXo2GZSEhPu01YpY4ya9Nk45
ZKA1ir8du13ImrtdeF8nF893jZebylgBS7iJ0rM+j3s+1ohbKsz8lxUsNrt1
5HOtency+2nBf52nj2/HIh5zbWPt4Wv8hOvQEwX0ymdc/3XSTM1hcS2QuvTH
zTKuRQc6t7mWc73VLahIroLrU+erq6Krua65bPKNVM91LM1RxvIT178CpXv1
PnOt69eatPsL1yPu+ptXfeVax3SrSksP1z/WsjXNhrjWLCBbGU9yfTtTUxJN
cd2XxPm0bZrrsCjnk8tmuP7mb3i2nof4fwcfEvMxXMj1l8+PQg9JcH3/Y8vE
ztVcn2pcaLVuDdffXp/fwJHkeqhAI//ROq6zsj1W3lrPtUfaA1/fDVyP3hPU
MZHl+je9sXFGnutnZAH1QQWufW/siWvexPU/7/tnMhW5fnn+w+u7W7gOdF2w
laTENf9JN7aVMteV1vesdLdxTTVvKFVRISBgmMEjV2+F9I35ZaS2E7C/tl8r
5/dttNhgN0VwBwGLPR54r1n2ENXpug6OYXcVXNqqPZeGQlD8kS87CXAmygJz
nfOQiBrfqsJdBIRfsCywF3qGGlXU/BLUcDvDYNUtVgm6s8Wlk7mbgAdnNWOP
u7DQqg3vUk7vISAhY0uRk14FWrskVn25JgH7/PZ9PiP+FnUK1MdNYZsr//2Q
WFSLEnDNfVoEmHQK/NlvWo9kfzu9KUUEmL73XcC/rwEpdu+wdjtAwILkPfpx
e5vQ0CfHFxa6BEwkZRq1jzWhrNYoGe2DBGgbXHquldqMttfNDEocIuCMk8Hl
/EWtaPfTGr8qAwIONG3LK8lpQzohp+M3mBIQMrplry7xBfHlWKr9w873uj97
cEknqnh35N1HM/z8pbL/fMI6ka6IBk+oBQHC1MmYa5Ff0cE7oo4zVgQ0SB7k
kKu6kH5MhVLHSQKumueM6UT2oIXFzyufnCLg254P9WO1PaimI/fE7dMELP82
bj7K24sM1saH6p8hQE5BRmLgXC8ySvCZKDpLgGzLUn6xPd+QcbJ8yR0PAiqT
ZvelPv6ORKqlzC+cJyCZ/JyI6vqOGvpW/DS4QICicuVznqV9yGTz7Do+LwLS
742d13PsQ6aZrSRPHwLCJK12tAv3o+P5NIMj1whY5R7tUXtoAK1qvN672R/n
sxN8p+4xgD6Oe/svuI79ji6xL3wAWe06lVNyg4BHVaxC4U8DyPrpHtEtJAIi
wp6UC7oMIrsXg+2CDAJWpg1K3vHEv8fuvh5lYx/Y8zKvLHwIeVxIFuplEuB1
dmt/cOEQuiFzWo0VTEB5X+IXwT9DKIHSFnYljIATQZ7M9Cs/UM+R14cGogiw
GY7PbnIZRkMKyfat0QRY8jZE3KIMo4k50qXKGLyff9tW/Hs4jBYU7E98EEdA
8MKJsD/tw0h+VdGsVQIBx7fKrSf0fiKXzqQnNSkE9E7ssm0VHUGeT0l1T1MJ
2E6nsJHSCPINO9WbnEZARV6PgfuBEcTUWbuClEHAonYVdxHvEZSZcsddI4cA
hjm9Mv79CBo5T5LLfELA84g+M/cbv5DP3MnbwZX4+Z45sSzbUXRtlueLWxUB
6w/sjtjlOIpIMw83H64m4P1BlzdR7qPo9nQvS+ANAdNLr2QrXh9FOX+cR27U
EqAl8bEs8N4o6v91wdCrkQA9i/VPNn4aRSMjIlHGTQT0rzKLvdMzin7/zO9R
bibg4IPi8InBUbRgeMJ3qIUAtw2WDrS/o2jDwJW0M+24/tH0Ur6VY8imK0Dg
eBcBqm1VQy6GY+j01w3HdnXj+L1OLVPHxvD8lMeL9hCwtIshFWg1hq585t/1
vpeA4UdPtZycxlBEG81Bv5+AnH+GhvdujKF3DaEsjRFc/4xnd2fOGNIuT/Bd
/4+A2PyNoc5C46iwvNh5EnsjT3AgSXgcbX7VYtE0g++X3MP0iBXjSKRiyU7a
HJ4/Q6/196XG0dfKK0MjfBTIHjYtOKwyjq6/MbZ9uYgC2vSFImIW4+j5+znN
ExIUKKJeGxyMHUdbGySV1FdTYCeJ5+PihHH0oEFtzYo1FFCkavDJJ44j+odz
nEpJCrQckNI7mDmOLJs+Zm9dR4GxaLMl6iXjiNOau+7fRgrIB5xy/tE+jnZ0
nuSJ20kB3zdrbEdEJ9DwXQd3miqOT14sGbNqAqUZO7V576LA2RnTfC3JCbSh
3C3PaDcFqL7l8T4yE2hZ0qVTs3spECi2szpWBce73iw7rU2Be4zpw00GOJ5T
FLjZhAKDu57V6F6fQI45z4fFj1EgSORxgHYgzudcasVrSoGXOz/67CVPoKi2
8u0dZhT4Ur5WW4oxgagldV03LSkw8yvnbGoEjg/qgV/2FFiolpg9mDGB1i9d
xlvkQYGmkTQlk+YJ1PGj6WH4eQo4a+deiWudQBFvY3QuXKDAJd1eUm/bBFpM
lyc2e1HgesS+n65fJhCbT0sozocCv9TrMkz6JtCbv+eWBl6jQL3lczLzzwTy
/FazxoBBgUYbdb4mCTbaUhFarMCkwMaWcb2yNWz0/aGFLf9NCuzP0RnKkGLj
/5vd8aXBeP1YRSeurmcj3Y6/61XCKCCsMu3BVmCj1Q2bFMSjKNCZb9/ko8ZG
5SWUnZ1JFHgvS5/ON2GjSlPVY/XJFHixITvzkikbVQ92XShNoYBrdlzLbnM2
qpXQzI5Nw/1LvqfmW7JRi/f4JsssCugXC5cy7NloUOmkdMNjCuQ75e1+fY6N
VsTvWfjqFQV0c229wwk2ElftU8ivoIBO9OiSpVQ2WvX2zsEHlRRYfno8ikJj
I6m/I6Qb1Xi/TUdGeTLZSN48eUbjLQXKRZ6FbQtjo73CohOPP1DAarvQziNx
bHTa/8eX5C4KVFDr9m3JY6MGcbGEsG4c79h9/kw+G0G2xqlrPRTgbavmjytg
o3WdjB6Tb3i/Zo7bCTxhow60uX+6nwLVn4NWvH7ORqb8TqPHflGgwOFAFE8F
G+kwO/lmZyjwm83zxraZjfJlBSsHZvH8ZOvlOrWw0YYSZUrTHAVGLKjofCsb
zf7wF0rnpcLSjgaHa21sVHxESthcgAo8T2aGKJ/ZSHWF1coMYSoY5RVnnvjG
RhujP2w6LkWFwLyAyI0TbBR+vFR6x1oqlJ5on/6DzbMyVUxYmgpZAy6ub9ls
9Pm2/1z5Oiq0DzqcdP/NRndubvqoLEuFSS+5jqRJNuILuE4VUKSCooaAzOAc
G3U5KX4v3E0FbX0l89dLOOjoRvFPoepUuDzzYea6MAeV9sw2uO2hwjnfy82q
Szko+mRz6QYNKkxRZoXvLeMgY+uAiGAtKrhQU944reCgl0YtBxx1qVByK8H0
wyoOilcNeiRmSoXQK2mxEjIcZJphtorXjAobB423VWAvlFFgjmBLRr0Z8ZDl
IJ9ltV41FlT41FswVSbHQYaD4toB1lTIoJNOnFDgoKn7aV+HTlFhgCV+wFOJ
gywXN6x9dYEKfMI7OgXUOEg46FFYricVeEdd1sZgv/rjs+CeFxUWKnqnKe3m
oG3f1wxf8aZCWXhp9lF1DhIsO1OifIUKfQkitOC9HFR46Y91zA0qeC5XQgNa
HCTavS7KM4QKHTpP6+T1OOj19UJ09BYVtt60F43H9pc0GFAKpUIsL6l5xSEO
+m52aW9/GBU2MMsaprGfVdd+OhFBhUNNtOKawxx0IuvqBsM4KuQ27/585AgH
pV1pTJdPp0LVg6+Xps04yE7cxZQ/gwperoPeDuYctCJ/ZqoLe+7DYt4abL+h
zUbxWVQQ4Xn6NsKCg46cCBgRzaPC3vNoyyZLDhrX2arK85QKv109g9VtOEhr
GbW0oxKvd/uJ44tPcZB9VqRQYRUVFgXKeDhgBxokm4ZUU+H4Gl+FYuxX1MoB
9IYKdv6RJJfTHKQ3x7cyuZYK8lI6w2UOHGQyGuBxoRHPR/OL7lNOHOTY6Ltu
QRcV+o9XrTzlxkEUT4brF+xem0d62dgpy2IKi7qp0NqdoDCFPWjwzMC1lwrv
Zfw54ec46HzF78vv+qiQ/ki6vcydg64Uer+P/kmFhzx+gssucBDzrkeg8jQV
Un7WWXh6c9DEsOPhNf+oUNCj8PE5tt0BO1GBGTx+5g8Bfh8OUhk1SPo8SwWH
D4c9IrCbD29+c5OPBpHFpucfX+Ig6Zme5UOLaGCSPBnWc4WD8s5YJaSspkGS
rM2MkD8HrSk2dglfQwMBt4qBQ9gkkUM7bkjS4F2EeggN2/yFWoXFWhpoXr3L
J3idgyZXifUv2ECDjRcvps1h67yt33ZmEw049gzFvgAOatl+4OX63TTothEy
IpHxemTPlExjn+4s1i7CTlZ89vyjOg00LAP5hrAvySo/Cd1Lg7PRyn0mBAet
FJfImtOkgdHnsn1rKRxk8Wco5usBGlQMxR1Mp+L8L8IvJRyjQYRmp919Bs6v
ccT7mikNqgut19ZhJxcJeVma0WCNylT2JPalXH/35RY02PvGW9+cifM/PHsm
wIoGz93LTwrdxPkJjWMnT9KAUlCk4xSM8xv0bF3vQYMjqOMFTygHEQFE2tLz
NLDJO+azFXtXocLGf9hHLg5PWWJHSJ+TavekwY1epn8OtvnoxKI7PjQY7H9i
Yx2G1yNSoF/QnwaPEDMj5TZ21+aHI0xcv8qimA0ROP/K2rVfbtKgJCGjQQ97
l4FHdG0wDeq67b66Y0c8zg9Nu0WDiQ9tpGfY5lSNGw7hNDC1zR86EonzKRnZ
tsbQ4ATh7Op1l4OaLl9Y+TKNBj0+R7fHR+P1/NBcFZ9OA/Wur14l2Nu3aly+
lkGD+u6ciA7sW90LPu7JooGEXcSN1TEcZGAUG/04lwZX19n0h2OXyVRJpRfR
wGnlTkVSLAdl1UnKRlTSoKX8+0HDeA6iylZvc+uigfMOK71bCRz08EZykG43
DcbcWoxSsEs7iOZ1PTQIln2h+RJ7IvyAX1MvDTa1Kbb/xD7FX16l2U+D8Cl+
IaMHHLTvW4nd8hEa5Oy6bbDgIQeNJuczC6dp0HA1TdjpEb7v+G5/ufWPBhl6
/O5+2JvsPbe7ztDA5TflaSi2/SqVVuk5Grgjc7Fi7FpqlgyNjw47Vx3uWpqI
z6dz6jPrRXSIo+zozse2VbzXN7uKDmt7W4SGk/B9ruX49IcEHSI4Pjk8yRwk
a6pEb1tNB9/xcFiJPeD3XLFAkg6vF6Vt2o99ua7F3WkdHYbUn/GHYoddWDZR
K0+HDqEuQeUUDqp8EjAXvYsOK32z39qk4vtYx2G1qikdjOSMcoLScX//YWkR
Mzo8Hd5RGYY9XnRZ7ic2Yy1Rl4BdpHRzW6oFHZx7kgtfYKOVhbpS1nQoTHD6
9hfbZEDAi/8UHSor++rdMzjo4q30miYPOrzYcU7OMBPHd4z6+TDo0Bh1k/4t
C893vcPsGSYdpJ+rPxjDXlzWHGR2kw67OgIzZ7Htk5/Rd4bQYYnE+nurszlI
yDPw7mgYHbJo0z8Nsa0ERArco+lgTk46loc9qaIy6JhKh9WHHH09czhIk+Jh
aVFFh7saDf0Nufj952t9HarpoH9SXOITtqvHwUSl13T4RVbV+o5910L6F28N
Hegjcucnscfk66k5dTj+YdMZmTy8XtVbi4Sa6dAS55d2AVtk4bB4cQ8dolUi
mwXy8fuH6da4jocBAzvlr0sW4Pdl0hrlKezVZzPWymKLsN7QWngZ4B3/74ki
tsaEglYwPwMme+Va92CH2famTgoy4EMIqj+OrbnV7nrzUgYcCBuOv40dUX9k
M1OKATz9qf18j/F9J7LjBmc3A24n7DvTgv2g5/XxXnUGjJ0tVfyMPVNor/Jh
DwM0Ze4N9WA/sw7uytJgQF3GfdtR7G2J/TqO+xnwM440vbgQ37+77ws1HWRA
FU+4KsIetV1yO8+cAR6xFTGJ2PdSvyeeu8gA45DftBNP8PgSUP5hbwYMydZk
OWAfj455ucmHAWdHPtY7Yy9jHGnvvcSAPu2qBRexA9yeLLPzZYCZ6W09KvZp
ZYqvUSAD9PMSRHOw5R9vNFa+xYBpj6jeKezsl2emRtIZEFGw0JBZhPf3M/WM
NxkM2PM31+8W9v6CJTaPMhkgFHMrNRy7Ifnxc4tsBlhFCUzGYrOD+X1L8xhw
vuTMtUxsDdvEP4ynDHgjOcapxa7+08PeWMWA9uq0ssVPOahru8Mvmy4GrAgI
8ArEHuuRlj7UjevzD9chsPki2w1UexiAIpVW0LHlJk1SlnxjgIZ6fEoo9tly
dKK0nwFOofTs+9jDx6RrpX8xQHm2dlcp9t+LbSldMwy4WDq6m4O94slR+7NS
TFCcTG46+YyD/jxbMHvDlAnKCT5yy59zkH7mDO8lMyacO6Q7sQI79t5vgXPm
TLhT9bhMHFuTNLDU8jgTLK8+NJfEJhnWSavYMKHgh4qTPLZw5x2tr6eZgN7M
bt2HLcsvdx15MaFumGPvhO3NkQpSu8gEnQq/MWfsyn5xipI3E9pyfwW5YTvX
CYZIXGICX4Vz/AXsrMih+F9XmfDzoF+pL7b65oLShEAmfNGzeBqCTZfMLIsM
YsIr2Z5tYdgdwkmVN0lMeLH5flI4tv9YZN0VggleQU+YUdivin0/G9OZMJr9
TOchtlj2xa6DDCYMWx7NSsR2TDj3bR+TCdmuQ2Ip2ELEieFNwbjexrefM7Ct
Lh8flQ5hgt7ezfuzsTNcjNlit/DzxdD9XOxpG/2/i0KZIGq6eCYf2+iI9r85
bINuP5tC7P8B5fQfvA==
                 "]]}, "Charting`Private`Tag$128471#1"], 
              
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                Line[CompressedData["
1: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
                 
                 "]]}, "Charting`Private`Tag$128471#2"]}}, {}}, {
            GraphicsComplex[CompressedData["
1:eJxdl3tM1WUYxw8IBiJ5gINIhnLTEd4YRfOCnLPIC2mOeQ/lFErQYg61SYIt
SpRSJAGZIaGTsImKJKaIweRkisCY0pg5b1wMBK2GIUPxWp3n9/2+8/AP++z7
8H7f3/s+z/s8+K1KXvihvU6nW2Gn0/3/e7+5qCfMkGEqHzh64/nzAMuCiuSp
+QcVQ/f0PfSea5cfdTD0h3lzj4blj6UOhl7XFXEw2jyaOhh6/tSw4qQgL+pg
6KuyJnyX2edOHQz9g5rI4MhUV+pg6E/iQsakujpSB0MPGTE90Bw5WAsdDL35
xPhR+VfaqYOhW4SN0MHQg2Q96mCen+zHxPPTGPpK+R7qYH6/nAd1MPQ8OU/q
YOjn5D6og6EPyH1SB0M3SD5QB9vkl8kmv0xRJ49bMhs3a/fpbwHXW8/Pl/y+
9Xt9yJOs5+dNfmw9L09yg/Xv9eTJ1nhncqNV15GbrHyvFqyz/jTXgM+JbgTX
yd9z/8GyPvmC+JMHZX/kCbJ/cqx8n8nm+8lxcj5k2/NDvYJRn2DUI/ev1R8Y
9fbifbiTUU9g1A8Y9QJGfYBRD2DkP/en5TsY+U1/LZ/ByF/ej5avYOQnGPn4
4KVMfVdsBvPtxffE3wId+QcdDB35CB0MHfkJHQwd+QodDB35Cx0MHfkMHQwd
+Q0dDB35Dh0MHfkPHQwd9cD3QmPoqA++9xpDR71AB0NH/UAHQ0c9QQdDR31B
B0NHvUEH29y/yeb+qaMeoYOTu4vcntSqevTxO1DhdEz102EJO8t0ls2my9W7
w4d4K+6NsQw6N/mTZ3TlntY/8yUv2VKd4lWheLbPK2vC63zIG1es6Y6aqNiw
Vp+4LMdbxZev7ogfGEW+dXZo3PoYTxVvF3M93WIgH/N8GpMd6KbiF0VfLtyu
Jz9uvn0o+qYzOe7d7H1Jh5zI36a07M1cZ0d+2peaVzxTR46f+kVAqktfLThh
VaG3eU4v+eK0gpPRET+RFwgbwUslnrxS1iMPip8JvEv2Q46V/ZIfyPeQ2+V7
yeVyHmR3OS8VL+dJflvOW8XLfZBT5L5UvNynyea+yVo+kLV8IbdIPqn9av0B
jH4ARj8Aox+A0Q/A6Adg9AMw+gEY/QCMfgBGPwCjH3B/Wj/g/Wr9gP5aPwCj
H4DRD8DoB8x3rR+gXvH+87zr3pqRcVXV51fRhsfbXPwtiEc/gF7SO7Mq54w6
39b7Y+5N7hjL+sf6m7+vGOnwH587FXs3sCOAPL9xU3acm+Jn5sF5PUNU/Mb5
10uPtPhzPfhDn9ixPDG0zo98/H7KsOQBpTfq7+T++dtYcuuG38edrvLl96B/
MV9D138cPkflR9lsz7tRR0bTH/FYb7xnaX36UrV+6PTOlwcrlV6wui1raNFo
8o6IklnZM3zoj/7IetryUfwyN5WPaXtcOuM3eNEf8VivP3Hf2UJftb4u+5qT
4UulJ1Re3uqX4EWOyd1jLHX0pj/6L+vnitm8/vpI8ty/7FrTjR70RzzWO/tz
fs3JuyPJF9ua7afMU/obzk3p4SEe5KDOndN+vWSgP/o7/D4LXrI8+wdVb5M+
v/djmMfL9Ec81stxzapsPuFOLgq98CTK043sWLXlfnm/K3ngzczXW/fo6Y/5
ge/lo90HotuGkxsCbpYkHXSkP+KxXrXFPu7K0+HklmGb/m44o/Ti2HXdnV87
krd5DMb0XXCiP+YT+E3Zn1GQ+YkDuT5v15TITx/Vwh/xWG9ZQu9i1zwHcvKx
xI7nC+1U/QytqQyb/qgWPO5014KglTr6Y/6BX0FW+6jUEQ/J9jVXJ5uNf9Af
8Vivx6sqN3P+Q7KhrPRw0sV/yPElwTMjz98iO2yKckn9pbcW/piv4Be+ots+
v+0G/V8VNsIf8Vgvbces2w0tN7n+8TsR0X3Xyskxohup91h1I/wxv8Gvr9r6
veQcOQ/6Ix7rLZbvI/enWb+P3C7nQx4u50N/zIfsD3Lf9J8g+WCCP+Kx3lq5
X67vJ/dLfZHkBzlJ8oPvP+ZP+J2XfCfvlHqgP+Kx3l7Jb/JWyW/yKakP8iWp
D/pjvoXfa1Lv5DR5D+iPeKxnJ/VN7pf6Jn8j7wO5UN4H+mN+5rwo7x25TN5D
+iOe7728b+Tx8r6RLfI+kpvkfaQ/5nPOs/Lek1ulH9Af8awved/Jy+V9J/dJ
fyA/22HtD/TH/A+/w9LvyHrph/RHPNbbLf2NvF36GzlQ+iM5RPqjyWaeoN8N
mR/IxTJfmGz6P9erl/5O1vo7OVjmA7I2H9Af/7/YzDtq/pR5iP6It5lXyNq8
QtbmHfI7Mu+QMa+CMa+CMa+CMa+CMa+CMa+CMa+CMa/yPrR5FYx5lfmrzavs
39q8yv1p8yoY8yr9tXkVjHmV56PNq+zP2rzKfqLNq/8CkEyeCw==
             "], {{{
                EdgeForm[], 
                Directive[
                 AbsoluteThickness[1.6], 
                 GrayLevel[0.09], 
                 Opacity[0.06]], 
                GraphicsGroup[{
                  Polygon[CompressedData["
1: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
                   "]], 
                  Polygon[CompressedData["
1:eJwt1Pdvz0Ecx/E7oxqjGqOaWqVKqbYoLUpbRbVmEBEREUREhEZEYu89Wnv7
JwgxYoQYIUaIEWKEGCFGiBFiPF95v3945F73zefzubv33X3bTa0aM6dWCGE4
6uAe7mMC6mMF7mAAcvAQD9DQn7mBmxiPRDzHMyRhIj7gIyYjGedxDgkYi8/4
hCb+zCVcxjh/ZhmuoRRd8RM/0AxT8A3fPesb6/AOg9ANt3HL16I5rsELDEQe
VuERypCLJ3jqc9caz+Csz1X1WYILKEE23uKNr20SXuG1Z9XgKq54bbSmDfiC
weiOEziJ0dA+FMUQDtL2xSjsQBq/DaUt0Djkxkgjz0C11ka/grYnUskt0Io8
E83JKdGy3mlETor2bqrqSi5BR/I8HNDY9Ef6HLaprvQraXthi+ZJfwhtPvqT
i6O92wF1yQmYTk5BIP/zPA2ZGguzyW2QTm4bLc/SnpHz0J5chSxyJ6QHe6c3
uTDaWHM1J3JBtKx3Wutb0b6lGuxDD/ojaPsgh5wb7dv6ZiK5XrRaaM4VWhuy
yPO1T+TyaFk1OqSzEm1virAAR1QHdMZRLPRcjItY6melFMexGF38DG3CL5Rr
nmjJt3f6Xg/TOaV/2Mfqhwz6u2kLg93ZbPp7VZdga2xKf7vvlc5Mbfpbfa90
RhrQr/Gzoj39io1+FjWH0zgV7KzrTO7RXKONpTH+4K/vpe7gIhzztWpN+Ty7
32utM/QSa4PdNd3Ju1gZ7L9Ed+43NvvadabeY32wu6s7ch3Lg919/Qc9xupg
d1V3eJf2PVqtVJP/qo10KQ==
                   "]]}]}, {}, {}, {}, {}}}], {}}}, {
          DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
           AxesOrigin -> {500., 0.}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, PlotRangeClipping -> True, 
           ImagePadding -> {{60, 15}, {30, 10}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {500., 0.}, 
           DisplayFunction :> Identity, 
           Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{"Relative", None}, {None, None}}, FrameStyle -> 
           Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{60, 15}, {30, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotLabel -> 
           "a) Symbiont biomass C-/N-limitation", 
           PlotRange -> {{500, 850}, {-1.7129318332865526`, 
             1.8881004079386938`}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], {
         1366.5, -586}, 
         ImageScaled[{0.5, 0}], {931, 585}]}, {
        Inset[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
                Line[CompressedData["
1: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
AaWruov2YltYGk9MYwcOH7Sn/B8h+2TY
                 "]]}, 
               "Charting`Private`Tag$128588#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                Line[CompressedData["
1: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
                 "]]}, 
               "Charting`Private`Tag$128588#2"]}}, {}}, {
            GraphicsComplex[CompressedData["
1:eJxdl3tM1WUYxw8IBiJ5gINIhnLTEd4YRfOCnLPIC2mOeQ/lFErQYg61SYIt
SpRSJAGZIaGTsImKJKaIweRkisCY0pg5b1wMBK2GIUPxWp3n9/2+8/AP++z7
8H7f3/s+z/s8+K1KXvihvU6nW2Gn0/3/e7+5qCfMkGEqHzh64/nzAMuCiuSp
+QcVQ/f0PfSea5cfdTD0h3lzj4blj6UOhl7XFXEw2jyaOhh6/tSw4qQgL+pg
6KuyJnyX2edOHQz9g5rI4MhUV+pg6E/iQsakujpSB0MPGTE90Bw5WAsdDL35
xPhR+VfaqYOhW4SN0MHQg2Q96mCen+zHxPPTGPpK+R7qYH6/nAd1MPQ8OU/q
YOjn5D6og6EPyH1SB0M3SD5QB9vkl8kmv0xRJ49bMhs3a/fpbwHXW8/Pl/y+
9Xt9yJOs5+dNfmw9L09yg/Xv9eTJ1nhncqNV15GbrHyvFqyz/jTXgM+JbgTX
yd9z/8GyPvmC+JMHZX/kCbJ/cqx8n8nm+8lxcj5k2/NDvYJRn2DUI/ev1R8Y
9fbifbiTUU9g1A8Y9QJGfYBRD2DkP/en5TsY+U1/LZ/ByF/ej5avYOQnGPn4
4KVMfVdsBvPtxffE3wId+QcdDB35CB0MHfkJHQwd+QodDB35Cx0MHfkMHQwd
+Q0dDB35Dh0MHfkPHQwd9cD3QmPoqA++9xpDR71AB0NH/UAHQ0c9QQdDR31B
B0NHvUEH29y/yeb+qaMeoYOTu4vcntSqevTxO1DhdEz102EJO8t0ls2my9W7
w4d4K+6NsQw6N/mTZ3TlntY/8yUv2VKd4lWheLbPK2vC63zIG1es6Y6aqNiw
Vp+4LMdbxZev7ogfGEW+dXZo3PoYTxVvF3M93WIgH/N8GpMd6KbiF0VfLtyu
Jz9uvn0o+qYzOe7d7H1Jh5zI36a07M1cZ0d+2peaVzxTR46f+kVAqktfLThh
VaG3eU4v+eK0gpPRET+RFwgbwUslnrxS1iMPip8JvEv2Q46V/ZIfyPeQ2+V7
yeVyHmR3OS8VL+dJflvOW8XLfZBT5L5UvNynyea+yVo+kLV8IbdIPqn9av0B
jH4ARj8Aox+A0Q/A6Adg9AMw+gEY/QCMfgBGPwCjH3B/Wj/g/Wr9gP5aPwCj
H4DRD8DoB8x3rR+gXvH+87zr3pqRcVXV51fRhsfbXPwtiEc/gF7SO7Mq54w6
39b7Y+5N7hjL+sf6m7+vGOnwH587FXs3sCOAPL9xU3acm+Jn5sF5PUNU/Mb5
10uPtPhzPfhDn9ixPDG0zo98/H7KsOQBpTfq7+T++dtYcuuG38edrvLl96B/
MV9D138cPkflR9lsz7tRR0bTH/FYb7xnaX36UrV+6PTOlwcrlV6wui1raNFo
8o6IklnZM3zoj/7IetryUfwyN5WPaXtcOuM3eNEf8VivP3Hf2UJftb4u+5qT
4UulJ1Re3uqX4EWOyd1jLHX0pj/6L+vnitm8/vpI8ty/7FrTjR70RzzWO/tz
fs3JuyPJF9ua7afMU/obzk3p4SEe5KDOndN+vWSgP/o7/D4LXrI8+wdVb5M+
v/djmMfL9Ec81stxzapsPuFOLgq98CTK043sWLXlfnm/K3ngzczXW/fo6Y/5
ge/lo90HotuGkxsCbpYkHXSkP+KxXrXFPu7K0+HklmGb/m44o/Ti2HXdnV87
krd5DMb0XXCiP+YT+E3Zn1GQ+YkDuT5v15TITx/Vwh/xWG9ZQu9i1zwHcvKx
xI7nC+1U/QytqQyb/qgWPO5014KglTr6Y/6BX0FW+6jUEQ/J9jVXJ5uNf9Af
8Vivx6sqN3P+Q7KhrPRw0sV/yPElwTMjz98iO2yKckn9pbcW/piv4Be+ots+
v+0G/V8VNsIf8Vgvbces2w0tN7n+8TsR0X3Xyskxohup91h1I/wxv8Gvr9r6
veQcOQ/6Ix7rLZbvI/enWb+P3C7nQx4u50N/zIfsD3Lf9J8g+WCCP+Kx3lq5
X67vJ/dLfZHkBzlJ8oPvP+ZP+J2XfCfvlHqgP+Kx3l7Jb/JWyW/yKakP8iWp
D/pjvoXfa1Lv5DR5D+iPeKxnJ/VN7pf6Jn8j7wO5UN4H+mN+5rwo7x25TN5D
+iOe7728b+Tx8r6RLfI+kpvkfaQ/5nPOs/Lek1ulH9Af8awved/Jy+V9J/dJ
fyA/22HtD/TH/A+/w9LvyHrph/RHPNbbLf2NvF36GzlQ+iM5RPqjyWaeoN8N
mR/IxTJfmGz6P9erl/5O1vo7OVjmA7I2H9Af/7/YzDtq/pR5iP6It5lXyNq8
QtbmHfI7Mu+QMa+CMa+CMa+CMa+CMa+CMa+CMa+CMa/yPrR5FYx5lfmrzavs
39q8yv1p8yoY8yr9tXkVjHmV56PNq+zP2rzKfqLNq/8CkEyeCw==
             "], {{{
                EdgeForm[], 
                Directive[
                 AbsoluteThickness[1.6], 
                 GrayLevel[0.09], 
                 Opacity[0.06]], 
                GraphicsGroup[{
                  Polygon[CompressedData["
1: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
                   "]], 
                  Polygon[CompressedData["
1:eJwt1Pdvz0Ecx/E7oxqjGqOaWqVKqbYoLUpbRbVmEBEREUREhEZEYu89Wnv7
JwgxYoQYIUaIEWKEGCFGiBFiPF95v3945F73zefzubv33X3bTa0aM6dWCGE4
6uAe7mMC6mMF7mAAcvAQD9DQn7mBmxiPRDzHMyRhIj7gIyYjGedxDgkYi8/4
hCb+zCVcxjh/ZhmuoRRd8RM/0AxT8A3fPesb6/AOg9ANt3HL16I5rsELDEQe
VuERypCLJ3jqc9caz+Csz1X1WYILKEE23uKNr20SXuG1Z9XgKq54bbSmDfiC
weiOEziJ0dA+FMUQDtL2xSjsQBq/DaUt0Djkxkgjz0C11ka/grYnUskt0Io8
E83JKdGy3mlETor2bqrqSi5BR/I8HNDY9Ef6HLaprvQraXthi+ZJfwhtPvqT
i6O92wF1yQmYTk5BIP/zPA2ZGguzyW2QTm4bLc/SnpHz0J5chSxyJ6QHe6c3
uTDaWHM1J3JBtKx3Wutb0b6lGuxDD/ojaPsgh5wb7dv6ZiK5XrRaaM4VWhuy
yPO1T+TyaFk1OqSzEm1virAAR1QHdMZRLPRcjItY6melFMexGF38DG3CL5Rr
nmjJt3f6Xg/TOaV/2Mfqhwz6u2kLg93ZbPp7VZdga2xKf7vvlc5Mbfpbfa90
RhrQr/Gzoj39io1+FjWH0zgV7KzrTO7RXKONpTH+4K/vpe7gIhzztWpN+Ty7
32utM/QSa4PdNd3Ju1gZ7L9Ed+43NvvadabeY32wu6s7ch3Lg919/Qc9xupg
d1V3eJf2PVqtVJP/qo10KQ==
                   "]]}]}, {}, {}, {}, {}}}], {}}}, {
          DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
           AxesOrigin -> {500., 0.}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, PlotRangeClipping -> True, 
           ImagePadding -> {{60, 15}, {30, 10}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {500., 0.}, 
           DisplayFunction :> Identity, 
           Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{
             "mol C C-mol \!\(\*SuperscriptBox[\(S\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(d\), \(-1\)]\)", None}, {None, None}}, FrameStyle -> 
           Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{60, 15}, {30, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotLabel -> 
           "c) Fixed carbon shared with host (\[Rho]C)", 
           PlotRange -> {{500, 850}, {0., 1.3864623542211258`}}, 
           PlotRangeClipping -> True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], {
          Rational[931, 2], -1172}, 
         ImageScaled[{0.5, 0}], {931, 585}], 
        Inset[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
                Line[CompressedData["
1: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
zML8P+L8d34=
                 "]]}, "Charting`Private`Tag$128705#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                Line[CompressedData["
1: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
QvV3vHJfTNnWbuXvP5Q7YrYN+VD+P9iPX5Y=
                 "]]}, 
               "Charting`Private`Tag$128705#2"]}}, {}}, {
            GraphicsComplex[CompressedData["
1:eJxdl3tM1WUYxw8IBiJ5gINIhnLTEd4YRfOCnLPIC2mOeQ/lFErQYg61SYIt
SpRSJAGZIaGTsImKJKaIweRkisCY0pg5b1wMBK2GIUPxWp3n9/2+8/AP++z7
8H7f3/s+z/s8+K1KXvihvU6nW2Gn0/3/e7+5qCfMkGEqHzh64/nzAMuCiuSp
+QcVQ/f0PfSea5cfdTD0h3lzj4blj6UOhl7XFXEw2jyaOhh6/tSw4qQgL+pg
6KuyJnyX2edOHQz9g5rI4MhUV+pg6E/iQsakujpSB0MPGTE90Bw5WAsdDL35
xPhR+VfaqYOhW4SN0MHQg2Q96mCen+zHxPPTGPpK+R7qYH6/nAd1MPQ8OU/q
YOjn5D6og6EPyH1SB0M3SD5QB9vkl8kmv0xRJ49bMhs3a/fpbwHXW8/Pl/y+
9Xt9yJOs5+dNfmw9L09yg/Xv9eTJ1nhncqNV15GbrHyvFqyz/jTXgM+JbgTX
yd9z/8GyPvmC+JMHZX/kCbJ/cqx8n8nm+8lxcj5k2/NDvYJRn2DUI/ev1R8Y
9fbifbiTUU9g1A8Y9QJGfYBRD2DkP/en5TsY+U1/LZ/ByF/ej5avYOQnGPn4
4KVMfVdsBvPtxffE3wId+QcdDB35CB0MHfkJHQwd+QodDB35Cx0MHfkMHQwd
+Q0dDB35Dh0MHfkPHQwd9cD3QmPoqA++9xpDR71AB0NH/UAHQ0c9QQdDR31B
B0NHvUEH29y/yeb+qaMeoYOTu4vcntSqevTxO1DhdEz102EJO8t0ls2my9W7
w4d4K+6NsQw6N/mTZ3TlntY/8yUv2VKd4lWheLbPK2vC63zIG1es6Y6aqNiw
Vp+4LMdbxZev7ogfGEW+dXZo3PoYTxVvF3M93WIgH/N8GpMd6KbiF0VfLtyu
Jz9uvn0o+qYzOe7d7H1Jh5zI36a07M1cZ0d+2peaVzxTR46f+kVAqktfLThh
VaG3eU4v+eK0gpPRET+RFwgbwUslnrxS1iMPip8JvEv2Q46V/ZIfyPeQ2+V7
yeVyHmR3OS8VL+dJflvOW8XLfZBT5L5UvNynyea+yVo+kLV8IbdIPqn9av0B
jH4ARj8Aox+A0Q/A6Adg9AMw+gEY/QCMfgBGPwCjH3B/Wj/g/Wr9gP5aPwCj
H4DRD8DoB8x3rR+gXvH+87zr3pqRcVXV51fRhsfbXPwtiEc/gF7SO7Mq54w6
39b7Y+5N7hjL+sf6m7+vGOnwH587FXs3sCOAPL9xU3acm+Jn5sF5PUNU/Mb5
10uPtPhzPfhDn9ixPDG0zo98/H7KsOQBpTfq7+T++dtYcuuG38edrvLl96B/
MV9D138cPkflR9lsz7tRR0bTH/FYb7xnaX36UrV+6PTOlwcrlV6wui1raNFo
8o6IklnZM3zoj/7IetryUfwyN5WPaXtcOuM3eNEf8VivP3Hf2UJftb4u+5qT
4UulJ1Re3uqX4EWOyd1jLHX0pj/6L+vnitm8/vpI8ty/7FrTjR70RzzWO/tz
fs3JuyPJF9ua7afMU/obzk3p4SEe5KDOndN+vWSgP/o7/D4LXrI8+wdVb5M+
v/djmMfL9Ec81stxzapsPuFOLgq98CTK043sWLXlfnm/K3ngzczXW/fo6Y/5
ge/lo90HotuGkxsCbpYkHXSkP+KxXrXFPu7K0+HklmGb/m44o/Ti2HXdnV87
krd5DMb0XXCiP+YT+E3Zn1GQ+YkDuT5v15TITx/Vwh/xWG9ZQu9i1zwHcvKx
xI7nC+1U/QytqQyb/qgWPO5014KglTr6Y/6BX0FW+6jUEQ/J9jVXJ5uNf9Af
8Vivx6sqN3P+Q7KhrPRw0sV/yPElwTMjz98iO2yKckn9pbcW/piv4Be+ots+
v+0G/V8VNsIf8Vgvbces2w0tN7n+8TsR0X3Xyskxohup91h1I/wxv8Gvr9r6
veQcOQ/6Ix7rLZbvI/enWb+P3C7nQx4u50N/zIfsD3Lf9J8g+WCCP+Kx3lq5
X67vJ/dLfZHkBzlJ8oPvP+ZP+J2XfCfvlHqgP+Kx3l7Jb/JWyW/yKakP8iWp
D/pjvoXfa1Lv5DR5D+iPeKxnJ/VN7pf6Jn8j7wO5UN4H+mN+5rwo7x25TN5D
+iOe7728b+Tx8r6RLfI+kpvkfaQ/5nPOs/Lek1ulH9Af8awved/Jy+V9J/dJ
fyA/22HtD/TH/A+/w9LvyHrph/RHPNbbLf2NvF36GzlQ+iM5RPqjyWaeoN8N
mR/IxTJfmGz6P9erl/5O1vo7OVjmA7I2H9Af/7/YzDtq/pR5iP6It5lXyNq8
QtbmHfI7Mu+QMa+CMa+CMa+CMa+CMa+CMa+CMa+CMa/yPrR5FYx5lfmrzavs
39q8yv1p8yoY8yr9tXkVjHmV56PNq+zP2rzKfqLNq/8CkEyeCw==
             "], {{{
                EdgeForm[], 
                Directive[
                 AbsoluteThickness[1.6], 
                 GrayLevel[0.09], 
                 Opacity[0.06]], 
                GraphicsGroup[{
                  Polygon[CompressedData["
1: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
                   "]], 
                  Polygon[CompressedData["
1:eJwt1Pdvz0Ecx/E7oxqjGqOaWqVKqbYoLUpbRbVmEBEREUREhEZEYu89Wnv7
JwgxYoQYIUaIEWKEGCFGiBFiPF95v3945F73zefzubv33X3bTa0aM6dWCGE4
6uAe7mMC6mMF7mAAcvAQD9DQn7mBmxiPRDzHMyRhIj7gIyYjGedxDgkYi8/4
hCb+zCVcxjh/ZhmuoRRd8RM/0AxT8A3fPesb6/AOg9ANt3HL16I5rsELDEQe
VuERypCLJ3jqc9caz+Csz1X1WYILKEE23uKNr20SXuG1Z9XgKq54bbSmDfiC
weiOEziJ0dA+FMUQDtL2xSjsQBq/DaUt0Djkxkgjz0C11ka/grYnUskt0Io8
E83JKdGy3mlETor2bqrqSi5BR/I8HNDY9Ef6HLaprvQraXthi+ZJfwhtPvqT
i6O92wF1yQmYTk5BIP/zPA2ZGguzyW2QTm4bLc/SnpHz0J5chSxyJ6QHe6c3
uTDaWHM1J3JBtKx3Wutb0b6lGuxDD/ojaPsgh5wb7dv6ZiK5XrRaaM4VWhuy
yPO1T+TyaFk1OqSzEm1virAAR1QHdMZRLPRcjItY6melFMexGF38DG3CL5Rr
nmjJt3f6Xg/TOaV/2Mfqhwz6u2kLg93ZbPp7VZdga2xKf7vvlc5Mbfpbfa90
RhrQr/Gzoj39io1+FjWH0zgV7KzrTO7RXKONpTH+4K/vpe7gIhzztWpN+Ty7
32utM/QSa4PdNd3Ju1gZ7L9Ed+43NvvadabeY32wu6s7ch3Lg919/Qc9xupg
d1V3eJf2PVqtVJP/qo10KQ==
                   "]]}]}, {}, {}, {}, {}}}], {}}}, {
          DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
           AxesOrigin -> {500., 0.}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, PlotRangeClipping -> True, 
           ImagePadding -> {{60, 15}, {30, 10}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {500., 0.}, 
           DisplayFunction :> Identity, 
           Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{
             "mol N C-mol \!\(\*SuperscriptBox[\(H\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(d\), \(-1\)]\)", None}, {None, None}}, FrameStyle -> 
           Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{60, 15}, {30, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotLabel -> 
           "d) Nitrogen shared with symbiont (\[Rho]N)", 
           PlotRange -> {{500, 850}, {0., 0.011136437290036428`}}, 
           PlotRangeClipping -> True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], {
         1366.5, -1172}, 
         ImageScaled[{0.5, 0}], {931, 586}]}, {
        Inset[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
                Line[CompressedData["
1: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
mCbu0d+19RDx/wBfaJ6b
                 "]]}, "Charting`Private`Tag$128822#1"], 
              
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                Line[CompressedData["
1:eJwl1nk4VV0XAHBTISq55jKXzPOQZO9lCJmjiBSvNKAyJFHKdQ4HNyqSlKFJ
GSpKUq9UpiRDmRORRIS4Gl4yfjffX+f5PXudc/baa63zHFnvAKf9HGxsbArs
bGx/r4f2n+Zmg0hYrxgUvePYFAJ43fE7NBKcQhyXLLp2zZ3R+5FgLW245DHu
bRP0b5HwalZhyf+chHVnBekwbrJmyXc0Tdw81OmgXTJP/vXoV5NUNWs6aH6a
WnJFHSF3bD8dHHVGlny5oKrgKZ0OssUdSz6cPjtll0WHQaWeJZvE6Zh8eUaH
rHv/N1O3SS7yPR2ig/KXfP3zYa61P+ngN/t2yfaX2W4tXxMFo3JCS/uZt00x
+aEeBTyN+5bWjTUPaTjZRsEteE789WnaFski3ygQ/vU45q/TSkJuicVEgXvK
3aX4Irf7SpHXo2A2KfXkXzcs6zms9yIKMt1jkv568CH/g9HuKPglo5/8152S
N87mTkVB4ibr4KX4eL2D+2kEkF8W4/96u/yK5FR1AkJXzgT+dUdZb9nrbQRI
yr+I+Gt3z/xsq4MEfJA+evyve9lDE95EExBeJrD0vC0+d/i3XyeAVhh89a/T
azoSOp8R8OmNwVK+jsZ5bCXPWU5WWMpvefGpkIsvCeALr6cv1WvCR50oJ2BM
jTPukf0MKlO2Hw6sIOAMl9HQnPocEj1gcNOzkgCzL/1380rnUPANGQ/7KgJm
sm0+vNWcR40feUWMqwnwfv2qbjp3HimK/Xyn8ooAH42LNd/XL6Dec6/MeF8T
YG+zo5lDaRFZR/ipVNcREM3hYBBWxIZvP3EeLKpn5RtZZXl/kQ2z/dxy7UYD
Af8khnBvc2DHJb6raZFvCfjX14Zr8jc7lnUtnjFsIUBXK/BKiTcnjkjOLFZs
JcCEo828tZoTdzRSR0XbCFBM2hvYrsSFE8zd+n+1E8Ckhe54O8eFp7UW3hR+
IMCy8Y16ZO1y7HxkiMzqIsBx0EL7kRk3LshtMk7sJqDudJnenkpu7CN966Ff
DwE3OgdO7qvjwU38Vlc2fCbA4FHLpgRuPqxipeUs1E/A/gKXAxXX+TBFSqzk
/EJAsLrJWWnEj7fMjNH7BgiYj+NOqopZiXOGkg6lDxOQqeNYx6YggDnkT8kx
vhHgURxwdShaAHvs9fkYNkKA9JmUGN+vAliwXd/RZYyA92YfPDIfrsFHBGRW
bP1OwLGwBjJ6rSCuteGt1hknIClPtS8oThCfqew2WMMkgN/irMKYPw1/mK+e
XGS5W4zUq+unYV3DgrvjkwTApar9TnuE8EghXbrhJ2s/efH1W/cKY5fMDdyx
UwQEhsk6rU8TxVJdcfuCpglIeNs6VqElhgdFxl7u/kOAW3/z76/NYjjkQlGY
5iwB6R08h/4oSuAtjcLtEnMEmJJ2XIufJTDninCtZfMEXFfvHe+7vRYnk3jk
wwKrX4bYX55zkcTu5TctqhdZ/U98XOm7TQrLzi+7VcBGwlmXnC6+HdJ42NB3
MY2dhHIeG75eJIMfhDbsJjlIkCtdX9w9LINPPNJ4eoSThEHjgUr8UBYjZrLQ
Li4S7FUfTCXlyuHlav8Fmi4j4bHoFaJ2Qh43+ro1qi4n4R/pYqfbrRtwyp0y
JVFuEpTztTkl9JWwxxdpip2HhFdne1cf+q6J5WXI/lGWferzHU5RgEc8vqIO
XhJsmqrCU2YscNGVbenlK0jILhIWf+FiicM77k3l85Fw5x3H1DtrSww0gR2X
+Eko0W2VbTSyxDyOxx5EriSBsnvR+VzVEjcldPD7rSJBWrz01xNJS3z5jaHv
jtUkLBR9X1u2yhIrmLHJKa0h4aPTa69+pgU210+82CJEwj7c73LnsQXmP8ac
KBMmwSqYFGXescCthc62OSIk5K3iKzFLs8DeShLLIsRIcFD+L5znlAWmr8sJ
3bCOdX5FkM5tYoHLOCrcwuRJ8Gxdcajz7Vas8+6XtJQ2Kz8v3Htn0hzPaK19
OM3yB64fFfyD5rg8xcS0VYeEETOX6pOd5tjW/ZxPnB4J3DnhogEvzfGBwY15
PzaR0LBQm/I00Rynzbprv8Yk/PzP9HW9ijme21hhHmhHwsaJo4zOI2b4FT3R
t/IQq95fTe2zeExxW3p6WKEvCYWMmmGueRPcX5IXm+FHgp+7de2xSRO8MPbq
duhhEoIzgjb7dZlgA7eFz8qBJOj4263/954JztMKcL94goQeaYPGTicTnNjv
aONDkVBgoKw7mg04Y36v+/ZYEp6+5jO2vQo4X+yIL4oj4Sq6lFF8HnCNfXys
GIME+Ytdm9NPAl4srahqSCThTUrZ2peOgIMuam/Ru0RC/Kl0kcdzGNMLwEYu
lYRSlfgg92GMz72xd199mYSUiOFTK9swzl/0C/uWRsLvgHqvjLsYf/G/VZyZ
QcJp3tXPd+/GeKe5kNrybFa/HoyknJ8j7B0zGPiF5ST2eQ/xuwgH1pQUl98m
YRFXOoykIcywcttyKoeEVOEa1/shCF+OV6bvymX1V2SdyzVvhLPrZqv08kjQ
mOE2z3BE+IVtlg0zn4TIkfzSElWE6xMDzjfeJWFuZkS1TQLhzrfQmn+PBElX
fq85HoQHVwuKxt0ngU1gg5XGlDH+4fjFfX8BCY86PD8cHjTGi0nFWaaFJNx8
sm7F41ZjzN8a0y/9gIRlze8tAiONsbiQq8I8y29q/CPvjhhhhZ2Kfl0PSZBq
z1E2YxhhndQ/958UseZjvnOdyiEjDO/rJlMeseZ7WYBV83YjbCeWoRdcTMKz
8AqLJmMj7O52JNzhMQnu8PKaq7IRPngVPVctIWFT+YNaPlEjHNK9mn3FExK0
/a1Pd3Ea4fN7iuKqn7Lm68SzgWc9m/H0/i05BS9J0LVfOFlhtRkvy1k5erac
VZ/Shro4/c1YcLhX3beChCuVNfYH12/Gqn5RJfJVJLR5eQb4sW3GXkdrXqXV
kCA8vjYs4V9D/CbUcYBoJIHzxENVd01DfDXWR9a1m4SD5NHDLZqb8ARd8ovF
RxK0pCpigmU2YfOTHdn6PSRYSkbwaQlswuOHrRRFPrHuj40z52UaYFMnVY32
fhKSVzsMr39ogEfX/driPEJC9XTx4vdNBnhLEbnL4Q8Jx2OOaI976OOku1sk
8Ayrfo5Ho/846OOv2b+71WdJyAxorRE308cXLh/0XDVPQkYg/1iqkj4eiLA5
0MgWDd0ZXSohU3o4wZIWYsMTDR5Tco0oVQ/3fLx53lI0Gu5IsR2/+FEXZ71v
/6ktFg2772wUOtasi71aeHZJiUeD7LvDD3fV6OKB10dlfktEw2sOizHdB7p4
pGjzw5tS0VDJsUFVJVoX/xfX0jK/IRrOMnmvfVXVxQJ6HCLFutGQamGo2kzX
waaJ/2TIOEVDsmVPepWmNvZ4/u3D8vhoSOvtX+1RpYFDFj2TEqqjYa45/UGn
lQo2qbgWLj0XDeqR1xacbmzEWr2ebOnaMeBqI2JrTa7H0itXsZcciYHEe+nv
HdNkccWzGO3e7BgoXN2XvOeMFP4nYrTndl8MvLd/HHpKUAI3CdGuXfgcA98c
LYTMOSQw3N/sdao/BjZvou8U+iGOpXrj+x0HYsDqWVJ4fbM47sKKQ7NDrHW0
Z19ykjh24tzP3D4RA6ULHKVBguLYlNHLsTAfA0NqoildYmL4odzy6uGFGNDb
wPH6KK8YlnmmFtO6GAPTkSfSuGdE8cJoBHceOwULHm5xFt2iuNRuLf+OZRTk
BFfe+50pinXW7BLO56fgxAWBGz/lRfH6tOaNLmspWNRfQ7RpiuBklzJJrXUU
OImdXpUpJ4LZhHNo/JIUpFaPrfMWEsEfkyIWK6QoODDwg7dvShhfPLvxvZoc
BeflAk5lvBDGHJGnqWVKFOhrv3OIsRbGgcaHIvpY9ufScm8wEsa9s07Bz5Qp
kCmYyeVUE8alYYp7g1QpSJncnmO8WhgHBbfq9WhQ8GCoJqGwRQj37VcaLNan
oMHLL3ensxC2Xy/Ufd6AgqeqR/3jTIVwWf9Ck98mCjbVMnmOawnhNM+2MpnN
FKzTSEt2WSWEl0u9LJplua9774juHA2HfMzL7TCiwFxJLT/rGw07uEWmJBhT
0OxSG1pbScNlon6Mg4iCTluXQZcCGlbu2EE3xRTcWpUQvuIKDael4FBJoIDI
edFcQtDwcmflw9MsdxR9MJBl/Q+FrBH2bjWhIGzjxOLMdhruf7foWmDKOl/v
723v9WnY8dyIXbwZBXYdA+ulxGms72e7mY85BZL57S6jU4JYla/cEG+lIC/k
Je1zsyC++iZfQ8KCgt5TtuqV2YKYJ+7Sht8snzS5PJt1WBCHWtDXNlmy3h8o
Qn8rK4gHuPzX3LWiQKev6bPyozXYqWonN7WNgs2WKbfbmQK4PArmvawpUGoj
Pl9XWIXVQOWnkQ0FWbc3iXriX+jqgvA3EVsKWpoMPXao1SOe52yfJln2SzVw
FqqqQ6GnRtsa7CjQVDyuElpbhwYMO+py7CnYbzVwoOZdHXKaLi8nHCgolD3s
q/i+DpWX3C3Z40gBU+Ffx5TeOpShE3WT5kTByDeRI/HfWfH5ziLszhSUnv+X
q+R3HeKRVWCMs1zvHy45Pl+HQlbVB73ZScHHzj1d9FX1yOabkEmkGwVfG+tf
amrWo5ms3E8jXhTIbZU8WXa8HrmuaFpXGUCBV3t34RXeBsQfdfNCYSAFH3Zf
+W5Ea0CVUyFcmUEU0PS4aSPrGpD6oPjYiWMUwPmvG/w0G9Dy8n3P1E5QEMln
3ffHtQEVH59yu3KGgkyQ8dud14AEP0tdDkykwDJRjN1iZyN6fboY25+j4NA9
CbdCz0YUIWE9rHKeAqH/2hLk/RrRoPNxw6ELFAjuLEtVjWxET2vqu/ekUGAs
5JtZkdeI9twLk7FJp+Cdy8LzGba3KPdES96GPAquRynoVT15i4xXUWVd1RTs
CFJqeyrfhPbeu8Rd/IqC8bjmXD3lJkS3vu2UWENBnE6v5FPNJlRJVQ/jWgpW
PrIdbzRuQhaLHMK36ynQQN42xruakCMz8khACwXubLHsqueakE9LuBRXHwUW
iyP9jgtNiJF6hK42S8Evz18fByea0c8xn23icxTwpXkLRU43Iw8zD8Fl8xT0
lHnJS7O3IA2mdfbHBQoeXYmtPSbYgtq2Kdae5YiFk2JJmgF6LUhyvn/1CG8s
GJlp7yuIaEEP9u26dkcsFtqez8/bCLSidk2zF9L6seDfadnYZtOG2q37VaWP
xMJPBd+dRr0dqDU0QPhFbiw8HnQ5VMvZhSi5GnW/vljwFhlPsjHsQbuVMr8u
iMTBU9np50ct+pC6qbeYjlMchG912HlRvh+VdDFPhsTHQey4mebpr1/Qlpgj
rjtfxYGA1rsVxo2DaJDh1yLFFg/vn9Sl0G4NIVMBrTO/9eNBQ+GYpYz9N5SZ
M3jLPzgeND9NTxWuHEX3X+ybGc+Lhw65XcblWWOoT9N7wr0vHpSM9xDpIuNo
zWP7vQfWMmBFsmtQ7pUJNPWUa+GMEwPmr9v3bDrBRFZ359mPOzPgtMvebomT
THQ1879l/jsYMPmEW2Augom2EMMrXV0YsF/ZZV0ZwUSETYOkhjsDKidK8rTP
MRF/70XjT/8wwN1o4cKfbCaS45Q/jYMYMH3825/xZiY69nttlF4wAxpe2sY/
aWOi6iGhGJVjDPgam20X+Z6JDjYsTxQ9zoCZrOMh/D1MdO/SSMZEGAM8G27q
SA4zkYFiUdk1OgNksjeqii0wUZzE3fJLUQzwu4yYrWyTqIs/u/oswQCavv/w
Oc5JFDF5qeFENAPyg1JCOHgnUWVp+EeHOAY0+cxPf6JNItr94L6t8QwYEpRw
vyQyiXyu+Q8YMRjAFsX9fZv4JOKO3jO2MYEB37eF5z6QmkS7Ql2YkokM+GEn
1uwtO4nyDzn8op1jwJfwJypC6yfRrLvVNO95Boxd3ve0WmES2dqZzC2yXGas
dCJEaRL9D49BgGw=
                 "]]}, 
               "Charting`Private`Tag$128822#2"]}}, {}}, {
            GraphicsComplex[CompressedData["
1:eJxdl3tM1WUYxw8IBiJ5gINIhnLTEd4YRfOCnLPIC2mOeQ/lFErQYg61SYIt
SpRSJAGZIaGTsImKJKaIweRkisCY0pg5b1wMBK2GIUPxWp3n9/2+8/AP++z7
8H7f3/s+z/s8+K1KXvihvU6nW2Gn0/3/e7+5qCfMkGEqHzh64/nzAMuCiuSp
+QcVQ/f0PfSea5cfdTD0h3lzj4blj6UOhl7XFXEw2jyaOhh6/tSw4qQgL+pg
6KuyJnyX2edOHQz9g5rI4MhUV+pg6E/iQsakujpSB0MPGTE90Bw5WAsdDL35
xPhR+VfaqYOhW4SN0MHQg2Q96mCen+zHxPPTGPpK+R7qYH6/nAd1MPQ8OU/q
YOjn5D6og6EPyH1SB0M3SD5QB9vkl8kmv0xRJ49bMhs3a/fpbwHXW8/Pl/y+
9Xt9yJOs5+dNfmw9L09yg/Xv9eTJ1nhncqNV15GbrHyvFqyz/jTXgM+JbgTX
yd9z/8GyPvmC+JMHZX/kCbJ/cqx8n8nm+8lxcj5k2/NDvYJRn2DUI/ev1R8Y
9fbifbiTUU9g1A8Y9QJGfYBRD2DkP/en5TsY+U1/LZ/ByF/ej5avYOQnGPn4
4KVMfVdsBvPtxffE3wId+QcdDB35CB0MHfkJHQwd+QodDB35Cx0MHfkMHQwd
+Q0dDB35Dh0MHfkPHQwd9cD3QmPoqA++9xpDR71AB0NH/UAHQ0c9QQdDR31B
B0NHvUEH29y/yeb+qaMeoYOTu4vcntSqevTxO1DhdEz102EJO8t0ls2my9W7
w4d4K+6NsQw6N/mTZ3TlntY/8yUv2VKd4lWheLbPK2vC63zIG1es6Y6aqNiw
Vp+4LMdbxZev7ogfGEW+dXZo3PoYTxVvF3M93WIgH/N8GpMd6KbiF0VfLtyu
Jz9uvn0o+qYzOe7d7H1Jh5zI36a07M1cZ0d+2peaVzxTR46f+kVAqktfLThh
VaG3eU4v+eK0gpPRET+RFwgbwUslnrxS1iMPip8JvEv2Q46V/ZIfyPeQ2+V7
yeVyHmR3OS8VL+dJflvOW8XLfZBT5L5UvNynyea+yVo+kLV8IbdIPqn9av0B
jH4ARj8Aox+A0Q/A6Adg9AMw+gEY/QCMfgBGPwCjH3B/Wj/g/Wr9gP5aPwCj
H4DRD8DoB8x3rR+gXvH+87zr3pqRcVXV51fRhsfbXPwtiEc/gF7SO7Mq54w6
39b7Y+5N7hjL+sf6m7+vGOnwH587FXs3sCOAPL9xU3acm+Jn5sF5PUNU/Mb5
10uPtPhzPfhDn9ixPDG0zo98/H7KsOQBpTfq7+T++dtYcuuG38edrvLl96B/
MV9D138cPkflR9lsz7tRR0bTH/FYb7xnaX36UrV+6PTOlwcrlV6wui1raNFo
8o6IklnZM3zoj/7IetryUfwyN5WPaXtcOuM3eNEf8VivP3Hf2UJftb4u+5qT
4UulJ1Re3uqX4EWOyd1jLHX0pj/6L+vnitm8/vpI8ty/7FrTjR70RzzWO/tz
fs3JuyPJF9ua7afMU/obzk3p4SEe5KDOndN+vWSgP/o7/D4LXrI8+wdVb5M+
v/djmMfL9Ec81stxzapsPuFOLgq98CTK043sWLXlfnm/K3ngzczXW/fo6Y/5
ge/lo90HotuGkxsCbpYkHXSkP+KxXrXFPu7K0+HklmGb/m44o/Ti2HXdnV87
krd5DMb0XXCiP+YT+E3Zn1GQ+YkDuT5v15TITx/Vwh/xWG9ZQu9i1zwHcvKx
xI7nC+1U/QytqQyb/qgWPO5014KglTr6Y/6BX0FW+6jUEQ/J9jVXJ5uNf9Af
8Vivx6sqN3P+Q7KhrPRw0sV/yPElwTMjz98iO2yKckn9pbcW/piv4Be+ots+
v+0G/V8VNsIf8Vgvbces2w0tN7n+8TsR0X3Xyskxohup91h1I/wxv8Gvr9r6
veQcOQ/6Ix7rLZbvI/enWb+P3C7nQx4u50N/zIfsD3Lf9J8g+WCCP+Kx3lq5
X67vJ/dLfZHkBzlJ8oPvP+ZP+J2XfCfvlHqgP+Kx3l7Jb/JWyW/yKakP8iWp
D/pjvoXfa1Lv5DR5D+iPeKxnJ/VN7pf6Jn8j7wO5UN4H+mN+5rwo7x25TN5D
+iOe7728b+Tx8r6RLfI+kpvkfaQ/5nPOs/Lek1ulH9Af8awved/Jy+V9J/dJ
fyA/22HtD/TH/A+/w9LvyHrph/RHPNbbLf2NvF36GzlQ+iM5RPqjyWaeoN8N
mR/IxTJfmGz6P9erl/5O1vo7OVjmA7I2H9Af/7/YzDtq/pR5iP6It5lXyNq8
QtbmHfI7Mu+QMa+CMa+CMa+CMa+CMa+CMa+CMa+CMa/yPrR5FYx5lfmrzavs
39q8yv1p8yoY8yr9tXkVjHmV56PNq+zP2rzKfqLNq/8CkEyeCw==
             "], {{{
                EdgeForm[], 
                Directive[
                 AbsoluteThickness[1.6], 
                 GrayLevel[0.09], 
                 Opacity[0.06]], 
                GraphicsGroup[{
                  Polygon[CompressedData["
1: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
                   "]], 
                  Polygon[CompressedData["
1:eJwt1Pdvz0Ecx/E7oxqjGqOaWqVKqbYoLUpbRbVmEBEREUREhEZEYu89Wnv7
JwgxYoQYIUaIEWKEGCFGiBFiPF95v3945F73zefzubv33X3bTa0aM6dWCGE4
6uAe7mMC6mMF7mAAcvAQD9DQn7mBmxiPRDzHMyRhIj7gIyYjGedxDgkYi8/4
hCb+zCVcxjh/ZhmuoRRd8RM/0AxT8A3fPesb6/AOg9ANt3HL16I5rsELDEQe
VuERypCLJ3jqc9caz+Csz1X1WYILKEE23uKNr20SXuG1Z9XgKq54bbSmDfiC
weiOEziJ0dA+FMUQDtL2xSjsQBq/DaUt0Djkxkgjz0C11ka/grYnUskt0Io8
E83JKdGy3mlETor2bqrqSi5BR/I8HNDY9Ef6HLaprvQraXthi+ZJfwhtPvqT
i6O92wF1yQmYTk5BIP/zPA2ZGguzyW2QTm4bLc/SnpHz0J5chSxyJ6QHe6c3
uTDaWHM1J3JBtKx3Wutb0b6lGuxDD/ojaPsgh5wb7dv6ZiK5XrRaaM4VWhuy
yPO1T+TyaFk1OqSzEm1virAAR1QHdMZRLPRcjItY6melFMexGF38DG3CL5Rr
nmjJt3f6Xg/TOaV/2Mfqhwz6u2kLg93ZbPp7VZdga2xKf7vvlc5Mbfpbfa90
RhrQr/Gzoj39io1+FjWH0zgV7KzrTO7RXKONpTH+4K/vpe7gIhzztWpN+Ty7
32utM/QSa4PdNd3Ju1gZ7L9Ed+43NvvadabeY32wu6s7ch3Lg919/Qc9xupg
d1V3eJf2PVqtVJP/qo10KQ==
                   "]]}]}, {}, {}, {}, {}}}], {}}}, {
          DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
           AxesOrigin -> {500., 0.}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, PlotRangeClipping -> True, 
           ImagePadding -> {{60, 15}, {30, 10}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {500., 0.}, 
           DisplayFunction :> Identity, 
           Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{
             "mol N \!\(\*SuperscriptBox[\(L\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(d\), \(-1\)]\)", None}, {None, None}}, FrameStyle -> 
           Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{60, 15}, {30, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotLabel -> 
           "e) Waste nitrogen from symbiont", 
           PlotRange -> {{500, 850}, {0., 0.000712244817049863}}, 
           PlotRangeClipping -> True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], {
          Rational[931, 2], -1758}, 
         ImageScaled[{0.5, 0}], {931, 586}], 
        Inset[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
                Line[CompressedData["
1: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
A9y1PYI=
                 "]]}, "Charting`Private`Tag$128939#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                Line[CompressedData["
1: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
                 "]]}, 
               "Charting`Private`Tag$128939#2"]}}, {}}, {
            GraphicsComplex[CompressedData["
1:eJxdl3tM1WUYxw8IBiJ5gINIhnLTEd4YRfOCnLPIC2mOeQ/lFErQYg61SYIt
SpRSJAGZIaGTsImKJKaIweRkisCY0pg5b1wMBK2GIUPxWp3n9/2+8/AP++z7
8H7f3/s+z/s8+K1KXvihvU6nW2Gn0/3/e7+5qCfMkGEqHzh64/nzAMuCiuSp
+QcVQ/f0PfSea5cfdTD0h3lzj4blj6UOhl7XFXEw2jyaOhh6/tSw4qQgL+pg
6KuyJnyX2edOHQz9g5rI4MhUV+pg6E/iQsakujpSB0MPGTE90Bw5WAsdDL35
xPhR+VfaqYOhW4SN0MHQg2Q96mCen+zHxPPTGPpK+R7qYH6/nAd1MPQ8OU/q
YOjn5D6og6EPyH1SB0M3SD5QB9vkl8kmv0xRJ49bMhs3a/fpbwHXW8/Pl/y+
9Xt9yJOs5+dNfmw9L09yg/Xv9eTJ1nhncqNV15GbrHyvFqyz/jTXgM+JbgTX
yd9z/8GyPvmC+JMHZX/kCbJ/cqx8n8nm+8lxcj5k2/NDvYJRn2DUI/ev1R8Y
9fbifbiTUU9g1A8Y9QJGfYBRD2DkP/en5TsY+U1/LZ/ByF/ej5avYOQnGPn4
4KVMfVdsBvPtxffE3wId+QcdDB35CB0MHfkJHQwd+QodDB35Cx0MHfkMHQwd
+Q0dDB35Dh0MHfkPHQwd9cD3QmPoqA++9xpDR71AB0NH/UAHQ0c9QQdDR31B
B0NHvUEH29y/yeb+qaMeoYOTu4vcntSqevTxO1DhdEz102EJO8t0ls2my9W7
w4d4K+6NsQw6N/mTZ3TlntY/8yUv2VKd4lWheLbPK2vC63zIG1es6Y6aqNiw
Vp+4LMdbxZev7ogfGEW+dXZo3PoYTxVvF3M93WIgH/N8GpMd6KbiF0VfLtyu
Jz9uvn0o+qYzOe7d7H1Jh5zI36a07M1cZ0d+2peaVzxTR46f+kVAqktfLThh
VaG3eU4v+eK0gpPRET+RFwgbwUslnrxS1iMPip8JvEv2Q46V/ZIfyPeQ2+V7
yeVyHmR3OS8VL+dJflvOW8XLfZBT5L5UvNynyea+yVo+kLV8IbdIPqn9av0B
jH4ARj8Aox+A0Q/A6Adg9AMw+gEY/QCMfgBGPwCjH3B/Wj/g/Wr9gP5aPwCj
H4DRD8DoB8x3rR+gXvH+87zr3pqRcVXV51fRhsfbXPwtiEc/gF7SO7Mq54w6
39b7Y+5N7hjL+sf6m7+vGOnwH587FXs3sCOAPL9xU3acm+Jn5sF5PUNU/Mb5
10uPtPhzPfhDn9ixPDG0zo98/H7KsOQBpTfq7+T++dtYcuuG38edrvLl96B/
MV9D138cPkflR9lsz7tRR0bTH/FYb7xnaX36UrV+6PTOlwcrlV6wui1raNFo
8o6IklnZM3zoj/7IetryUfwyN5WPaXtcOuM3eNEf8VivP3Hf2UJftb4u+5qT
4UulJ1Re3uqX4EWOyd1jLHX0pj/6L+vnitm8/vpI8ty/7FrTjR70RzzWO/tz
fs3JuyPJF9ua7afMU/obzk3p4SEe5KDOndN+vWSgP/o7/D4LXrI8+wdVb5M+
v/djmMfL9Ec81stxzapsPuFOLgq98CTK043sWLXlfnm/K3ngzczXW/fo6Y/5
ge/lo90HotuGkxsCbpYkHXSkP+KxXrXFPu7K0+HklmGb/m44o/Ti2HXdnV87
krd5DMb0XXCiP+YT+E3Zn1GQ+YkDuT5v15TITx/Vwh/xWG9ZQu9i1zwHcvKx
xI7nC+1U/QytqQyb/qgWPO5014KglTr6Y/6BX0FW+6jUEQ/J9jVXJ5uNf9Af
8Vivx6sqN3P+Q7KhrPRw0sV/yPElwTMjz98iO2yKckn9pbcW/piv4Be+ots+
v+0G/V8VNsIf8Vgvbces2w0tN7n+8TsR0X3Xyskxohup91h1I/wxv8Gvr9r6
veQcOQ/6Ix7rLZbvI/enWb+P3C7nQx4u50N/zIfsD3Lf9J8g+WCCP+Kx3lq5
X67vJ/dLfZHkBzlJ8oPvP+ZP+J2XfCfvlHqgP+Kx3l7Jb/JWyW/yKakP8iWp
D/pjvoXfa1Lv5DR5D+iPeKxnJ/VN7pf6Jn8j7wO5UN4H+mN+5rwo7x25TN5D
+iOe7728b+Tx8r6RLfI+kpvkfaQ/5nPOs/Lek1ulH9Af8awved/Jy+V9J/dJ
fyA/22HtD/TH/A+/w9LvyHrph/RHPNbbLf2NvF36GzlQ+iM5RPqjyWaeoN8N
mR/IxTJfmGz6P9erl/5O1vo7OVjmA7I2H9Af/7/YzDtq/pR5iP6It5lXyNq8
QtbmHfI7Mu+QMa+CMa+CMa+CMa+CMa+CMa+CMa+CMa/yPrR5FYx5lfmrzavs
39q8yv1p8yoY8yr9tXkVjHmV56PNq+zP2rzKfqLNq/8CkEyeCw==
             "], {{{
                EdgeForm[], 
                Directive[
                 AbsoluteThickness[1.6], 
                 GrayLevel[0.09], 
                 Opacity[0.06]], 
                GraphicsGroup[{
                  Polygon[CompressedData["
1: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
                   "]], 
                  Polygon[CompressedData["
1:eJwt1Pdvz0Ecx/E7oxqjGqOaWqVKqbYoLUpbRbVmEBEREUREhEZEYu89Wnv7
JwgxYoQYIUaIEWKEGCFGiBFiPF95v3945F73zefzubv33X3bTa0aM6dWCGE4
6uAe7mMC6mMF7mAAcvAQD9DQn7mBmxiPRDzHMyRhIj7gIyYjGedxDgkYi8/4
hCb+zCVcxjh/ZhmuoRRd8RM/0AxT8A3fPesb6/AOg9ANt3HL16I5rsELDEQe
VuERypCLJ3jqc9caz+Csz1X1WYILKEE23uKNr20SXuG1Z9XgKq54bbSmDfiC
weiOEziJ0dA+FMUQDtL2xSjsQBq/DaUt0Djkxkgjz0C11ka/grYnUskt0Io8
E83JKdGy3mlETor2bqrqSi5BR/I8HNDY9Ef6HLaprvQraXthi+ZJfwhtPvqT
i6O92wF1yQmYTk5BIP/zPA2ZGguzyW2QTm4bLc/SnpHz0J5chSxyJ6QHe6c3
uTDaWHM1J3JBtKx3Wutb0b6lGuxDD/ojaPsgh5wb7dv6ZiK5XrRaaM4VWhuy
yPO1T+TyaFk1OqSzEm1virAAR1QHdMZRLPRcjItY6melFMexGF38DG3CL5Rr
nmjJt3f6Xg/TOaV/2Mfqhwz6u2kLg93ZbPp7VZdga2xKf7vvlc5Mbfpbfa90
RhrQr/Gzoj39io1+FjWH0zgV7KzrTO7RXKONpTH+4K/vpe7gIhzztWpN+Ty7
32utM/QSa4PdNd3Ju1gZ7L9Ed+43NvvadabeY32wu6s7ch3Lg919/Qc9xupg
d1V3eJf2PVqtVJP/qo10KQ==
                   "]]}]}, {}, {}, {}, {}}}], {}}}, {
          DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
           AxesOrigin -> {500., 0.}, FrameTicks -> {{{0, {
                Rational[1, 10000000], 
                "1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, {
                Rational[1, 5000000], 
                "2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, {
                Rational[3, 10000000], 
                "3*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}}, {}}, {{500, 550,
               600, 650, 700, 750, 800, 850}, {}}}, GridLines -> {None, None},
            DisplayFunction -> Identity, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, PlotRangeClipping -> True, 
           ImagePadding -> {{60, 15}, {30, 10}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {500., 0.}, 
           DisplayFunction :> Identity, 
           Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{
             "mol N \!\(\*SuperscriptBox[\(L\), \(-1\)]\)", None}, {
             "Time (d)", None}}, FrameStyle -> Directive[
             GrayLevel[0], 12], FrameTicks -> {{{0, {
                Rational[1, 10000000], 
                "1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, {
                Rational[1, 5000000], 
                "2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, {
                Rational[3, 10000000], 
                "3*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}}, None}, {{500, 
              550, 600, 650, 700, 750, 800, 850}, None}}, FrameTicksStyle -> 
           Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{60, 15}, {30, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotLabel -> "f) Interstitial nitrogen", 
           PlotRange -> {{500, 850}, {0., 3.5138739425769267`*^-7}}, 
           PlotRangeClipping -> True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], {
         1366.5, -1758}, 
         ImageScaled[{0.5, 0}], {931, 586}]}, {
        Inset[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
                Line[CompressedData["
1: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
H7s0Oj9nxO0yLcxG+eHBfTofiFrH/ki7TsKjAxPuuD6nZd5ejcgh4UmUQxOu
f1vryl0XctF8VHDWDlvvsuf3E3lofTotLkKfbxwoT7W4gdazBouacLzFpIV3
EvlofRdD0ut9z2azsdU3SbCnttzHbo+JT5G9RULAHz16/aG//72JSAHKd1s4
9Poja97qb9+QQ1pk1uPnz27yTu6+TQIve+Ii9lneI+OGO6h/tq5vxO7YKzpa
epeEg7W99HrSQNIiKeseCS5ysvT5j0Rk/5fAIhJeOcYY4fqe27Mu0a2YhHa2
Uhr2a/ELhjYlJIzaPhmj15cN1Z8NS0kI3VWqh+N3PUwiQfM+Ws++VvfHnmNq
vV2xjATt1IO52N5i6SNi5SRs2RBG57vOZ5/iJpB37PzXgL0tRGdb3wM0fwb+
e0A/zwNUKitIuG4fQu//JA6YTac8JMHt7Aq6/c/q2ndfeITGf2f+X3o+UnR5
aM1H66lTP1nYekLeKTqVJNy/OTCC65cxSF6cV0WCwImX27FnNkbaf0a2+yVa
iuPjXpi0ub4a5Z9lCbuxmxNyZHMek8BcNE6fl2wKKvrJqkH1WZrSQI+f41Xt
Dk9IuFowh15vCO5qLNavJcHGoJHez7mu7bq8+Cna75xwpvd7L6QHvX4iP3p6
jB6P2r9/WLQ+I4GSspyP35fQPUP7bh0J5hON++j89lhSKqoeebV7PPbxPPlR
twYS9h1/9hF7rfeGguUvSPhKGcXi+ly22x45oxHl57S79H71t8E+927k70p+
23E8jiw/tPvBS5TfTu28gl0jdlI9oQn1p+b299jqX33EfP4jYTezawWOL6+V
GtzfjPIXe/5Rev4p4z1d24LWb4+2htPzW1rKdfFWEm4NLKbbt5KdxxlEFg49
T+/3VriVOD1pI8Hyp0I+fT6277HhtXYSpMw76f3h6PqmpYxXJCz1oej2tF78
dsahDhLeiY6I0PuN6U89uq9Re7p9S6DXu/0TfJlONJ/f9qT3d9x6obQxZO5F
BTdc35Hb84JedpEwQ2RqlF5fXFE8fPMNqv+sBDpflfir64W+JaFSxMWKni8c
Nsk7d6P3JQ2vwR5Q3/9auQetZ9w0lLHvjbvFv35PgtmrO/TnZbvO+5b0ov2R
zGs2dmAl2yq2D82/7+c+wu7Njlnv+QGt/xXG6POcneFXpc36STiTqULvtws8
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
diaueI/GY0Kxp19sCLF6p9aBBb0U3FLuGQ53CCG4rMVzhPooKEzlmb3WCCH0
/oyQPR9QfzKu1lz8OJjIGYhxTR6k4J6Sq8Kzfi4huOzi0rBPKN+/6Tq15yaX
OHTE6Y3fEAXGslHXh89yifltG82tRyg4seKiu+0fDhFU3bVJahTth+Z0BYlO
s4nXkzXfppFf1NVGnnnIJtZvLsj/8o2C2H/7F6T7s4mh26Ty8+8UjPmfi5D7
xiKsU1fMCv6J+vuZ6qsizylCqTPk+NlfFPSObXerYVBE/8IR/sHfaD1advoS
pUUR3tH3/DT/ov0c9+tyzSgmofdCpm3xPwqCzl4JTNdlEkKzL2iJTKL1uLlV
u3gPSVxiEUOvpyj4b1mU6pLlJGFfec2kZpqCpa5Z7TYMBrFkUiSzQIAFNfbt
ng/yg4jBzSenE2aw4OjWHd02DYHEHd/nB1mCLHDbI/7OriuAOF+47r6HEAve
HtPWeP/qImEwemmBrTALRo47WTo98Cdmrpnw3C7CgttP3ZQyAi8QL07avdCY
yYLkhP+sMqT8iMvXK1YtmsWCiHJLnxRHX+JQnzJ3higLnh68L5pv7E0sU2H1
DiMvG4jYfO7UWWLo0EeDdjEWMA1i7s9a4EbcS9yVXDmbBe0qpWpNBRbEhfab
P2+Is2D3uZUbvQ3P8UF6nuUVCRYYXhnbKj8SzRc197rDmMOCWjlTrUV3YvlN
Ee0SbpIs4F8w/DBdH8uPr9t80nIuC/ZsZBe3N8Tyj8xMfWIwjwWF7JVl/yGv
NBRYukqKBbmH/HZWI39hHA+Sns+CipNuG24jF1fUdk4if0jbejcBOeD3qk2D
0iyY/BT+MAjZaGNkbPMCFlRfNbB3RJbwGv1aIcMCveZlbEBuuX1gT85CFkRK
z9+igJw0UpIbs4gF8Y4d/j9Q+Y6tWiwSIMuCX6GmJnXI6s6Bjs5yqHyl95OT
kL9d63lovpgFRlmL/F2RSYUc3xUKLOhxXd/6uy6Wv9NudstcRRakHFlk/hB5
bpzHuj/IGZ9+WwUiX527frBRmQWBHwREvj+L5TvviTcqU0HtTT25nYu8JvRP
euYSFmSt0xu2R64QrLLzW8aCdU/vyxQ/jeWzieUlx5azoHt4j/hh5N0BwfPN
VrBA/fGPhBnIneNmDUtUWZAjkhQCtbH8X4Odeg3qLLiTMl8rriaWX7nCILF4
NYrX+6r9y5CDj2WMp2mwIFo4bMWtx7H8hW9cCrzXos+XrpIurY7l67z8oayk
zYL3DKnMrMpY/h8t+bu/kFc/e/tkCXLl5W3bW3RYMM3N3ZLCj+XvsY9yCtmA
4nfYeXPoI1S/ftW8MV0WgKOAi1FFLD/hr732U4IFSxN3zjEpRe1/hPk4A1jw
8RZrOrkklr+8KscyYBv6e3ZQy9fiWP5d7g9fLUMWrN1hvzamKJZfLxX1INmE
BS9laoUr7sby/6lWGXmaseBalI9HRX4svzpsoM10LwtKpQ+fHb8Ryw/5PMdl
xT4WsBsvSK1Blim0D+00Z4HIxrVHEnJj+WsNfrwwskQecMhyyI7lO1iq2sgd
ZAHpZ3235mos/wkZebLaFdV3qbC3YUwsvzU52e/2STTeKj7L20fH8ntL8oJT
3Fgwo+bEvrO8WP7UyJNsX3cWiML61IzIWP4mu6n36p4s+KR2+7l4WCw/T+uM
fex5FpQcuewkw4rl398TeJL0Y4H0rfxGPSqWX+sS7udxgQWjxS4NJ5jo+ak5
cTsuov43c/2DCkYsX352T/PfIBZolWn3MgJi+ZG95ruduCzIjC/9dcI3lp8y
ecR+fzALXAOCQm76xPJvyHqcNAhB+SJI3GUczWS1e0ODZcNQf4+1WxvlFcuf
Lq96/DySBZ9LrSreeMbyJdtfNpdFsaB3w8XLG5EVvr19f53HAu0I7rdLZ2L5
uqp/pskYFnSN9R49cDqWfzZWW2/DFRYsWlXn/P0UGg8FsHtpHAtS3S0nHZGj
6vbaz41nwX6tL6Ytbqg8025+nxJYcLxF6vPDk7H8vlOZRakpqH4GKf6FLrH8
Me7dx2GpLNBtar6+CVngGr/5/FUWeFZMRT5yRuXp6Brdn84CMUGx4NYTsXwr
owVrZmahfHbPd/USJzR+Of2efchLZmt0Vh2P5XvWlhRVZrNgzNy91wk5bKed
3sUc1D+dhf/dPYbyUag6aZvLgsXfWiQPIWfV/328IY8FDXdmnBdFfrTn6u7R
GyyIun3J2NUxlt8QeYb3Ip8FP9UkMuSROxqh5cZNFnhUWO/9zyGW3z93/qKQ
Wyw49nHAMBR5zLzP/kQBC8JmzGAbIk/HFF3dfhuN98u/RQWQJVo4vcp3WHBl
nqPv6PxYvtwCm5WTyCtLXezEqqL5K63U3DrvsuBf7by3f9dH83Xift8qvccC
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
36P4mpvHaiDDrS0OF3tR/c5eityNrNQd2mv+gQPWAi+fBiN3EmoDfwc48Lrx
kNxv5F0d+3I/DqL6XDPrl67kEfc9z5/87xMHZq65snQtclxG7fD1YQ7oVMs4
OyJbCJ0Y3f+VA9l17q+rkauSI+7qjaL2v/lDrhNZc33ROdVvHLDT0P4wiix5
Qmj83xgHzsk2SShWofFdm/E7Z4IDpztyPc8gbz5aV37pJxpPCxorKeTcn6MX
A39xYE7o8tAryFw1mLL4wwHTZb8vlCFvD+sWnJrkgAz7yuRf5LtLZ9YMTnFg
92DXQ/FqlA8erOG0TKP2pnxU5JGnhgNm5c3gwqiGzGNdZA921rNYQS5UxTlM
mSC/UXgeGiTEhch3oc2WyOVm8hKWIlzgNK/XO4O86uP2FwYzuTAcv+TFReSE
ILeoVbO4UOlS/TkY2fd22bxpUS6IX1zVdhVZR8pW5oYEF861vJyqRb6Wx2i/
PIcLN528Pr9Enr89J54hyQWh8plxHcij5ybkrOZx4ZVkvtgn5KPiSl2EFBft
Rx++HEVuzDROUZ/PhcXW9sa/kG+2XlYSWIDKk3dyw8zHqL96VLwbQj4tL5Iv
gRwm8iG9TYYLZy9erJ2P/DtV/FjlQi6snufBkUV23aizLH8RF150B/UrIr9q
tP9wRZYL49n2H5Yim7hQ2aQcF9Z1FDBUkYun85xPLebCkbi1xauRlyf8p2ot
zwWTGzHUOuRL1hWKWgpc2NCWUaCNLCCTIy2hyIUVUpYBG5BPt8SIDSDnr3n9
aRPym5iA6SolLoRO9/7cjGxq7jKeosyFi139dVuR70taDJ9XQfG5aHVSH3nl
C733Fku4MLdNrtUAOTZc9dWapVyQzlISBfw+0/kvRJdxocfxgNA2/D7Ryeo+
5BzD/MfYb2oH7j9azoWhDYo7tuP3cZoLEldw4VRHZjj2fcOHWd4rubDJX5+H
vVIwN2mfKhcSZUb2YV+uvBStrsYFpT3FDfh5goxArsgqLqQfuyaA7anvGtCD
vEO/coRA7v5rce6BOhfiDypH4fLuKdd3jVvNBbK1pVcPudxP7chZDdQ/LMYH
tyCrbZK23LOGCy5z067qIseNT+5SXYvq/9/XGRuRhYsGCcF1XCj6ICalg3z2
XMuGt8hP5aXrcfy7NR+tvq/JhevZV7U08Pu+5i6J1eJCdMkSdzX8fPegObt0
UPknmcdVkHtOrOov2siFJ/svqEgi712+oIu3iQv6y9iSYsgVvVNNbrpciImq
qRFCTjjaWqGyhQtZ8xqYuP/NVOLf+4t84VkEewzZ+01ebvtWLuy1vLhjBHmf
HeNyhD4X5plOibxDrljkFuZigP5+Jn/yFbJ6uyW5neDCnlclt5rw8w6ou/8C
LlTYbFtXhfxoT5uhkxEXXorHb0xD1hCv3EwYo/KJPbaPQ06qu7FusQkXCoTi
7SLx+DMh5Zt2cOEK73a3P/IaWP19624uNFRXNxxATtFhXpO2QO87n+OM84XF
jQMLZxzggsGOhTpfkEWXrAz7guxtYXyrB9lbsuFsnRUXJnPVFZ4g7/60YBvD
DvXvg3fdIpD/XM19N+TABX/QcZmPfEfm4oEORy5Y3/6zTBDZOcLs6ZNjqL8v
zLr6DeW//y6MFaQ7ofiHsh+/RM611AuyduXCstNGnqHINrObFKrPoPIJtA1N
oHwswbwWfduTC1rdM9/1IVf/9BZOPcuFztrC9Cbktf1yI+e9UPxJISoPeWbl
8QdrzqP6R+t62yIX+fy0SwziwraVrPO3H6F8814p3jOSC87fSz9uQ/PH08Ai
Ym8Uyjeaf6NXIwcsNh1czePC144Dq2SQ+w/4bB6I5sKMFUvlB9H8dL+2oevw
ZfS+KIWaCOTDN/1UdidzQf6Q47aXaL7LPd+ctyIP1efhVXtDNF/qS3IrOmu4
cNhvw9JPaH4Oi/Mg1/zlgpz98cw8tF5o0zR8pLwxGGql5qoTaL3SZtqroewR
DCJyn2wN0HqpxfeMzKPcYMjJOLriThzK/0tr17r1BMOvL7GNf6N4xMFVqR+n
FoYAuy86sz4YxWP7MVkdixBYVlJ+xofkESWdo/7eoSFQ+vSxlow/mm85HjZW
T0JgMmh+zV0vVL8wt2YlgVBYdSZactQDzSfztILGN4aCsc5TYeGTPCI1pz/z
1LlQ0PVdKbocrYdvPTr+50teKPTEdxVPH0XjR/PYV/ueUAh71s7ffQitL4r3
HnGWD4OYsRVW1215xM/7wlNBFmEQoD3QHmPFI3bmT87wORAGikean7KRk1In
RE5ZhkHzEUb5eWQ9anCOjXUYqMscTDiMTO1+rrjOPgxMf/56twpZojtW/51j
GLzasnL5Y0v8//MsCyTOhsGt9yoVv9H63WtcnrnhXBjsvmfj/hm5ZmABZ7VX
GGzTfKH8Htnl+czIRT5hYPwpk/UM+eaVoZSvfmEg49q6Kx55k9q9ijQyDBpb
aiU2Iocszq+8wgyDrsBfk6uQOyWyasKpMCAFVo8qIgd8u/L8PDsMjgi31Isg
V5dfeLMvJAxsUz6KtlvwCOlb53qMQ8Og9MyM1fXITmmnPmwNC4OvPd5mj5Bn
sQ+PqEaEgV/KDe51ZFtf61HFyDDQ2qp+Own5huu+H/+bcF+Xwwfuljd9QP7v
KI8fnP1dDoeiW82agXwfX8c//4F8lj3POsuBfAC/6kD2
                 "]]}, 
               "Charting`Private`Tag$129103#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                Line[CompressedData["
1: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
wBb3agEOlGWV+FLI/yMspX23iHDAaVv//irg0Z9aUqMtF3DAwbfy89VzPPr6
u8aferIckFcLH/uL4t2lTsRRSY4DwvaNz/aifPC17LjK6EIO+G+YXS7B5dE9
99flpSpx4NOKI+O2MTx6LKSubnIpB6Qs9778fptHP2YLr+lW48CHDHlFwbs8
+nyg4dUGdQ50GNXDvPs8+u/p6wdvL+PAslfZbuqPefQ05yMjjis4cP6k+vqp
lzxawkBI5qE+By6HHpd1bubRdSsNLiQbcOC2ww/D2Z94dKymZ2vYag50nxBa
de8zj5ZReXPT1ZADK55ty/v6lUcrzL6yRtyIA6/+hbz5NcCjl33R3XNkI9qv
51/ytSCf7vl46Nkucw5sNgyqnzGdT99pil9kasGBirz/nNbP4NM6VZPdCyw5
kLbz4VaeKJ9eXVBx4T9rDgzrmF3tkeLTZpGuSSr2HPCNN7P2VuXTQrm7Df4i
DnySE7ZoCZ9++Wbbm3c7OHBg5Ti/dimfNpdYJxC9C9l/3jU11WV82iJW6tCk
Iwf4NbdfB63k05sTXy5vduYgfaS2xWM9nxZ5Ulj6yIUD3yNctr8x4tMVzXf3
8105sKX3YJ/OBj5trZAUvfkgB4xnluZ2AZ/emuz7M9+dAyVvhL4t3sSnbTOW
Po09xoGV1YOPa235tMQr+Z0njnNgV3ptwOh2Pl3zTbLf+gQH1mR6bJ5vz6e3
a0wpCZ3kwB1RcLXayaftbzdRPr7o+wNFiRxHPu2QF2y9zR/9/mnxLBsXPi1T
d7FDI4ADTToB+wxd+fS74dMB0y9y4GZZdamSG5921HfJfRrIgd6T2elfDvLp
PQWGUpoUBzSUFG6DB5/e96z7w4xQDhwt/djjdYxPH7pcNjiC+Mt157m6x/n0
sRMZMzvCkD9M2/dsBHHgIlcDOoIDM7cECJ/y4dPJ3Pe8czwO1KYb7bY4zaez
DuRnHuZzIM5w+qphxPfWxD3fEcMB8m3Ak6u+fLq427ZvZRwHRASHUzvP8On2
bWWWXfEc2Dbo0LDTD/mDWsaBpgQOCF7uUelG/PMfdaY0kQOO+xWOXTjPp6ff
35CWcpUD325fZcdd4NNLZfKnHJPR/nNXRt0M4NPaP2LnW6Zw4N9JRcUlF5G/
lJ/UMrjBgTciLe3XEW+6sMJJMo0D828lHY0I5NOeremPKm5yYGJVWoAlwad9
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
vtSlzLqB/T+Wor6v
                 "]]}, 
               "Charting`Private`Tag$129103#2"]}}, {}}, {
            GraphicsComplex[CompressedData["
1:eJxdl3tM1WUYxw8IBiJ5gINIhnLTEd4YRfOCnLPIC2mOeQ/lFErQYg61SYIt
SpRSJAGZIaGTsImKJKaIweRkisCY0pg5b1wMBK2GIUPxWp3n9/2+8/AP++z7
8H7f3/s+z/s8+K1KXvihvU6nW2Gn0/3/e7+5qCfMkGEqHzh64/nzAMuCiuSp
+QcVQ/f0PfSea5cfdTD0h3lzj4blj6UOhl7XFXEw2jyaOhh6/tSw4qQgL+pg
6KuyJnyX2edOHQz9g5rI4MhUV+pg6E/iQsakujpSB0MPGTE90Bw5WAsdDL35
xPhR+VfaqYOhW4SN0MHQg2Q96mCen+zHxPPTGPpK+R7qYH6/nAd1MPQ8OU/q
YOjn5D6og6EPyH1SB0M3SD5QB9vkl8kmv0xRJ49bMhs3a/fpbwHXW8/Pl/y+
9Xt9yJOs5+dNfmw9L09yg/Xv9eTJ1nhncqNV15GbrHyvFqyz/jTXgM+JbgTX
yd9z/8GyPvmC+JMHZX/kCbJ/cqx8n8nm+8lxcj5k2/NDvYJRn2DUI/ev1R8Y
9fbifbiTUU9g1A8Y9QJGfYBRD2DkP/en5TsY+U1/LZ/ByF/ej5avYOQnGPn4
4KVMfVdsBvPtxffE3wId+QcdDB35CB0MHfkJHQwd+QodDB35Cx0MHfkMHQwd
+Q0dDB35Dh0MHfkPHQwd9cD3QmPoqA++9xpDR71AB0NH/UAHQ0c9QQdDR31B
B0NHvUEH29y/yeb+qaMeoYOTu4vcntSqevTxO1DhdEz102EJO8t0ls2my9W7
w4d4K+6NsQw6N/mTZ3TlntY/8yUv2VKd4lWheLbPK2vC63zIG1es6Y6aqNiw
Vp+4LMdbxZev7ogfGEW+dXZo3PoYTxVvF3M93WIgH/N8GpMd6KbiF0VfLtyu
Jz9uvn0o+qYzOe7d7H1Jh5zI36a07M1cZ0d+2peaVzxTR46f+kVAqktfLThh
VaG3eU4v+eK0gpPRET+RFwgbwUslnrxS1iMPip8JvEv2Q46V/ZIfyPeQ2+V7
yeVyHmR3OS8VL+dJflvOW8XLfZBT5L5UvNynyea+yVo+kLV8IbdIPqn9av0B
jH4ARj8Aox+A0Q/A6Adg9AMw+gEY/QCMfgBGPwCjH3B/Wj/g/Wr9gP5aPwCj
H4DRD8DoB8x3rR+gXvH+87zr3pqRcVXV51fRhsfbXPwtiEc/gF7SO7Mq54w6
39b7Y+5N7hjL+sf6m7+vGOnwH587FXs3sCOAPL9xU3acm+Jn5sF5PUNU/Mb5
10uPtPhzPfhDn9ixPDG0zo98/H7KsOQBpTfq7+T++dtYcuuG38edrvLl96B/
MV9D138cPkflR9lsz7tRR0bTH/FYb7xnaX36UrV+6PTOlwcrlV6wui1raNFo
8o6IklnZM3zoj/7IetryUfwyN5WPaXtcOuM3eNEf8VivP3Hf2UJftb4u+5qT
4UulJ1Re3uqX4EWOyd1jLHX0pj/6L+vnitm8/vpI8ty/7FrTjR70RzzWO/tz
fs3JuyPJF9ua7afMU/obzk3p4SEe5KDOndN+vWSgP/o7/D4LXrI8+wdVb5M+
v/djmMfL9Ec81stxzapsPuFOLgq98CTK043sWLXlfnm/K3ngzczXW/fo6Y/5
ge/lo90HotuGkxsCbpYkHXSkP+KxXrXFPu7K0+HklmGb/m44o/Ti2HXdnV87
krd5DMb0XXCiP+YT+E3Zn1GQ+YkDuT5v15TITx/Vwh/xWG9ZQu9i1zwHcvKx
xI7nC+1U/QytqQyb/qgWPO5014KglTr6Y/6BX0FW+6jUEQ/J9jVXJ5uNf9Af
8Vivx6sqN3P+Q7KhrPRw0sV/yPElwTMjz98iO2yKckn9pbcW/piv4Be+ots+
v+0G/V8VNsIf8Vgvbces2w0tN7n+8TsR0X3Xyskxohup91h1I/wxv8Gvr9r6
veQcOQ/6Ix7rLZbvI/enWb+P3C7nQx4u50N/zIfsD3Lf9J8g+WCCP+Kx3lq5
X67vJ/dLfZHkBzlJ8oPvP+ZP+J2XfCfvlHqgP+Kx3l7Jb/JWyW/yKakP8iWp
D/pjvoXfa1Lv5DR5D+iPeKxnJ/VN7pf6Jn8j7wO5UN4H+mN+5rwo7x25TN5D
+iOe7728b+Tx8r6RLfI+kpvkfaQ/5nPOs/Lek1ulH9Af8awved/Jy+V9J/dJ
fyA/22HtD/TH/A+/w9LvyHrph/RHPNbbLf2NvF36GzlQ+iM5RPqjyWaeoN8N
mR/IxTJfmGz6P9erl/5O1vo7OVjmA7I2H9Af/7/YzDtq/pR5iP6It5lXyNq8
QtbmHfI7Mu+QMa+CMa+CMa+CMa+CMa+CMa+CMa+CMa/yPrR5FYx5lfmrzavs
39q8yv1p8yoY8yr9tXkVjHmV56PNq+zP2rzKfqLNq/8CkEyeCw==
             "], {{{
                EdgeForm[], 
                Directive[
                 AbsoluteThickness[1.6], 
                 GrayLevel[0.09], 
                 Opacity[0.06]], 
                GraphicsGroup[{
                  Polygon[CompressedData["
1:eJxNVnVY1mcUvS8oqIiAiB2EjQom6qyZzJqB7dQZkzljTtbd3d3d3d3d3d3d
3Ttn5/jAH+e593e/N26e9ytZvmHW+oyIqEwRmZC9AKj/69sAi4EWQAWQC+QB
/YECoBAYYFkEbAssA1ryPK/luhXAcqAVMNBr2wCrgJVAa2ApsATI9xmF3tsP
GAvkACOALYAeQG9gVNT7PNJ+9wHGANk+r8B+LPe9PLccGA00BqYBQ4ESYBGw
EGgOzAZmAY0sG/uuGZa8a2egDuhuv7rZtxrfzz2DgXZAB2Au0NS/zXdM/F7g
72bAIOeGe+Z5TxPHm+kzZ9qPDOcnx7Up9+/ZzkO2zx/mOBljX9u4Z459zQKm
e10ZsDUw3PFw/ZbeMzFU+0Lb+the7brS70mhnihyHcrtx4RQTxS4br0cz2jH
Rr/XAJ2cq/GhnmPtxtoP+nwq9ybV7GTGBL2KeYecDxRD7wrZE1gH/R/gr1AP
jnO+mKtfgJ9CPUu/2YdtgVrfz/xvZ8nft3Jt2llW2z4EmOw9g72Oa+jfVKBL
yL8pjq3SseU5vnH2Z6XPK3KOJzhXA5z3Qud4ktesdz15/o6uG7/X2sa7Fvse
ns8+7eGaTrav9Hkn28rsb5X3T3FsPGehz2D+VzsvzNUm7+8a9bPBeWFPsG+b
ua6cnyyjpoFttm3cN9N7s72mieUc6yWOuTTqZzLT98zzXcR8359rv1sYixvY
FjWwkePyfcdc38/vJc5dntflux60tzSW2dYx1LsdbGNPtXLNllnf3E/tXT/y
UWtjpW2tbC+0bZXzTNsKr23rc9pYrvaZ9Gup/eJ3bdTzTq19pNzeeo5z1dw1
pv+dLXewTqz1712sF1uus96RM5e0h+ct8JnFrhf3kRvJKeyzDNeb/Mm+Yf+w
99jDG23b/E2dPDTdNvJsnc/p5r3dLTdZ3+B7i+3jWsex0WeWOr41zsMQ56iT
c1Pr/A33nbyHvFji76GOid9VDXJDv/ge9AzNWZ31Ut/L9dcDu4W473bg1lDf
3wTsEeLB+4G9Qrx5D3BXaE4eB/YJce56x8mzr2N+k/L7CPBQaGaeAZ4KzcY3
wFeh/ngFeMl1eh04IMSJ7wBvhWaD9eOcsEeeB/YL8e/nwCEhDnsfOCjEYd8D
h4V46xPgo9BcdYFf85Ly/ztwRIjPFsE2IalefwCXhjiuN2xXh3ioGfTLQzzb
HvqVId7KgH5ZiAc/AC4KcegXwMUhbv0BuCTEoczxnc7z4faVfr4AXBB6xwbg
zGtCb2Qp9KtC/NcS+hUhTt/TdWKNEuxHhfh4CvSHQzx2Dn1J+p9yLnBj6K27
Adgl9B9lBH4fk9Svo5NywTxMhrw7xG0XAi+G3r3psL/tmpwPPBh6V6fC/nSI
txjHk45lGuwvh7jwPOCW0Bt7pGvA/A/HmmtDczU2qYfYP78Cs5J4qHvSO8oZ
6gfZJ6nnWkA2T+KdLMhGSTzVFPKY0Nv4gO/mvTc7F8zDqKT4GXt/yNNCszUE
+qCkGR0GeUZo/iZCH580V7sCt4X4g+//KaFZLIB+XOg9u8N5ZA7bQZ4Qmu9D
Q73LvmWPvxfq83cZd9JbwDm7LzRr/F/wW4jHDw71eoV77U3326fAjKR34Q3X
jPVqzfwlcQn/m5wU4onOSVxJ7nnCtWQdOSufheZl9xBHkB/OZj2TuJOz+11o
fjnfj4VmnP9rSKR8G451DZj/o0M9yv78lzElvR33hvqVvUof29rPNpBzk/gw
D3JOEgfuHeIjchFrnu+6fwvMTHprjncNmP9H3ZfsyX1DnEW+Yo80cZ9UQS5M
4nbWfKjr/qx7l327f4h3yDnksOdCPHa6+4Y982poNjgXJ7rerHU2ZE3SO0me
ey3EdezfSvdwBeSCJP48MMSD/Zzvs0I5Z22/DtWXfNAhiRPIZ93MaczBz6E8
MH+dnEPy2Y8hTiN/5CRxCDmsMInHmIORzgM5ryyJ9ziXA5Nm88zQPHAW+N+2
b9K7Rq4qT+IrxjHYsXBWqj0vrHlj151c+GWID5mbXOdnEv1Keqc4Bx+HZoH1
L3IPkA/+DnEC+TgziZPJtR+G+JZ8/GeIk/8DVMMabA==
                   "]], 
                  Polygon[CompressedData["
1:eJwt1Pdvz0Ecx/E7oxqjGqOaWqVKqbYoLUpbRbVmEBEREUREhEZEYu89Wnv7
JwgxYoQYIUaIEWKEGCFGiBFiPF95v3945F73zefzubv33X3bTa0aM6dWCGE4
6uAe7mMC6mMF7mAAcvAQD9DQn7mBmxiPRDzHMyRhIj7gIyYjGedxDgkYi8/4
hCb+zCVcxjh/ZhmuoRRd8RM/0AxT8A3fPesb6/AOg9ANt3HL16I5rsELDEQe
VuERypCLJ3jqc9caz+Csz1X1WYILKEE23uKNr20SXuG1Z9XgKq54bbSmDfiC
weiOEziJ0dA+FMUQDtL2xSjsQBq/DaUt0Djkxkgjz0C11ka/grYnUskt0Io8
E83JKdGy3mlETor2bqrqSi5BR/I8HNDY9Ef6HLaprvQraXthi+ZJfwhtPvqT
i6O92wF1yQmYTk5BIP/zPA2ZGguzyW2QTm4bLc/SnpHz0J5chSxyJ6QHe6c3
uTDaWHM1J3JBtKx3Wutb0b6lGuxDD/ojaPsgh5wb7dv6ZiK5XrRaaM4VWhuy
yPO1T+TyaFk1OqSzEm1virAAR1QHdMZRLPRcjItY6melFMexGF38DG3CL5Rr
nmjJt3f6Xg/TOaV/2Mfqhwz6u2kLg93ZbPp7VZdga2xKf7vvlc5Mbfpbfa90
RhrQr/Gzoj39io1+FjWH0zgV7KzrTO7RXKONpTH+4K/vpe7gIhzztWpN+Ty7
32utM/QSa4PdNd3Ju1gZ7L9Ed+43NvvadabeY32wu6s7ch3Lg919/Qc9xupg
d1V3eJf2PVqtVJP/qo10KQ==
                   "]]}]}, {}, {}, {}, {}}}], {}}}, {
          DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
           AxesOrigin -> {500., 0.}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, PlotRangeClipping -> True, 
           ImagePadding -> {{60, 15}, {30, 10}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> 
           {None, None}, AxesOrigin -> {500., 0.}, DisplayFunction :> 
           Identity, Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{
             "C-mol H C-mol \!\(\*SuperscriptBox[\(H\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(d\), \(-1\)]\)", None}, {"Time (d)", None}}, 
           FrameStyle -> Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{60, 15}, {30, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotLabel -> 
           "g) Host specific growth rate", 
           PlotRange -> {{500, 850}, {-0.019350578732542773`, 
             0.02115810653352046}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], {
          Rational[931, 2], -2344.}, 
         ImageScaled[{0.5, 0}], {931, 586}], 
        Inset["", {1366.5, -2344.}, {Center, Bottom}, {931., 586.}]}}, {}}, 
     ImageSize -> Full, {PlotRangePadding -> {6, 5}}, ImageSize -> Full], 
    Placed[
     Unevaluated[
      LineLegend[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        RGBColor[0.880722, 0.611041, 0.142051]}, {
       "Fish absent", "Fish present"}, LegendMarkerSize -> 60]], {0.95, 0.22},
      Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.843075734736286*^9, {3.843075785329558*^9, 3.843075811430828*^9}, 
   3.8430759614138727`*^9, {3.843076047530295*^9, 3.843076084011999*^9}, 
   3.8431257888141336`*^9, 3.843125840271501*^9, 3.844510775834628*^9, 
   3.854026855893458*^9},
 CellLabel->"Out[848]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsfQm8HUWVfuX23d57WQj7npAQQBFQNiWAuaAsEmWRHQQSVkVEUURUhBcW
YxhWBUGREVSEGRccBZdxedGMjILL351RMajjMriO4jpK/vc7dar7dHdVd3Xf
7vte8N3frzsv1dVV53x1qurUqVOnX7D8whef9bLlF77kjOXzD3nl8le8+CVn
vGr+wS9/ZT8pmKFU+2ylRnaYr5r9v9cp5X87T6npTNOZpjNNZ5rONJ1pOtN0
pulM05mmM01nms40nWk603Sm6UzTmaYzTWeazjSdaTrTdKbpTNOZpjNNZ5rO
NJ1pOtN0pulM05mmM01Oph/Sn0GrfxvpXzPwv9k6bQantVzlXCTKeZT+bI72
b//Vv/7Sv7YMi2pu27/9tX99p391HaW9OlVacAP//0b8bwOd9mZOu9pFlSxn
ra7+Wf3b3/vXb/vXxmFRzY056W/9a3dHaRemSgs+KqnaUKddw2n3uqiS5XyJ
/mxt17+d0r/O718n9K+nIXWWJg3kPMH5kd7SrwT923P610v71xn9aw/FgPZf
WcSvPMGv2Kh4laDivZry3/L/P4j/dXTaTZz2NfyvEU/7AlWmq9yH03DtGiYH
P+Kk6+l/Om1O/3Y3U6eaREDwYP/2VMW/UZ3vdlmN5jrYpX/7liE7oHtzNYOG
//0syvoZTrrVwrwLgd/z//9NIHALp31TIGDSHhII7CsQeHqEwE846c3R6x10
pS+J7D/tX5/uXw9THs3br/u3eQYRbtcZzCFyXB5WMbZF//YrURyyrOlfv+H/
m3Z9LAKy+VpO+7HSPd0G0CsnC6DWFSLr1SZZP2se2b/9jp/9u9LjUj95D/HK
c6NKb+MkCNtFUQVj/dtHxBsSmiSdkwbNSAwapRvqMU77Kv/fFGEaFIxijGWR
eZlIBtO6DzYhMn/jRx+ICsGQY6TmsQiRttKDJpLPnUxEWklEdqJidI/hcVX/
mE+g8Ey+RkNUgpVczK9Ejc8RNR4W8h68RcCh2jrtF5x2pQWHSQTjQAHGP/dv
Z/NFHr39tJ0kQMzKHVzGw6K6F4vq5kdIGFGSSHyH026vEYkvF0fiENzG1oVk
J7n+IOd/UBT9KlH0JhHXJ1u4/jKn3V0j1//t4HofN9d7UjGaa8x+1/KlAro3
bxXFQGXgzmCSvydqPEpk3S0Cw2AkwXiU095aPRhNk4bBB92Xe/UBgrqTQqK7
P+WkGxgPzAx/4bTrQiaa+4u3nxvBcBkn/VrAsIvI+tIIhvdaYPgjp72hRhhw
XRLBsFwkfypKBlBmbB+PCrmXkzB3bhPmbuHph/gRwJqpQkiay1Q0ecyOXsG0
8//40Q/5kakcStz/CXgY8y0FqadVDlBXAoTFBfSHnftXr3/9QIWa4r8o3X+g
oOJv3VfGjlHRbzcVyQx4O6J/bc6vUXfn/nWLeIcpa26jIk39UBWK5fGCuG/3
r8P7147960UMEZf4mCyR0TRqLUrdunLYQrmCEoipsKUpgTgYLcAo6GuV0cvD
1wOsWExbm3cfUCxC+GnVLPga53mjCkEJUMT7Eu/+txLdirvaWznt6xbO6eap
xQOl/+hfd0b0z319//YNTkOD3Cf4QXe+WenejXnzYyrqVBiN0N8WCTr37t+w
GvwLla/5eZjJoyxjOt+lSjSDfncUjQ36HuayQcMjSi9fzxaY8KCE7D/m5BUl
UZmr00DAZiqmSAbgeHMDHLcgqtzQMMELeSyZH+cyn23yN4IQ3uAMQbqh/fkC
3k1L0s4tChqxuF2g+I9+2nVKTMxjTjKCD3PaWyzV002u0e/Q70Cj+hZfKsCd
m/kPqQeqdY5+X8V6nSayCcB/qbQ4YYIZtdDJ/R+LGkgEeqMZQj1IXa2iEYfV
oNalNop20fmNjvMJlUlO8GlOO8UFmzS4MC0Y5S7lS43RvbUf03Iop5N6uqvO
D+PChNJrGCN+UGyuMWWwdM3jfDe5aJEmKedtqtvkpjMNMdM43VvoaAcrPU/v
oFj4tZbXwgIZi0NI9RLF40kn49mS/DIL19fTz5AP6hZ0dUw/o3nvDVhmYTqX
lqRlacn6GGuMr9DrMUphSbxp3nse7ZdVZmE6E9L3QsqqBzcVwCB9l9LDPuut
ZG84UvGPx2KUaMxgZiaCwvosk6/pmW9fz3obFdO3v86Hsf27iXx/UtrOVKi8
quutid8jOQ+t77sV87afu47K+GB5gWRDOf+rKA9/X6VY+GuS09x6q263RG/l
92mZrzqo7JP8CKW8Q+nF58ej0maeoKIfFGWzjMByYZWKltL/27+2Cgkb8cmq
FnuTMWLIqINkLXcjwMwsnj+vdJvcLtIuMPX7slckr6ZhrhcNNcGguzhtca7j
CzaBdq0cO6qrRTR1Hxx5PydjofoupRWnOwXGK4tyUkTkNQ1zvWhQ9bRz1pDQ
NNvHf1Z6faV5617OyRhbOlyX2T5+RwhXs8OkIfmt4duBzOnKurhQ/dWSyaL4
OU66g3Oyec6s+oHfhv6FNvx5L1Z/tbw/W5P5A07CYtoYhX1IL8Dl/s6aKpY6
FiWzpwrz40FRoVCAjZ1qU/9Ci4uyZ/3V8p7VuQPo6tiZI8MR23dRwK85+x5M
kjEjRob2kd04Cbs2M5icZFZj90nm3cdZeydZe3kKU7VyK2ysIrP2llHFX+Wk
57n56CZLrKLitqxYcjsYs9y3jAURqqPZvLCXUJa5/SwV8XBRYduxxBgr3pci
djrf5rSDLaVVKKyWqtuy6uqaLtFjj9DkXqWrNH422Cd8Hv/9/ajKGaJK44CU
ztZMZjtA8ygL54VWToWpkrSsB2ZL808CLbNjd761pE6yJJmleG2BrK0kL6z/
7sVJsNqPhrkDC32leNjPXsusUiSzsJ7HSQ8K+I114GhrSWUlx11hICss2QL2
rnClBhvVGD8xTKdm//gTEQ3hqP5c5siSJ4jl6WlCkmV3vKuMF8dD/zGchmu+
Mj2fxEWiZCmuLYuTzwvX1kzWVpYnVhAf4jTa7eA+MSgD+1uKnlmSTC2Z5CGL
tL9x8Qw9dGjjU7q9vbjiwpNZZTNZZVn87Z2C7a2fVXpXHu5fZr2Af4zDMYbI
jfrXa/j/74vYNauNE5ldmcUQEsuz2FnliK1K/MqTZ6u6daKKJB1b2rOiYjuv
4HSo1gvs7LRlmYNX2U1WmeR4AIZ1p2sa5wtsywYqXIQMytv+9tI5a7WNNsu4
G2F983Z+7d0qUo3exshZmCoroyNedTaqZTern7aNDQa23tVK2/Swh61NOK3z
mT/joXafwOABTjvFnSeI5VnsU+WIqRI/V1YP8mxVdw5TUafBhV14dJ6vizL/
yV1mW5Ypnw9W5YipslKWuadCYoynEOYx7qmDcre/vXQuqbxUxWvhzYm7BX68
6dBGT5phKaescLqrGpVV4VcVd5kTqDHEfj8ipIONluWCmNM5zwNRDR3jOnyI
O08Qy7PYWV8Qq68xEF22OltGQcF5ptcpfcKCUexAFYH3VtNdZluWKZ+XqzKI
VVklu0sorXkQp/2P0t5eXMWgnD3bXnqzQgZ4xjRec5i9YNPDagubBNAkoWQe
7C6vrFyOeNVZZWNl9cqOOeFgnBWAfeicwPp1j/P8UkndaAR1/YEfPYOJSWY1
RSTzLvaovTkoha5asfCBfoIWGGPC4TW7TVSro8RussQKK25Vzm6PkoN3c9Kb
8L9GHewtsVRUV+sF3+Oks6ISuqs47ZMMqr3ECiTWVnsQq71ROd+Zs+qZnEzu
KOxfDpPQnzl934j7/TgJdqA2c5/MamhI5l1sqa1blIJUqayiGKvEmREBtC7A
Ni0OnW1kIZSzJUusvmLFzw2LxTjsaeixQwEnGyhYe2dDX5YlnpKTNbGIDtBI
3PTGtXpnQeqhnPaIg6XqBM9SexCrvTEwn5ndrMfJNxja+2y9h9MgRebIA/ru
f3L67RGtfnn3ddZVvn42gptNlh/1r+1CuGYfzclwszd6qU+xjaoo6NookMwW
4ZXxm8FFUXFNus823hrYEt+kJkYXO6tvJqtnaZWMluHULL7kzI4KzYGZjxfk
oISw+pNQnttEz+Sddu6Zxs+G/Pxa8NxRM69X0Q8GYbPzgbURTnObA0Tw81gQ
8e2T1fBtqbYtq5XPS1LFznIYm77Aj6D7Y3K6i0tGGtlaGgU4KJK3OA2VNAiD
LA8uqg7dx64tUEwhVhc762ybOvGroGHZOw6GNOO28AAD+jD/H4ZusRD046C4
GBehoZKGzezKMzijroDu7ZtU/Ifd3K+o0KCDccNo8sZAYLJQjoYln5gnEtW1
ZHXmuWoXJ4X326BAYiR8QpCCeQBnxOjMUuBJsm8+33obTggKsclInspFUAEd
Xdh1liKsZfiyttivrkFajV1usFtjzogbUqC2HF2UZF+B9K23olazd8JrdOFb
ck78a87VxdKOt6QdqNnFQhfNBCnE9l3HkrXr//qGlqwv8CzyBEtaj9LoJPt8
pYV3nmJUbaTauM8qw0ZvAmtuynWZtyl89I3+Pkjz2Z03b96cuXPn4lJ74m57
8Tf6xRX6HSRN8KVGJ9Jpe1rS5gyQllPeGr7UnDV+aRvgvv1wiVyvy+NGHlfi
lxARXmoLEenxpUbpHqCMcZM2pxeWOFE0bYNeuo457jrqqHdpEAS41By6B2sc
aStnzJgh0/D/Kvn1xWBQfqfrFWljuCfEH2doVUz8wx+fsQ+roWJxa6B2Dm/Y
Y0Kip4m0DSwlz3GVXGVt4ewwh+4k1rY0CLhMg6iP+1GQwZsfv1HJ03XwLyGf
L9Kp0/I5LZ9To45p+ZyWz6lcRwXyqWsOfxtY0vawvLud57vbRbSE8rSHlh1S
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
mL79dT5oCd9N5MNO2blFy6u63pr4NXupZBrqVszbfu46KuOD5QWijHWddP3F
3wjP1i5SXkE5za236na7uuLyCrblP0y/3K9YvZXxm9Fnqh5zYnV06uGjsn5Z
db1VyylvhJCpVnVQunF7xWs4igUD4sej12eeoKIfjB3GFASTD5wrjDkUTsxb
hZSM+GRl5x4fMkYMGXWQrBtjBCAZAyhOeKARbhdpF5j6fdkrklfTMNeLhppg
0P0tdsgSdt12rRw7qqtFNPVkOGKOQMLYiENf40obQg3GK4tyUkTkNQ1zvWhQ
9bTzqvoQLoLavt5kPOk7/76Faail9TJ7ZPVcO8abVt0MVj8AlBjoJ3MAiCkB
TeP5h1NFsMzzxuLlnAz1wYTEN05/7wh5pvAcJujGW8O3A5nTlXVxofqrJZNF
/XOcdAfn5FOkZq8GgG3oX2jDn/di9VfL+7M1mSZyJB0Zb/uTXoDL/Z01VSx1
LErGEw6bxgdFhcLYZHYXN/UvtLgoe9ZfLe+r6gC0QCPvW6j+J1c33jer/hFb
/Un+BwTA3cOq7su2UYNdXKptU8a02r5cvE0npS/HZuYAh9LgDEl79exSgzfM
l3j2YBqM50bk2zRiYsfDUc4EwEhmNfvtybz7OGvvJGsvT2GqVh5CN1aRJ9GW
UcVf5aTnufnoJkusouK2rFhyOxiz3G2N0wZMOzKMdbqEssztZ6mIx4cK244l
xrhQfClip/NtTjvYUlqFwmqpui2rrq7p3jQoeoPJ6T9Mt9zHu2JVLce2LlNL
33QPAlX2TRabkn1zQGEdXrfckZLJZNKvwxwxgov08/jv70d1zBB1mLNX6WzN
ZDYd0ySQhfOmR06FqZIYHuPN/ScBj3FWPt9aUidZksxSvLZA1laSFzbjmG8i
wWFxNMwdWOgrxcN+9lpmlSKZJw0TrehBAb/ZRTvaWlJZyXFXGMgKS7bADT5v
lUL9QE3jeifx+zhri0v8SCleHLJYscQ7+tXMQeAvLvGDDDg1iTsP9Vdq+lCu
OQKKdZo5GvKJqNJQW3iuftOWJ4jl6emak2V3vKuMF8dK1DGchmu+MlMZISxh
sRTXlsXJ54VrayZrK8sT2wNM4Fk6Z8c9YFAG9rcUPbMkmaxGPovT/sbFM/Sw
0Jjj4tvbiysuPJlVNpNVlsX/eu/3CmGvdZz1VPL3yaotJfndkjzZxLMiybd1
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
PXWabxvllsdt9I8r4CdkVx8KEDGx0EVDxEkhnqaRjt6dRjqWL5aWj/S4rOrE
qIhkVSDYifS4heMk/blpv7fQf1Z2HaGC40TVo94PW5gWWIb1ZmC5WqelMaJc
dHuahbvP4ra3hXR64/Op+sYNOSQrn5mMShM4fXI4NIS/1dP1la6vR3f7d9Rn
Zjxr1/BstBzv22YUOVIWlyX6RRSW+dFc3kM0p/hx/NB4BOS+G0xSPt5BKorz
Np7F86ZVTxXFXEeQKPJZxeDFnP5IxH/1n2WsK2/Jdti6QBUDtkWRD4XBFQyy
cTj9r/Drk5d1oGbwqqF0K3AUMc/vnLSzcnt+raXabCkSO+Ww3qoEDqXhtn2l
IfWhgbYzq89XEarKkyJrIHyLMF4a3OWc7Izj3Xbmywk6PtjjOBGEYxf/dSqz
6Nhq9vgPb1u4YW/tbQuJ1TOL8djjNHq3HdbmiWRuzOe2M19b5isccDnncZyI
QhJJmO6y7ofv2H5son8bBbojIbr7FOMb6JYS0dz4gW1nvpzIh4M9jhNRHNij
AewIgO0A2G4I7BbF+C4N7Omc/ICoIBabqu3MlxNaa7DHcSKKAxsA2DkAdhn+
6sQh/r9izJdF1zdcSTsrt2f0lWqzpUgs2QJ97Ppwh2+QgjYbSTSOjKJVllra
5wcl4CvfSp4n9ttZuT0DDlSbLUViNa1Ep01ojNctgrZ5HvJ1w1aip58pAV/5
NajXMdK6jm3XlbfQQsfZYGdTUUhqhw22NJxZutTV8PQdBSgb1GTgdfypWyBv
XUewiuQt1FyArj+GnXbZR9rjp6y4f3Sifztw3akr7ucmnFi16iqk4VJb4b4d
8u2IN+ZTbfEWjXSFRPO/sQAHpZt1iX4x19N/xDNf1ScMfPPZmpBo/hhwV8Eh
x11019Kjzrs5akcdPIcaEu1jrgZa7KSwPW/FX2NIG1l32Ztu7Kx75/Uv665b
ffOh+1s67EpPYku31gH6xZiH+WxLms1z3TfNtrvGrQ8YgAcudR/dg3UvuvRD
a45/7T0RsE+nvMAy8cayENU1+IsA7QLQUQC6pQXQVRb6RsuCJwz+E+blxkRY
WPhjo/LE/W8+BsTh6jOLe7Dutn86d93FK1ZFzNJ2QAPMbgKeWmB4FP99Dsld
cxwl9BkzF8nbfGRYiKx3kHgBiLauIcb+WytgtceXauDOkjchKOrzRsCv+96t
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
PEtxJFb6/4c+Gj4=\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"d89e334e-3da2-44ef-9000-7c14399a553b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Plot results (Fig. S11: comparison of fish carrying capacity scaling to \
interstitial biomass vs. volume)\
\>", "Subsection",
 CellChangeTimes->{{3.8430761630870123`*^9, 3.8430761829055643`*^9}, {
  3.845644998680801*^9, 3.845645005996146*^9}, {3.8461921515107327`*^9, 
  3.846192151863969*^9}},ExpressionUUID->"cfa310d7-edfb-41a0-937e-\
6f4f08fa2eb7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"paddingS9", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"80", 
       RowBox[{"(*", "left", "*)"}], ",", "15"}], 
      RowBox[{"(*", "right", "*)"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"30", 
       RowBox[{"(*", "bottom", "*)"}], ",", "10"}], " ", 
      RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotS9a", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"H", "'"}], "[", "t", "]"}], "/", 
              RowBox[{"H", "[", "t", "]"}]}], "}"}], "/.", "solRecovNoP"}], 
           " ", "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"H", "'"}], "[", "t", "]"}], "/", 
              RowBox[{"H", "[", "t", "]"}]}], "}"}], "/.", "solRecovP"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "850"}], 
         RowBox[{"(*", "tmax", "*)"}], "}"}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<Fish carrying cap. \!\(\*StyleBox[\"\[Proportional]\", \
\"OperatorCharacter\"]\)\!\(\*StyleBox[\" \", \"OperatorCharacter\"]\)(1-\
\[Alpha])H\>\""}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Full", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.021"}], ",", " ", "0.032"}], "}"}]}], "}"}]}], 
        ",", 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<a)\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"Black", ",", "16"}], "}"}]}], "]"}], ",", 
           RowBox[{"Offset", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"5", 
               RowBox[{"(*", 
                RowBox[{"right", " ", "from", " ", "top", " ", "left"}], 
                "*)"}], ",", 
               RowBox[{"-", "5"}]}], 
              RowBox[{"(*", 
               RowBox[{"down", " ", "from", " ", "top", " ", "left"}], "*)"}],
               "}"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "14"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
        RowBox[{"ImagePadding", "\[Rule]", "paddingS9"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"500", ",", "0"}], "}"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], 
          RowBox[{"(*", 
           RowBox[{",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "Dashed"}], "}"}], ",", 
            " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "Dashed"}], "}"}]}], 
           "*)"}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
            RowBox[{"(*", "right", "*)"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
            RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"(*", "True", "*)"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "0", ",", " ", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", 
                 ",", "0.05"}], "}"}], ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"(*", "None", "*)"}], 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"2", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.2\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"4", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.4\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"6", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.6\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"8", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.8\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "6"}]]}], ",", " ", "\"\<1.0\>\""}], "}"}]}],
                 "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], "*)"}], 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<Host specific growth rate \\n (C-mol H C-mol \
\!\(\*SuperscriptBox[\(H\), \(-1\)]\) \!\(\*SuperscriptBox[\(d\), \
\(-1\)]\))\>\"", ",", "None"}], "}"}], 
           RowBox[{"(*", 
            RowBox[{"\\n", " ", "makes", " ", "line", " ", "break"}], "*)"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "10"}], 
          RowBox[{"(*", 
           RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
        " ", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "12"}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], "]"}], ",", 
      RowBox[{"RegionPlot", "[", 
       RowBox[{
        RowBox[{"tStartStress", "<", "t", "<", 
         RowBox[{"tStartStress", "+", "tHigh"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "850"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", " ", 
        RowBox[{"Frame", "\[Rule]", " ", "False"}], ",", " ", 
        RowBox[{"Mesh", "->", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"GrayLevel", "[", 
          RowBox[{"0.09", ",", " ", "0.06"}], "]"}]}]}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotS9b", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "@", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Ni", "/.", "addtimetostatevars"}], "/.", 
              "solRecovNoP"}], " ", "}"}]}]}], ",", 
          RowBox[{"Evaluate", "@", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Ni", "/.", "addtimetostatevars"}], "/.", "solRecovP"}],
              " ", "}"}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "850"}], 
         RowBox[{"(*", "tmax", "*)"}], "}"}], ",", 
        RowBox[{"(*", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<f) Interstitial nitrogen\>\""}],
          "*)"}], 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<b)\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"Black", ",", "16"}], "}"}]}], "]"}], ",", 
           RowBox[{"Offset", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"5", 
               RowBox[{"(*", 
                RowBox[{"right", " ", "from", " ", "top", " ", "left"}], 
                "*)"}], ",", 
               RowBox[{"-", "5"}]}], 
              RowBox[{"(*", 
               RowBox[{"down", " ", "from", " ", "top", " ", "left"}], "*)"}],
               "}"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "12"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
        RowBox[{"ImagePadding", "\[Rule]", "paddingS9"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"500", ",", "0"}], "}"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], 
          RowBox[{"(*", 
           RowBox[{",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "Dashed"}], "}"}], ",", 
            " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "Dashed"}], "}"}]}], 
           "*)"}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
            RowBox[{"(*", "right", "*)"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
            RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"(*", "True", "*)"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"1", "*", 
                  SuperscriptBox["10", 
                   RowBox[{"-", "7"}]]}], ",", " ", 
                 "\"\<1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"2", "*", 
                  SuperscriptBox["10", 
                   RowBox[{"-", "7"}]]}], ",", 
                 "\"\<2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"3", "*", 
                  SuperscriptBox["10", 
                   RowBox[{"-", "7"}]]}], ",", " ", 
                 "\"\<3*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], 
                "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"(*", "None", "*)"}], 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "500", ",", " ", "550", ",", " ", "600", ",", " ", "650", ",", 
               " ", "700", ",", " ", "750", ",", " ", "800", ",", " ", 
               "850"}], "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<Interstitial N (mol N \!\(\*SuperscriptBox[\(L\), \(-1\)]\))\
\>\"", ",", "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "10"}], 
          RowBox[{"(*", 
           RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
        " ", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "12"}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], "]"}], ",", 
      RowBox[{"RegionPlot", "[", 
       RowBox[{
        RowBox[{"tStartStress", "<", "t", "<", 
         RowBox[{"tStartStress", "+", "tHigh"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "850"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", " ", 
        RowBox[{"Frame", "\[Rule]", " ", "False"}], ",", " ", 
        RowBox[{"Mesh", "->", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"GrayLevel", "[", 
          RowBox[{"0.09", ",", " ", "0.06"}], "]"}]}]}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotS9c", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"P", "[", "t", "]"}], "/.", "solRecovP"}], "]"}], ",", 
          " ", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"kp", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", 
             RowBox[{"H", "[", "t", "]"}]}], "/.", "solRecovP"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "850"}], "}"}], ",", 
        RowBox[{"(*", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<c) Fish biomass\>\""}], "*)"}], 
        
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Full", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", 
             RowBox[{"3.1", "*", 
              RowBox[{"10", "^", "7"}]}]}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<c)\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"Black", ",", "16"}], "}"}]}], "]"}], ",", 
           RowBox[{"Offset", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"5", 
               RowBox[{"(*", 
                RowBox[{"right", " ", "from", " ", "top", " ", "left"}], 
                "*)"}], ",", 
               RowBox[{"-", "5"}]}], 
              RowBox[{"(*", 
               RowBox[{"down", " ", "from", " ", "top", " ", "left"}], "*)"}],
               "}"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "12"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
        RowBox[{"ImagePadding", "\[Rule]", "paddingS9"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"500", ",", "0"}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "Dashed"}], "}"}]}], 
          "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
            RowBox[{"(*", "right", "*)"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
            RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"(*", "True", "*)"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "0", ",", " ", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", 
                 ",", "0.05"}], "}"}], ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"(*", "None", "*)"}], 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"2", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.2\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"4", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.4\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"6", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.6\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"8", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.8\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "6"}]]}], ",", " ", "\"\<1.0\>\""}], "}"}]}],
                 "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], "*)"}], 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Fish biomass (g)\>\"", ",", "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "10"}], 
          RowBox[{"(*", 
           RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
        " ", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "12"}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], 
       RowBox[{"(*", 
        RowBox[{",", " ", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<fish biomass\>\"", ",", " ", 
            "\"\<fish carrying capacity\>\""}], "}"}]}]}], "*)"}], "]"}], ",", 
      RowBox[{"RegionPlot", "[", 
       RowBox[{
        RowBox[{"tStartStress", "<", "t", "<", 
         RowBox[{"tStartStress", "+", "tHigh"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "590", ",", "640"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", 
          RowBox[{"1", "*", 
           RowBox[{"10", "^", "10"}]}]}], "}"}], ",", " ", 
        RowBox[{"Frame", "\[Rule]", " ", "False"}], ",", " ", 
        RowBox[{"Mesh", "->", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"GrayLevel", "[", 
          RowBox[{"0.09", ",", " ", "0.06"}], "]"}]}]}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotS9d", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"ep", "*", 
            RowBox[{
             RowBox[{"P", "[", "t", "]"}], "/", 
             RowBox[{"(", " ", 
              RowBox[{"vi", "*", 
               RowBox[{"VH", "[", "t", "]"}]}], ")"}]}]}], "/.", 
           "solRecovP"}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "850"}], "}"}], ",", 
        RowBox[{"(*", 
         RowBox[{
         "PlotLabel", "\[Rule]", 
          "\"\<d) Fish excretion per unit interstitial volume\>\""}], "*)"}], 
        
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<d)\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"Black", ",", "16"}], "}"}]}], "]"}], ",", 
           RowBox[{"Offset", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"5", 
               RowBox[{"(*", 
                RowBox[{"right", " ", "from", " ", "top", " ", "left"}], 
                "*)"}], ",", 
               RowBox[{"-", "5"}]}], 
              RowBox[{"(*", 
               RowBox[{"down", " ", "from", " ", "top", " ", "left"}], "*)"}],
               "}"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "12"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
        RowBox[{"ImagePadding", "\[Rule]", "paddingS9"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Full", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "0.00025"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"500", ",", "0"}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "}"}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
            RowBox[{"(*", "right", "*)"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
            RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"(*", "True", "*)"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "0", ",", " ", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", 
                 ",", "0.05"}], "}"}], ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"(*", "None", "*)"}], 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"2", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.2\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"4", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.4\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"6", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.6\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"8", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.8\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "6"}]]}], ",", " ", "\"\<1.0\>\""}], "}"}]}],
                 "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], "*)"}], 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<Fish excretion (mol N \!\(\*SuperscriptBox[\(L\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(d\), \(-1\)]\))\>\"", ",", "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Time (d)\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
        " ", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "10"}], 
          RowBox[{"(*", 
           RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
        " ", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "12"}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], 
       RowBox[{"(*", 
        RowBox[{",", " ", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<fish biomass\>\"", ",", " ", 
            "\"\<fish carrying capacity\>\""}], "}"}]}]}], "*)"}], "]"}], ",", 
      RowBox[{"RegionPlot", "[", 
       RowBox[{
        RowBox[{"tStartStress", "<", "t", "<", 
         RowBox[{"tStartStress", "+", "tHigh"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "590", ",", "640"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "1000"}], ",", "1000"}], "}"}], ",", " ", 
        RowBox[{"Frame", "\[Rule]", " ", "False"}], ",", " ", 
        RowBox[{"Mesh", "->", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"GrayLevel", "[", 
          RowBox[{"0.09", ",", " ", "0.06"}], "]"}]}]}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotS9e", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"H", "'"}], "[", "t", "]"}], "/", 
              RowBox[{"H", "[", "t", "]"}]}], "}"}], "/.", "solRecovNoP"}], 
           " ", "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"H", "'"}], "[", "t", "]"}], "/", 
              RowBox[{"H", "[", "t", "]"}]}], "}"}], "/.", "solRecovPv"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "850"}], 
         RowBox[{"(*", "tmax", "*)"}], "}"}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<Fish carrying cap. \!\(\*StyleBox[\"\[Proportional]\", \
\"OperatorCharacter\"]\)\!\(\*StyleBox[\" \", \
\"OperatorCharacter\"]\)\!\(\*SubscriptBox[StyleBox[\"V\", \
\"OperatorCharacter\"], \"Hi\"]\)\>\""}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Full", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.021"}], ",", " ", "0.032"}], "}"}]}], "}"}]}], 
        ",", 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<e)\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"Black", ",", "16"}], "}"}]}], "]"}], ",", 
           RowBox[{"Offset", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"5", 
               RowBox[{"(*", 
                RowBox[{"right", " ", "from", " ", "top", " ", "left"}], 
                "*)"}], ",", 
               RowBox[{"-", "5"}]}], 
              RowBox[{"(*", 
               RowBox[{"down", " ", "from", " ", "top", " ", "left"}], "*)"}],
               "}"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "14"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
        RowBox[{"ImagePadding", "\[Rule]", "paddingS9"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"500", ",", "0"}], "}"}]}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"GridLines", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"tStartStress", ",", 
                 RowBox[{"Directive", "[", "Black", "]"}]}], "}"}], ",", " ", 
               
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tStartStress", "+", "tHigh"}], ",", 
                 RowBox[{"Directive", "[", "Black", "]"}]}], "}"}]}], "}"}], 
             ",", 
             RowBox[{"{", "}"}]}], "}"}]}], ","}], "*)"}], 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], 
          RowBox[{"(*", 
           RowBox[{",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "Dashed"}], "}"}], ",", 
            " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "Dashed"}], "}"}]}], 
           "*)"}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
            RowBox[{"(*", "right", "*)"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
            RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"(*", "True", "*)"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "0", ",", " ", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", 
                 ",", "0.05"}], "}"}], ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"(*", "None", "*)"}], 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"2", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.2\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"4", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.4\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"6", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.6\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"8", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.8\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "6"}]]}], ",", " ", "\"\<1.0\>\""}], "}"}]}],
                 "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], "*)"}], 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"None", ",", "None"}], "}"}], 
           RowBox[{"(*", 
            RowBox[{"\\n", " ", "makes", " ", "line", " ", "break"}], "*)"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "10"}], 
          RowBox[{"(*", 
           RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
        " ", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "12"}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], "]"}], ",", 
      RowBox[{"RegionPlot", "[", 
       RowBox[{
        RowBox[{"tStartStress", "<", "t", "<", 
         RowBox[{"tStartStress", "+", "tHigh"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "850"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", " ", 
        RowBox[{"Frame", "\[Rule]", " ", "False"}], ",", " ", 
        RowBox[{"Mesh", "->", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"GrayLevel", "[", 
          RowBox[{"0.09", ",", " ", "0.06"}], "]"}]}]}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotS9f", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "@", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Ni", "/.", "addtimetostatevars"}], "/.", 
              "solRecovNoP"}], " ", "}"}]}]}], ",", 
          RowBox[{"Evaluate", "@", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Ni", "/.", "addtimetostatevars"}], "/.", 
              "solRecovPv"}], "}"}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "850"}], 
         RowBox[{"(*", "tmax", "*)"}], "}"}], ",", 
        RowBox[{"(*", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<f) Interstitial nitrogen\>\""}],
          "*)"}], 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<f)\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"Black", ",", "16"}], "}"}]}], "]"}], ",", 
           RowBox[{"Offset", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"5", 
               RowBox[{"(*", 
                RowBox[{"right", " ", "from", " ", "top", " ", "left"}], 
                "*)"}], ",", 
               RowBox[{"-", "5"}]}], 
              RowBox[{"(*", 
               RowBox[{"down", " ", "from", " ", "top", " ", "left"}], "*)"}],
               "}"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "12"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
        RowBox[{"ImagePadding", "\[Rule]", "paddingS9"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"500", ",", "0"}], "}"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], 
          RowBox[{"(*", 
           RowBox[{",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "Dashed"}], "}"}], ",", 
            " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "Dashed"}], "}"}]}], 
           "*)"}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
            RowBox[{"(*", "right", "*)"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
            RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"(*", "True", "*)"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"1", "*", 
                  SuperscriptBox["10", 
                   RowBox[{"-", "7"}]]}], ",", " ", 
                 "\"\<1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"2", "*", 
                  SuperscriptBox["10", 
                   RowBox[{"-", "7"}]]}], ",", 
                 "\"\<2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"3", "*", 
                  SuperscriptBox["10", 
                   RowBox[{"-", "7"}]]}], ",", " ", 
                 "\"\<3*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], 
                "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"(*", "None", "*)"}], 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "500", ",", " ", "550", ",", " ", "600", ",", " ", "650", ",", 
               " ", "700", ",", " ", "750", ",", " ", "800", ",", " ", 
               "850"}], "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"None", ",", "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "10"}], 
          RowBox[{"(*", 
           RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
        " ", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "12"}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], "]"}], ",", 
      RowBox[{"RegionPlot", "[", 
       RowBox[{
        RowBox[{"tStartStress", "<", "t", "<", 
         RowBox[{"tStartStress", "+", "tHigh"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "850"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", " ", 
        RowBox[{"Frame", "\[Rule]", " ", "False"}], ",", " ", 
        RowBox[{"Mesh", "->", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"GrayLevel", "[", 
          RowBox[{"0.09", ",", " ", "0.06"}], "]"}]}]}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotS9g", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"P", "[", "t", "]"}], "/.", "solRecovPv"}], "]"}], ",", 
          " ", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"kpv", "*", "vi", "*", 
             RowBox[{"VH", "[", "t", "]"}]}], "/.", "solRecovPv"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "850"}], "}"}], ",", 
        RowBox[{"(*", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<c) Fish biomass\>\""}], "*)"}], 
        
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<g)\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"Black", ",", "16"}], "}"}]}], "]"}], ",", 
           RowBox[{"Offset", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"5", 
               RowBox[{"(*", 
                RowBox[{"right", " ", "from", " ", "top", " ", "left"}], 
                "*)"}], ",", 
               RowBox[{"-", "5"}]}], 
              RowBox[{"(*", 
               RowBox[{"down", " ", "from", " ", "top", " ", "left"}], "*)"}],
               "}"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "12"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
        RowBox[{"ImagePadding", "\[Rule]", "paddingS9"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Full", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", 
             RowBox[{"3.1", "*", 
              RowBox[{"10", "^", "7"}]}]}], "}"}]}], "}"}]}], ",", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", "\"\<t\>\"", "}"}]}], ","}], "*)"}], 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"500", ",", "0"}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "Dashed"}], "}"}]}], 
          "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
            RowBox[{"(*", "right", "*)"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
            RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"(*", "True", "*)"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "0", ",", " ", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", 
                 ",", "0.05"}], "}"}], ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"(*", "None", "*)"}], 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"2", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.2\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"4", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.4\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"6", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.6\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"8", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.8\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "6"}]]}], ",", " ", "\"\<1.0\>\""}], "}"}]}],
                 "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], "*)"}], 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"None", ",", "None"}], "}"}], 
           RowBox[{"(*", 
            RowBox[{"\\n", " ", "makes", " ", "line", " ", "break"}], "*)"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "10"}], 
          RowBox[{"(*", 
           RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
        " ", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "12"}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], 
       RowBox[{"(*", 
        RowBox[{",", " ", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<fish biomass\>\"", ",", " ", 
            "\"\<fish carrying capacity\>\""}], "}"}]}]}], "*)"}], "]"}], ",", 
      RowBox[{"RegionPlot", "[", 
       RowBox[{
        RowBox[{"tStartStress", "<", "t", "<", 
         RowBox[{"tStartStress", "+", "tHigh"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "590", ",", "640"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", 
          RowBox[{"1", "*", 
           RowBox[{"10", "^", "10"}]}]}], "}"}], ",", " ", 
        RowBox[{"Frame", "\[Rule]", " ", "False"}], ",", " ", 
        RowBox[{"Mesh", "->", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"GrayLevel", "[", 
          RowBox[{"0.09", ",", " ", "0.06"}], "]"}]}]}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotS9h", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"ep", "*", 
           RowBox[{
            RowBox[{"P", "[", "t", "]"}], "/", 
            RowBox[{"(", " ", 
             RowBox[{"vi", "*", 
              RowBox[{"VH", "[", "t", "]"}]}], ")"}]}]}], "/.", 
          "solRecovPv"}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "500", ",", "850"}], "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<d) Fish excretion per unit interstitial volume\>\""}], "*)"}], 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<h)\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"Black", ",", "16"}], "}"}]}], "]"}], ",", 
          RowBox[{"Offset", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"5", 
              RowBox[{"(*", 
               RowBox[{"right", " ", "from", " ", "top", " ", "left"}], 
               "*)"}], ",", 
              RowBox[{"-", "5"}]}], 
             RowBox[{"(*", 
              RowBox[{"down", " ", "from", " ", "top", " ", "left"}], "*)"}], 
             "}"}], ",", 
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
          RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
          " ", "12"}], 
         RowBox[{"(*", 
          RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", "paddingS9"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Full", ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0.00025"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", "\"\<t\>\"", "}"}]}], ","}], "*)"}], 
       RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
       RowBox[{"AxesOrigin", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"500", ",", "0"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "}"}], "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", 
            RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
           RowBox[{"(*", "right", "*)"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", 
            RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
           RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"(*", "True", "*)"}], 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "0", ",", " ", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", 
                ",", "0.05"}], "}"}], ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"(*", "None", "*)"}], 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"2", "*", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.2\>\""}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"4", "*", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.4\>\""}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"6", "*", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.6\>\""}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"8", "*", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.8\>\""}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1", "*", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "6"}]]}], ",", " ", "\"\<1.0\>\""}], "}"}]}],
                "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], "*)"}], 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"None", ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Time (d)\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
       " ", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "10"}], 
         RowBox[{"(*", 
          RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
       " ", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "12"}], "]"}]}]}], 
      RowBox[{"(*", 
       RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], 
      RowBox[{"(*", 
       RowBox[{",", " ", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<fish biomass\>\"", ",", " ", 
           "\"\<fish carrying capacity\>\""}], "}"}]}]}], "*)"}], "]"}], ",", 
     
     RowBox[{"RegionPlot", "[", 
      RowBox[{
       RowBox[{"tStartStress", "<", "t", "<", 
        RowBox[{"tStartStress", "+", "tHigh"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "590", ",", "640"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "1000"}], ",", "1000"}], "}"}], ",", " ", 
       RowBox[{"Frame", "\[Rule]", " ", "False"}], ",", " ", 
       RowBox[{"Mesh", "->", "None"}], ",", 
       RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"GrayLevel", "[", 
         RowBox[{"0.09", ",", " ", "0.06"}], "]"}]}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8430763729431057`*^9, 3.8430764014610767`*^9}, {
   3.8430764560895767`*^9, 3.843076518687056*^9}, {3.843076640966511*^9, 
   3.843076734737249*^9}, {3.8430767989816713`*^9, 3.8430769142852716`*^9}, {
   3.843076945711812*^9, 3.843076961435272*^9}, {3.843077454354241*^9, 
   3.8430775853067904`*^9}, {3.8430776160920143`*^9, 3.843077663009252*^9}, {
   3.84307771321028*^9, 3.8430777214610157`*^9}, {3.843077753757646*^9, 
   3.843077831461507*^9}, {3.843077863005726*^9, 3.843078014506105*^9}, {
   3.843078061648677*^9, 3.843078099277836*^9}, {3.8430783793885517`*^9, 
   3.843078398328629*^9}, {3.8430784861264544`*^9, 3.843078521973295*^9}, 
   3.84307872140888*^9, {3.84307880536756*^9, 3.843078821652453*^9}, 
   3.8430788657581177`*^9, {3.844465173561858*^9, 3.844465368033023*^9}, 
   3.845566766601674*^9, {3.8455669244073143`*^9, 3.845566952446458*^9}, {
   3.845645207812374*^9, 3.8456452984837713`*^9}},
 CellLabel->
  "In[849]:=",ExpressionUUID->"e00baa5b-4fc9-4bf3-9ece-d58838893891"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"recovPVHLeg", "=", 
    RowBox[{"LineLegend", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "Dashed"}], "}"}]}], "}"}], 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Fish absent\>\"", ",", "\"\<Fish present\>\"", ",", " ", 
        "\"\<Fish carrying capacity\>\""}], "}"}], ",", " ", 
      RowBox[{"LegendMarkerSize", "\[Rule]", "60"}], ",", " ", 
      RowBox[{"LegendLayout", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Row\>\"", ",", "1"}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"recovPVHFig", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"plotS9a", ",", " ", "plotS9e"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"plotS9b", ",", "plotS9f"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"plotS9c", ",", "plotS9g"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"plotS9d", ",", " ", "plotS9h"}], "}"}]}], "}"}], ",", " ", 
      RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
      RowBox[{"Spacings", "\[Rule]", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", 
           RowBox[{"(*", "left", "*)"}], ",", 
           RowBox[{"-", "60"}]}], " ", 
          RowBox[{"(*", 
           RowBox[{"first", " ", 
            RowBox[{"(", "leftmost", ")"}], " ", "and", " ", "second", " ", 
            "col"}], "*)"}], 
          RowBox[{"(*", 
           RowBox[{"left", " ", "to", " ", "right"}], "*)"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", 
           RowBox[{"(*", "top", "*)"}], ",", 
           RowBox[{"-", "30"}], 
           RowBox[{"(*", 
            RowBox[{"first", " ", "and", " ", "second", " ", "rows"}], "*)"}],
            ",", 
           RowBox[{"-", "30"}], ",", 
           RowBox[{"-", "30"}]}], 
          RowBox[{"(*", 
           RowBox[{"second", " ", "and", " ", "third"}], "*)"}], " ", 
          RowBox[{"(*", 
           RowBox[{"top", " ", "to", " ", "bottom"}], "*)"}], "}"}]}], 
        "}"}]}], ",", " ", 
      RowBox[{"Frame", "\[Rule]", "False"}], 
      RowBox[{"(*", 
       RowBox[{",", " ", 
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"1", "/", "GoldenRatio"}]}]}], "*)"}], ",", " ", 
      RowBox[{"Alignment", "\[Rule]", " ", "Bottom"}]}], "]"}], ",", 
    RowBox[{"Placed", "[", 
     RowBox[{"recovPVHLeg", ",", 
      RowBox[{"(*", "Bottom", "*)"}], 
      RowBox[{"{", 
       RowBox[{"0.5", ",", " ", "0"}], 
       RowBox[{"(*", 
        RowBox[{"x", ",", " ", 
         RowBox[{"y", " ", "position", " ", "of", " ", "legend"}]}], "*)"}], 
       "}"}]}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.843076998146743*^9, 3.8430770361277027`*^9}, {
  3.843077376938815*^9, 3.843077380884684*^9}, {3.843078120800989*^9, 
  3.843078170466674*^9}, {3.843078211948968*^9, 3.843078298442861*^9}, {
  3.843078889541892*^9, 3.8430788999039*^9}, {3.8431281675482616`*^9, 
  3.8431281708321*^9}, {3.844465374484022*^9, 3.8444653980013*^9}},
 CellLabel->
  "In[858]:=",ExpressionUUID->"bf36dddb-d2c6-46a4-87eb-84295b7d35b7"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[
             {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
H7s0Oj9nxO0yLcxG+eHBfTofiFrH/ki7TsKjAxPuuD6nZd5ejcgh4UmUQxOu
f1vryl0XctF8VHDWDlvvsuf3E3lofTotLkKfbxwoT7W4gdazBouacLzFpIV3
EvlofRdD0ut9z2azsdU3SbCnttzHbo+JT5G9RULAHz16/aG//72JSAHKd1s4
9Poja97qb9+QQ1pk1uPnz27yTu6+TQIve+Ii9lneI+OGO6h/tq5vxO7YKzpa
epeEg7W99HrSQNIiKeseCS5ysvT5j0Rk/5fAIhJeOcYY4fqe27Mu0a2YhHa2
Uhr2a/ELhjYlJIzaPhmj15cN1Z8NS0kI3VWqh+N3PUwiQfM+Ws++VvfHnmNq
vV2xjATt1IO52N5i6SNi5SRs2RBG57vOZ5/iJpB37PzXgL0tRGdb3wM0fwb+
e0A/zwNUKitIuG4fQu//JA6YTac8JMHt7Aq6/c/q2ndfeITGf2f+X3o+UnR5
aM1H66lTP1nYekLeKTqVJNy/OTCC65cxSF6cV0WCwImX27FnNkbaf0a2+yVa
iuPjXpi0ub4a5Z9lCbuxmxNyZHMek8BcNE6fl2wKKvrJqkH1WZrSQI+f41Xt
Dk9IuFowh15vCO5qLNavJcHGoJHez7mu7bq8+Cna75xwpvd7L6QHvX4iP3p6
jB6P2r9/WLQ+I4GSspyP35fQPUP7bh0J5hON++j89lhSKqoeebV7PPbxPPlR
twYS9h1/9hF7rfeGguUvSPhKGcXi+ly22x45oxHl57S79H71t8E+927k70p+
23E8jiw/tPvBS5TfTu28gl0jdlI9oQn1p+b299jqX33EfP4jYTezawWOL6+V
GtzfjPIXe/5Rev4p4z1d24LWb4+2htPzW1rKdfFWEm4NLKbbt5KdxxlEFg49
T+/3VriVOD1pI8Hyp0I+fT6277HhtXYSpMw76f3h6PqmpYxXJCz1oej2tF78
dsahDhLeiY6I0PuN6U89uq9Re7p9S6DXu/0TfJlONJ/f9qT3d9x6obQxZO5F
BTdc35Hb84JedpEwQ2RqlF5fXFE8fPMNqv+sBDpflfir64W+JaFSxMWKni8c
Nsk7d6P3JQ2vwR5Q3/9auQetZ9w0lLHvjbvFv35PgtmrO/TnZbvO+5b0ov2R
zGs2dmAl2yq2D82/7+c+wu7Njlnv+QGt/xXG6POcneFXpc36STiTqULvtws8
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
diaueI/GY0Kxp19sCLF6p9aBBb0U3FLuGQ53CCG4rMVzhPooKEzlmb3WCCH0
/oyQPR9QfzKu1lz8OJjIGYhxTR6k4J6Sq8Kzfi4huOzi0rBPKN+/6Tq15yaX
OHTE6Y3fEAXGslHXh89yifltG82tRyg4seKiu+0fDhFU3bVJahTth+Z0BYlO
s4nXkzXfppFf1NVGnnnIJtZvLsj/8o2C2H/7F6T7s4mh26Ty8+8UjPmfi5D7
xiKsU1fMCv6J+vuZ6qsizylCqTPk+NlfFPSObXerYVBE/8IR/sHfaD1advoS
pUUR3tH3/DT/ov0c9+tyzSgmofdCpm3xPwqCzl4JTNdlEkKzL2iJTKL1uLlV
u3gPSVxiEUOvpyj4b1mU6pLlJGFfec2kZpqCpa5Z7TYMBrFkUiSzQIAFNfbt
ng/yg4jBzSenE2aw4OjWHd02DYHEHd/nB1mCLHDbI/7OriuAOF+47r6HEAve
HtPWeP/qImEwemmBrTALRo47WTo98Cdmrpnw3C7CgttP3ZQyAi8QL07avdCY
yYLkhP+sMqT8iMvXK1YtmsWCiHJLnxRHX+JQnzJ3higLnh68L5pv7E0sU2H1
DiMvG4jYfO7UWWLo0EeDdjEWMA1i7s9a4EbcS9yVXDmbBe0qpWpNBRbEhfab
P2+Is2D3uZUbvQ3P8UF6nuUVCRYYXhnbKj8SzRc197rDmMOCWjlTrUV3YvlN
Ee0SbpIs4F8w/DBdH8uPr9t80nIuC/ZsZBe3N8Tyj8xMfWIwjwWF7JVl/yGv
NBRYukqKBbmH/HZWI39hHA+Sns+CipNuG24jF1fUdk4if0jbejcBOeD3qk2D
0iyY/BT+MAjZaGNkbPMCFlRfNbB3RJbwGv1aIcMCveZlbEBuuX1gT85CFkRK
z9+igJw0UpIbs4gF8Y4d/j9Q+Y6tWiwSIMuCX6GmJnXI6s6Bjs5yqHyl95OT
kL9d63lovpgFRlmL/F2RSYUc3xUKLOhxXd/6uy6Wv9NudstcRRakHFlk/hB5
bpzHuj/IGZ9+WwUiX527frBRmQWBHwREvj+L5TvviTcqU0HtTT25nYu8JvRP
euYSFmSt0xu2R64QrLLzW8aCdU/vyxQ/jeWzieUlx5azoHt4j/hh5N0BwfPN
VrBA/fGPhBnIneNmDUtUWZAjkhQCtbH8X4Odeg3qLLiTMl8rriaWX7nCILF4
NYrX+6r9y5CDj2WMp2mwIFo4bMWtx7H8hW9cCrzXos+XrpIurY7l67z8oayk
zYL3DKnMrMpY/h8t+bu/kFc/e/tkCXLl5W3bW3RYMM3N3ZLCj+XvsY9yCtmA
4nfYeXPoI1S/ftW8MV0WgKOAi1FFLD/hr732U4IFSxN3zjEpRe1/hPk4A1jw
8RZrOrkklr+8KscyYBv6e3ZQy9fiWP5d7g9fLUMWrN1hvzamKJZfLxX1INmE
BS9laoUr7sby/6lWGXmaseBalI9HRX4svzpsoM10LwtKpQ+fHb8Ryw/5PMdl
xT4WsBsvSK1Blim0D+00Z4HIxrVHEnJj+WsNfrwwskQecMhyyI7lO1iq2sgd
ZAHpZ3235mos/wkZebLaFdV3qbC3YUwsvzU52e/2STTeKj7L20fH8ntL8oJT
3Fgwo+bEvrO8WP7UyJNsX3cWiML61IzIWP4mu6n36p4s+KR2+7l4WCw/T+uM
fex5FpQcuewkw4rl398TeJL0Y4H0rfxGPSqWX+sS7udxgQWjxS4NJ5jo+ak5
cTsuov43c/2DCkYsX352T/PfIBZolWn3MgJi+ZG95ruduCzIjC/9dcI3lp8y
ecR+fzALXAOCQm76xPJvyHqcNAhB+SJI3GUczWS1e0ODZcNQf4+1WxvlFcuf
Lq96/DySBZ9LrSreeMbyJdtfNpdFsaB3w8XLG5EVvr19f53HAu0I7rdLZ2L5
uqp/pskYFnSN9R49cDqWfzZWW2/DFRYsWlXn/P0UGg8FsHtpHAtS3S0nHZGj
6vbaz41nwX6tL6Ytbqg8025+nxJYcLxF6vPDk7H8vlOZRakpqH4GKf6FLrH8
Me7dx2GpLNBtar6+CVngGr/5/FUWeFZMRT5yRuXp6Brdn84CMUGx4NYTsXwr
owVrZmahfHbPd/USJzR+Of2efchLZmt0Vh2P5XvWlhRVZrNgzNy91wk5bKed
3sUc1D+dhf/dPYbyUag6aZvLgsXfWiQPIWfV/328IY8FDXdmnBdFfrTn6u7R
GyyIun3J2NUxlt8QeYb3Ip8FP9UkMuSROxqh5cZNFnhUWO/9zyGW3z93/qKQ
Wyw49nHAMBR5zLzP/kQBC8JmzGAbIk/HFF3dfhuN98u/RQWQJVo4vcp3WHBl
nqPv6PxYvtwCm5WTyCtLXezEqqL5K63U3DrvsuBf7by3f9dH83Xift8qvccC
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
36P4mpvHaiDDrS0OF3tR/c5eityNrNQd2mv+gQPWAi+fBiN3EmoDfwc48Lrx
kNxv5F0d+3I/DqL6XDPrl67kEfc9z5/87xMHZq65snQtclxG7fD1YQ7oVMs4
OyJbCJ0Y3f+VA9l17q+rkauSI+7qjaL2v/lDrhNZc33ROdVvHLDT0P4wiix5
Qmj83xgHzsk2SShWofFdm/E7Z4IDpztyPc8gbz5aV37pJxpPCxorKeTcn6MX
A39xYE7o8tAryFw1mLL4wwHTZb8vlCFvD+sWnJrkgAz7yuRf5LtLZ9YMTnFg
92DXQ/FqlA8erOG0TKP2pnxU5JGnhgNm5c3gwqiGzGNdZA921rNYQS5UxTlM
mSC/UXgeGiTEhch3oc2WyOVm8hKWIlzgNK/XO4O86uP2FwYzuTAcv+TFReSE
ILeoVbO4UOlS/TkY2fd22bxpUS6IX1zVdhVZR8pW5oYEF861vJyqRb6Wx2i/
PIcLN528Pr9Enr89J54hyQWh8plxHcij5ybkrOZx4ZVkvtgn5KPiSl2EFBft
Rx++HEVuzDROUZ/PhcXW9sa/kG+2XlYSWIDKk3dyw8zHqL96VLwbQj4tL5Iv
gRwm8iG9TYYLZy9erJ2P/DtV/FjlQi6snufBkUV23aizLH8RF150B/UrIr9q
tP9wRZYL49n2H5Yim7hQ2aQcF9Z1FDBUkYun85xPLebCkbi1xauRlyf8p2ot
zwWTGzHUOuRL1hWKWgpc2NCWUaCNLCCTIy2hyIUVUpYBG5BPt8SIDSDnr3n9
aRPym5iA6SolLoRO9/7cjGxq7jKeosyFi139dVuR70taDJ9XQfG5aHVSH3nl
C733Fku4MLdNrtUAOTZc9dWapVyQzlISBfw+0/kvRJdxocfxgNA2/D7Ryeo+
5BzD/MfYb2oH7j9azoWhDYo7tuP3cZoLEldw4VRHZjj2fcOHWd4rubDJX5+H
vVIwN2mfKhcSZUb2YV+uvBStrsYFpT3FDfh5goxArsgqLqQfuyaA7anvGtCD
vEO/coRA7v5rce6BOhfiDypH4fLuKdd3jVvNBbK1pVcPudxP7chZDdQ/LMYH
tyCrbZK23LOGCy5z067qIseNT+5SXYvq/9/XGRuRhYsGCcF1XCj6ICalg3z2
XMuGt8hP5aXrcfy7NR+tvq/JhevZV7U08Pu+5i6J1eJCdMkSdzX8fPegObt0
UPknmcdVkHtOrOov2siFJ/svqEgi712+oIu3iQv6y9iSYsgVvVNNbrpciImq
qRFCTjjaWqGyhQtZ8xqYuP/NVOLf+4t84VkEewzZ+01ebvtWLuy1vLhjBHmf
HeNyhD4X5plOibxDrljkFuZigP5+Jn/yFbJ6uyW5neDCnlclt5rw8w6ou/8C
LlTYbFtXhfxoT5uhkxEXXorHb0xD1hCv3EwYo/KJPbaPQ06qu7FusQkXCoTi
7SLx+DMh5Zt2cOEK73a3P/IaWP19624uNFRXNxxATtFhXpO2QO87n+OM84XF
jQMLZxzggsGOhTpfkEWXrAz7guxtYXyrB9lbsuFsnRUXJnPVFZ4g7/60YBvD
DvXvg3fdIpD/XM19N+TABX/QcZmPfEfm4oEORy5Y3/6zTBDZOcLs6ZNjqL8v
zLr6DeW//y6MFaQ7ofiHsh+/RM611AuyduXCstNGnqHINrObFKrPoPIJtA1N
oHwswbwWfduTC1rdM9/1IVf/9BZOPcuFztrC9Cbktf1yI+e9UPxJISoPeWbl
8QdrzqP6R+t62yIX+fy0SwziwraVrPO3H6F8814p3jOSC87fSz9uQ/PH08Ai
Ym8Uyjeaf6NXIwcsNh1czePC144Dq2SQ+w/4bB6I5sKMFUvlB9H8dL+2oevw
ZfS+KIWaCOTDN/1UdidzQf6Q47aXaL7LPd+ctyIP1efhVXtDNF/qS3IrOmu4
cNhvw9JPaH4Oi/Mg1/zlgpz98cw8tF5o0zR8pLwxGGql5qoTaL3SZtqroewR
DCJyn2wN0HqpxfeMzKPcYMjJOLriThzK/0tr17r1BMOvL7GNf6N4xMFVqR+n
FoYAuy86sz4YxWP7MVkdixBYVlJ+xofkESWdo/7eoSFQ+vSxlow/mm85HjZW
T0JgMmh+zV0vVL8wt2YlgVBYdSZactQDzSfztILGN4aCsc5TYeGTPCI1pz/z
1LlQ0PVdKbocrYdvPTr+50teKPTEdxVPH0XjR/PYV/ueUAh71s7ffQitL4r3
HnGWD4OYsRVW1215xM/7wlNBFmEQoD3QHmPFI3bmT87wORAGikean7KRk1In
RE5ZhkHzEUb5eWQ9anCOjXUYqMscTDiMTO1+rrjOPgxMf/56twpZojtW/51j
GLzasnL5Y0v8//MsCyTOhsGt9yoVv9H63WtcnrnhXBjsvmfj/hm5ZmABZ7VX
GGzTfKH8Htnl+czIRT5hYPwpk/UM+eaVoZSvfmEg49q6Kx55k9q9ijQyDBpb
aiU2Iocszq+8wgyDrsBfk6uQOyWyasKpMCAFVo8qIgd8u/L8PDsMjgi31Isg
V5dfeLMvJAxsUz6KtlvwCOlb53qMQ8Og9MyM1fXITmmnPmwNC4OvPd5mj5Bn
sQ+PqEaEgV/KDe51ZFtf61HFyDDQ2qp+Own5huu+H/+bcF+Xwwfuljd9QP7v
KI8fnP1dDoeiW82agXwfX8c//4F8lj3POsuBfAC/6kD2
               "]]},
             Annotation[#, "Charting`Private`Tag$130148#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
wBb3agEOlGWV+FLI/yMspX23iHDAaVv//irg0Z9aUqMtF3DAwbfy89VzPPr6
u8aferIckFcLH/uL4t2lTsRRSY4DwvaNz/aifPC17LjK6EIO+G+YXS7B5dE9
99flpSpx4NOKI+O2MTx6LKSubnIpB6Qs9778fptHP2YLr+lW48CHDHlFwbs8
+nyg4dUGdQ50GNXDvPs8+u/p6wdvL+PAslfZbuqPefQ05yMjjis4cP6k+vqp
lzxawkBI5qE+By6HHpd1bubRdSsNLiQbcOC2ww/D2Z94dKymZ2vYag50nxBa
de8zj5ZReXPT1ZADK55ty/v6lUcrzL6yRtyIA6/+hbz5NcCjl33R3XNkI9qv
51/ytSCf7vl46Nkucw5sNgyqnzGdT99pil9kasGBirz/nNbP4NM6VZPdCyw5
kLbz4VaeKJ9eXVBx4T9rDgzrmF3tkeLTZpGuSSr2HPCNN7P2VuXTQrm7Df4i
DnySE7ZoCZ9++Wbbm3c7OHBg5Ti/dimfNpdYJxC9C9l/3jU11WV82iJW6tCk
Iwf4NbdfB63k05sTXy5vduYgfaS2xWM9nxZ5Ulj6yIUD3yNctr8x4tMVzXf3
8105sKX3YJ/OBj5trZAUvfkgB4xnluZ2AZ/emuz7M9+dAyVvhL4t3sSnbTOW
Po09xoGV1YOPa235tMQr+Z0njnNgV3ptwOh2Pl3zTbLf+gQH1mR6bJ5vz6e3
a0wpCZ3kwB1RcLXayaftbzdRPr7o+wNFiRxHPu2QF2y9zR/9/mnxLBsXPi1T
d7FDI4ADTToB+wxd+fS74dMB0y9y4GZZdamSG5921HfJfRrIgd6T2elfDvLp
PQWGUpoUBzSUFG6DB5/e96z7w4xQDhwt/djjdYxPH7pcNjiC+Mt157m6x/n0
sRMZMzvCkD9M2/dsBHHgIlcDOoIDM7cECJ/y4dPJ3Pe8czwO1KYb7bY4zaez
DuRnHuZzIM5w+qphxPfWxD3fEcMB8m3Ak6u+fLq427ZvZRwHRASHUzvP8On2
bWWWXfEc2Dbo0LDTD/mDWsaBpgQOCF7uUelG/PMfdaY0kQOO+xWOXTjPp6ff
35CWcpUD325fZcdd4NNLZfKnHJPR/nNXRt0M4NPaP2LnW6Zw4N9JRcUlF5G/
lJ/UMrjBgTciLe3XEW+6sMJJMo0D828lHY0I5NOeremPKm5yYGJVWoAlwad9
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
vtSlzLqB/T+Wor6v
               "]]},
             Annotation[#, "Charting`Private`Tag$130148#2"]& ]}, {}}, {
           GraphicsComplexBox[CompressedData["
1:eJxdl3tM1WUYxw8IBiJ5gINIhnLTEd4YRfOCnLPIC2mOeQ/lFErQYg61SYIt
SpRSJAGZIaGTsImKJKaIweRkisCY0pg5b1wMBK2GIUPxWp3n9/2+8/AP++z7
8H7f3/s+z/s8+K1KXvihvU6nW2Gn0/3/e7+5qCfMkGEqHzh64/nzAMuCiuSp
+QcVQ/f0PfSea5cfdTD0h3lzj4blj6UOhl7XFXEw2jyaOhh6/tSw4qQgL+pg
6KuyJnyX2edOHQz9g5rI4MhUV+pg6E/iQsakujpSB0MPGTE90Bw5WAsdDL35
xPhR+VfaqYOhW4SN0MHQg2Q96mCen+zHxPPTGPpK+R7qYH6/nAd1MPQ8OU/q
YOjn5D6og6EPyH1SB0M3SD5QB9vkl8kmv0xRJ49bMhs3a/fpbwHXW8/Pl/y+
9Xt9yJOs5+dNfmw9L09yg/Xv9eTJ1nhncqNV15GbrHyvFqyz/jTXgM+JbgTX
yd9z/8GyPvmC+JMHZX/kCbJ/cqx8n8nm+8lxcj5k2/NDvYJRn2DUI/ev1R8Y
9fbifbiTUU9g1A8Y9QJGfYBRD2DkP/en5TsY+U1/LZ/ByF/ej5avYOQnGPn4
4KVMfVdsBvPtxffE3wId+QcdDB35CB0MHfkJHQwd+QodDB35Cx0MHfkMHQwd
+Q0dDB35Dh0MHfkPHQwd9cD3QmPoqA++9xpDR71AB0NH/UAHQ0c9QQdDR31B
B0NHvUEH29y/yeb+qaMeoYOTu4vcntSqevTxO1DhdEz102EJO8t0ls2my9W7
w4d4K+6NsQw6N/mTZ3TlntY/8yUv2VKd4lWheLbPK2vC63zIG1es6Y6aqNiw
Vp+4LMdbxZev7ogfGEW+dXZo3PoYTxVvF3M93WIgH/N8GpMd6KbiF0VfLtyu
Jz9uvn0o+qYzOe7d7H1Jh5zI36a07M1cZ0d+2peaVzxTR46f+kVAqktfLThh
VaG3eU4v+eK0gpPRET+RFwgbwUslnrxS1iMPip8JvEv2Q46V/ZIfyPeQ2+V7
yeVyHmR3OS8VL+dJflvOW8XLfZBT5L5UvNynyea+yVo+kLV8IbdIPqn9av0B
jH4ARj8Aox+A0Q/A6Adg9AMw+gEY/QCMfgBGPwCjH3B/Wj/g/Wr9gP5aPwCj
H4DRD8DoB8x3rR+gXvH+87zr3pqRcVXV51fRhsfbXPwtiEc/gF7SO7Mq54w6
39b7Y+5N7hjL+sf6m7+vGOnwH587FXs3sCOAPL9xU3acm+Jn5sF5PUNU/Mb5
10uPtPhzPfhDn9ixPDG0zo98/H7KsOQBpTfq7+T++dtYcuuG38edrvLl96B/
MV9D138cPkflR9lsz7tRR0bTH/FYb7xnaX36UrV+6PTOlwcrlV6wui1raNFo
8o6IklnZM3zoj/7IetryUfwyN5WPaXtcOuM3eNEf8VivP3Hf2UJftb4u+5qT
4UulJ1Re3uqX4EWOyd1jLHX0pj/6L+vnitm8/vpI8ty/7FrTjR70RzzWO/tz
fs3JuyPJF9ua7afMU/obzk3p4SEe5KDOndN+vWSgP/o7/D4LXrI8+wdVb5M+
v/djmMfL9Ec81stxzapsPuFOLgq98CTK043sWLXlfnm/K3ngzczXW/fo6Y/5
ge/lo90HotuGkxsCbpYkHXSkP+KxXrXFPu7K0+HklmGb/m44o/Ti2HXdnV87
krd5DMb0XXCiP+YT+E3Zn1GQ+YkDuT5v15TITx/Vwh/xWG9ZQu9i1zwHcvKx
xI7nC+1U/QytqQyb/qgWPO5014KglTr6Y/6BX0FW+6jUEQ/J9jVXJ5uNf9Af
8Vivx6sqN3P+Q7KhrPRw0sV/yPElwTMjz98iO2yKckn9pbcW/piv4Be+ots+
v+0G/V8VNsIf8Vgvbces2w0tN7n+8TsR0X3Xyskxohup91h1I/wxv8Gvr9r6
veQcOQ/6Ix7rLZbvI/enWb+P3C7nQx4u50N/zIfsD3Lf9J8g+WCCP+Kx3lq5
X67vJ/dLfZHkBzlJ8oPvP+ZP+J2XfCfvlHqgP+Kx3l7Jb/JWyW/yKakP8iWp
D/pjvoXfa1Lv5DR5D+iPeKxnJ/VN7pf6Jn8j7wO5UN4H+mN+5rwo7x25TN5D
+iOe7728b+Tx8r6RLfI+kpvkfaQ/5nPOs/Lek1ulH9Af8awved/Jy+V9J/dJ
fyA/22HtD/TH/A+/w9LvyHrph/RHPNbbLf2NvF36GzlQ+iM5RPqjyWaeoN8N
mR/IxTJfmGz6P9erl/5O1vo7OVjmA7I2H9Af/7/YzDtq/pR5iP6It5lXyNq8
QtbmHfI7Mu+QMa+CMa+CMa+CMa+CMa+CMa+CMa+CMa/yPrR5FYx5lfmrzavs
39q8yv1p8yoY8yr9tXkVjHmV56PNq+zP2rzKfqLNq/8CkEyeCw==
            "], {
             {GrayLevel[0.09], AbsoluteThickness[1.6], Opacity[0.06], 
              EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
                 "]], 
                PolygonBox[CompressedData["
1:eJwt1Pdvz0Ecx/E7oxqjGqOaWqVKqbYoLUpbRbVmEBEREUREhEZEYu89Wnv7
JwgxYoQYIUaIEWKEGCFGiBFiPF95v3945F73zefzubv33X3bTa0aM6dWCGE4
6uAe7mMC6mMF7mAAcvAQD9DQn7mBmxiPRDzHMyRhIj7gIyYjGedxDgkYi8/4
hCb+zCVcxjh/ZhmuoRRd8RM/0AxT8A3fPesb6/AOg9ANt3HL16I5rsELDEQe
VuERypCLJ3jqc9caz+Csz1X1WYILKEE23uKNr20SXuG1Z9XgKq54bbSmDfiC
weiOEziJ0dA+FMUQDtL2xSjsQBq/DaUt0Djkxkgjz0C11ka/grYnUskt0Io8
E83JKdGy3mlETor2bqrqSi5BR/I8HNDY9Ef6HLaprvQraXthi+ZJfwhtPvqT
i6O92wF1yQmYTk5BIP/zPA2ZGguzyW2QTm4bLc/SnpHz0J5chSxyJ6QHe6c3
uTDaWHM1J3JBtKx3Wutb0b6lGuxDD/ojaPsgh5wb7dv6ZiK5XrRaaM4VWhuy
yPO1T+TyaFk1OqSzEm1virAAR1QHdMZRLPRcjItY6melFMexGF38DG3CL5Rr
nmjJt3f6Xg/TOaV/2Mfqhwz6u2kLg93ZbPp7VZdga2xKf7vvlc5Mbfpbfa90
RhrQr/Gzoj39io1+FjWH0zgV7KzrTO7RXKONpTH+4K/vpe7gIhzztWpN+Ty7
32utM/QSa4PdNd3Ju1gZ7L9Ed+43NvvadabeY32wu6s7ch3Lg919/Qc9xupg
d1V3eJf2PVqtVJP/qo10KQ==
                 "]]}]}, {}, {}, {}, {}}], {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{500., 0.},
         DisplayFunction->Identity,
         Epilog->InsetBox[
           FormBox[
            StyleBox["\"a)\"", {
              GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
           Offset[{5, -5}, 
            Scaled[{0, 1}]], 
           ImageScaled[{0, 
             Rational[1, 2]}]],
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{
            FormBox[
            "\"Host specific growth rate \\n (C-mol H C-mol \
\\!\\(\\*SuperscriptBox[\\(H\\), \\(-1\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(d\\), \\(-1\\)]\\))\"", TraditionalForm], None}, {
           None, None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{80, 15}, {30, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 14],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotLabel->FormBox[
          "\"Fish carrying cap. \\!\\(\\*StyleBox[\\\"\[Proportional]\\\", \\\
\"OperatorCharacter\\\"]\\)\\!\\(\\*StyleBox[\\\" \\\", \\\"OperatorCharacter\
\\\"]\\)(1-\[Alpha])H\"", TraditionalForm],
         PlotRange->{{500, 850}, {-0.021, 0.032}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}},
         Ticks->{Automatic, Automatic}], 
        NCache[{Rational[931, 2], -576}, {465.5, -576}], 
        ImageScaled[{0.5, 0}], {931, 576}], InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[
             {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
H7s0Oj9nxO0yLcxG+eHBfTofiFrH/ki7TsKjAxPuuD6nZd5ejcgh4UmUQxOu
f1vryl0XctF8VHDWDlvvsuf3E3lofTotLkKfbxwoT7W4gdazBouacLzFpIV3
EvlofRdD0ut9z2azsdU3SbCnttzHbo+JT5G9RULAHz16/aG//72JSAHKd1s4
9Poja97qb9+QQ1pk1uPnz27yTu6+TQIve+Ii9lneI+OGO6h/tq5vxO7YKzpa
epeEg7W99HrSQNIiKeseCS5ysvT5j0Rk/5fAIhJeOcYY4fqe27Mu0a2YhHa2
Uhr2a/ELhjYlJIzaPhmj15cN1Z8NS0kI3VWqh+N3PUwiQfM+Ws++VvfHnmNq
vV2xjATt1IO52N5i6SNi5SRs2RBG57vOZ5/iJpB37PzXgL0tRGdb3wM0fwb+
e0A/zwNUKitIuG4fQu//JA6YTac8JMHt7Aq6/c/q2ndfeITGf2f+X3o+UnR5
aM1H66lTP1nYekLeKTqVJNy/OTCC65cxSF6cV0WCwImX27FnNkbaf0a2+yVa
iuPjXpi0ub4a5Z9lCbuxmxNyZHMek8BcNE6fl2wKKvrJqkH1WZrSQI+f41Xt
Dk9IuFowh15vCO5qLNavJcHGoJHez7mu7bq8+Cna75xwpvd7L6QHvX4iP3p6
jB6P2r9/WLQ+I4GSspyP35fQPUP7bh0J5hON++j89lhSKqoeebV7PPbxPPlR
twYS9h1/9hF7rfeGguUvSPhKGcXi+ly22x45oxHl57S79H71t8E+927k70p+
23E8jiw/tPvBS5TfTu28gl0jdlI9oQn1p+b299jqX33EfP4jYTezawWOL6+V
GtzfjPIXe/5Rev4p4z1d24LWb4+2htPzW1rKdfFWEm4NLKbbt5KdxxlEFg49
T+/3VriVOD1pI8Hyp0I+fT6277HhtXYSpMw76f3h6PqmpYxXJCz1oej2tF78
dsahDhLeiY6I0PuN6U89uq9Re7p9S6DXu/0TfJlONJ/f9qT3d9x6obQxZO5F
BTdc35Hb84JedpEwQ2RqlF5fXFE8fPMNqv+sBDpflfir64W+JaFSxMWKni8c
Nsk7d6P3JQ2vwR5Q3/9auQetZ9w0lLHvjbvFv35PgtmrO/TnZbvO+5b0ov2R
zGs2dmAl2yq2D82/7+c+wu7Njlnv+QGt/xXG6POcneFXpc36STiTqULvtws8
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
diaueI/GY0Kxp19sCLF6p9aBBb0U3FLuGQ53CCG4rMVzhPooKEzlmb3WCCH0
/oyQPR9QfzKu1lz8OJjIGYhxTR6k4J6Sq8Kzfi4huOzi0rBPKN+/6Tq15yaX
OHTE6Y3fEAXGslHXh89yifltG82tRyg4seKiu+0fDhFU3bVJahTth+Z0BYlO
s4nXkzXfppFf1NVGnnnIJtZvLsj/8o2C2H/7F6T7s4mh26Ty8+8UjPmfi5D7
xiKsU1fMCv6J+vuZ6qsizylCqTPk+NlfFPSObXerYVBE/8IR/sHfaD1advoS
pUUR3tH3/DT/ov0c9+tyzSgmofdCpm3xPwqCzl4JTNdlEkKzL2iJTKL1uLlV
u3gPSVxiEUOvpyj4b1mU6pLlJGFfec2kZpqCpa5Z7TYMBrFkUiSzQIAFNfbt
ng/yg4jBzSenE2aw4OjWHd02DYHEHd/nB1mCLHDbI/7OriuAOF+47r6HEAve
HtPWeP/qImEwemmBrTALRo47WTo98Cdmrpnw3C7CgttP3ZQyAi8QL07avdCY
yYLkhP+sMqT8iMvXK1YtmsWCiHJLnxRHX+JQnzJ3higLnh68L5pv7E0sU2H1
DiMvG4jYfO7UWWLo0EeDdjEWMA1i7s9a4EbcS9yVXDmbBe0qpWpNBRbEhfab
P2+Is2D3uZUbvQ3P8UF6nuUVCRYYXhnbKj8SzRc197rDmMOCWjlTrUV3YvlN
Ee0SbpIs4F8w/DBdH8uPr9t80nIuC/ZsZBe3N8Tyj8xMfWIwjwWF7JVl/yGv
NBRYukqKBbmH/HZWI39hHA+Sns+CipNuG24jF1fUdk4if0jbejcBOeD3qk2D
0iyY/BT+MAjZaGNkbPMCFlRfNbB3RJbwGv1aIcMCveZlbEBuuX1gT85CFkRK
z9+igJw0UpIbs4gF8Y4d/j9Q+Y6tWiwSIMuCX6GmJnXI6s6Bjs5yqHyl95OT
kL9d63lovpgFRlmL/F2RSYUc3xUKLOhxXd/6uy6Wv9NudstcRRakHFlk/hB5
bpzHuj/IGZ9+WwUiX527frBRmQWBHwREvj+L5TvviTcqU0HtTT25nYu8JvRP
euYSFmSt0xu2R64QrLLzW8aCdU/vyxQ/jeWzieUlx5azoHt4j/hh5N0BwfPN
VrBA/fGPhBnIneNmDUtUWZAjkhQCtbH8X4Odeg3qLLiTMl8rriaWX7nCILF4
NYrX+6r9y5CDj2WMp2mwIFo4bMWtx7H8hW9cCrzXos+XrpIurY7l67z8oayk
zYL3DKnMrMpY/h8t+bu/kFc/e/tkCXLl5W3bW3RYMM3N3ZLCj+XvsY9yCtmA
4nfYeXPoI1S/ftW8MV0WgKOAi1FFLD/hr732U4IFSxN3zjEpRe1/hPk4A1jw
8RZrOrkklr+8KscyYBv6e3ZQy9fiWP5d7g9fLUMWrN1hvzamKJZfLxX1INmE
BS9laoUr7sby/6lWGXmaseBalI9HRX4svzpsoM10LwtKpQ+fHb8Ryw/5PMdl
xT4WsBsvSK1Blim0D+00Z4HIxrVHEnJj+WsNfrwwskQecMhyyI7lO1iq2sgd
ZAHpZ3235mos/wkZebLaFdV3qbC3YUwsvzU52e/2STTeKj7L20fH8ntL8oJT
3Fgwo+bEvrO8WP7UyJNsX3cWiML61IzIWP4mu6n36p4s+KR2+7l4WCw/T+uM
fex5FpQcuewkw4rl398TeJL0Y4H0rfxGPSqWX+sS7udxgQWjxS4NJ5jo+ak5
cTsuov43c/2DCkYsX352T/PfIBZolWn3MgJi+ZG95ruduCzIjC/9dcI3lp8y
ecR+fzALXAOCQm76xPJvyHqcNAhB+SJI3GUczWS1e0ODZcNQf4+1WxvlFcuf
Lq96/DySBZ9LrSreeMbyJdtfNpdFsaB3w8XLG5EVvr19f53HAu0I7rdLZ2L5
uqp/pskYFnSN9R49cDqWfzZWW2/DFRYsWlXn/P0UGg8FsHtpHAtS3S0nHZGj
6vbaz41nwX6tL6Ytbqg8025+nxJYcLxF6vPDk7H8vlOZRakpqH4GKf6FLrH8
Me7dx2GpLNBtar6+CVngGr/5/FUWeFZMRT5yRuXp6Brdn84CMUGx4NYTsXwr
owVrZmahfHbPd/USJzR+Of2efchLZmt0Vh2P5XvWlhRVZrNgzNy91wk5bKed
3sUc1D+dhf/dPYbyUag6aZvLgsXfWiQPIWfV/328IY8FDXdmnBdFfrTn6u7R
GyyIun3J2NUxlt8QeYb3Ip8FP9UkMuSROxqh5cZNFnhUWO/9zyGW3z93/qKQ
Wyw49nHAMBR5zLzP/kQBC8JmzGAbIk/HFF3dfhuN98u/RQWQJVo4vcp3WHBl
nqPv6PxYvtwCm5WTyCtLXezEqqL5K63U3DrvsuBf7by3f9dH83Xift8qvccC
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
36P4mpvHaiDDrS0OF3tR/c5eityNrNQd2mv+gQPWAi+fBiN3EmoDfwc48Lrx
kNxv5F0d+3I/DqL6XDPrl67kEfc9z5/87xMHZq65snQtclxG7fD1YQ7oVMs4
OyJbCJ0Y3f+VA9l17q+rkauSI+7qjaL2v/lDrhNZc33ROdVvHLDT0P4wiix5
Qmj83xgHzsk2SShWofFdm/E7Z4IDpztyPc8gbz5aV37pJxpPCxorKeTcn6MX
A39xYE7o8tAryFw1mLL4wwHTZb8vlCFvD+sWnJrkgAz7yuRf5LtLZ9YMTnFg
92DXQ/FqlA8erOG0TKP2pnxU5JGnhgNm5c3gwqiGzGNdZA921rNYQS5UxTlM
mSC/UXgeGiTEhch3oc2WyOVm8hKWIlzgNK/XO4O86uP2FwYzuTAcv+TFReSE
ILeoVbO4UOlS/TkY2fd22bxpUS6IX1zVdhVZR8pW5oYEF861vJyqRb6Wx2i/
PIcLN528Pr9Enr89J54hyQWh8plxHcij5ybkrOZx4ZVkvtgn5KPiSl2EFBft
Rx++HEVuzDROUZ/PhcXW9sa/kG+2XlYSWIDKk3dyw8zHqL96VLwbQj4tL5Iv
gRwm8iG9TYYLZy9erJ2P/DtV/FjlQi6snufBkUV23aizLH8RF150B/UrIr9q
tP9wRZYL49n2H5Yim7hQ2aQcF9Z1FDBUkYun85xPLebCkbi1xauRlyf8p2ot
zwWTGzHUOuRL1hWKWgpc2NCWUaCNLCCTIy2hyIUVUpYBG5BPt8SIDSDnr3n9
aRPym5iA6SolLoRO9/7cjGxq7jKeosyFi139dVuR70taDJ9XQfG5aHVSH3nl
C733Fku4MLdNrtUAOTZc9dWapVyQzlISBfw+0/kvRJdxocfxgNA2/D7Ryeo+
5BzD/MfYb2oH7j9azoWhDYo7tuP3cZoLEldw4VRHZjj2fcOHWd4rubDJX5+H
vVIwN2mfKhcSZUb2YV+uvBStrsYFpT3FDfh5goxArsgqLqQfuyaA7anvGtCD
vEO/coRA7v5rce6BOhfiDypH4fLuKdd3jVvNBbK1pVcPudxP7chZDdQ/LMYH
tyCrbZK23LOGCy5z067qIseNT+5SXYvq/9/XGRuRhYsGCcF1XCj6ICalg3z2
XMuGt8hP5aXrcfy7NR+tvq/JhevZV7U08Pu+5i6J1eJCdMkSdzX8fPegObt0
UPknmcdVkHtOrOov2siFJ/svqEgi712+oIu3iQv6y9iSYsgVvVNNbrpciImq
qRFCTjjaWqGyhQtZ8xqYuP/NVOLf+4t84VkEewzZ+01ebvtWLuy1vLhjBHmf
HeNyhD4X5plOibxDrljkFuZigP5+Jn/yFbJ6uyW5neDCnlclt5rw8w6ou/8C
LlTYbFtXhfxoT5uhkxEXXorHb0xD1hCv3EwYo/KJPbaPQ06qu7FusQkXCoTi
7SLx+DMh5Zt2cOEK73a3P/IaWP19624uNFRXNxxATtFhXpO2QO87n+OM84XF
jQMLZxzggsGOhTpfkEWXrAz7guxtYXyrB9lbsuFsnRUXJnPVFZ4g7/60YBvD
DvXvg3fdIpD/XM19N+TABX/QcZmPfEfm4oEORy5Y3/6zTBDZOcLs6ZNjqL8v
zLr6DeW//y6MFaQ7ofiHsh+/RM611AuyduXCstNGnqHINrObFKrPoPIJtA1N
oHwswbwWfduTC1rdM9/1IVf/9BZOPcuFztrC9Cbktf1yI+e9UPxJISoPeWbl
8QdrzqP6R+t62yIX+fy0SwziwraVrPO3H6F8814p3jOSC87fSz9uQ/PH08Ai
Ym8Uyjeaf6NXIwcsNh1czePC144Dq2SQ+w/4bB6I5sKMFUvlB9H8dL+2oevw
ZfS+KIWaCOTDN/1UdidzQf6Q47aXaL7LPd+ctyIP1efhVXtDNF/qS3IrOmu4
cNhvw9JPaH4Oi/Mg1/zlgpz98cw8tF5o0zR8pLwxGGql5qoTaL3SZtqroewR
DCJyn2wN0HqpxfeMzKPcYMjJOLriThzK/0tr17r1BMOvL7GNf6N4xMFVqR+n
FoYAuy86sz4YxWP7MVkdixBYVlJ+xofkESWdo/7eoSFQ+vSxlow/mm85HjZW
T0JgMmh+zV0vVL8wt2YlgVBYdSZactQDzSfztILGN4aCsc5TYeGTPCI1pz/z
1LlQ0PVdKbocrYdvPTr+50teKPTEdxVPH0XjR/PYV/ueUAh71s7ffQitL4r3
HnGWD4OYsRVW1215xM/7wlNBFmEQoD3QHmPFI3bmT87wORAGikean7KRk1In
RE5ZhkHzEUb5eWQ9anCOjXUYqMscTDiMTO1+rrjOPgxMf/56twpZojtW/51j
GLzasnL5Y0v8//MsCyTOhsGt9yoVv9H63WtcnrnhXBjsvmfj/hm5ZmABZ7VX
GGzTfKH8Htnl+czIRT5hYPwpk/UM+eaVoZSvfmEg49q6Kx55k9q9ijQyDBpb
aiU2Iocszq+8wgyDrsBfk6uQOyWyasKpMCAFVo8qIgd8u/L8PDsMjgi31Isg
V5dfeLMvJAxsUz6KtlvwCOlb53qMQ8Og9MyM1fXITmmnPmwNC4OvPd5mj5Bn
sQ+PqEaEgV/KDe51ZFtf61HFyDDQ2qp+Own5huu+H/+bcF+Xwwfuljd9QP7v
KI8fnP1dDoeiW82agXwfX8c//4F8lj3POsuBfAC/6kD2
               "]]},
             Annotation[#, "Charting`Private`Tag$130610#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1:eJwl2Hk8VF8bAHChkvxQyhIhZUkpRLLOg5I1oRLJFqKEol3NcmeM3Ywl2UKL
pSyFlMjNUvaSIlESlUIRokjec+/7V5/vZ65zz3me5zzn3NZ5Btp78/Lw8Hjy
8fAQ//p6X1rKA1Swdd+4PvV9PIVSNnP/gTEVIqodDhIW5zvlFWhKhap/1hGE
R+1GVyrvogIuUFhKuC7Lp6bPjAqy+aKdhIOMDsnusaTCkEbAJGHZd7YXH9tQ
YfRnwUvCv1SbN562pULDqr/XCbee39m92Y4Ks3wehwlfb6wO+2RPBd+0tQsp
yOcldLXT91Hhdd3HPMJ7fUoHHQ5Q4UXecX/CSvfV4pcfpIKGn8RuwvN8eVDn
hJ53MNtO+LW9wtiFQ1QQ/eiqQ/hOdnqG5mEq7CpoJZ9njItbD7tSIfAEjzfh
gxTubLY7FUonAqMJb41dnu/kSYU/UlcqCS95z3Jc4UWF5OaJMcLvNvEsafKm
wtQPQWVi/qUXLpTRjlJBO8DXlXBk05TnDj/0u2JqAmEPycAV48eosDC4rZ7w
jqPf8Fx/Koi7P/9OWLj8SIBbABXuai8VTkP+zN8nIxFEhc73NAXCVQ4HW56f
pMKnvAEVwvHXO86HBVPh/MNuWcJ+P61VjE5TwfKPGC9hgIauX2eoILzWsp0Y
XyLOmFV4jgpeidpswj/eV27zvkCFQeXDioTrN28fkAlF841Qf0GsL+3iXc7r
S1QI6y/hEj7VrEqJplLB7LLJMcLmUre+m9KpIDlocoCwnK9c+hyDCln3ZRwI
T5enWJYyqVBTZehKuG3xqj/Hwqig+1byNOGb+2JzFcKpoLWgmET4wg2BAz0R
VPiydYCMt90Egz8+igp6wS++EFYxni+xiKHCqZchYsR8/8Wd9VgUR4WP1q4U
wp19P0UqOFS41ivjS7hAzb86KJ4Kph5mUYSx0C/+KolUuJ93Ooewc4u7dH8S
FUYOWz4grL6mtyk5mQrVS/0qCS/123/ONoUKzYsu3iXc9+CF0tI0NJ8zWxIJ
ly2x7KxOp8Ijx+1ehKP212NnrlHB45ClLGHPm0aaW7KokDCh9ISY/47Jh/2f
s6lAFWw7RFjEZFtcxg0q+Bz/bzXhL5xCw/23qDDp7PTlKpHvD8qjQrlUWO8m
2kY4Ycv11Po8VB8bk58RPnZJxiL0NhUSuY7thKH1ysy2AlSf0U+GCEtIr8gZ
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
eD8N9hdrlhC+anmNT+YAWu/3kY+Euw56urQ7ovk2hpuQ3xtu9eG3D9KgBssl
17/qqNJ9phMN5Ls6yfuIZkD4R1dnVO/6j0sI250e/k/3EOoPI8ufkd8zodZ6
Yi6oftpDWsl+hxX5fEf2DiuuI1wYKZrQcBj1lz3n8snvGe4pPNuVBiWinItk
vV99PXLRjQbxt/h1CC/L2i55wJ0GYalbRsj7bO7VneoeNEj+qFxO2KxoNkjQ
kwaVk+7k/va+75LxCbnOypZcP7Oquqn6CA1Wup8gfb1OfvqqF6rXdL0EwjXN
DIVgbxpMHdIn70MFBje+rg6mQfGtofuEk4vqih7SUL8Wdc4m7J82N2NzDfUH
050ZhI3DtxkPVqJ+RJMi63Ncq12B+gbV+1AK+XzWR39+6UkaOGsVXyO8h+rh
ITiFnu8LJ5+fkzlQ/Qe5IUybPL/yHllKf/tFA47j5QGy3x+knOuepgE/to3s
v/zT2zobZmhgpbNZhvC9BBXNB79p4J5kRu5fV421cTl/0PmRe5TMp9CLFaNJ
szS463iRPO8e+S+xYM2h898nxIDwUcG5WyF/aSDobr2OzHfeGK/XPDo/k/gm
yPrc9cnN4R8N1Ky/k/fxwMHuKpMFGuRovyHPXxl6m5QmDx0qhC6nEm6WrT2z
bhEdvpxJItd7tqr8lSgvHYwMuwsJb3C+o87DR4erJgJPyX44kxkzhvz2/I9+
wtSkxOE+fjpYvnP+R/abbRG7ny+mw1e3DeT53dN+6ebjJXTo/q5C3v/YAacW
FS6lQ+NBGyCsJXTUNV2ADqcdLpH7cyD/UGXUMjpsPnpHjzBn917Ji4J0cBpu
lyNs+Hnn6WPL6bB+5vs4eT9l6HY4CdHBpKSAvG9dld+y1eI/OvjanrxB1lu1
QvQOYTp8quZNITx5SOKbsggdzmGryHrI+rPcTEKUDnmmHuR5uieZ58aSFXQY
w2/XEf6r9WvhFzJ/U8UHwvkd31w+r6SD6nbXeTLfQX0Vr8XokNwbIEXmW/iV
eP0qOjyjNamT/fxOQ3DpajpMd9mT63WzqGq/Lk5Hl/Jpcr1CQ3fV4iXoMFWS
o0/mm3krki5JhwtdLmR+fRVSh4Kk6JD+SnKSeN/qJ7E73dfQIX+5aw2Z78NY
tq00HQKDs8j8Bs2d/WckQ4fUZJxcr2yK/6Eta+nQ1h1Arrdlu8fDtbJ0uFLp
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
               "]]},
             Annotation[#, "Charting`Private`Tag$130610#2"]& ]}, {}}, {
           GraphicsComplexBox[CompressedData["
1:eJxdl3tM1WUYxw8IBiJ5gINIhnLTEd4YRfOCnLPIC2mOeQ/lFErQYg61SYIt
SpRSJAGZIaGTsImKJKaIweRkisCY0pg5b1wMBK2GIUPxWp3n9/2+8/AP++z7
8H7f3/s+z/s8+K1KXvihvU6nW2Gn0/3/e7+5qCfMkGEqHzh64/nzAMuCiuSp
+QcVQ/f0PfSea5cfdTD0h3lzj4blj6UOhl7XFXEw2jyaOhh6/tSw4qQgL+pg
6KuyJnyX2edOHQz9g5rI4MhUV+pg6E/iQsakujpSB0MPGTE90Bw5WAsdDL35
xPhR+VfaqYOhW4SN0MHQg2Q96mCen+zHxPPTGPpK+R7qYH6/nAd1MPQ8OU/q
YOjn5D6og6EPyH1SB0M3SD5QB9vkl8kmv0xRJ49bMhs3a/fpbwHXW8/Pl/y+
9Xt9yJOs5+dNfmw9L09yg/Xv9eTJ1nhncqNV15GbrHyvFqyz/jTXgM+JbgTX
yd9z/8GyPvmC+JMHZX/kCbJ/cqx8n8nm+8lxcj5k2/NDvYJRn2DUI/ev1R8Y
9fbifbiTUU9g1A8Y9QJGfYBRD2DkP/en5TsY+U1/LZ/ByF/ej5avYOQnGPn4
4KVMfVdsBvPtxffE3wId+QcdDB35CB0MHfkJHQwd+QodDB35Cx0MHfkMHQwd
+Q0dDB35Dh0MHfkPHQwd9cD3QmPoqA++9xpDR71AB0NH/UAHQ0c9QQdDR31B
B0NHvUEH29y/yeb+qaMeoYOTu4vcntSqevTxO1DhdEz102EJO8t0ls2my9W7
w4d4K+6NsQw6N/mTZ3TlntY/8yUv2VKd4lWheLbPK2vC63zIG1es6Y6aqNiw
Vp+4LMdbxZev7ogfGEW+dXZo3PoYTxVvF3M93WIgH/N8GpMd6KbiF0VfLtyu
Jz9uvn0o+qYzOe7d7H1Jh5zI36a07M1cZ0d+2peaVzxTR46f+kVAqktfLThh
VaG3eU4v+eK0gpPRET+RFwgbwUslnrxS1iMPip8JvEv2Q46V/ZIfyPeQ2+V7
yeVyHmR3OS8VL+dJflvOW8XLfZBT5L5UvNynyea+yVo+kLV8IbdIPqn9av0B
jH4ARj8Aox+A0Q/A6Adg9AMw+gEY/QCMfgBGPwCjH3B/Wj/g/Wr9gP5aPwCj
H4DRD8DoB8x3rR+gXvH+87zr3pqRcVXV51fRhsfbXPwtiEc/gF7SO7Mq54w6
39b7Y+5N7hjL+sf6m7+vGOnwH587FXs3sCOAPL9xU3acm+Jn5sF5PUNU/Mb5
10uPtPhzPfhDn9ixPDG0zo98/H7KsOQBpTfq7+T++dtYcuuG38edrvLl96B/
MV9D138cPkflR9lsz7tRR0bTH/FYb7xnaX36UrV+6PTOlwcrlV6wui1raNFo
8o6IklnZM3zoj/7IetryUfwyN5WPaXtcOuM3eNEf8VivP3Hf2UJftb4u+5qT
4UulJ1Re3uqX4EWOyd1jLHX0pj/6L+vnitm8/vpI8ty/7FrTjR70RzzWO/tz
fs3JuyPJF9ua7afMU/obzk3p4SEe5KDOndN+vWSgP/o7/D4LXrI8+wdVb5M+
v/djmMfL9Ec81stxzapsPuFOLgq98CTK043sWLXlfnm/K3ngzczXW/fo6Y/5
ge/lo90HotuGkxsCbpYkHXSkP+KxXrXFPu7K0+HklmGb/m44o/Ti2HXdnV87
krd5DMb0XXCiP+YT+E3Zn1GQ+YkDuT5v15TITx/Vwh/xWG9ZQu9i1zwHcvKx
xI7nC+1U/QytqQyb/qgWPO5014KglTr6Y/6BX0FW+6jUEQ/J9jVXJ5uNf9Af
8Vivx6sqN3P+Q7KhrPRw0sV/yPElwTMjz98iO2yKckn9pbcW/piv4Be+ots+
v+0G/V8VNsIf8Vgvbces2w0tN7n+8TsR0X3Xyskxohup91h1I/wxv8Gvr9r6
veQcOQ/6Ix7rLZbvI/enWb+P3C7nQx4u50N/zIfsD3Lf9J8g+WCCP+Kx3lq5
X67vJ/dLfZHkBzlJ8oPvP+ZP+J2XfCfvlHqgP+Kx3l7Jb/JWyW/yKakP8iWp
D/pjvoXfa1Lv5DR5D+iPeKxnJ/VN7pf6Jn8j7wO5UN4H+mN+5rwo7x25TN5D
+iOe7728b+Tx8r6RLfI+kpvkfaQ/5nPOs/Lek1ulH9Af8awved/Jy+V9J/dJ
fyA/22HtD/TH/A+/w9LvyHrph/RHPNbbLf2NvF36GzlQ+iM5RPqjyWaeoN8N
mR/IxTJfmGz6P9erl/5O1vo7OVjmA7I2H9Af/7/YzDtq/pR5iP6It5lXyNq8
QtbmHfI7Mu+QMa+CMa+CMa+CMa+CMa+CMa+CMa+CMa/yPrR5FYx5lfmrzavs
39q8yv1p8yoY8yr9tXkVjHmV56PNq+zP2rzKfqLNq/8CkEyeCw==
            "], {
             {GrayLevel[0.09], AbsoluteThickness[1.6], Opacity[0.06], 
              EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
                 "]], 
                PolygonBox[CompressedData["
1:eJwt1Pdvz0Ecx/E7oxqjGqOaWqVKqbYoLUpbRbVmEBEREUREhEZEYu89Wnv7
JwgxYoQYIUaIEWKEGCFGiBFiPF95v3945F73zefzubv33X3bTa0aM6dWCGE4
6uAe7mMC6mMF7mAAcvAQD9DQn7mBmxiPRDzHMyRhIj7gIyYjGedxDgkYi8/4
hCb+zCVcxjh/ZhmuoRRd8RM/0AxT8A3fPesb6/AOg9ANt3HL16I5rsELDEQe
VuERypCLJ3jqc9caz+Csz1X1WYILKEE23uKNr20SXuG1Z9XgKq54bbSmDfiC
weiOEziJ0dA+FMUQDtL2xSjsQBq/DaUt0Djkxkgjz0C11ka/grYnUskt0Io8
E83JKdGy3mlETor2bqrqSi5BR/I8HNDY9Ef6HLaprvQraXthi+ZJfwhtPvqT
i6O92wF1yQmYTk5BIP/zPA2ZGguzyW2QTm4bLc/SnpHz0J5chSxyJ6QHe6c3
uTDaWHM1J3JBtKx3Wutb0b6lGuxDD/ojaPsgh5wb7dv6ZiK5XrRaaM4VWhuy
yPO1T+TyaFk1OqSzEm1virAAR1QHdMZRLPRcjItY6melFMexGF38DG3CL5Rr
nmjJt3f6Xg/TOaV/2Mfqhwz6u2kLg93ZbPp7VZdga2xKf7vvlc5Mbfpbfa90
RhrQr/Gzoj39io1+FjWH0zgV7KzrTO7RXKONpTH+4K/vpe7gIhzztWpN+Ty7
32utM/QSa4PdNd3Ju1gZ7L9Ed+43NvvadabeY32wu6s7ch3Lg919/Qc9xupg
d1V3eJf2PVqtVJP/qo10KQ==
                 "]]}]}, {}, {}, {}, {}}], {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{500., 0.},
         DisplayFunction->Identity,
         Epilog->InsetBox[
           FormBox[
            StyleBox["\"e)\"", {
              GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
           Offset[{5, -5}, 
            Scaled[{0, 1}]], 
           ImageScaled[{0, 
             Rational[1, 2]}]],
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{80, 15}, {30, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 14],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotLabel->FormBox[
          "\"Fish carrying cap. \\!\\(\\*StyleBox[\\\"\[Proportional]\\\", \\\
\"OperatorCharacter\\\"]\\)\\!\\(\\*StyleBox[\\\" \\\", \\\"OperatorCharacter\
\\\"]\\)\\!\\(\\*SubscriptBox[StyleBox[\\\"V\\\", \\\"OperatorCharacter\\\"], \
\\\"Hi\\\"]\\)\"", TraditionalForm],
         PlotRange->{{500, 850}, {-0.021, 0.032}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}},
         Ticks->{Automatic, Automatic}], {1336.5, -576}, 
        ImageScaled[{0.5, 0}], {931, 576}]}, {InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[
             {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
A9y1PYI=
               "]]},
             Annotation[#, "Charting`Private`Tag$130265#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
               "]]},
             Annotation[#, "Charting`Private`Tag$130265#2"]& ]}, {}}, {
           GraphicsComplexBox[CompressedData["
1:eJxdl3tM1WUYxw8IBiJ5gINIhnLTEd4YRfOCnLPIC2mOeQ/lFErQYg61SYIt
SpRSJAGZIaGTsImKJKaIweRkisCY0pg5b1wMBK2GIUPxWp3n9/2+8/AP++z7
8H7f3/s+z/s8+K1KXvihvU6nW2Gn0/3/e7+5qCfMkGEqHzh64/nzAMuCiuSp
+QcVQ/f0PfSea5cfdTD0h3lzj4blj6UOhl7XFXEw2jyaOhh6/tSw4qQgL+pg
6KuyJnyX2edOHQz9g5rI4MhUV+pg6E/iQsakujpSB0MPGTE90Bw5WAsdDL35
xPhR+VfaqYOhW4SN0MHQg2Q96mCen+zHxPPTGPpK+R7qYH6/nAd1MPQ8OU/q
YOjn5D6og6EPyH1SB0M3SD5QB9vkl8kmv0xRJ49bMhs3a/fpbwHXW8/Pl/y+
9Xt9yJOs5+dNfmw9L09yg/Xv9eTJ1nhncqNV15GbrHyvFqyz/jTXgM+JbgTX
yd9z/8GyPvmC+JMHZX/kCbJ/cqx8n8nm+8lxcj5k2/NDvYJRn2DUI/ev1R8Y
9fbifbiTUU9g1A8Y9QJGfYBRD2DkP/en5TsY+U1/LZ/ByF/ej5avYOQnGPn4
4KVMfVdsBvPtxffE3wId+QcdDB35CB0MHfkJHQwd+QodDB35Cx0MHfkMHQwd
+Q0dDB35Dh0MHfkPHQwd9cD3QmPoqA++9xpDR71AB0NH/UAHQ0c9QQdDR31B
B0NHvUEH29y/yeb+qaMeoYOTu4vcntSqevTxO1DhdEz102EJO8t0ls2my9W7
w4d4K+6NsQw6N/mTZ3TlntY/8yUv2VKd4lWheLbPK2vC63zIG1es6Y6aqNiw
Vp+4LMdbxZev7ogfGEW+dXZo3PoYTxVvF3M93WIgH/N8GpMd6KbiF0VfLtyu
Jz9uvn0o+qYzOe7d7H1Jh5zI36a07M1cZ0d+2peaVzxTR46f+kVAqktfLThh
VaG3eU4v+eK0gpPRET+RFwgbwUslnrxS1iMPip8JvEv2Q46V/ZIfyPeQ2+V7
yeVyHmR3OS8VL+dJflvOW8XLfZBT5L5UvNynyea+yVo+kLV8IbdIPqn9av0B
jH4ARj8Aox+A0Q/A6Adg9AMw+gEY/QCMfgBGPwCjH3B/Wj/g/Wr9gP5aPwCj
H4DRD8DoB8x3rR+gXvH+87zr3pqRcVXV51fRhsfbXPwtiEc/gF7SO7Mq54w6
39b7Y+5N7hjL+sf6m7+vGOnwH587FXs3sCOAPL9xU3acm+Jn5sF5PUNU/Mb5
10uPtPhzPfhDn9ixPDG0zo98/H7KsOQBpTfq7+T++dtYcuuG38edrvLl96B/
MV9D138cPkflR9lsz7tRR0bTH/FYb7xnaX36UrV+6PTOlwcrlV6wui1raNFo
8o6IklnZM3zoj/7IetryUfwyN5WPaXtcOuM3eNEf8VivP3Hf2UJftb4u+5qT
4UulJ1Re3uqX4EWOyd1jLHX0pj/6L+vnitm8/vpI8ty/7FrTjR70RzzWO/tz
fs3JuyPJF9ua7afMU/obzk3p4SEe5KDOndN+vWSgP/o7/D4LXrI8+wdVb5M+
v/djmMfL9Ec81stxzapsPuFOLgq98CTK043sWLXlfnm/K3ngzczXW/fo6Y/5
ge/lo90HotuGkxsCbpYkHXSkP+KxXrXFPu7K0+HklmGb/m44o/Ti2HXdnV87
krd5DMb0XXCiP+YT+E3Zn1GQ+YkDuT5v15TITx/Vwh/xWG9ZQu9i1zwHcvKx
xI7nC+1U/QytqQyb/qgWPO5014KglTr6Y/6BX0FW+6jUEQ/J9jVXJ5uNf9Af
8Vivx6sqN3P+Q7KhrPRw0sV/yPElwTMjz98iO2yKckn9pbcW/piv4Be+ots+
v+0G/V8VNsIf8Vgvbces2w0tN7n+8TsR0X3Xyskxohup91h1I/wxv8Gvr9r6
veQcOQ/6Ix7rLZbvI/enWb+P3C7nQx4u50N/zIfsD3Lf9J8g+WCCP+Kx3lq5
X67vJ/dLfZHkBzlJ8oPvP+ZP+J2XfCfvlHqgP+Kx3l7Jb/JWyW/yKakP8iWp
D/pjvoXfa1Lv5DR5D+iPeKxnJ/VN7pf6Jn8j7wO5UN4H+mN+5rwo7x25TN5D
+iOe7728b+Tx8r6RLfI+kpvkfaQ/5nPOs/Lek1ulH9Af8awved/Jy+V9J/dJ
fyA/22HtD/TH/A+/w9LvyHrph/RHPNbbLf2NvF36GzlQ+iM5RPqjyWaeoN8N
mR/IxTJfmGz6P9erl/5O1vo7OVjmA7I2H9Af/7/YzDtq/pR5iP6It5lXyNq8
QtbmHfI7Mu+QMa+CMa+CMa+CMa+CMa+CMa+CMa+CMa/yPrR5FYx5lfmrzavs
39q8yv1p8yoY8yr9tXkVjHmV56PNq+zP2rzKfqLNq/8CkEyeCw==
            "], {
             {GrayLevel[0.09], AbsoluteThickness[1.6], Opacity[0.06], 
              EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
                 "]], 
                PolygonBox[CompressedData["
1:eJwt1Pdvz0Ecx/E7oxqjGqOaWqVKqbYoLUpbRbVmEBEREUREhEZEYu89Wnv7
JwgxYoQYIUaIEWKEGCFGiBFiPF95v3945F73zefzubv33X3bTa0aM6dWCGE4
6uAe7mMC6mMF7mAAcvAQD9DQn7mBmxiPRDzHMyRhIj7gIyYjGedxDgkYi8/4
hCb+zCVcxjh/ZhmuoRRd8RM/0AxT8A3fPesb6/AOg9ANt3HL16I5rsELDEQe
VuERypCLJ3jqc9caz+Csz1X1WYILKEE23uKNr20SXuG1Z9XgKq54bbSmDfiC
weiOEziJ0dA+FMUQDtL2xSjsQBq/DaUt0Djkxkgjz0C11ka/grYnUskt0Io8
E83JKdGy3mlETor2bqrqSi5BR/I8HNDY9Ef6HLaprvQraXthi+ZJfwhtPvqT
i6O92wF1yQmYTk5BIP/zPA2ZGguzyW2QTm4bLc/SnpHz0J5chSxyJ6QHe6c3
uTDaWHM1J3JBtKx3Wutb0b6lGuxDD/ojaPsgh5wb7dv6ZiK5XrRaaM4VWhuy
yPO1T+TyaFk1OqSzEm1virAAR1QHdMZRLPRcjItY6melFMexGF38DG3CL5Rr
nmjJt3f6Xg/TOaV/2Mfqhwz6u2kLg93ZbPp7VZdga2xKf7vvlc5Mbfpbfa90
RhrQr/Gzoj39io1+FjWH0zgV7KzrTO7RXKONpTH+4K/vpe7gIhzztWpN+Ty7
32utM/QSa4PdNd3Ju1gZ7L9Ed+43NvvadabeY32wu6s7ch3Lg919/Qc9xupg
d1V3eJf2PVqtVJP/qo10KQ==
                 "]]}]}, {}, {}, {}, {}}], {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{500., 0.},
         DisplayFunction->Identity,
         Epilog->InsetBox[
           FormBox[
            StyleBox["\"b)\"", {
              GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
           Offset[{5, -5}, 
            Scaled[{0, 1}]], 
           ImageScaled[{0, 
             Rational[1, 2]}]],
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{
            FormBox[
            "\"Interstitial N (mol N \\!\\(\\*SuperscriptBox[\\(L\\), \
\\(-1\\)]\\))\"", TraditionalForm], None}, {None, None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{{{0, 
              FormBox["0", TraditionalForm]}, {
              NCache[
               Rational[1, 10000000], 1.*^-7], 
              FormBox[
              "\"1*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
               TraditionalForm]}, {
              NCache[
               Rational[1, 5000000], 2.*^-7], 
              FormBox[
              "\"2*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
               TraditionalForm]}, {
              NCache[
               Rational[3, 10000000], 3.*^-7], 
              FormBox[
              "\"3*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
               TraditionalForm]}}, {}}, {{{500, 
              FormBox["500", TraditionalForm]}, {550, 
              FormBox["550", TraditionalForm]}, {600, 
              FormBox["600", TraditionalForm]}, {650, 
              FormBox["650", TraditionalForm]}, {700, 
              FormBox["700", TraditionalForm]}, {750, 
              FormBox["750", TraditionalForm]}, {800, 
              FormBox["800", TraditionalForm]}, {850, 
              FormBox["850", TraditionalForm]}}, {}}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{80, 15}, {30, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotRange->{{500, 850}, {0., 3.5138739425769267`*^-7}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}], 
        NCache[{Rational[931, 2], -1122}, {465.5, -1122}], 
        ImageScaled[{0.5, 0}], {931, 557}], InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[
             {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
A9y1PYI=
               "]]},
             Annotation[#, "Charting`Private`Tag$130727#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
7TvMf0+I7fniQqRkIgP+B10Xocs=
               "]]},
             Annotation[#, "Charting`Private`Tag$130727#2"]& ]}, {}}, {
           GraphicsComplexBox[CompressedData["
1:eJxdl3tM1WUYxw8IBiJ5gINIhnLTEd4YRfOCnLPIC2mOeQ/lFErQYg61SYIt
SpRSJAGZIaGTsImKJKaIweRkisCY0pg5b1wMBK2GIUPxWp3n9/2+8/AP++z7
8H7f3/s+z/s8+K1KXvihvU6nW2Gn0/3/e7+5qCfMkGEqHzh64/nzAMuCiuSp
+QcVQ/f0PfSea5cfdTD0h3lzj4blj6UOhl7XFXEw2jyaOhh6/tSw4qQgL+pg
6KuyJnyX2edOHQz9g5rI4MhUV+pg6E/iQsakujpSB0MPGTE90Bw5WAsdDL35
xPhR+VfaqYOhW4SN0MHQg2Q96mCen+zHxPPTGPpK+R7qYH6/nAd1MPQ8OU/q
YOjn5D6og6EPyH1SB0M3SD5QB9vkl8kmv0xRJ49bMhs3a/fpbwHXW8/Pl/y+
9Xt9yJOs5+dNfmw9L09yg/Xv9eTJ1nhncqNV15GbrHyvFqyz/jTXgM+JbgTX
yd9z/8GyPvmC+JMHZX/kCbJ/cqx8n8nm+8lxcj5k2/NDvYJRn2DUI/ev1R8Y
9fbifbiTUU9g1A8Y9QJGfYBRD2DkP/en5TsY+U1/LZ/ByF/ej5avYOQnGPn4
4KVMfVdsBvPtxffE3wId+QcdDB35CB0MHfkJHQwd+QodDB35Cx0MHfkMHQwd
+Q0dDB35Dh0MHfkPHQwd9cD3QmPoqA++9xpDR71AB0NH/UAHQ0c9QQdDR31B
B0NHvUEH29y/yeb+qaMeoYOTu4vcntSqevTxO1DhdEz102EJO8t0ls2my9W7
w4d4K+6NsQw6N/mTZ3TlntY/8yUv2VKd4lWheLbPK2vC63zIG1es6Y6aqNiw
Vp+4LMdbxZev7ogfGEW+dXZo3PoYTxVvF3M93WIgH/N8GpMd6KbiF0VfLtyu
Jz9uvn0o+qYzOe7d7H1Jh5zI36a07M1cZ0d+2peaVzxTR46f+kVAqktfLThh
VaG3eU4v+eK0gpPRET+RFwgbwUslnrxS1iMPip8JvEv2Q46V/ZIfyPeQ2+V7
yeVyHmR3OS8VL+dJflvOW8XLfZBT5L5UvNynyea+yVo+kLV8IbdIPqn9av0B
jH4ARj8Aox+A0Q/A6Adg9AMw+gEY/QCMfgBGPwCjH3B/Wj/g/Wr9gP5aPwCj
H4DRD8DoB8x3rR+gXvH+87zr3pqRcVXV51fRhsfbXPwtiEc/gF7SO7Mq54w6
39b7Y+5N7hjL+sf6m7+vGOnwH587FXs3sCOAPL9xU3acm+Jn5sF5PUNU/Mb5
10uPtPhzPfhDn9ixPDG0zo98/H7KsOQBpTfq7+T++dtYcuuG38edrvLl96B/
MV9D138cPkflR9lsz7tRR0bTH/FYb7xnaX36UrV+6PTOlwcrlV6wui1raNFo
8o6IklnZM3zoj/7IetryUfwyN5WPaXtcOuM3eNEf8VivP3Hf2UJftb4u+5qT
4UulJ1Re3uqX4EWOyd1jLHX0pj/6L+vnitm8/vpI8ty/7FrTjR70RzzWO/tz
fs3JuyPJF9ua7afMU/obzk3p4SEe5KDOndN+vWSgP/o7/D4LXrI8+wdVb5M+
v/djmMfL9Ec81stxzapsPuFOLgq98CTK043sWLXlfnm/K3ngzczXW/fo6Y/5
ge/lo90HotuGkxsCbpYkHXSkP+KxXrXFPu7K0+HklmGb/m44o/Ti2HXdnV87
krd5DMb0XXCiP+YT+E3Zn1GQ+YkDuT5v15TITx/Vwh/xWG9ZQu9i1zwHcvKx
xI7nC+1U/QytqQyb/qgWPO5014KglTr6Y/6BX0FW+6jUEQ/J9jVXJ5uNf9Af
8Vivx6sqN3P+Q7KhrPRw0sV/yPElwTMjz98iO2yKckn9pbcW/piv4Be+ots+
v+0G/V8VNsIf8Vgvbces2w0tN7n+8TsR0X3Xyskxohup91h1I/wxv8Gvr9r6
veQcOQ/6Ix7rLZbvI/enWb+P3C7nQx4u50N/zIfsD3Lf9J8g+WCCP+Kx3lq5
X67vJ/dLfZHkBzlJ8oPvP+ZP+J2XfCfvlHqgP+Kx3l7Jb/JWyW/yKakP8iWp
D/pjvoXfa1Lv5DR5D+iPeKxnJ/VN7pf6Jn8j7wO5UN4H+mN+5rwo7x25TN5D
+iOe7728b+Tx8r6RLfI+kpvkfaQ/5nPOs/Lek1ulH9Af8awved/Jy+V9J/dJ
fyA/22HtD/TH/A+/w9LvyHrph/RHPNbbLf2NvF36GzlQ+iM5RPqjyWaeoN8N
mR/IxTJfmGz6P9erl/5O1vo7OVjmA7I2H9Af/7/YzDtq/pR5iP6It5lXyNq8
QtbmHfI7Mu+QMa+CMa+CMa+CMa+CMa+CMa+CMa+CMa/yPrR5FYx5lfmrzavs
39q8yv1p8yoY8yr9tXkVjHmV56PNq+zP2rzKfqLNq/8CkEyeCw==
            "], {
             {GrayLevel[0.09], AbsoluteThickness[1.6], Opacity[0.06], 
              EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
                 "]], 
                PolygonBox[CompressedData["
1:eJwt1Pdvz0Ecx/E7oxqjGqOaWqVKqbYoLUpbRbVmEBEREUREhEZEYu89Wnv7
JwgxYoQYIUaIEWKEGCFGiBFiPF95v3945F73zefzubv33X3bTa0aM6dWCGE4
6uAe7mMC6mMF7mAAcvAQD9DQn7mBmxiPRDzHMyRhIj7gIyYjGedxDgkYi8/4
hCb+zCVcxjh/ZhmuoRRd8RM/0AxT8A3fPesb6/AOg9ANt3HL16I5rsELDEQe
VuERypCLJ3jqc9caz+Csz1X1WYILKEE23uKNr20SXuG1Z9XgKq54bbSmDfiC
weiOEziJ0dA+FMUQDtL2xSjsQBq/DaUt0Djkxkgjz0C11ka/grYnUskt0Io8
E83JKdGy3mlETor2bqrqSi5BR/I8HNDY9Ef6HLaprvQraXthi+ZJfwhtPvqT
i6O92wF1yQmYTk5BIP/zPA2ZGguzyW2QTm4bLc/SnpHz0J5chSxyJ6QHe6c3
uTDaWHM1J3JBtKx3Wutb0b6lGuxDD/ojaPsgh5wb7dv6ZiK5XrRaaM4VWhuy
yPO1T+TyaFk1OqSzEm1virAAR1QHdMZRLPRcjItY6melFMexGF38DG3CL5Rr
nmjJt3f6Xg/TOaV/2Mfqhwz6u2kLg93ZbPp7VZdga2xKf7vvlc5Mbfpbfa90
RhrQr/Gzoj39io1+FjWH0zgV7KzrTO7RXKONpTH+4K/vpe7gIhzztWpN+Ty7
32utM/QSa4PdNd3Ju1gZ7L9Ed+43NvvadabeY32wu6s7ch3Lg919/Qc9xupg
d1V3eJf2PVqtVJP/qo10KQ==
                 "]]}]}, {}, {}, {}, {}}], {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{500., 0.},
         DisplayFunction->Identity,
         Epilog->InsetBox[
           FormBox[
            StyleBox["\"f)\"", {
              GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
           Offset[{5, -5}, 
            Scaled[{0, 1}]], 
           ImageScaled[{0, 
             Rational[1, 2]}]],
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{{{0, 
              FormBox["0", TraditionalForm]}, {
              NCache[
               Rational[1, 10000000], 1.*^-7], 
              FormBox[
              "\"1*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
               TraditionalForm]}, {
              NCache[
               Rational[1, 5000000], 2.*^-7], 
              FormBox[
              "\"2*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
               TraditionalForm]}, {
              NCache[
               Rational[3, 10000000], 3.*^-7], 
              FormBox[
              "\"3*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
               TraditionalForm]}}, {}}, {{{500, 
              FormBox["500", TraditionalForm]}, {550, 
              FormBox["550", TraditionalForm]}, {600, 
              FormBox["600", TraditionalForm]}, {650, 
              FormBox["650", TraditionalForm]}, {700, 
              FormBox["700", TraditionalForm]}, {750, 
              FormBox["750", TraditionalForm]}, {800, 
              FormBox["800", TraditionalForm]}, {850, 
              FormBox["850", TraditionalForm]}}, {}}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{80, 15}, {30, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotRange->{{500, 850}, {0., 3.5134682026435876`*^-7}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}], {1336.5, -1122}, 
        ImageScaled[{0.5, 0}], {931, 557}]}, {InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
KNpuxPG/xO/bhAYX54fi/wB3LXvr
               "]]},
             Annotation[#, "Charting`Private`Tag$130380#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVlXs01GsXx8clVFSOoted6ggJOXSSy94zqCS55ZrGbQwi1zSMy5if+eEX
qSSJblKiKKI6UgmJ6E1ESoRI1En3SHjn/eNZe33Wep793fu79tqPhl+4E0uU
RqM1CM//YxArUZIGydBN2/jVq9cULat/1tzEZDhubbn056gpyotFBYQzkoHz
u2VZ/ldTbDwbeH/AJhnme7w7Py/ZjKqvdnLv7EiGzj5O5Q/rzfjMSXMy3isZ
AhPlJh1qNiPAw57vsclQtCY8wyffDBWUZC++L0+Gf0ZNkm8fsEDfeFA++AcP
GhnLcnhxiO/f4nE9Wx4E3fI+srSfgXkVjRW3eDxwq24rvCGwQUw3wje3eXD6
6c2n0U+24dmhUHGlrzxYmG/LT9u5A2ftjuGX9Smwtlrqim6nAybKmalUBaeA
Y2mb1Uq6M1Z5lGsnn00BxbjMbKcXu3C0Uvra+74U0Lcc7q+S8cD2DGM2S44P
0QW+uZ0HdmNP3UDdw2180Pz+InqNpg8OiMRmtqbyQepoWjST64cFzT2Zvbf5
YJU7nSczE4A/ROptHtbxgfdvxdt8CRY6mJfSbtzhw7f8wsPr/mChRDU3Juce
H941LRFnabMw6pz6bvtGPjSOF44Rriy0TQjRbXrEhx8nYyJ/VrBwynCu9eoL
PoSuOhLB8AxE57Ax4vRLPti4uegUBwRixaUO86w+PkjXGatP7wvEALXzlSH9
fFh9IS84iQjEDumt+WuG+DBQ0fv0w+VALBk7ElTwjg9LZTYNSPwKRNFVXE1q
nA+24j3aPDE27t4T8IozwQf+dqe8MWk2/tFt4uD6gQ8XLC9MJamxMamhb6Ps
Jz60DGVX3Wew0fXUGsm0n3zYmjOmsDSdjaov0/0jp/gwvaJXbD6bjaPyH+55
TfMh/Ohsf2ceG2MOV3EMZvjQx+930Chho9njFd2Kv4V+PHOdOlHBRrFFcYYL
ZvnQtdMr92MNG48SlhMv5vgg/teibp0mNnrWF9k0zfMhR2V0dHEbGzVmF5yv
oBFwttgg/N5TNl6LbfciRAnoDd3fkj7AxgPX9W+FiREQUcNcnD3CRotPR5e7
ixMw3hz80XqCjRJ6PyLoCwhIrE0azJtk4+Ngj8frJAh4Uqcy7f2Njccu1mkr
SBLQtKX4ntWU0J83aqSIFAF91uQT5i82rlInht8LeR99T4H2TzZO7H5r0bOQ
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
Hfh7XsgaRa9plm1c/B/NGJDk
               "]]},
             Annotation[#, "Charting`Private`Tag$130380#2"]& ]}, {}}, {
           GraphicsComplexBox[CompressedData["
1:eJxdmH1U19UdxwFxCi5cemYst5zP5WAOB1bYFFCRnTo+7SjLU7g0j9PMOOom
1AgFlZkPmClnHkqlBk0z9XQoJ1lqWviQpIhT5s8mD6IgISAgD8JvzfN5va9n
/9R5nff9fj8v7+9+7+deBs55Zfo8Px8fn7jv//O//19rLr0WcTwt6tF9OYfW
LFkRNWlYa8L4Use7Zva7NLXOca+M8GkJ3dLFLx+YfuqlYMffXE8cnxzqOCw4
89CaGMdvxX0YsSXecXPS6b05ixzH76oevm+l44OlPXIOZTnuHzjs4VMfOMZ/
+6S5lY0Jh6Pxh/GH8Yfxh/GH8Yfxh/GH8Yfxh/GH8S+5HHmlIeEb+cP4w/jD
+MP4w/jD+MP4w/jD+MP4w/jXBgwaEpFxUf4w/jD+MP4w/jD+MP4w/jD+MP4w
/jD+dbl5zzYk/Ef+MP4w/jD+MP4w/jD+MP4w/jD+MP4w/q07txbOzK6QP4w/
jD+MP4w/jD+MP4w/jD+MP4w/jH9bXXx5eMZ1+cP4w/jD+MP4w/jD+MP4w/jD
+MP4w/i3P/VwZ5+lN+UP4w/jD+MP4w/jD+MP4w/jD+MP4w/j3/GG56GGhFvy
h/GH8Yfxh/GH8Yfxh/GH8Yfxh/GH8X990ZRt83Mb5A/jD+MP4w/jD+MP4w/j
D+MP4w/jD+Of+tb+vJnZt+UP4w/jD+MP4w/jD+MP4w/jD+MP4w/jv6LgwfyJ
bzbLH8Yfxh/GH8Yfxh/GH8Yfxh/GH8Yfxn9l2ZKj4Rl35A/jD+MP4w/jD+MP
4w/jD+MP4w/jD+Of1rOkaHBKm/xh/GH8Yfxh/GH8Yfxh/GH8Yfxh/GH800dG
ePos7ZA/jD+MP4w/jD+MP4w/jD+MP4w/jD+M/6qZWdW+CzrlD+MP4w/jD+MP
4w/jD+MP4w/jD+MP47865U5LfYJX/jD+MP4w/jD+MP4w/jD+MP4w/jD+MP7j
p4f4Je72icEfxh/GH8Yfxh/GH8Yfxh/GH8Yfxh/G/9g1z1/n5/rKH8Yfxh/G
H8Yfxh/GH8Yfxh/GH8Yf1vwnb+g9e6efm39jzb+x5t9Y82+s+TfW/Btr/o01
/8aaf2PNv7Hm37hf0IJ3DxWlRY0akN/YlLBP6wkmLx73yfsRGYXKYfKbn84O
iM8+rxwm/y6+cmzfpZeVw+StyeEF83PL3HneWHlhS8nEN6+53Ji8/ccHbw1O
qXbnUWPlc18L9FvwncuNybsube+TuLteOazc6x0we2ejy43JfYa/EDo5q0k5
rHzyF5G/Wd/icmNyvz8NjgtJa1UOK3971Yz+Se0uNyb3P3ZtTuDiu8ph5TWx
iW1zu1xuTJ7es2RsU4j7HmHybm+v+vLmcLfeYT0/MuKZikF+Mff1s3tc05D1
/PicdK0n1h9Mznoih8lZT+QwOeuJHCZnPen+Zazc1pNyY3LWk+4PxsptPSk3
Jmc9kcPKbT0pNyZnPZHDym09KTcmZz2Rw8ptPSk3Jmc9kcPKbT0pNyZnPen8
YEzOeiKH9bytp/vOH/eY9cffw7pWDpyQfDItalbRjN5tCTu0vvl7E/nZhtvr
47OPKefvOeQ1W7o65ueeU87fS8hrf5UeNiSlVDl/jyBPqkr/deLuq27/svu+
8vDYyZOzKpVznyZ/Na3ngpC0G27/svuq8rOn0gMX1yrnPkg+NjN2SlOI27+4
byn/5P3nKga5/Yv7DHnUlZ4Li4Pd/sV9Qbn/wuVHg9z+xXmcPOYXp1ft93f7
F+dd5dNDNu9ob4u+b/+4d54kn5C8YcfG+g7lnNeU76zbk1LVqZzzEHls4ZSC
RR6vcs4b5IOXX6oIrXb7G/2c/L3AtQuHVvrGRDX+c7T/Ebd+jjww6WTHPvf3
V3LWD8x6gVkfMOsB5veH+b1hfl+Y3xPm94P5vWB+H5jfA2b+YeYbZn5h5hNm
/pTb+SJv6VfZ3sPf/16FQUNDgg9Gw//I3pSycczX4n9VP7MsvfmC+NLqc7vG
nbkirv3RB7dSissdJ7wc+NznVeK6PSOHRu6ucdzeMC44q06cPGRWaEdUg+On
P42sGX1b/NqSn8aVhjQ73pYy48SgO+KUI9/OORDc5vj6uMS8oA5xalBOylb/
TscRfutWtXeJo/aGff1kko/m40h0+fSwpb7iqAubSx9d7Kf5oz+SN2XufSK6
5WPNP/2RvCv1Dz227T6lnP5I7ucJP9gz9IJy+iO5f9LBuuP+V9z6tP6oPHDA
5qjF5S63/qj892V7HplV5dav9UfyH+S9V3h3Yo3LrT8qb5pX/u+wOuX0R/Ju
A7e87gly653+qDyued1pf7f+6Y/k3V+Zua2gvcnl1h+VZx3I21Xfopz+SN7j
s+D8v1W1utz6o/LK5KMZnnbl9EfygF6Xi/5cfNfl1h+Vj3rKM+9El/serT+S
r9lTtGzEbPe90R81f1GpHQNnue+P/qjnz49M+8kMxwWzt44e3H+bW8+P9Fo2
/9y74rsVl895ir8Q/93bK6547nHtf6zPWeuffNFnf7reB/M+mO8fZj3zPtYz
OfVh6sPsHzDrH1+fjUu2j4g+Jy7JfuPZ3IBi1eP74HnGw4yH2Z9gvid9XyPu
nK8KLnX72eO9M18oK1U9vjc9b+P1fhsPs//BfJ/63io+WzUt6arbD6t/W77R
c1X1+H71vI2HGS+2/VXj7XtXvbAVO0a+WOnqPf7DzkUnKl092w/0vI3X+228
2PZvjbf9Q+s5Nabggak33H6+uuihp/NvqB77C88zHma82PqDxtt+pHpn/C/c
HFPr6p3fNOqxnbWunu1Xet7G6/02Xmz9R+Ntf+P96Rsq7lT2dftb26Zded1i
61WP/Y/nGQ8zHqa/weyXqpc/oXtJgNsv2w4E5jeOaXT1bD9VPRuvejZe9ax/
qp7tv7x/9eXcPse8jju+feloWViT6rE/8zzjYcbD9GeY/Vz1/Hr8/KNm1787
up8pOju8xdWz/V71bLzq2XjVs/6vetYfeH/GY38MzbnpzgedIb/0HP5Zq+rR
P3ie8TDjtV/a+QKm36je1JORm8rc+aPzd5nVe/u2u3rWj1TPxquejVc9O7+o
nvUv3r92+Yi41IvufON9tb7lnYC7qkd/43nGw4yHOR/B9EPV275uxuIz7vzk
zZnmv8Hb6epZv1Q9G696Nl717PyletZfef+6L2vnPH/MK/Y9+dGDf2n2qh79
l+cZDzMe5nwH0695f2zLsCfyPI59WtdmftzsE0M9+jnPM179ycbDnB+1v1j/
5/1frb34+TsXHa9YF9nvw3pf1eN8wPOMhxmvf5+dT/Xvs/ME7+O8z/mD+xH5
/9+fuC/B3Jdg7kvqL3ZfgrkvaX+2+xLMfQnmvgRzX4K5L8Hcl2DuS/fN3737
Esx9Cea+pPmx+xLMfem/Oj0kxg==
            "], {
             {GrayLevel[0.09], AbsoluteThickness[1.6], Opacity[0.06], 
              EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmAf8l9MXx+95SlP92iUVTS2l4dfUXv/SUCmRSsiIUISIElmRvbI32REK
ySrKlh0qKysr/kk4787n+3p+r1enc557z73nc+/z3M/9/L4NJ58wclqWUvrT
/yvl/hc3niu7VUnRVtqtqvwubnUspdpuu3pcpHzyqqm/jFt1+bJutdzKu1Vw
qy1f0a2G+su5NXfb3a2eW021MeY3Yanr1lhzMUcDYaLmHvLVNUdl4aqvNZC3
p/qp2VCeOnV9Hbu51fF4q+o0c2uk/lrCVKS5+rl1cuvstpfyqdnXrVh9rYWJ
mnvLU3NfrbOFWyutgbw26qdmW3nW2kFYqNNRnvH1HO/ubk08bql1NtC89fRc
rGf6e2ku5ugqTNTsJt9WuFsKVxetgbwGXqe+2z4eb3Nr79bDrbfmY0195KnZ
UzkdtEetNNefWgt9/dVHnaluE9wmsk9eZw+37h5vV53Bbgdo3xk3UGsA+xDl
UHN/edY6XJh4JyPkGT9U/WAfqfkGuA1TG2NGqY06h2o89XcIyxi3sYqpf5A8
9cfJU+cQzQuWn9w2uG3UWg9Q/Yny1ByvXOo18j1o6DZIWLpozU28rbHbaI8P
L4Flimof7HaUPPVPcJus3COFlbyj1U/NY+RZazOfu6nbJI/NYuw0t2PVD/Yj
VJO5/hUG8k5UHfpLWYyb5XayMFHzFHlqnqRccM3QGsibqX5qnirPN3KGsLCm
M+Wp2dxr7eV2nMfTNR9zzVY/dc6Sp/9seWrOFT5wnSNP/Xny1G/pc7dwO83j
XSzWNN/tfK0PXBfIg+tCeepfJE/9i+Wpf73bArdL3G6Qv1Q2V1gWyoOltddt
5Xaux2Ut6l/hdmUJLFfJg+VqebBcIw+Wa+XBcp38Ahm45gjLHOFYJExgqeh1
b3Z/v1t5i/o831ICy63yYLlNHiy3y4PlDnmw3CkPlrvk2Zu75dmbe+TBUsmi
/lK3Nh7v7XaZx4tLYHlAHiwPyoPlIXmwPCwPlkfkwfKoPFgekwfLEnmwtPea
7dzu9Xgf923dbtSe8U3xPT2pfQLX08IEluXCQf1n5Kn/ksY85bZMueQ9q35w
PScPriKLPXjB7UXtB+NXqB+877q94rbKraPnd3B73OOXVQdcb5aY41VhouZr
8s9pjqeFa7XWQN4a9VOz2Ofe1+15j9/SfKzpbXlqVrWo9YYwLdNc76ifOu+p
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
                 "]],
                 PolygonBox[CompressedData["
1:eJwtlHlMz3EYxz/PR0hCQqolRaWRFM3M8j+bv4z/8bfjT+U+yjEzzMyMZmZG
M3OGuXPN1ZyjmHO55mq5SfN6vH9/vPZ+P8/neD6f53vkz5w7ZU4MIUyGJOhH
kA71+N4WwkqohzRoJJfNWBY0BOVWwT5IhyZytege01qf04Aeg0xIJT6BHvc4
KPcDvkM1cTf0BlyHSuJcdA0cgAx4Ra4RvQA5UEDchn6G2X5+dDFshQAzkKVo
nWnMa3Sif6EWn4wuh50mv5HcMnSH6Sw+5x36NrFXRJfANpP3ml3pRVLU2hRy
o/Cl0BJ05ktwEcqCzrwa9kN/05wadLf3xtTzVNb2hLqgXDF+WFRvfc0K2GWq
5XOuotdMvfIaZ9DTid5ko7fgNuQlevoSfQHTgnr0CT5CFWEx+h4+mPwscm/Q
1wlfhLb6czD56f6OcLY+MJp4L/ET9KnXh6nEFYyNgTZ8JblynxvlW8m1oM2J
uUPQB/DQ5CeSe44+S9TyPb/BV6ghHo7+gt9Qksh1oH9gQ1CuL7XS4GjQGdvh
i2mt37k7Y8lQRryduAs+RvlSf4/wFuV9zxR8j6i7+pqR+JKou4wnHoDPgApT
zUz8QDgflKuCdX4H4iw4gj8MvYJy1fj1/k3gC+EK/rLJ/4Rz+LOmtT5nIX4z
dOAnwSH8Qfv/aEM7LMJsgc6gZ/4Y/8g013Mn8adM74p/k/P9OzDVKocF+E3e
Y/wEGMpdCmAcuZvEg/G5UX6s9xU/IqoXzeTuo/dMa/2MRYwVRo35HnfhTuJZ
+zuaw9igqL28Z01ex3QWP8M8/FrT3bxn+czNi/o3+T/oH5drjp8=
                 
                 "]]}]}, {}, {}, {}, {}}], {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{500., 0.},
         DisplayFunction->Identity,
         Epilog->InsetBox[
           FormBox[
            StyleBox["\"c)\"", {
              GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
           Offset[{5, -5}, 
            Scaled[{0, 1}]], 
           ImageScaled[{0, 
             Rational[1, 2]}]],
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{
            FormBox["\"Fish biomass (g)\"", TraditionalForm], None}, {
           None, None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{80, 15}, {30, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotRange->{{500, 850}, {0., 3.1*^7}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}},
         Ticks->{Automatic, Automatic}], 
        NCache[{Rational[931, 2], -1668}, {465.5, -1668}], 
        ImageScaled[{0.5, 0}], {931, 557}], InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
TPQ/qgEeJw==
               "]]},
             Annotation[#, "Charting`Private`Tag$130842#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
3Dni/quFPPwPfIJ0Ug==
               "]]},
             Annotation[#, "Charting`Private`Tag$130842#2"]& ]}, {}}, {
           GraphicsComplexBox[CompressedData["
1:eJxdmH1U19UdxwFxCi5cemYst5zP5WAOB1bYFFCRnTo+7SjLU7g0j9PMOOom
1AgFlZkPmClnHkqlBk0z9XQoJ1lqWviQpIhT5s8mD6IgISAgD8JvzfN5va9n
/9R5nff9fj8v7+9+7+deBs55Zfo8Px8fn7jv//O//19rLr0WcTwt6tF9OYfW
LFkRNWlYa8L4Use7Zva7NLXOca+M8GkJ3dLFLx+YfuqlYMffXE8cnxzqOCw4
89CaGMdvxX0YsSXecXPS6b05ixzH76oevm+l44OlPXIOZTnuHzjs4VMfOMZ/
+6S5lY0Jh6Pxh/GH8Yfxh/GH8Yfxh/GH8Yfxh/GH8S+5HHmlIeEb+cP4w/jD
+MP4w/jD+MP4w/jD+MP4w/jXBgwaEpFxUf4w/jD+MP4w/jD+MP4w/jD+MP4w
/jD+dbl5zzYk/Ef+MP4w/jD+MP4w/jD+MP4w/jD+MP4w/q07txbOzK6QP4w/
jD+MP4w/jD+MP4w/jD+MP4w/jH9bXXx5eMZ1+cP4w/jD+MP4w/jD+MP4w/jD
+MP4w/i3P/VwZ5+lN+UP4w/jD+MP4w/jD+MP4w/jD+MP4w/j3/GG56GGhFvy
h/GH8Yfxh/GH8Yfxh/GH8Yfxh/GH8X990ZRt83Mb5A/jD+MP4w/jD+MP4w/j
D+MP4w/jD+Of+tb+vJnZt+UP4w/jD+MP4w/jD+MP4w/jD+MP4w/jv6LgwfyJ
bzbLH8Yfxh/GH8Yfxh/GH8Yfxh/GH8Yfxn9l2ZKj4Rl35A/jD+MP4w/jD+MP
4w/jD+MP4w/jD+Of1rOkaHBKm/xh/GH8Yfxh/GH8Yfxh/GH8Yfxh/GH800dG
ePos7ZA/jD+MP4w/jD+MP4w/jD+MP4w/jD+M/6qZWdW+CzrlD+MP4w/jD+MP
4w/jD+MP4w/jD+MP47865U5LfYJX/jD+MP4w/jD+MP4w/jD+MP4w/jD+MP7j
p4f4Je72icEfxh/GH8Yfxh/GH8Yfxh/GH8Yfxh/G/9g1z1/n5/rKH8Yfxh/G
H8Yfxh/GH8Yfxh/GH8Yf1vwnb+g9e6efm39jzb+x5t9Y82+s+TfW/Btr/o01
/8aaf2PNv7Hm37hf0IJ3DxWlRY0akN/YlLBP6wkmLx73yfsRGYXKYfKbn84O
iM8+rxwm/y6+cmzfpZeVw+StyeEF83PL3HneWHlhS8nEN6+53Ji8/ccHbw1O
qXbnUWPlc18L9FvwncuNybsube+TuLteOazc6x0we2ejy43JfYa/EDo5q0k5
rHzyF5G/Wd/icmNyvz8NjgtJa1UOK3971Yz+Se0uNyb3P3ZtTuDiu8ph5TWx
iW1zu1xuTJ7es2RsU4j7HmHybm+v+vLmcLfeYT0/MuKZikF+Mff1s3tc05D1
/PicdK0n1h9Mznoih8lZT+QwOeuJHCZnPen+Zazc1pNyY3LWk+4PxsptPSk3
Jmc9kcPKbT0pNyZnPZHDym09KTcmZz2Rw8ptPSk3Jmc9kcPKbT0pNyZnPen8
YEzOeiKH9bytp/vOH/eY9cffw7pWDpyQfDItalbRjN5tCTu0vvl7E/nZhtvr
47OPKefvOeQ1W7o65ueeU87fS8hrf5UeNiSlVDl/jyBPqkr/deLuq27/svu+
8vDYyZOzKpVznyZ/Na3ngpC0G27/svuq8rOn0gMX1yrnPkg+NjN2SlOI27+4
byn/5P3nKga5/Yv7DHnUlZ4Li4Pd/sV9Qbn/wuVHg9z+xXmcPOYXp1ft93f7
F+dd5dNDNu9ob4u+b/+4d54kn5C8YcfG+g7lnNeU76zbk1LVqZzzEHls4ZSC
RR6vcs4b5IOXX6oIrXb7G/2c/L3AtQuHVvrGRDX+c7T/Ebd+jjww6WTHPvf3
V3LWD8x6gVkfMOsB5veH+b1hfl+Y3xPm94P5vWB+H5jfA2b+YeYbZn5h5hNm
/pTb+SJv6VfZ3sPf/16FQUNDgg9Gw//I3pSycczX4n9VP7MsvfmC+NLqc7vG
nbkirv3RB7dSissdJ7wc+NznVeK6PSOHRu6ucdzeMC44q06cPGRWaEdUg+On
P42sGX1b/NqSn8aVhjQ73pYy48SgO+KUI9/OORDc5vj6uMS8oA5xalBOylb/
TscRfutWtXeJo/aGff1kko/m40h0+fSwpb7iqAubSx9d7Kf5oz+SN2XufSK6
5WPNP/2RvCv1Dz227T6lnP5I7ucJP9gz9IJy+iO5f9LBuuP+V9z6tP6oPHDA
5qjF5S63/qj892V7HplV5dav9UfyH+S9V3h3Yo3LrT8qb5pX/u+wOuX0R/Ju
A7e87gly653+qDyued1pf7f+6Y/k3V+Zua2gvcnl1h+VZx3I21Xfopz+SN7j
s+D8v1W1utz6o/LK5KMZnnbl9EfygF6Xi/5cfNfl1h+Vj3rKM+9El/serT+S
r9lTtGzEbPe90R81f1GpHQNnue+P/qjnz49M+8kMxwWzt44e3H+bW8+P9Fo2
/9y74rsVl895ir8Q/93bK6547nHtf6zPWeuffNFnf7reB/M+mO8fZj3zPtYz
OfVh6sPsHzDrH1+fjUu2j4g+Jy7JfuPZ3IBi1eP74HnGw4yH2Z9gvid9XyPu
nK8KLnX72eO9M18oK1U9vjc9b+P1fhsPs//BfJ/63io+WzUt6arbD6t/W77R
c1X1+H71vI2HGS+2/VXj7XtXvbAVO0a+WOnqPf7DzkUnKl092w/0vI3X+228
2PZvjbf9Q+s5Nabggak33H6+uuihp/NvqB77C88zHma82PqDxtt+pHpn/C/c
HFPr6p3fNOqxnbWunu1Xet7G6/02Xmz9R+Ntf+P96Rsq7lT2dftb26Zded1i
61WP/Y/nGQ8zHqa/weyXqpc/oXtJgNsv2w4E5jeOaXT1bD9VPRuvejZe9ax/
qp7tv7x/9eXcPse8jju+feloWViT6rE/8zzjYcbD9GeY/Vz1/Hr8/KNm1787
up8pOju8xdWz/V71bLzq2XjVs/6vetYfeH/GY38MzbnpzgedIb/0HP5Zq+rR
P3ie8TDjtV/a+QKm36je1JORm8rc+aPzd5nVe/u2u3rWj1TPxquejVc9O7+o
nvUv3r92+Yi41IvufON9tb7lnYC7qkd/43nGw4yHOR/B9EPV275uxuIz7vzk
zZnmv8Hb6epZv1Q9G696Nl717PyletZfef+6L2vnPH/MK/Y9+dGDf2n2qh79
l+cZDzMe5nwH0695f2zLsCfyPI59WtdmftzsE0M9+jnPM179ycbDnB+1v1j/
5/1frb34+TsXHa9YF9nvw3pf1eN8wPOMhxmvf5+dT/Xvs/ME7+O8z/mD+xH5
/9+fuC/B3Jdg7kvqL3ZfgrkvaX+2+xLMfQnmvgRzX4K5L8Hcl2DuS/fN3737
Esx9Cea+pPmx+xLMfem/Oj0kxg==
            "], {
             {GrayLevel[0.09], AbsoluteThickness[1.6], Opacity[0.06], 
              EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmAf8l9MXx+95SlP92iUVTS2l4dfUXv/SUCmRSsiIUISIElmRvbI32REK
ySrKlh0qKysr/kk4787n+3p+r1enc557z73nc+/z3M/9/L4NJ58wclqWUvrT
/yvl/hc3niu7VUnRVtqtqvwubnUspdpuu3pcpHzyqqm/jFt1+bJutdzKu1Vw
qy1f0a2G+su5NXfb3a2eW021MeY3Yanr1lhzMUcDYaLmHvLVNUdl4aqvNZC3
p/qp2VCeOnV9Hbu51fF4q+o0c2uk/lrCVKS5+rl1cuvstpfyqdnXrVh9rYWJ
mnvLU3NfrbOFWyutgbw26qdmW3nW2kFYqNNRnvH1HO/ubk08bql1NtC89fRc
rGf6e2ku5ugqTNTsJt9WuFsKVxetgbwGXqe+2z4eb3Nr79bDrbfmY0195KnZ
UzkdtEetNNefWgt9/dVHnaluE9wmsk9eZw+37h5vV53Bbgdo3xk3UGsA+xDl
UHN/edY6XJh4JyPkGT9U/WAfqfkGuA1TG2NGqY06h2o89XcIyxi3sYqpf5A8
9cfJU+cQzQuWn9w2uG3UWg9Q/Yny1ByvXOo18j1o6DZIWLpozU28rbHbaI8P
L4Flimof7HaUPPVPcJus3COFlbyj1U/NY+RZazOfu6nbJI/NYuw0t2PVD/Yj
VJO5/hUG8k5UHfpLWYyb5XayMFHzFHlqnqRccM3QGsibqX5qnirPN3KGsLCm
M+Wp2dxr7eV2nMfTNR9zzVY/dc6Sp/9seWrOFT5wnSNP/Xny1G/pc7dwO83j
XSzWNN/tfK0PXBfIg+tCeepfJE/9i+Wpf73bArdL3G6Qv1Q2V1gWyoOltddt
5Xaux2Ut6l/hdmUJLFfJg+VqebBcIw+Wa+XBcp38Ahm45gjLHOFYJExgqeh1
b3Z/v1t5i/o831ICy63yYLlNHiy3y4PlDnmw3CkPlrvk2Zu75dmbe+TBUsmi
/lK3Nh7v7XaZx4tLYHlAHiwPyoPlIXmwPCwPlkfkwfKoPFgekwfLEnmwtPea
7dzu9Xgf923dbtSe8U3xPT2pfQLX08IEluXCQf1n5Kn/ksY85bZMueQ9q35w
PScPriKLPXjB7UXtB+NXqB+877q94rbKraPnd3B73OOXVQdcb5aY41VhouZr
8s9pjqeFa7XWQN4a9VOz2Ofe1+15j9/SfKzpbXlqVrWo9YYwLdNc76ifOu+p
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
                 "]],
                 PolygonBox[CompressedData["
1:eJwtlHlMz3EYxz/PR0hCQqolRaWRFM3M8j+bv4z/8bfjT+U+yjEzzMyMZmZG
M3OGuXPN1ZyjmHO55mq5SfN6vH9/vPZ+P8/neD6f53vkz5w7ZU4MIUyGJOhH
kA71+N4WwkqohzRoJJfNWBY0BOVWwT5IhyZytege01qf04Aeg0xIJT6BHvc4
KPcDvkM1cTf0BlyHSuJcdA0cgAx4Ra4RvQA5UEDchn6G2X5+dDFshQAzkKVo
nWnMa3Sif6EWn4wuh50mv5HcMnSH6Sw+5x36NrFXRJfANpP3ml3pRVLU2hRy
o/Cl0BJ05ktwEcqCzrwa9kN/05wadLf3xtTzVNb2hLqgXDF+WFRvfc0K2GWq
5XOuotdMvfIaZ9DTid5ko7fgNuQlevoSfQHTgnr0CT5CFWEx+h4+mPwscm/Q
1wlfhLb6czD56f6OcLY+MJp4L/ET9KnXh6nEFYyNgTZ8JblynxvlW8m1oM2J
uUPQB/DQ5CeSe44+S9TyPb/BV6ghHo7+gt9Qksh1oH9gQ1CuL7XS4GjQGdvh
i2mt37k7Y8lQRryduAs+RvlSf4/wFuV9zxR8j6i7+pqR+JKou4wnHoDPgApT
zUz8QDgflKuCdX4H4iw4gj8MvYJy1fj1/k3gC+EK/rLJ/4Rz+LOmtT5nIX4z
dOAnwSH8Qfv/aEM7LMJsgc6gZ/4Y/8g013Mn8adM74p/k/P9OzDVKocF+E3e
Y/wEGMpdCmAcuZvEg/G5UX6s9xU/IqoXzeTuo/dMa/2MRYwVRo35HnfhTuJZ
+zuaw9igqL28Z01ex3QWP8M8/FrT3bxn+czNi/o3+T/oH5drjp8=
                 
                 "]]}]}, {}, {}, {}, {}}], {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{500., 0.},
         DisplayFunction->Identity,
         Epilog->InsetBox[
           FormBox[
            StyleBox["\"g)\"", {
              GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
           Offset[{5, -5}, 
            Scaled[{0, 1}]], 
           ImageScaled[{0, 
             Rational[1, 2]}]],
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{80, 15}, {30, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotRange->{{500, 850}, {0., 3.1*^7}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}},
         Ticks->{Automatic, Automatic}], {1336.5, -1668}, 
        ImageScaled[{0.5, 0}], {931, 557}]}, {InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
               "]]},
             Annotation[#, "Charting`Private`Tag$130494#1"]& ]}, {}}, {
           GraphicsComplexBox[CompressedData["
1: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
h/pg5yXsvISdl7DzEnZe+i+fuQxp
            "], {
             {GrayLevel[0.09], AbsoluteThickness[1.6], Opacity[0.06], 
              EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmAf8l9MXx+95SlP92iUVTS2l4dfUXv/SUCmRSsiIUISIElmRvbI32REK
ySrKlh0qKysr/kk4787n+3p+r1enc557z73nc+/z3M/9/L4NJ58wclqWUvrT
/yvl/hc3niu7VUnRVtqtqvwubnUspdpuu3pcpHzyqqm/jFt1+bJutdzKu1Vw
qy1f0a2G+su5NXfb3a2eW021MeY3Yanr1lhzMUcDYaLmHvLVNUdl4aqvNZC3
p/qp2VCeOnV9Hbu51fF4q+o0c2uk/lrCVKS5+rl1cuvstpfyqdnXrVh9rYWJ
mnvLU3NfrbOFWyutgbw26qdmW3nW2kFYqNNRnvH1HO/ubk08bql1NtC89fRc
rGf6e2ku5ugqTNTsJt9WuFsKVxetgbwGXqe+2z4eb3Nr79bDrbfmY0195KnZ
UzkdtEetNNefWgt9/dVHnaluE9wmsk9eZw+37h5vV53Bbgdo3xk3UGsA+xDl
UHN/edY6XJh4JyPkGT9U/WAfqfkGuA1TG2NGqY06h2o89XcIyxi3sYqpf5A8
9cfJU+cQzQuWn9w2uG3UWg9Q/Yny1ByvXOo18j1o6DZIWLpozU28rbHbaI8P
L4Flimof7HaUPPVPcJus3COFlbyj1U/NY+RZazOfu6nbJI/NYuw0t2PVD/Yj
VJO5/hUG8k5UHfpLWYyb5XayMFHzFHlqnqRccM3QGsibqX5qnirPN3KGsLCm
M+Wp2dxr7eV2nMfTNR9zzVY/dc6Sp/9seWrOFT5wnSNP/Xny1G/pc7dwO83j
XSzWNN/tfK0PXBfIg+tCeepfJE/9i+Wpf73bArdL3G6Qv1Q2V1gWyoOltddt
5Xaux2Ut6l/hdmUJLFfJg+VqebBcIw+Wa+XBcp38Ahm45gjLHOFYJExgqeh1
b3Z/v1t5i/o831ICy63yYLlNHiy3y4PlDnmw3CkPlrvk2Zu75dmbe+TBUsmi
/lK3Nh7v7XaZx4tLYHlAHiwPyoPlIXmwPCwPlkfkwfKoPFgekwfLEnmwtPea
7dzu9Xgf923dbtSe8U3xPT2pfQLX08IEluXCQf1n5Kn/ksY85bZMueQ9q35w
PScPriKLPXjB7UXtB+NXqB+877q94rbKraPnd3B73OOXVQdcb5aY41VhouZr
8s9pjqeFa7XWQN4a9VOz2Ofe1+15j9/SfKzpbXlqVrWo9YYwLdNc76ifOu+p
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
                 "]],
                 PolygonBox[CompressedData["
1:eJwtlHlMz3EYxz/PR0hCQqolRaWRFM3M8j+bv4z/8bfjT+U+yjEzzMyMZmZG
M3OGuXPN1ZyjmHO55mq5SfN6vH9/vPZ+P8/neD6f53vkz5w7ZU4MIUyGJOhH
kA71+N4WwkqohzRoJJfNWBY0BOVWwT5IhyZytege01qf04Aeg0xIJT6BHvc4
KPcDvkM1cTf0BlyHSuJcdA0cgAx4Ra4RvQA5UEDchn6G2X5+dDFshQAzkKVo
nWnMa3Sif6EWn4wuh50mv5HcMnSH6Sw+5x36NrFXRJfANpP3ml3pRVLU2hRy
o/Cl0BJ05ktwEcqCzrwa9kN/05wadLf3xtTzVNb2hLqgXDF+WFRvfc0K2GWq
5XOuotdMvfIaZ9DTid5ko7fgNuQlevoSfQHTgnr0CT5CFWEx+h4+mPwscm/Q
1wlfhLb6czD56f6OcLY+MJp4L/ET9KnXh6nEFYyNgTZ8JblynxvlW8m1oM2J
uUPQB/DQ5CeSe44+S9TyPb/BV6ghHo7+gt9Qksh1oH9gQ1CuL7XS4GjQGdvh
i2mt37k7Y8lQRryduAs+RvlSf4/wFuV9zxR8j6i7+pqR+JKou4wnHoDPgApT
zUz8QDgflKuCdX4H4iw4gj8MvYJy1fj1/k3gC+EK/rLJ/4Rz+LOmtT5nIX4z
dOAnwSH8Qfv/aEM7LMJsgc6gZ/4Y/8g013Mn8adM74p/k/P9OzDVKocF+E3e
Y/wEGMpdCmAcuZvEg/G5UX6s9xU/IqoXzeTuo/dMa/2MRYwVRo35HnfhTuJZ
+zuaw9igqL28Z01ex3QWP8M8/FrT3bxn+czNi/o3+T/oH5drjp8=
                 
                 "]]}]}, {}, {}, {}, {}}], {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{500., 0.},
         DisplayFunction->Identity,
         Epilog->InsetBox[
           FormBox[
            StyleBox["\"d)\"", {
              GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
           Offset[{5, -5}, 
            Scaled[{0, 1}]], 
           ImageScaled[{0, 
             Rational[1, 2]}]],
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{
            FormBox[
            "\"Fish excretion (mol N \\!\\(\\*SuperscriptBox[\\(L\\), \
\\(-1\\)]\\) \\!\\(\\*SuperscriptBox[\\(d\\), \\(-1\\)]\\))\"", 
             TraditionalForm], None}, {
            FormBox["\"Time (d)\"", TraditionalForm], None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{80, 15}, {30, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotRange->{{500, 850}, {0., 0.00025}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}},
         Ticks->{Automatic, Automatic}], 
        NCache[{Rational[931, 2], -2214.}, {465.5, -2214.}], 
        ImageScaled[{0.5, 0}], {931, 557}], InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
fuWAb1RkSIkOgV7Xxj1d2ceBXKNKJTEDApkWXzqsOo7rwRIzvw8EKih+tHcU
25DBPMUxJRCrpGFz/QQH4jxf19uZEUii9D99eooDKoKdq7+sIdCnspDePiEu
lGbI1wqvI9Dxyo1bn4hx4bL84yFJWwI9rJky3i7Lha7d5+sDnQm0sFZBZ5kc
F6Jy8ow0XAh0udZIXlKeC3olTfm12FFv9g2WKXDheX35LPZWAjnVv7u9UIUL
J15OGtRsJ9BgY47KuCYX1o5u4/x2J5Beq5tAqj4XpG7XeJ33JdD3M+6+tAEX
Mle3dhr7EShzo2fTIUMupEUKH/mIrVbsk2uzlAs5Rknjcv4Emns9aOfkCi68
Fmw8Rh/A/b1PPNtlyoV1n9cFrQrG/QfvRbDsuNAuvcZJNJxAHtkPv0vbc+H3
gZ1HY7HV9hY5CzpwwbBF4ZNUBIGSm4qXNG/iQlPiBW/FSALxCqvbTjjh/y2a
MzQo3D+yA37u4EIyVZglSRNIdc5cwXt+XFg8MyDH5ySBmr/VX0nYzwVUELq6
HjvpZYqZvz8XLDZ0wKo4As2O0uKwDuDx/R66KhZPoD9CJqKpgVzoPj3ad+kU
gSpH9s2JOMqFrF1aFvlJBAr4/ELeOpoLDY7l1w+fIxBRGvdIm88FWTJ18A12
15XNW2ec4EJcpXkNOxWvN7f280UxXNCKv6bahG3ePKK6OJ4LjQvMLRZfIJBc
LVNbOpkLalc62ZWXCFRcyNVvvc6Fm3+D3DKvE6jMwcD+VRrOl+4N1ih2RU+b
f1E6F0yNth+1SiNQlazx7XOZXPB8KP6sG7vh0G+mUxYXJJYnNDEyCNSj46Zc
m8+FbcOz34XdIJDk+eWzSkq4cGaiwKP7NoGkDb5o55Xi8ZuqnNXJJpDMy0SL
y2VcuGSY77UfW3Gkjwyr4IK+0ZPO39hajmkTK19y4e3QKbvhHAKtEJcayH+D
n/9bPawvD++nY99a0tq4oOF35WXKXQLVSs+/FN/OBSMPj/RabLi9cufRDjy/
q8/1Re8RSKU1usPuMxf8TAzdDmE3I9bXsa9ccOl6ImV5n0AOMzz77X9yITdV
xKLzAYHM+K1CkxNcWKg3/KCzkEB56jPLuie5kCI/HCpZhNdP4SJu/RTeH7pX
h1ZjT347JnpDkAdzhQMXpmA/slUUdxThgcsc9xjrxwQykHRecFOcB8HiJvuv
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
aDZ2W2ItE9nYmo5PYbvF6f5JMGei/wF/y47g
               "]]},
             Annotation[#, "Charting`Private`Tag$130956#1"]& ]}, {}}, {
           GraphicsComplexBox[CompressedData["
1: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
h/pg5yXsvISdl7DzEnZe+i+fuQxp
            "], {
             {GrayLevel[0.09], AbsoluteThickness[1.6], Opacity[0.06], 
              EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmAf8l9MXx+95SlP92iUVTS2l4dfUXv/SUCmRSsiIUISIElmRvbI32REK
ySrKlh0qKysr/kk4787n+3p+r1enc557z73nc+/z3M/9/L4NJ58wclqWUvrT
/yvl/hc3niu7VUnRVtqtqvwubnUspdpuu3pcpHzyqqm/jFt1+bJutdzKu1Vw
qy1f0a2G+su5NXfb3a2eW021MeY3Yanr1lhzMUcDYaLmHvLVNUdl4aqvNZC3
p/qp2VCeOnV9Hbu51fF4q+o0c2uk/lrCVKS5+rl1cuvstpfyqdnXrVh9rYWJ
mnvLU3NfrbOFWyutgbw26qdmW3nW2kFYqNNRnvH1HO/ubk08bql1NtC89fRc
rGf6e2ku5ugqTNTsJt9WuFsKVxetgbwGXqe+2z4eb3Nr79bDrbfmY0195KnZ
UzkdtEetNNefWgt9/dVHnaluE9wmsk9eZw+37h5vV53Bbgdo3xk3UGsA+xDl
UHN/edY6XJh4JyPkGT9U/WAfqfkGuA1TG2NGqY06h2o89XcIyxi3sYqpf5A8
9cfJU+cQzQuWn9w2uG3UWg9Q/Yny1ByvXOo18j1o6DZIWLpozU28rbHbaI8P
L4Flimof7HaUPPVPcJus3COFlbyj1U/NY+RZazOfu6nbJI/NYuw0t2PVD/Yj
VJO5/hUG8k5UHfpLWYyb5XayMFHzFHlqnqRccM3QGsibqX5qnirPN3KGsLCm
M+Wp2dxr7eV2nMfTNR9zzVY/dc6Sp/9seWrOFT5wnSNP/Xny1G/pc7dwO83j
XSzWNN/tfK0PXBfIg+tCeepfJE/9i+Wpf73bArdL3G6Qv1Q2V1gWyoOltddt
5Xaux2Ut6l/hdmUJLFfJg+VqebBcIw+Wa+XBcp38Ahm45gjLHOFYJExgqeh1
b3Z/v1t5i/o831ICy63yYLlNHiy3y4PlDnmw3CkPlrvk2Zu75dmbe+TBUsmi
/lK3Nh7v7XaZx4tLYHlAHiwPyoPlIXmwPCwPlkfkwfKoPFgekwfLEnmwtPea
7dzu9Xgf923dbtSe8U3xPT2pfQLX08IEluXCQf1n5Kn/ksY85bZMueQ9q35w
PScPriKLPXjB7UXtB+NXqB+877q94rbKraPnd3B73OOXVQdcb5aY41VhouZr
8s9pjqeFa7XWQN4a9VOz2Ofe1+15j9/SfKzpbXlqVrWo9YYwLdNc76ifOu+p
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
                 "]],
                 PolygonBox[CompressedData["
1:eJwtlHlMz3EYxz/PR0hCQqolRaWRFM3M8j+bv4z/8bfjT+U+yjEzzMyMZmZG
M3OGuXPN1ZyjmHO55mq5SfN6vH9/vPZ+P8/neD6f53vkz5w7ZU4MIUyGJOhH
kA71+N4WwkqohzRoJJfNWBY0BOVWwT5IhyZytege01qf04Aeg0xIJT6BHvc4
KPcDvkM1cTf0BlyHSuJcdA0cgAx4Ra4RvQA5UEDchn6G2X5+dDFshQAzkKVo
nWnMa3Sif6EWn4wuh50mv5HcMnSH6Sw+5x36NrFXRJfANpP3ml3pRVLU2hRy
o/Cl0BJ05ktwEcqCzrwa9kN/05wadLf3xtTzVNb2hLqgXDF+WFRvfc0K2GWq
5XOuotdMvfIaZ9DTid5ko7fgNuQlevoSfQHTgnr0CT5CFWEx+h4+mPwscm/Q
1wlfhLb6czD56f6OcLY+MJp4L/ET9KnXh6nEFYyNgTZ8JblynxvlW8m1oM2J
uUPQB/DQ5CeSe44+S9TyPb/BV6ghHo7+gt9Qksh1oH9gQ1CuL7XS4GjQGdvh
i2mt37k7Y8lQRryduAs+RvlSf4/wFuV9zxR8j6i7+pqR+JKou4wnHoDPgApT
zUz8QDgflKuCdX4H4iw4gj8MvYJy1fj1/k3gC+EK/rLJ/4Rz+LOmtT5nIX4z
dOAnwSH8Qfv/aEM7LMJsgc6gZ/4Y/8g013Mn8adM74p/k/P9OzDVKocF+E3e
Y/wEGMpdCmAcuZvEg/G5UX6s9xU/IqoXzeTuo/dMa/2MRYwVRo35HnfhTuJZ
+zuaw9igqL28Z01ex3QWP8M8/FrT3bxn+czNi/o3+T/oH5drjp8=
                 
                 "]]}]}, {}, {}, {}, {}}], {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{500., 0.},
         DisplayFunction->Identity,
         Epilog->InsetBox[
           FormBox[
            StyleBox["\"h)\"", {
              GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
           Offset[{5, -5}, 
            Scaled[{0, 1}]], 
           ImageScaled[{0, 
             Rational[1, 2]}]],
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{None, None}, {
            FormBox["\"Time (d)\"", TraditionalForm], None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{80, 15}, {30, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotRange->{{500, 850}, {0., 0.00025}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}},
         Ticks->{Automatic, Automatic}], {1336.5, -2214.}, 
        ImageScaled[{0.5, 0}], {931, 557}]}}, {}}, InsetBox[
     TemplateBox[{
      "\"Fish absent\"", "\"Fish present\"", "\"Fish carrying capacity\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 60}, {60, 60}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {60, 60}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.43333333333333335`] -> 
                    Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 60}, {60, 60}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {60, 60}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.43333333333333335`] -> 
                    Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 60}, {60, 60}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {60, 60}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.43333333333333335`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               
               TemplateBox[<|
                "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                "RGBColorSwatchTemplate"], ",", 
               TemplateBox[<|
                "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                "RGBColorSwatchTemplate"], ",", 
               RowBox[{"{", 
                 RowBox[{
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "60"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Row\"", ",", "1"}], "}"}]}]}], "]"}]& )], 
     Scaled[{0.5, 0}], ImageScaled[{0.5, 1}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   DisplayFunction->Identity,
   ImageSize->Full,
   PlotRangePadding->{6, 5}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{
        Inset[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
                Line[CompressedData["
1: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
H7s0Oj9nxO0yLcxG+eHBfTofiFrH/ki7TsKjAxPuuD6nZd5ejcgh4UmUQxOu
f1vryl0XctF8VHDWDlvvsuf3E3lofTotLkKfbxwoT7W4gdazBouacLzFpIV3
EvlofRdD0ut9z2azsdU3SbCnttzHbo+JT5G9RULAHz16/aG//72JSAHKd1s4
9Poja97qb9+QQ1pk1uPnz27yTu6+TQIve+Ii9lneI+OGO6h/tq5vxO7YKzpa
epeEg7W99HrSQNIiKeseCS5ysvT5j0Rk/5fAIhJeOcYY4fqe27Mu0a2YhHa2
Uhr2a/ELhjYlJIzaPhmj15cN1Z8NS0kI3VWqh+N3PUwiQfM+Ws++VvfHnmNq
vV2xjATt1IO52N5i6SNi5SRs2RBG57vOZ5/iJpB37PzXgL0tRGdb3wM0fwb+
e0A/zwNUKitIuG4fQu//JA6YTac8JMHt7Aq6/c/q2ndfeITGf2f+X3o+UnR5
aM1H66lTP1nYekLeKTqVJNy/OTCC65cxSF6cV0WCwImX27FnNkbaf0a2+yVa
iuPjXpi0ub4a5Z9lCbuxmxNyZHMek8BcNE6fl2wKKvrJqkH1WZrSQI+f41Xt
Dk9IuFowh15vCO5qLNavJcHGoJHez7mu7bq8+Cna75xwpvd7L6QHvX4iP3p6
jB6P2r9/WLQ+I4GSspyP35fQPUP7bh0J5hON++j89lhSKqoeebV7PPbxPPlR
twYS9h1/9hF7rfeGguUvSPhKGcXi+ly22x45oxHl57S79H71t8E+927k70p+
23E8jiw/tPvBS5TfTu28gl0jdlI9oQn1p+b299jqX33EfP4jYTezawWOL6+V
GtzfjPIXe/5Rev4p4z1d24LWb4+2htPzW1rKdfFWEm4NLKbbt5KdxxlEFg49
T+/3VriVOD1pI8Hyp0I+fT6277HhtXYSpMw76f3h6PqmpYxXJCz1oej2tF78
dsahDhLeiY6I0PuN6U89uq9Re7p9S6DXu/0TfJlONJ/f9qT3d9x6obQxZO5F
BTdc35Hb84JedpEwQ2RqlF5fXFE8fPMNqv+sBDpflfir64W+JaFSxMWKni8c
Nsk7d6P3JQ2vwR5Q3/9auQetZ9w0lLHvjbvFv35PgtmrO/TnZbvO+5b0ov2R
zGs2dmAl2yq2D82/7+c+wu7Njlnv+QGt/xXG6POcneFXpc36STiTqULvtws8
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
diaueI/GY0Kxp19sCLF6p9aBBb0U3FLuGQ53CCG4rMVzhPooKEzlmb3WCCH0
/oyQPR9QfzKu1lz8OJjIGYhxTR6k4J6Sq8Kzfi4huOzi0rBPKN+/6Tq15yaX
OHTE6Y3fEAXGslHXh89yifltG82tRyg4seKiu+0fDhFU3bVJahTth+Z0BYlO
s4nXkzXfppFf1NVGnnnIJtZvLsj/8o2C2H/7F6T7s4mh26Ty8+8UjPmfi5D7
xiKsU1fMCv6J+vuZ6qsizylCqTPk+NlfFPSObXerYVBE/8IR/sHfaD1advoS
pUUR3tH3/DT/ov0c9+tyzSgmofdCpm3xPwqCzl4JTNdlEkKzL2iJTKL1uLlV
u3gPSVxiEUOvpyj4b1mU6pLlJGFfec2kZpqCpa5Z7TYMBrFkUiSzQIAFNfbt
ng/yg4jBzSenE2aw4OjWHd02DYHEHd/nB1mCLHDbI/7OriuAOF+47r6HEAve
HtPWeP/qImEwemmBrTALRo47WTo98Cdmrpnw3C7CgttP3ZQyAi8QL07avdCY
yYLkhP+sMqT8iMvXK1YtmsWCiHJLnxRHX+JQnzJ3higLnh68L5pv7E0sU2H1
DiMvG4jYfO7UWWLo0EeDdjEWMA1i7s9a4EbcS9yVXDmbBe0qpWpNBRbEhfab
P2+Is2D3uZUbvQ3P8UF6nuUVCRYYXhnbKj8SzRc197rDmMOCWjlTrUV3YvlN
Ee0SbpIs4F8w/DBdH8uPr9t80nIuC/ZsZBe3N8Tyj8xMfWIwjwWF7JVl/yGv
NBRYukqKBbmH/HZWI39hHA+Sns+CipNuG24jF1fUdk4if0jbejcBOeD3qk2D
0iyY/BT+MAjZaGNkbPMCFlRfNbB3RJbwGv1aIcMCveZlbEBuuX1gT85CFkRK
z9+igJw0UpIbs4gF8Y4d/j9Q+Y6tWiwSIMuCX6GmJnXI6s6Bjs5yqHyl95OT
kL9d63lovpgFRlmL/F2RSYUc3xUKLOhxXd/6uy6Wv9NudstcRRakHFlk/hB5
bpzHuj/IGZ9+WwUiX527frBRmQWBHwREvj+L5TvviTcqU0HtTT25nYu8JvRP
euYSFmSt0xu2R64QrLLzW8aCdU/vyxQ/jeWzieUlx5azoHt4j/hh5N0BwfPN
VrBA/fGPhBnIneNmDUtUWZAjkhQCtbH8X4Odeg3qLLiTMl8rriaWX7nCILF4
NYrX+6r9y5CDj2WMp2mwIFo4bMWtx7H8hW9cCrzXos+XrpIurY7l67z8oayk
zYL3DKnMrMpY/h8t+bu/kFc/e/tkCXLl5W3bW3RYMM3N3ZLCj+XvsY9yCtmA
4nfYeXPoI1S/ftW8MV0WgKOAi1FFLD/hr732U4IFSxN3zjEpRe1/hPk4A1jw
8RZrOrkklr+8KscyYBv6e3ZQy9fiWP5d7g9fLUMWrN1hvzamKJZfLxX1INmE
BS9laoUr7sby/6lWGXmaseBalI9HRX4svzpsoM10LwtKpQ+fHb8Ryw/5PMdl
xT4WsBsvSK1Blim0D+00Z4HIxrVHEnJj+WsNfrwwskQecMhyyI7lO1iq2sgd
ZAHpZ3235mos/wkZebLaFdV3qbC3YUwsvzU52e/2STTeKj7L20fH8ntL8oJT
3Fgwo+bEvrO8WP7UyJNsX3cWiML61IzIWP4mu6n36p4s+KR2+7l4WCw/T+uM
fex5FpQcuewkw4rl398TeJL0Y4H0rfxGPSqWX+sS7udxgQWjxS4NJ5jo+ak5
cTsuov43c/2DCkYsX352T/PfIBZolWn3MgJi+ZG95ruduCzIjC/9dcI3lp8y
ecR+fzALXAOCQm76xPJvyHqcNAhB+SJI3GUczWS1e0ODZcNQf4+1WxvlFcuf
Lq96/DySBZ9LrSreeMbyJdtfNpdFsaB3w8XLG5EVvr19f53HAu0I7rdLZ2L5
uqp/pskYFnSN9R49cDqWfzZWW2/DFRYsWlXn/P0UGg8FsHtpHAtS3S0nHZGj
6vbaz41nwX6tL6Ytbqg8025+nxJYcLxF6vPDk7H8vlOZRakpqH4GKf6FLrH8
Me7dx2GpLNBtar6+CVngGr/5/FUWeFZMRT5yRuXp6Brdn84CMUGx4NYTsXwr
owVrZmahfHbPd/USJzR+Of2efchLZmt0Vh2P5XvWlhRVZrNgzNy91wk5bKed
3sUc1D+dhf/dPYbyUag6aZvLgsXfWiQPIWfV/328IY8FDXdmnBdFfrTn6u7R
GyyIun3J2NUxlt8QeYb3Ip8FP9UkMuSROxqh5cZNFnhUWO/9zyGW3z93/qKQ
Wyw49nHAMBR5zLzP/kQBC8JmzGAbIk/HFF3dfhuN98u/RQWQJVo4vcp3WHBl
nqPv6PxYvtwCm5WTyCtLXezEqqL5K63U3DrvsuBf7by3f9dH83Xift8qvccC
Y9Iy8o9kNB9e1X+7XIjy816PuIppHt9MNmXDuSIWbL/8MmnpCI9vb+dxYV8x
yu9upe9Eu3h8lySDhxolLEj8fEucXc/je3fNnTG7lAWHFYK9Fct5fN7heyE1
91nwbLlmqmkij59ylfU8owyNp8p0j9YQHv/GO8t5jHI0P/grSVv68fg1jj/j
N1ewYDBOnaltw+P/OqGXU8BH+bvD+/KhBTy+SM6c4fBKVJ8bKs/YQjz+/MHu
tSerWDCxwbgvdSyKr+HGLFn2GPWni3bWaU1RfIfTtU8SalmQHv+4+3F4FL/O
1/wD9YIFdtaZLz0nI/ntpUvUHBrR+CBdFRYOR/I//Bo7pf+SBZLSX81iOyL5
U/5Xvv9sQu0tntgjURjJ12Z0Cnq0sqDV9OPX+BORfKIy38S0DY23VvGYa/sj
+XtmBIaptrOg0r/Wy1k/ku/MUp7f+4oFSa8yfgguiOQnBTstseliwUY5V4+q
igj+V1Kxz+QNC2bLC6u8yYzgG/m3Z218y4LlKsND+8Mi+F/cd6otfMeCvm2G
x4StIviGzjOGRHpYELI4u27B5gh+wtHy/HHkNc/1rq1UiOBvt9BY19bLAtP1
Xip13eH8+N39ozV9LPjzSHOB6KNw/ojR1XtFH9D4czE8cC05nL/NwMY7q58F
d1vlBmzPh/PjNs3bePkjCzih5i7d5uH8Yc26n6wB9D5Xr4g21XA+qFNlXoMs
0N8jUPT8bxg/btnWi8c/seDQEpNrOs/D+MMKP/QODKH+//O53/6EMD4svDW1
fRj1r0+TAQZH0efnOldqj6D+8fjhwTpl9HlRZWrpZxZovmsfte8I5YNgh+H8
LyyY9S/IoZEbyr/yN1pE8Cuaj2xh+Rq1UP7Qj11PvyHPdH64gbgfwie+CIa+
H2WBbHBpyIBmCP/ywAPT/76h/rHWaL1gaDD/U4+3RNUYC5wCQ1ZE3OPyDTrX
NN75zoIVzaeGM+M5/NiWj7z0HyyQcwoI3reQzR98nrY/ehzNxw5es3QmmXz9
WltpcoIF2S+b9D9rBPEv8aXazvxkgZTQ7WK3J778gfv1cUd/scDqpomT9zcP
vt49lu2+3yx4Jx1hddbKkR+Tr7eY+IPyoXnSM9U/+/kfs8a71v5F+bQEzaZ1
evytVwtSlf6xoEjRY6f9J2EiOt7lqOQk6m9WQ/3an/SI/miVJVPIr5MW3uf4
mBJbwl73fp5C+UQk93LqiAXxIWC38wsBNtxlLO5pKD1MbPYVVns4gw1aDz9r
nj/jSESdefjppiAbXBs+os3scUL32DqPCGE2SJ+oy1n10JWI2CHtvVuUDenH
Q7oqGjyJ9/B8w1YxNrwwFTmQ13qW2LiF81N9NhvG05b03W4/R/Ro/PSfLcGG
E835kS213sT6+V3MurlsaPljxDh4yI8IFb9sWDaPDdUijN2LdS4Q3cJmInlS
bGARYpdMhf2JkJ+PQkKk2fDKrjiVF3eRePvmGm/HIjYc2HWE4R4URFx91fZd
W5YNSRI2R4+sYhAOzaK2SnJsUL1d2TTxkkF8eHpaZXwxG24OKe3aEUISQ/e2
3L2mxAb9SOKw5l0mcfOWh0yUMhviPpx0rptgEh656RcuqLDB8zlP5doWihhN
nbndfCkbrn1OXrntIUVMhDQ3T65gg3xN6WzqNou4zxLZ9GklGwbyZM2PDLKI
C0G6ya2qbBAzYgq3KbOJf15Xj+evQuU7bVh4P4xNCB11+2G7hg0vj4ULOu/n
EDV2qbZGa9nQeirmowrJIbiWTRXr1rGhsuDEEf4tDjHbdCNnphYb5L77qNSJ
cIl5GwQXFq1ng+O9xmV9eVyied0G/7QNbPAXN9O+0sQlYtVdu8M2smHRu4Mb
TkxwiYUqjdcdddmwesX2qxeJYEJBPGnTXD02GD72ur7iWTDRLfIi+Q9yhInZ
X5/BYCJNQEDgoz4bmpKWL50vGkIsnTjxrIJAf/d1FDI2DiFWvdeyczNkw5MD
j02k74cQQ11OD62M2DDv26X83S0hxM32+CXbjNkQMKvo2vfPIYTm88lPi3aw
wTKhMjVrSSixsbTO/4kpG46MX4ARKpTYHumYomLBhonLF1y614URggU2G/4h
f/xZt//Q9jDicaNZ46sDbAgq0fcJtgwjjOZtEeBZofKZrXj85XwYYRw732nS
FrWXCc9f60EY2i+LTnbYsaH9kP6jvQ1hRG3r1JUiezZ8tbtzRLUrjDBZOPz0
1CE25IkPxEr9CSN2Jj5e3XmUDcNu11O/rg8nRMvLaood2GB85YSulGE4Udd5
+3CMIxt2EsuX/zYPJ0wVUng7j7OhRiYqdol7OLEnzft7iTMbfhVWDvxICyf2
Za94EOuB4h3l0RI5FU7Mq5W3PHOaDQ+6RU2TxCKIpo9Sn03PsEGY1fg8cEEE
Ya42pSR4lg32a70GG1ZFEBb57ZSnNxuu7/l9PdEigrC+G2xqdpENM554rElO
jSAWNgf2qQWwoVzXLufk9Qji1ZhXgHAgev5Hg0i52xGE7XqHggdBbLhipO+i
UhlB2JXqzlen2DDrsWTUq54I4tDDT69nhrIhVmnBgI1iJOEU93T0B/LU5ozp
+SsiCY8z2bP6wlB7HbzPvqcRSQQtcdzAj2CDh7Y3I3NrJJHG6Yg+H82Gq9V+
PZa2kUSv2dMdg/Ho747J72wjI4mhldlH2hPQ+O4VaIuPjSS+T1M+NYlssBEj
jKoTIwnhewaZ6clsMCrK7+rKjiRWLCyZsk1jg+LirkzVh5GEa3dWcd11NiQL
dWS5DEYSnqXU89IcNvSL2PazP0cSF6Id+rJz2RDo1rPj0lgkEbZdQYq6wQYB
o5uZQf8iifzrse5bCtgw5+vrc1lzo4gvp6ll+cVsaCs37bbUiSImdjhsSSxh
g2TUua3Rm6KIaRWD/cGlbBht/bCYvzWKmNfyO+h4GRvqVqgW/jKMIrQ2ne2U
f8iGo+Mt57oPRBHe00djImrYIPjdNTHhbBRxcUrgrdsT1J/IVef7vaMIajJD
bVctG+5bOZWu8osiYv728UWeseFCEyM+ISiKKPjp8iWogQ2FE/Zu0uFRxMDX
M7vPNrMhLOJ68qVrqLxf5sXva2HDxbE4HcdsVN7Pd3vXtLLBC97lqOVGEcIj
3y8MtbFh+lzMs2u3ogiVwfO5x1+zIVq62sb4fhRh38MQse5hw+d/eTusnkcR
ju9U9q9/j9rD1L3sQWMUim9VyvxelH8OiRko/BdFnH8jtP5lH8rv4PS1oS2K
uNwRfGznABvmLvtjO9AdRTQ28fhbvqD5QGz8tMJoFLGtKu2C8j80PvbLP38v
ySOKqspdfiO7Xfak0ubxCLXqNquWSfT3kRN6dvN5xLzH4trB02zospm8USnD
I97VnB/6IsiBT1vWr3ZU4BGBz/YdfCTGgbh/1pu+qaEp55nbroTZHHh/YK2Q
lzqPcKrjbDonzoHqGurdt9U8Yk/9A+mVczhwdZtI7Ye1PEL+uerzyHkcODNr
0fes9Tyi7OW03uFFHGhxUVsaSvAIjabFqzfJckCcmnTrAB6R3rRBTkqOA8dm
GzOXb+cRIf+dGq9ZzIFFy1cJFRnxCJuWV7c0lDhg/7pZ+O4uHjHeflvp33IO
SL8/LK12gEdodR8VSNbmgPDuqIn1TjxiJO6Ye7AOB16+u+C/4wSPyN13osNr
PQdGsoKO2zjzCJUqtzt7NnKg/kDJujOuPEIyy8dhajMHhh6NmDHd0fdPhlc6
buNAxdzcHi1v9P2lURp7t3PARnFRoKIPqn9XdMIWQw7cSPshO8uXR3TtifOU
NuZA07uVO1rO84j6dRkqT3ZyYFTbd3T/RfT98RJSzZwDDyK73w4z0fcLykYW
7OdA4om6umIKlcelwnaGBQdsDcLzAlk8Ir6jSrPzAAeCtd/YinF4BPfB855w
Gw7s2rVqkWgI+j6zF74e4YDmsiyN25E8QnmO5IwSDw48XbAVLRZ5ROdwS8al
0xzgmJtd3pXAIy7XJ24/c4YDtRauls3Is0NWsNXOckBsOGTiXSKP+CGoPyvZ
mwO+c3xtRpJ5xLNfp+aQFzlgkuDn1pDGI6hXWgWHAjjQXaKyYHs6j9Av+bl3
cyAHlOf3J5ci3/NiRY8FccC4zW5LWgaPSPmSJH2C4oDTjgIPx0we4fmhTs40
lAO627Yn37vOI9Qf88pXhnHgd94NVdkcHtGfYXVQKJwDRVr6ZQE5+D7tfUpF
BAdmHRMf2J7LI4w6fymvi+ZAcuySPY/zeIRsk+rKBfEcYJ+9NSv+Jo9oLvhc
O4qcUyLu8Bk5MrLQ5UUCB4qFH9Ztv8UjBHcTedwkDvyb3DY0hDzyxFrjdyoH
7nmXqWvd5hFVDzja3Vkc8A7y0Lxyl0fUWOjsf5HNAXXNWas/INd+6jlTcZ0D
OxIebNG+xyMaFundSsrlwNxQtUsNyG1eY6o2Nzng1dUk9b2QR3xafVSxqRDF
i1zEly1B76uW0OMXccBqvU6cHfIXu3L7gmJUft78vETk78EyCRGlHFhfPH5h
USmPmOxrmL/rAQcmZIyjxe7zCKkUXdHqag7cXbcu8VkZj1ig83Hl3cccKGjd
pjqJvLA+1ji9hgN9uj5jmuVo/P36QgXVcmB1edfOOOQVltmTW+o5cIif1G/7
AOWDYQsF9QYO5O9a+joYWZ0S2Cr3nAN/z6xaXIK87s5Bv58vOGCgeyxgXgWP
2Cwx/3vhfxwwl7Xb/RBZL5MvldnMgeflr759RDbY4qF5qQX1973M8bkPeYSh
6zMPzzYOvs8Vd0A2qwka1HjNgVOmpMAvZMeA4bfZPRxo8/IQncPnEU0LpNOi
36P4mpvHaiDDrS0OF3tR/c5eityNrNQd2mv+gQPWAi+fBiN3EmoDfwc48Lrx
kNxv5F0d+3I/DqL6XDPrl67kEfc9z5/87xMHZq65snQtclxG7fD1YQ7oVMs4
OyJbCJ0Y3f+VA9l17q+rkauSI+7qjaL2v/lDrhNZc33ROdVvHLDT0P4wiix5
Qmj83xgHzsk2SShWofFdm/E7Z4IDpztyPc8gbz5aV37pJxpPCxorKeTcn6MX
A39xYE7o8tAryFw1mLL4wwHTZb8vlCFvD+sWnJrkgAz7yuRf5LtLZ9YMTnFg
92DXQ/FqlA8erOG0TKP2pnxU5JGnhgNm5c3gwqiGzGNdZA921rNYQS5UxTlM
mSC/UXgeGiTEhch3oc2WyOVm8hKWIlzgNK/XO4O86uP2FwYzuTAcv+TFReSE
ILeoVbO4UOlS/TkY2fd22bxpUS6IX1zVdhVZR8pW5oYEF861vJyqRb6Wx2i/
PIcLN528Pr9Enr89J54hyQWh8plxHcij5ybkrOZx4ZVkvtgn5KPiSl2EFBft
Rx++HEVuzDROUZ/PhcXW9sa/kG+2XlYSWIDKk3dyw8zHqL96VLwbQj4tL5Iv
gRwm8iG9TYYLZy9erJ2P/DtV/FjlQi6snufBkUV23aizLH8RF150B/UrIr9q
tP9wRZYL49n2H5Yim7hQ2aQcF9Z1FDBUkYun85xPLebCkbi1xauRlyf8p2ot
zwWTGzHUOuRL1hWKWgpc2NCWUaCNLCCTIy2hyIUVUpYBG5BPt8SIDSDnr3n9
aRPym5iA6SolLoRO9/7cjGxq7jKeosyFi139dVuR70taDJ9XQfG5aHVSH3nl
C733Fku4MLdNrtUAOTZc9dWapVyQzlISBfw+0/kvRJdxocfxgNA2/D7Ryeo+
5BzD/MfYb2oH7j9azoWhDYo7tuP3cZoLEldw4VRHZjj2fcOHWd4rubDJX5+H
vVIwN2mfKhcSZUb2YV+uvBStrsYFpT3FDfh5goxArsgqLqQfuyaA7anvGtCD
vEO/coRA7v5rce6BOhfiDypH4fLuKdd3jVvNBbK1pVcPudxP7chZDdQ/LMYH
tyCrbZK23LOGCy5z067qIseNT+5SXYvq/9/XGRuRhYsGCcF1XCj6ICalg3z2
XMuGt8hP5aXrcfy7NR+tvq/JhevZV7U08Pu+5i6J1eJCdMkSdzX8fPegObt0
UPknmcdVkHtOrOov2siFJ/svqEgi712+oIu3iQv6y9iSYsgVvVNNbrpciImq
qRFCTjjaWqGyhQtZ8xqYuP/NVOLf+4t84VkEewzZ+01ebvtWLuy1vLhjBHmf
HeNyhD4X5plOibxDrljkFuZigP5+Jn/yFbJ6uyW5neDCnlclt5rw8w6ou/8C
LlTYbFtXhfxoT5uhkxEXXorHb0xD1hCv3EwYo/KJPbaPQ06qu7FusQkXCoTi
7SLx+DMh5Zt2cOEK73a3P/IaWP19624uNFRXNxxATtFhXpO2QO87n+OM84XF
jQMLZxzggsGOhTpfkEWXrAz7guxtYXyrB9lbsuFsnRUXJnPVFZ4g7/60YBvD
DvXvg3fdIpD/XM19N+TABX/QcZmPfEfm4oEORy5Y3/6zTBDZOcLs6ZNjqL8v
zLr6DeW//y6MFaQ7ofiHsh+/RM611AuyduXCstNGnqHINrObFKrPoPIJtA1N
oHwswbwWfduTC1rdM9/1IVf/9BZOPcuFztrC9Cbktf1yI+e9UPxJISoPeWbl
8QdrzqP6R+t62yIX+fy0SwziwraVrPO3H6F8814p3jOSC87fSz9uQ/PH08Ai
Ym8Uyjeaf6NXIwcsNh1czePC144Dq2SQ+w/4bB6I5sKMFUvlB9H8dL+2oevw
ZfS+KIWaCOTDN/1UdidzQf6Q47aXaL7LPd+ctyIP1efhVXtDNF/qS3IrOmu4
cNhvw9JPaH4Oi/Mg1/zlgpz98cw8tF5o0zR8pLwxGGql5qoTaL3SZtqroewR
DCJyn2wN0HqpxfeMzKPcYMjJOLriThzK/0tr17r1BMOvL7GNf6N4xMFVqR+n
FoYAuy86sz4YxWP7MVkdixBYVlJ+xofkESWdo/7eoSFQ+vSxlow/mm85HjZW
T0JgMmh+zV0vVL8wt2YlgVBYdSZactQDzSfztILGN4aCsc5TYeGTPCI1pz/z
1LlQ0PVdKbocrYdvPTr+50teKPTEdxVPH0XjR/PYV/ueUAh71s7ffQitL4r3
HnGWD4OYsRVW1215xM/7wlNBFmEQoD3QHmPFI3bmT87wORAGikean7KRk1In
RE5ZhkHzEUb5eWQ9anCOjXUYqMscTDiMTO1+rrjOPgxMf/56twpZojtW/51j
GLzasnL5Y0v8//MsCyTOhsGt9yoVv9H63WtcnrnhXBjsvmfj/hm5ZmABZ7VX
GGzTfKH8Htnl+czIRT5hYPwpk/UM+eaVoZSvfmEg49q6Kx55k9q9ijQyDBpb
aiU2Iocszq+8wgyDrsBfk6uQOyWyasKpMCAFVo8qIgd8u/L8PDsMjgi31Isg
V5dfeLMvJAxsUz6KtlvwCOlb53qMQ8Og9MyM1fXITmmnPmwNC4OvPd5mj5Bn
sQ+PqEaEgV/KDe51ZFtf61HFyDDQ2qp+Own5huu+H/+bcF+Xwwfuljd9QP7v
KI8fnP1dDoeiW82agXwfX8c//4F8lj3POsuBfAC/6kD2
                 "]]}, 
               "Charting`Private`Tag$130148#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                Line[CompressedData["
1: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
wBb3agEOlGWV+FLI/yMspX23iHDAaVv//irg0Z9aUqMtF3DAwbfy89VzPPr6
u8aferIckFcLH/uL4t2lTsRRSY4DwvaNz/aifPC17LjK6EIO+G+YXS7B5dE9
99flpSpx4NOKI+O2MTx6LKSubnIpB6Qs9778fptHP2YLr+lW48CHDHlFwbs8
+nyg4dUGdQ50GNXDvPs8+u/p6wdvL+PAslfZbuqPefQ05yMjjis4cP6k+vqp
lzxawkBI5qE+By6HHpd1bubRdSsNLiQbcOC2ww/D2Z94dKymZ2vYag50nxBa
de8zj5ZReXPT1ZADK55ty/v6lUcrzL6yRtyIA6/+hbz5NcCjl33R3XNkI9qv
51/ytSCf7vl46Nkucw5sNgyqnzGdT99pil9kasGBirz/nNbP4NM6VZPdCyw5
kLbz4VaeKJ9eXVBx4T9rDgzrmF3tkeLTZpGuSSr2HPCNN7P2VuXTQrm7Df4i
DnySE7ZoCZ9++Wbbm3c7OHBg5Ti/dimfNpdYJxC9C9l/3jU11WV82iJW6tCk
Iwf4NbdfB63k05sTXy5vduYgfaS2xWM9nxZ5Ulj6yIUD3yNctr8x4tMVzXf3
8105sKX3YJ/OBj5trZAUvfkgB4xnluZ2AZ/emuz7M9+dAyVvhL4t3sSnbTOW
Po09xoGV1YOPa235tMQr+Z0njnNgV3ptwOh2Pl3zTbLf+gQH1mR6bJ5vz6e3
a0wpCZ3kwB1RcLXayaftbzdRPr7o+wNFiRxHPu2QF2y9zR/9/mnxLBsXPi1T
d7FDI4ADTToB+wxd+fS74dMB0y9y4GZZdamSG5921HfJfRrIgd6T2elfDvLp
PQWGUpoUBzSUFG6DB5/e96z7w4xQDhwt/djjdYxPH7pcNjiC+Mt157m6x/n0
sRMZMzvCkD9M2/dsBHHgIlcDOoIDM7cECJ/y4dPJ3Pe8czwO1KYb7bY4zaez
DuRnHuZzIM5w+qphxPfWxD3fEcMB8m3Ak6u+fLq427ZvZRwHRASHUzvP8On2
bWWWXfEc2Dbo0LDTD/mDWsaBpgQOCF7uUelG/PMfdaY0kQOO+xWOXTjPp6ff
35CWcpUD325fZcdd4NNLZfKnHJPR/nNXRt0M4NPaP2LnW6Zw4N9JRcUlF5G/
lJ/UMrjBgTciLe3XEW+6sMJJMo0D828lHY0I5NOeremPKm5yYGJVWoAlwad9
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
vtSlzLqB/T+Wor6v
                 "]]}, 
               "Charting`Private`Tag$130148#2"]}}, {}}, {
            GraphicsComplex[CompressedData["
1:eJxdl3tM1WUYxw8IBiJ5gINIhnLTEd4YRfOCnLPIC2mOeQ/lFErQYg61SYIt
SpRSJAGZIaGTsImKJKaIweRkisCY0pg5b1wMBK2GIUPxWp3n9/2+8/AP++z7
8H7f3/s+z/s8+K1KXvihvU6nW2Gn0/3/e7+5qCfMkGEqHzh64/nzAMuCiuSp
+QcVQ/f0PfSea5cfdTD0h3lzj4blj6UOhl7XFXEw2jyaOhh6/tSw4qQgL+pg
6KuyJnyX2edOHQz9g5rI4MhUV+pg6E/iQsakujpSB0MPGTE90Bw5WAsdDL35
xPhR+VfaqYOhW4SN0MHQg2Q96mCen+zHxPPTGPpK+R7qYH6/nAd1MPQ8OU/q
YOjn5D6og6EPyH1SB0M3SD5QB9vkl8kmv0xRJ49bMhs3a/fpbwHXW8/Pl/y+
9Xt9yJOs5+dNfmw9L09yg/Xv9eTJ1nhncqNV15GbrHyvFqyz/jTXgM+JbgTX
yd9z/8GyPvmC+JMHZX/kCbJ/cqx8n8nm+8lxcj5k2/NDvYJRn2DUI/ev1R8Y
9fbifbiTUU9g1A8Y9QJGfYBRD2DkP/en5TsY+U1/LZ/ByF/ej5avYOQnGPn4
4KVMfVdsBvPtxffE3wId+QcdDB35CB0MHfkJHQwd+QodDB35Cx0MHfkMHQwd
+Q0dDB35Dh0MHfkPHQwd9cD3QmPoqA++9xpDR71AB0NH/UAHQ0c9QQdDR31B
B0NHvUEH29y/yeb+qaMeoYOTu4vcntSqevTxO1DhdEz102EJO8t0ls2my9W7
w4d4K+6NsQw6N/mTZ3TlntY/8yUv2VKd4lWheLbPK2vC63zIG1es6Y6aqNiw
Vp+4LMdbxZev7ogfGEW+dXZo3PoYTxVvF3M93WIgH/N8GpMd6KbiF0VfLtyu
Jz9uvn0o+qYzOe7d7H1Jh5zI36a07M1cZ0d+2peaVzxTR46f+kVAqktfLThh
VaG3eU4v+eK0gpPRET+RFwgbwUslnrxS1iMPip8JvEv2Q46V/ZIfyPeQ2+V7
yeVyHmR3OS8VL+dJflvOW8XLfZBT5L5UvNynyea+yVo+kLV8IbdIPqn9av0B
jH4ARj8Aox+A0Q/A6Adg9AMw+gEY/QCMfgBGPwCjH3B/Wj/g/Wr9gP5aPwCj
H4DRD8DoB8x3rR+gXvH+87zr3pqRcVXV51fRhsfbXPwtiEc/gF7SO7Mq54w6
39b7Y+5N7hjL+sf6m7+vGOnwH587FXs3sCOAPL9xU3acm+Jn5sF5PUNU/Mb5
10uPtPhzPfhDn9ixPDG0zo98/H7KsOQBpTfq7+T++dtYcuuG38edrvLl96B/
MV9D138cPkflR9lsz7tRR0bTH/FYb7xnaX36UrV+6PTOlwcrlV6wui1raNFo
8o6IklnZM3zoj/7IetryUfwyN5WPaXtcOuM3eNEf8VivP3Hf2UJftb4u+5qT
4UulJ1Re3uqX4EWOyd1jLHX0pj/6L+vnitm8/vpI8ty/7FrTjR70RzzWO/tz
fs3JuyPJF9ua7afMU/obzk3p4SEe5KDOndN+vWSgP/o7/D4LXrI8+wdVb5M+
v/djmMfL9Ec81stxzapsPuFOLgq98CTK043sWLXlfnm/K3ngzczXW/fo6Y/5
ge/lo90HotuGkxsCbpYkHXSkP+KxXrXFPu7K0+HklmGb/m44o/Ti2HXdnV87
krd5DMb0XXCiP+YT+E3Zn1GQ+YkDuT5v15TITx/Vwh/xWG9ZQu9i1zwHcvKx
xI7nC+1U/QytqQyb/qgWPO5014KglTr6Y/6BX0FW+6jUEQ/J9jVXJ5uNf9Af
8Vivx6sqN3P+Q7KhrPRw0sV/yPElwTMjz98iO2yKckn9pbcW/piv4Be+ots+
v+0G/V8VNsIf8Vgvbces2w0tN7n+8TsR0X3Xyskxohup91h1I/wxv8Gvr9r6
veQcOQ/6Ix7rLZbvI/enWb+P3C7nQx4u50N/zIfsD3Lf9J8g+WCCP+Kx3lq5
X67vJ/dLfZHkBzlJ8oPvP+ZP+J2XfCfvlHqgP+Kx3l7Jb/JWyW/yKakP8iWp
D/pjvoXfa1Lv5DR5D+iPeKxnJ/VN7pf6Jn8j7wO5UN4H+mN+5rwo7x25TN5D
+iOe7728b+Tx8r6RLfI+kpvkfaQ/5nPOs/Lek1ulH9Af8awved/Jy+V9J/dJ
fyA/22HtD/TH/A+/w9LvyHrph/RHPNbbLf2NvF36GzlQ+iM5RPqjyWaeoN8N
mR/IxTJfmGz6P9erl/5O1vo7OVjmA7I2H9Af/7/YzDtq/pR5iP6It5lXyNq8
QtbmHfI7Mu+QMa+CMa+CMa+CMa+CMa+CMa+CMa+CMa/yPrR5FYx5lfmrzavs
39q8yv1p8yoY8yr9tXkVjHmV56PNq+zP2rzKfqLNq/8CkEyeCw==
             "], {{{
                EdgeForm[], 
                Directive[
                 AbsoluteThickness[1.6], 
                 GrayLevel[0.09], 
                 Opacity[0.06]], 
                GraphicsGroup[{
                  Polygon[CompressedData["
1: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
                   "]], 
                  Polygon[CompressedData["
1:eJwt1Pdvz0Ecx/E7oxqjGqOaWqVKqbYoLUpbRbVmEBEREUREhEZEYu89Wnv7
JwgxYoQYIUaIEWKEGCFGiBFiPF95v3945F73zefzubv33X3bTa0aM6dWCGE4
6uAe7mMC6mMF7mAAcvAQD9DQn7mBmxiPRDzHMyRhIj7gIyYjGedxDgkYi8/4
hCb+zCVcxjh/ZhmuoRRd8RM/0AxT8A3fPesb6/AOg9ANt3HL16I5rsELDEQe
VuERypCLJ3jqc9caz+Csz1X1WYILKEE23uKNr20SXuG1Z9XgKq54bbSmDfiC
weiOEziJ0dA+FMUQDtL2xSjsQBq/DaUt0Djkxkgjz0C11ka/grYnUskt0Io8
E83JKdGy3mlETor2bqrqSi5BR/I8HNDY9Ef6HLaprvQraXthi+ZJfwhtPvqT
i6O92wF1yQmYTk5BIP/zPA2ZGguzyW2QTm4bLc/SnpHz0J5chSxyJ6QHe6c3
uTDaWHM1J3JBtKx3Wutb0b6lGuxDD/ojaPsgh5wb7dv6ZiK5XrRaaM4VWhuy
yPO1T+TyaFk1OqSzEm1virAAR1QHdMZRLPRcjItY6melFMexGF38DG3CL5Rr
nmjJt3f6Xg/TOaV/2Mfqhwz6u2kLg93ZbPp7VZdga2xKf7vvlc5Mbfpbfa90
RhrQr/Gzoj39io1+FjWH0zgV7KzrTO7RXKONpTH+4K/vpe7gIhzztWpN+Ty7
32utM/QSa4PdNd3Ju1gZ7L9Ed+43NvvadabeY32wu6s7ch3Lg919/Qc9xupg
d1V3eJf2PVqtVJP/qo10KQ==
                   "]]}]}, {}, {}, {}, {}}}], {}}}, {
          DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
           AxesOrigin -> {500., 0.}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, 
           ImagePadding -> {{80, 15}, {30, 10}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {500., 0.}, 
           DisplayFunction :> Identity, Epilog -> Text[
             Style["a)", {
               GrayLevel[0], 16}], 
             Offset[{5, -5}, 
              Scaled[{0, 1}]], {-1, 0}], 
           Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{
             "Host specific growth rate \n (C-mol H C-mol \
\!\(\*SuperscriptBox[\(H\), \(-1\)]\) \!\(\*SuperscriptBox[\(d\), \(-1\)]\))",
               None}, {None, None}}, FrameStyle -> Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {30, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 14], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotLabel -> 
           "Fish carrying cap. \!\(\*StyleBox[\"\[Proportional]\", \
\"OperatorCharacter\"]\)\!\(\*StyleBox[\" \", \"OperatorCharacter\"]\)(1-\
\[Alpha])H", PlotRange -> {{500, 850}, {-0.021, 0.032}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {Automatic, Automatic}}, 
           Ticks -> {Automatic, Automatic}}], {
          Rational[931, 2], -576}, 
         ImageScaled[{0.5, 0}], {931, 576}], 
        Inset[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
                Line[CompressedData["
1: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
H7s0Oj9nxO0yLcxG+eHBfTofiFrH/ki7TsKjAxPuuD6nZd5ejcgh4UmUQxOu
f1vryl0XctF8VHDWDlvvsuf3E3lofTotLkKfbxwoT7W4gdazBouacLzFpIV3
EvlofRdD0ut9z2azsdU3SbCnttzHbo+JT5G9RULAHz16/aG//72JSAHKd1s4
9Poja97qb9+QQ1pk1uPnz27yTu6+TQIve+Ii9lneI+OGO6h/tq5vxO7YKzpa
epeEg7W99HrSQNIiKeseCS5ysvT5j0Rk/5fAIhJeOcYY4fqe27Mu0a2YhHa2
Uhr2a/ELhjYlJIzaPhmj15cN1Z8NS0kI3VWqh+N3PUwiQfM+Ws++VvfHnmNq
vV2xjATt1IO52N5i6SNi5SRs2RBG57vOZ5/iJpB37PzXgL0tRGdb3wM0fwb+
e0A/zwNUKitIuG4fQu//JA6YTac8JMHt7Aq6/c/q2ndfeITGf2f+X3o+UnR5
aM1H66lTP1nYekLeKTqVJNy/OTCC65cxSF6cV0WCwImX27FnNkbaf0a2+yVa
iuPjXpi0ub4a5Z9lCbuxmxNyZHMek8BcNE6fl2wKKvrJqkH1WZrSQI+f41Xt
Dk9IuFowh15vCO5qLNavJcHGoJHez7mu7bq8+Cna75xwpvd7L6QHvX4iP3p6
jB6P2r9/WLQ+I4GSspyP35fQPUP7bh0J5hON++j89lhSKqoeebV7PPbxPPlR
twYS9h1/9hF7rfeGguUvSPhKGcXi+ly22x45oxHl57S79H71t8E+927k70p+
23E8jiw/tPvBS5TfTu28gl0jdlI9oQn1p+b299jqX33EfP4jYTezawWOL6+V
GtzfjPIXe/5Rev4p4z1d24LWb4+2htPzW1rKdfFWEm4NLKbbt5KdxxlEFg49
T+/3VriVOD1pI8Hyp0I+fT6277HhtXYSpMw76f3h6PqmpYxXJCz1oej2tF78
dsahDhLeiY6I0PuN6U89uq9Re7p9S6DXu/0TfJlONJ/f9qT3d9x6obQxZO5F
BTdc35Hb84JedpEwQ2RqlF5fXFE8fPMNqv+sBDpflfir64W+JaFSxMWKni8c
Nsk7d6P3JQ2vwR5Q3/9auQetZ9w0lLHvjbvFv35PgtmrO/TnZbvO+5b0ov2R
zGs2dmAl2yq2D82/7+c+wu7Njlnv+QGt/xXG6POcneFXpc36STiTqULvtws8
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
diaueI/GY0Kxp19sCLF6p9aBBb0U3FLuGQ53CCG4rMVzhPooKEzlmb3WCCH0
/oyQPR9QfzKu1lz8OJjIGYhxTR6k4J6Sq8Kzfi4huOzi0rBPKN+/6Tq15yaX
OHTE6Y3fEAXGslHXh89yifltG82tRyg4seKiu+0fDhFU3bVJahTth+Z0BYlO
s4nXkzXfppFf1NVGnnnIJtZvLsj/8o2C2H/7F6T7s4mh26Ty8+8UjPmfi5D7
xiKsU1fMCv6J+vuZ6qsizylCqTPk+NlfFPSObXerYVBE/8IR/sHfaD1advoS
pUUR3tH3/DT/ov0c9+tyzSgmofdCpm3xPwqCzl4JTNdlEkKzL2iJTKL1uLlV
u3gPSVxiEUOvpyj4b1mU6pLlJGFfec2kZpqCpa5Z7TYMBrFkUiSzQIAFNfbt
ng/yg4jBzSenE2aw4OjWHd02DYHEHd/nB1mCLHDbI/7OriuAOF+47r6HEAve
HtPWeP/qImEwemmBrTALRo47WTo98Cdmrpnw3C7CgttP3ZQyAi8QL07avdCY
yYLkhP+sMqT8iMvXK1YtmsWCiHJLnxRHX+JQnzJ3higLnh68L5pv7E0sU2H1
DiMvG4jYfO7UWWLo0EeDdjEWMA1i7s9a4EbcS9yVXDmbBe0qpWpNBRbEhfab
P2+Is2D3uZUbvQ3P8UF6nuUVCRYYXhnbKj8SzRc197rDmMOCWjlTrUV3YvlN
Ee0SbpIs4F8w/DBdH8uPr9t80nIuC/ZsZBe3N8Tyj8xMfWIwjwWF7JVl/yGv
NBRYukqKBbmH/HZWI39hHA+Sns+CipNuG24jF1fUdk4if0jbejcBOeD3qk2D
0iyY/BT+MAjZaGNkbPMCFlRfNbB3RJbwGv1aIcMCveZlbEBuuX1gT85CFkRK
z9+igJw0UpIbs4gF8Y4d/j9Q+Y6tWiwSIMuCX6GmJnXI6s6Bjs5yqHyl95OT
kL9d63lovpgFRlmL/F2RSYUc3xUKLOhxXd/6uy6Wv9NudstcRRakHFlk/hB5
bpzHuj/IGZ9+WwUiX527frBRmQWBHwREvj+L5TvviTcqU0HtTT25nYu8JvRP
euYSFmSt0xu2R64QrLLzW8aCdU/vyxQ/jeWzieUlx5azoHt4j/hh5N0BwfPN
VrBA/fGPhBnIneNmDUtUWZAjkhQCtbH8X4Odeg3qLLiTMl8rriaWX7nCILF4
NYrX+6r9y5CDj2WMp2mwIFo4bMWtx7H8hW9cCrzXos+XrpIurY7l67z8oayk
zYL3DKnMrMpY/h8t+bu/kFc/e/tkCXLl5W3bW3RYMM3N3ZLCj+XvsY9yCtmA
4nfYeXPoI1S/ftW8MV0WgKOAi1FFLD/hr732U4IFSxN3zjEpRe1/hPk4A1jw
8RZrOrkklr+8KscyYBv6e3ZQy9fiWP5d7g9fLUMWrN1hvzamKJZfLxX1INmE
BS9laoUr7sby/6lWGXmaseBalI9HRX4svzpsoM10LwtKpQ+fHb8Ryw/5PMdl
xT4WsBsvSK1Blim0D+00Z4HIxrVHEnJj+WsNfrwwskQecMhyyI7lO1iq2sgd
ZAHpZ3235mos/wkZebLaFdV3qbC3YUwsvzU52e/2STTeKj7L20fH8ntL8oJT
3Fgwo+bEvrO8WP7UyJNsX3cWiML61IzIWP4mu6n36p4s+KR2+7l4WCw/T+uM
fex5FpQcuewkw4rl398TeJL0Y4H0rfxGPSqWX+sS7udxgQWjxS4NJ5jo+ak5
cTsuov43c/2DCkYsX352T/PfIBZolWn3MgJi+ZG95ruduCzIjC/9dcI3lp8y
ecR+fzALXAOCQm76xPJvyHqcNAhB+SJI3GUczWS1e0ODZcNQf4+1WxvlFcuf
Lq96/DySBZ9LrSreeMbyJdtfNpdFsaB3w8XLG5EVvr19f53HAu0I7rdLZ2L5
uqp/pskYFnSN9R49cDqWfzZWW2/DFRYsWlXn/P0UGg8FsHtpHAtS3S0nHZGj
6vbaz41nwX6tL6Ytbqg8025+nxJYcLxF6vPDk7H8vlOZRakpqH4GKf6FLrH8
Me7dx2GpLNBtar6+CVngGr/5/FUWeFZMRT5yRuXp6Brdn84CMUGx4NYTsXwr
owVrZmahfHbPd/USJzR+Of2efchLZmt0Vh2P5XvWlhRVZrNgzNy91wk5bKed
3sUc1D+dhf/dPYbyUag6aZvLgsXfWiQPIWfV/328IY8FDXdmnBdFfrTn6u7R
GyyIun3J2NUxlt8QeYb3Ip8FP9UkMuSROxqh5cZNFnhUWO/9zyGW3z93/qKQ
Wyw49nHAMBR5zLzP/kQBC8JmzGAbIk/HFF3dfhuN98u/RQWQJVo4vcp3WHBl
nqPv6PxYvtwCm5WTyCtLXezEqqL5K63U3DrvsuBf7by3f9dH83Xift8qvccC
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
36P4mpvHaiDDrS0OF3tR/c5eityNrNQd2mv+gQPWAi+fBiN3EmoDfwc48Lrx
kNxv5F0d+3I/DqL6XDPrl67kEfc9z5/87xMHZq65snQtclxG7fD1YQ7oVMs4
OyJbCJ0Y3f+VA9l17q+rkauSI+7qjaL2v/lDrhNZc33ROdVvHLDT0P4wiix5
Qmj83xgHzsk2SShWofFdm/E7Z4IDpztyPc8gbz5aV37pJxpPCxorKeTcn6MX
A39xYE7o8tAryFw1mLL4wwHTZb8vlCFvD+sWnJrkgAz7yuRf5LtLZ9YMTnFg
92DXQ/FqlA8erOG0TKP2pnxU5JGnhgNm5c3gwqiGzGNdZA921rNYQS5UxTlM
mSC/UXgeGiTEhch3oc2WyOVm8hKWIlzgNK/XO4O86uP2FwYzuTAcv+TFReSE
ILeoVbO4UOlS/TkY2fd22bxpUS6IX1zVdhVZR8pW5oYEF861vJyqRb6Wx2i/
PIcLN528Pr9Enr89J54hyQWh8plxHcij5ybkrOZx4ZVkvtgn5KPiSl2EFBft
Rx++HEVuzDROUZ/PhcXW9sa/kG+2XlYSWIDKk3dyw8zHqL96VLwbQj4tL5Iv
gRwm8iG9TYYLZy9erJ2P/DtV/FjlQi6snufBkUV23aizLH8RF150B/UrIr9q
tP9wRZYL49n2H5Yim7hQ2aQcF9Z1FDBUkYun85xPLebCkbi1xauRlyf8p2ot
zwWTGzHUOuRL1hWKWgpc2NCWUaCNLCCTIy2hyIUVUpYBG5BPt8SIDSDnr3n9
aRPym5iA6SolLoRO9/7cjGxq7jKeosyFi139dVuR70taDJ9XQfG5aHVSH3nl
C733Fku4MLdNrtUAOTZc9dWapVyQzlISBfw+0/kvRJdxocfxgNA2/D7Ryeo+
5BzD/MfYb2oH7j9azoWhDYo7tuP3cZoLEldw4VRHZjj2fcOHWd4rubDJX5+H
vVIwN2mfKhcSZUb2YV+uvBStrsYFpT3FDfh5goxArsgqLqQfuyaA7anvGtCD
vEO/coRA7v5rce6BOhfiDypH4fLuKdd3jVvNBbK1pVcPudxP7chZDdQ/LMYH
tyCrbZK23LOGCy5z067qIseNT+5SXYvq/9/XGRuRhYsGCcF1XCj6ICalg3z2
XMuGt8hP5aXrcfy7NR+tvq/JhevZV7U08Pu+5i6J1eJCdMkSdzX8fPegObt0
UPknmcdVkHtOrOov2siFJ/svqEgi712+oIu3iQv6y9iSYsgVvVNNbrpciImq
qRFCTjjaWqGyhQtZ8xqYuP/NVOLf+4t84VkEewzZ+01ebvtWLuy1vLhjBHmf
HeNyhD4X5plOibxDrljkFuZigP5+Jn/yFbJ6uyW5neDCnlclt5rw8w6ou/8C
LlTYbFtXhfxoT5uhkxEXXorHb0xD1hCv3EwYo/KJPbaPQ06qu7FusQkXCoTi
7SLx+DMh5Zt2cOEK73a3P/IaWP19624uNFRXNxxATtFhXpO2QO87n+OM84XF
jQMLZxzggsGOhTpfkEWXrAz7guxtYXyrB9lbsuFsnRUXJnPVFZ4g7/60YBvD
DvXvg3fdIpD/XM19N+TABX/QcZmPfEfm4oEORy5Y3/6zTBDZOcLs6ZNjqL8v
zLr6DeW//y6MFaQ7ofiHsh+/RM611AuyduXCstNGnqHINrObFKrPoPIJtA1N
oHwswbwWfduTC1rdM9/1IVf/9BZOPcuFztrC9Cbktf1yI+e9UPxJISoPeWbl
8QdrzqP6R+t62yIX+fy0SwziwraVrPO3H6F8814p3jOSC87fSz9uQ/PH08Ai
Ym8Uyjeaf6NXIwcsNh1czePC144Dq2SQ+w/4bB6I5sKMFUvlB9H8dL+2oevw
ZfS+KIWaCOTDN/1UdidzQf6Q47aXaL7LPd+ctyIP1efhVXtDNF/qS3IrOmu4
cNhvw9JPaH4Oi/Mg1/zlgpz98cw8tF5o0zR8pLwxGGql5qoTaL3SZtqroewR
DCJyn2wN0HqpxfeMzKPcYMjJOLriThzK/0tr17r1BMOvL7GNf6N4xMFVqR+n
FoYAuy86sz4YxWP7MVkdixBYVlJ+xofkESWdo/7eoSFQ+vSxlow/mm85HjZW
T0JgMmh+zV0vVL8wt2YlgVBYdSZactQDzSfztILGN4aCsc5TYeGTPCI1pz/z
1LlQ0PVdKbocrYdvPTr+50teKPTEdxVPH0XjR/PYV/ueUAh71s7ffQitL4r3
HnGWD4OYsRVW1215xM/7wlNBFmEQoD3QHmPFI3bmT87wORAGikean7KRk1In
RE5ZhkHzEUb5eWQ9anCOjXUYqMscTDiMTO1+rrjOPgxMf/56twpZojtW/51j
GLzasnL5Y0v8//MsCyTOhsGt9yoVv9H63WtcnrnhXBjsvmfj/hm5ZmABZ7VX
GGzTfKH8Htnl+czIRT5hYPwpk/UM+eaVoZSvfmEg49q6Kx55k9q9ijQyDBpb
aiU2Iocszq+8wgyDrsBfk6uQOyWyasKpMCAFVo8qIgd8u/L8PDsMjgi31Isg
V5dfeLMvJAxsUz6KtlvwCOlb53qMQ8Og9MyM1fXITmmnPmwNC4OvPd5mj5Bn
sQ+PqEaEgV/KDe51ZFtf61HFyDDQ2qp+Own5huu+H/+bcF+Xwwfuljd9QP7v
KI8fnP1dDoeiW82agXwfX8c//4F8lj3POsuBfAC/6kD2
                 "]]}, 
               "Charting`Private`Tag$130610#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                Line[CompressedData["
1:eJwl2Hk8VF8bAHChkvxQyhIhZUkpRLLOg5I1oRLJFqKEol3NcmeM3Ywl2UKL
pSyFlMjNUvaSIlESlUIRokjec+/7V5/vZ65zz3me5zzn3NZ5Btp78/Lw8Hjy
8fAQ//p6X1rKA1Swdd+4PvV9PIVSNnP/gTEVIqodDhIW5zvlFWhKhap/1hGE
R+1GVyrvogIuUFhKuC7Lp6bPjAqy+aKdhIOMDsnusaTCkEbAJGHZd7YXH9tQ
YfRnwUvCv1SbN562pULDqr/XCbee39m92Y4Ks3wehwlfb6wO+2RPBd+0tQsp
yOcldLXT91Hhdd3HPMJ7fUoHHQ5Q4UXecX/CSvfV4pcfpIKGn8RuwvN8eVDn
hJ53MNtO+LW9wtiFQ1QQ/eiqQ/hOdnqG5mEq7CpoJZ9njItbD7tSIfAEjzfh
gxTubLY7FUonAqMJb41dnu/kSYU/UlcqCS95z3Jc4UWF5OaJMcLvNvEsafKm
wtQPQWVi/qUXLpTRjlJBO8DXlXBk05TnDj/0u2JqAmEPycAV48eosDC4rZ7w
jqPf8Fx/Koi7P/9OWLj8SIBbABXuai8VTkP+zN8nIxFEhc73NAXCVQ4HW56f
pMKnvAEVwvHXO86HBVPh/MNuWcJ+P61VjE5TwfKPGC9hgIauX2eoILzWsp0Y
XyLOmFV4jgpeidpswj/eV27zvkCFQeXDioTrN28fkAlF841Qf0GsL+3iXc7r
S1QI6y/hEj7VrEqJplLB7LLJMcLmUre+m9KpIDlocoCwnK9c+hyDCln3ZRwI
T5enWJYyqVBTZehKuG3xqj/Hwqig+1byNOGb+2JzFcKpoLWgmET4wg2BAz0R
VPiydYCMt90Egz8+igp6wS++EFYxni+xiKHCqZchYsR8/8Wd9VgUR4WP1q4U
wp19P0UqOFS41ivjS7hAzb86KJ4Kph5mUYSx0C/+KolUuJ93Ooewc4u7dH8S
FUYOWz4grL6mtyk5mQrVS/0qCS/123/ONoUKzYsu3iXc9+CF0tI0NJ8zWxIJ
ly2x7KxOp8Ijx+1ehKP212NnrlHB45ClLGHPm0aaW7KokDCh9ISY/47Jh/2f
s6lAFWw7RFjEZFtcxg0q+Bz/bzXhL5xCw/23qDDp7PTlKpHvD8qjQrlUWO8m
2kY4Ycv11Po8VB8bk58RPnZJxiL0NhUSuY7thKH1ysy2AlSf0U+GCEtIr8gZ
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
eD8N9hdrlhC+anmNT+YAWu/3kY+Euw56urQ7ovk2hpuQ3xtu9eG3D9KgBssl
17/qqNJ9phMN5Ls6yfuIZkD4R1dnVO/6j0sI250e/k/3EOoPI8ufkd8zodZ6
Yi6oftpDWsl+hxX5fEf2DiuuI1wYKZrQcBj1lz3n8snvGe4pPNuVBiWinItk
vV99PXLRjQbxt/h1CC/L2i55wJ0GYalbRsj7bO7VneoeNEj+qFxO2KxoNkjQ
kwaVk+7k/va+75LxCbnOypZcP7Oquqn6CA1Wup8gfb1OfvqqF6rXdL0EwjXN
DIVgbxpMHdIn70MFBje+rg6mQfGtofuEk4vqih7SUL8Wdc4m7J82N2NzDfUH
050ZhI3DtxkPVqJ+RJMi63Ncq12B+gbV+1AK+XzWR39+6UkaOGsVXyO8h+rh
ITiFnu8LJ5+fkzlQ/Qe5IUybPL/yHllKf/tFA47j5QGy3x+knOuepgE/to3s
v/zT2zobZmhgpbNZhvC9BBXNB79p4J5kRu5fV421cTl/0PmRe5TMp9CLFaNJ
szS463iRPO8e+S+xYM2h898nxIDwUcG5WyF/aSDobr2OzHfeGK/XPDo/k/gm
yPrc9cnN4R8N1Ky/k/fxwMHuKpMFGuRovyHPXxl6m5QmDx0qhC6nEm6WrT2z
bhEdvpxJItd7tqr8lSgvHYwMuwsJb3C+o87DR4erJgJPyX44kxkzhvz2/I9+
wtSkxOE+fjpYvnP+R/abbRG7ny+mw1e3DeT53dN+6ebjJXTo/q5C3v/YAacW
FS6lQ+NBGyCsJXTUNV2ADqcdLpH7cyD/UGXUMjpsPnpHjzBn917Ji4J0cBpu
lyNs+Hnn6WPL6bB+5vs4eT9l6HY4CdHBpKSAvG9dld+y1eI/OvjanrxB1lu1
QvQOYTp8quZNITx5SOKbsggdzmGryHrI+rPcTEKUDnmmHuR5uieZ58aSFXQY
w2/XEf6r9WvhFzJ/U8UHwvkd31w+r6SD6nbXeTLfQX0Vr8XokNwbIEXmW/iV
eP0qOjyjNamT/fxOQ3DpajpMd9mT63WzqGq/Lk5Hl/Jpcr1CQ3fV4iXoMFWS
o0/mm3krki5JhwtdLmR+fRVSh4Kk6JD+SnKSeN/qJ7E73dfQIX+5aw2Z78NY
tq00HQKDs8j8Bs2d/WckQ4fUZJxcr2yK/6Eta+nQ1h1Arrdlu8fDtbJ0uFLp
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
                 "]]}, 
               "Charting`Private`Tag$130610#2"]}}, {}}, {
            GraphicsComplex[CompressedData["
1:eJxdl3tM1WUYxw8IBiJ5gINIhnLTEd4YRfOCnLPIC2mOeQ/lFErQYg61SYIt
SpRSJAGZIaGTsImKJKaIweRkisCY0pg5b1wMBK2GIUPxWp3n9/2+8/AP++z7
8H7f3/s+z/s8+K1KXvihvU6nW2Gn0/3/e7+5qCfMkGEqHzh64/nzAMuCiuSp
+QcVQ/f0PfSea5cfdTD0h3lzj4blj6UOhl7XFXEw2jyaOhh6/tSw4qQgL+pg
6KuyJnyX2edOHQz9g5rI4MhUV+pg6E/iQsakujpSB0MPGTE90Bw5WAsdDL35
xPhR+VfaqYOhW4SN0MHQg2Q96mCen+zHxPPTGPpK+R7qYH6/nAd1MPQ8OU/q
YOjn5D6og6EPyH1SB0M3SD5QB9vkl8kmv0xRJ49bMhs3a/fpbwHXW8/Pl/y+
9Xt9yJOs5+dNfmw9L09yg/Xv9eTJ1nhncqNV15GbrHyvFqyz/jTXgM+JbgTX
yd9z/8GyPvmC+JMHZX/kCbJ/cqx8n8nm+8lxcj5k2/NDvYJRn2DUI/ev1R8Y
9fbifbiTUU9g1A8Y9QJGfYBRD2DkP/en5TsY+U1/LZ/ByF/ej5avYOQnGPn4
4KVMfVdsBvPtxffE3wId+QcdDB35CB0MHfkJHQwd+QodDB35Cx0MHfkMHQwd
+Q0dDB35Dh0MHfkPHQwd9cD3QmPoqA++9xpDR71AB0NH/UAHQ0c9QQdDR31B
B0NHvUEH29y/yeb+qaMeoYOTu4vcntSqevTxO1DhdEz102EJO8t0ls2my9W7
w4d4K+6NsQw6N/mTZ3TlntY/8yUv2VKd4lWheLbPK2vC63zIG1es6Y6aqNiw
Vp+4LMdbxZev7ogfGEW+dXZo3PoYTxVvF3M93WIgH/N8GpMd6KbiF0VfLtyu
Jz9uvn0o+qYzOe7d7H1Jh5zI36a07M1cZ0d+2peaVzxTR46f+kVAqktfLThh
VaG3eU4v+eK0gpPRET+RFwgbwUslnrxS1iMPip8JvEv2Q46V/ZIfyPeQ2+V7
yeVyHmR3OS8VL+dJflvOW8XLfZBT5L5UvNynyea+yVo+kLV8IbdIPqn9av0B
jH4ARj8Aox+A0Q/A6Adg9AMw+gEY/QCMfgBGPwCjH3B/Wj/g/Wr9gP5aPwCj
H4DRD8DoB8x3rR+gXvH+87zr3pqRcVXV51fRhsfbXPwtiEc/gF7SO7Mq54w6
39b7Y+5N7hjL+sf6m7+vGOnwH587FXs3sCOAPL9xU3acm+Jn5sF5PUNU/Mb5
10uPtPhzPfhDn9ixPDG0zo98/H7KsOQBpTfq7+T++dtYcuuG38edrvLl96B/
MV9D138cPkflR9lsz7tRR0bTH/FYb7xnaX36UrV+6PTOlwcrlV6wui1raNFo
8o6IklnZM3zoj/7IetryUfwyN5WPaXtcOuM3eNEf8VivP3Hf2UJftb4u+5qT
4UulJ1Re3uqX4EWOyd1jLHX0pj/6L+vnitm8/vpI8ty/7FrTjR70RzzWO/tz
fs3JuyPJF9ua7afMU/obzk3p4SEe5KDOndN+vWSgP/o7/D4LXrI8+wdVb5M+
v/djmMfL9Ec81stxzapsPuFOLgq98CTK043sWLXlfnm/K3ngzczXW/fo6Y/5
ge/lo90HotuGkxsCbpYkHXSkP+KxXrXFPu7K0+HklmGb/m44o/Ti2HXdnV87
krd5DMb0XXCiP+YT+E3Zn1GQ+YkDuT5v15TITx/Vwh/xWG9ZQu9i1zwHcvKx
xI7nC+1U/QytqQyb/qgWPO5014KglTr6Y/6BX0FW+6jUEQ/J9jVXJ5uNf9Af
8Vivx6sqN3P+Q7KhrPRw0sV/yPElwTMjz98iO2yKckn9pbcW/piv4Be+ots+
v+0G/V8VNsIf8Vgvbces2w0tN7n+8TsR0X3Xyskxohup91h1I/wxv8Gvr9r6
veQcOQ/6Ix7rLZbvI/enWb+P3C7nQx4u50N/zIfsD3Lf9J8g+WCCP+Kx3lq5
X67vJ/dLfZHkBzlJ8oPvP+ZP+J2XfCfvlHqgP+Kx3l7Jb/JWyW/yKakP8iWp
D/pjvoXfa1Lv5DR5D+iPeKxnJ/VN7pf6Jn8j7wO5UN4H+mN+5rwo7x25TN5D
+iOe7728b+Tx8r6RLfI+kpvkfaQ/5nPOs/Lek1ulH9Af8awved/Jy+V9J/dJ
fyA/22HtD/TH/A+/w9LvyHrph/RHPNbbLf2NvF36GzlQ+iM5RPqjyWaeoN8N
mR/IxTJfmGz6P9erl/5O1vo7OVjmA7I2H9Af/7/YzDtq/pR5iP6It5lXyNq8
QtbmHfI7Mu+QMa+CMa+CMa+CMa+CMa+CMa+CMa+CMa/yPrR5FYx5lfmrzavs
39q8yv1p8yoY8yr9tXkVjHmV56PNq+zP2rzKfqLNq/8CkEyeCw==
             "], {{{
                EdgeForm[], 
                Directive[
                 AbsoluteThickness[1.6], 
                 GrayLevel[0.09], 
                 Opacity[0.06]], 
                GraphicsGroup[{
                  Polygon[CompressedData["
1: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
                   "]], 
                  Polygon[CompressedData["
1:eJwt1Pdvz0Ecx/E7oxqjGqOaWqVKqbYoLUpbRbVmEBEREUREhEZEYu89Wnv7
JwgxYoQYIUaIEWKEGCFGiBFiPF95v3945F73zefzubv33X3bTa0aM6dWCGE4
6uAe7mMC6mMF7mAAcvAQD9DQn7mBmxiPRDzHMyRhIj7gIyYjGedxDgkYi8/4
hCb+zCVcxjh/ZhmuoRRd8RM/0AxT8A3fPesb6/AOg9ANt3HL16I5rsELDEQe
VuERypCLJ3jqc9caz+Csz1X1WYILKEE23uKNr20SXuG1Z9XgKq54bbSmDfiC
weiOEziJ0dA+FMUQDtL2xSjsQBq/DaUt0Djkxkgjz0C11ka/grYnUskt0Io8
E83JKdGy3mlETor2bqrqSi5BR/I8HNDY9Ef6HLaprvQraXthi+ZJfwhtPvqT
i6O92wF1yQmYTk5BIP/zPA2ZGguzyW2QTm4bLc/SnpHz0J5chSxyJ6QHe6c3
uTDaWHM1J3JBtKx3Wutb0b6lGuxDD/ojaPsgh5wb7dv6ZiK5XrRaaM4VWhuy
yPO1T+TyaFk1OqSzEm1virAAR1QHdMZRLPRcjItY6melFMexGF38DG3CL5Rr
nmjJt3f6Xg/TOaV/2Mfqhwz6u2kLg93ZbPp7VZdga2xKf7vvlc5Mbfpbfa90
RhrQr/Gzoj39io1+FjWH0zgV7KzrTO7RXKONpTH+4K/vpe7gIhzztWpN+Ty7
32utM/QSa4PdNd3Ju1gZ7L9Ed+43NvvadabeY32wu6s7ch3Lg919/Qc9xupg
d1V3eJf2PVqtVJP/qo10KQ==
                   "]]}]}, {}, {}, {}, {}}}], {}}}, {
          DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
           AxesOrigin -> {500., 0.}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, 
           ImagePadding -> {{80, 15}, {30, 10}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {500., 0.}, 
           DisplayFunction :> Identity, Epilog -> Text[
             Style["e)", {
               GrayLevel[0], 16}], 
             Offset[{5, -5}, 
              Scaled[{0, 1}]], {-1, 0}], 
           Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {30, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 14], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotLabel -> 
           "Fish carrying cap. \!\(\*StyleBox[\"\[Proportional]\", \
\"OperatorCharacter\"]\)\!\(\*StyleBox[\" \", \
\"OperatorCharacter\"]\)\!\(\*SubscriptBox[StyleBox[\"V\", \
\"OperatorCharacter\"], \"Hi\"]\)", 
           PlotRange -> {{500, 850}, {-0.021, 0.032}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {Automatic, Automatic}}, 
           Ticks -> {Automatic, Automatic}}], {1336.5, -576}, 
         ImageScaled[{0.5, 0}], {931, 576}]}, {
        Inset[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
                Line[CompressedData["
1:eJwl13lcTF8UAPCUEKGFCmm1VJZUishxWrTIkoRWLRJFTDPTXqr33rRMe1r4
KWmTtEgSKpE2tCCEUr8WpZRkLdp+T7+/5vP93Pvuu3PPPWfmyDqcNT3Oy8PD
YzOLh+fv58nj/nN5MABfFW6wiWo+CzuLR2/f0Q7Apws3zliMj+l4VpceP/G/
q644VXboB2DiEuUZS73f73t/bwCKW22a8StTuS8+VgHIN6w6Y8S6lp8eASia
uW3G4iuErw7mB+DJ5v/fZ++DkuEigThnmeOMB/u0EzfsDsSXDGrGlU8JOdbx
QFyg3TrjpIKqgruBgchM17f669OXxkf3Xg7Ewl21tn+tHaqm3VMWiEZGaP3X
V7pOz17xPRBD4iYs/3pfEk/GHOEgtFfosvvryT3x2t82BuHCHS/s/3rHppPK
pnuCMO9it+Ff+4tqrSxyDsJyazGzv75Qws6Q4AThjksmM/spsshXDLgShKeq
3sy8T/RNbdvptCAMUPs6Y7ZZZ6RlehDuXyo8M199v+g39cwg1Cu1nfFdPe/S
oewgHIqpmPED5V3GljeCUOfQhRk38LefVq+g1+dVmHHvTcHCwbYgTLc3/388
TP3EcVECrYiwGbeUd5TXGRF4hmU4445ZHhFPKAJfthrN+FJtS8TbMgJ9/f/3
r1kP9evKCWyL/98mO3J4Su4TKJD7v+cU+7LPPyBwX8f/tv/iuJF4SKD/REv3
c3kGlCvt62dUEnj5wloV1Z0MEHfakm77iEC/hKn8ZYYMYKbJWO+rIvDoKdbx
xSYMaHwvILajmkCnK5nl6uYMUJD4/mxdDYEbgxhK6XYM6Iiq0RWoIzCY+MO2
YDJgt5/LuuqnBAaULlrpf5EBWXcO9hbVEyi3bY6zRCYDeL5rpaY1EDjgqW8l
eIMBJc6LRQOa6PVcEwPn1jJAOGuswfUZgXNePWOKNjPgdGdXsPVzev8HlnCD
Ohgge6T4j2YzgaopPCJRYwzwi0spVnhJ4IJStRiVOW7Q0hh8RvwVgV8HTfZp
L3GDCD2L7h+vCbTQRolCFTcYU5l6cuMdgX3d9b/FmG5w0PUjebmVwF015ZYn
STcouPZ8R2QbgdGPNTW1EtzAUTrjpks7gcMOjoGepW7wXNDw4uouAh3kKjvi
FzBhnaHKwSXdBN6KTj9rKsuEYHL5Qr4eAmtWmVTnbWGC1p+hwM4PBE7EzP2u
78SE7I+xJy/1E7im7bMHp54JvPK+ctwBAtkJqwqS+5hgfdTxvdcnAp+uT2Gw
eVkg8lrD5PAQgfpfc676abHAVUhm/q7PBF7Y8V641JIFj40FqtWGCbxiIVb3
wpsF5x61bREeIXApKy+tsJQF7yarv07T9nZWrA97z4LNmgW5w18J7BTBuQ7T
LPh0I1C64TuBqS6SpTsN2XA4ZfXckFECF3YIqB7rZ4NUa+gxtzECW7r894iK
ukOv2NADq98EnhVvnTTe6Q7smCKvTeP097tv2t6V7A5ajUtfL58gMJfPICC+
yR345nur8E8S2FsgND+A1wPiyJ2f3k0RWPHpYJI00wMsH6brV08T+OrR8yVJ
BR4gO8mfUcBDIu+F/II3wx7Qr+k8fWEWicnWE/WJap5Q6NFgRfKSeFtd8eUT
f0/wvKV815WPRMw47F/d5AkwErfEfDaJ8163k2cVvGDOhl8MHX4S68aHvHIi
vaDR2aJx/RwS+YJETGbxeUP81XJF8bkkZg4dNdgW4w3WPdLBs+aRmCPrcO2V
rg/Iy5Ddg7R5jZ7/CdXyhU/WfdAiQOINYyXK8bEfFF00uvRwPokNyWmNsZ8D
wLslb/T6AhLPiB8dqOihAEWFzBIESVxtav4jc2EszDNhFQYsJHFnYbCQSlEc
PI9oEXRZROJsdb59XmVxkPRE09lsMb2/LEroze04ODonpQaESOzefSCLcSMO
1ujyyCkKk1hPLFo1PycOhgOOnRMVITH3R9vW7PQ4uF1e2zpJ2znYgc8wOQ70
NCLPNy8hkZQaroqPjgNB1siX8qUkvpMoK8WwOHh54+CebDESzw1yTo8QceCg
uJzfT4JEGTNLfiuPOAiUzPZYLUmikNsNRRubOCjnrbTwkidxY1XHXLH1caD2
7Ie0lCqJ3zeb/bBviIU/KitujtGue3R9ZKA2Fh7Ga+u8VCNx2PjuHY/KWNhj
GeUYqk6i1pHYorSSWHDqXZvzbSuJn+3OWAilxcKFcUvVup0k7kjB/kSPWJhY
W6nH2Evip4+DRmtWxUJNYKTzo5Mk9n/fGa0cFgOvLl3yuuFM4s/wiloFKga6
S3JCkl1IVOrRLVwdEANTQzVZHqdJDNDKDlVyj4EtFlNdSgwS03csGLe1j4Ec
lbOW5z1JfDZ095PHthiI7DYxdgwmUfQyu43VEQ3Jk0ctD4SQGCE+cFLvdTRc
l3B1hlAST0kssFjREA21+8JCJLgk5l1v2vX+XjRMl1ZWNUSSeOzCLYOchGhw
O6+qpZ5AYtP0SqET+6IhsACN5RJJ1HHqtr24KxqinuyzXJxE4s28hT4vtOj1
p128Bi6QmB/cKnNwXTT0nMooTkkm8c/B78kX50XDIb0lG+Zkkij+lf/L+uoo
cOD0Mnpon9jDWmVQHgWM2pLih1kkxofmjx0vjgKuoYWWbzZ9f5YZbb6ZGQVJ
YUqB5tdIvHDqVkB7chRkPh2vUs8h8S2/9NJFCVFQseey8ch1On4t2uJ+nCio
jzwb3ZhLout18vo9/yh424Qvr+eR6Fm0OnvcPQp6F4uIh+bT9/mft8HaZ6Lg
m0mP5fECEp9WW3eEO0XBdGzxZZ0bJApHKB1pPRoFgi853dKFJH5c632zXTAK
li05smaSdnVnTpZjfASsOaTg0nqTxJRytWbf7RGglvg7/04RfZ7ipH/aygjA
N0+/xt+i99drZlArGAF7JZLVmcV0/OX3zmVMh4Olhav3/tv0/iRs9FO/hcOJ
f+D++hISyzbyJkz2hgO7bfGs+XdI9M4m9ju/C4dom6LQ6rt0/k09Mtz7MByS
L5MNafdIdDN+l/roVjhc/9dMKKCUxAdu/Tc0s8Oh2n40SbOcxLaCFp31UeEw
dlwru+ABiamcO+pS1uHAn71wMPwhiZNJOurJ+8NBpL9jo3MlHY/CDOvluuGw
3iWoRL6KxN6JjyvElMLB7kxtzYVaEr/ZTyrxjXHhiYfJB6KRjk/9QKjNeS60
3JFVsGuiz0f+xOJbwVz4MPbt1I5nJK67tZua5cOFKZ+E76PP6fkmp8WC7big
GtDK6/qKXm/N5j6RDVz4J8RR9kgbiS7ajf48VWHwJXBlj/57Epe8vJIuXxwG
ej4tmRrtJC5s3PxZMisMhk8bKoj9S2KN3vIMv+Aw0DFdr/y6m0TlG4Im6/TD
IMm4d6S6h0TT948jtquHwZDe5aLiD3S90vT0eCcfBolbhDTi+0isTLZfxJ4O
hcFNT0bJjyRmDe8dwKFQQCXiHqufjmeXcIbmW3pc8ofWwU8k3itbK8+bT4+L
5U/pDNL5lz5gZZMQComLnR6qDpFoKVvw9asvPX+eNCH3mUTpAe/7++zo+bxv
dUWGSfwyvuJlq3YoJIzH8PN+ofNBpUO5SjoUPv0wqvtKO3Hd4hftYyGwc5g3
rGuERPsuho5vfQjEfyzb/eIrXf83jucvTwiBgU62YOU3Esfb9FQ/HwgBaN3Q
VPidRPmaj11CE8Fw/mVf9JUfJMqeORJOcYOhvyH1QMxPEkt+X22KHOHAjlpz
0cBfJJ5P6QiSluVA3APh12dH6fuiFljVIUXBx7tPE23H6HHBbs2EJSRoFZHm
+3/T9RQ0j8oiAbG5Wst3/qHrV9un77q3gqAv82fbxnES34wds8w7HATbLxek
SE3Q9Vios+ShcBDEJJ2wXTRJ17eR4ZpNbwKhN0ZGdor2+teOo7vSAmEb9133
5ykS75dbqvCeCYQPfsZOjTwUmo7uYVYLBoKmx2yF+7MofL/qi3VZeQBEnb0/
kMdLYRePXGG6QwBsdVB2jZhN4cSBtm/LSs5BhIEo23gehQq7ymSMvP2hCxvU
twtQ6GK7silW2R80tnFGleZTeEBZ8vPwRz/oXD/qM1+QwmvXebWLjvqB+ppC
rT+0s8oKC6cl/YAr7Tw1sJDC2ld1L5TbfWGzSFvQk8UUJvBSxPxjvhC2IF73
nhCFefxTjy8r+ELH7L38OcL0evaOKwe++EDoaEVoqCiFfWkFAu6kD7S/T482
EKdw86byS7r3veHym9ffVSUoPJm984Ua/ftu1zzPXGoZhQTPsKmPozd8qDsj
83M5hVvdGTUfhLzh6qM0qnMFhQJOUnq/+r3gxP1X/fWSFOZsUtyk+cgLPhVt
u5kuRaE8p+KtspcX5OW7Lo2SprCguGJzs5kXuF674u0tQ6GevYwxqeoFIylz
dEzkKJR7+id2ZMQTfoU2N0+ups8rdK/hcm9PuEvybxlYQyFnk8Trgzae4H1u
66VXaynU6hO/dVTHEyZYl4/lKlJYduja0sZFnsBn6/LDfAOFolcbnc0LPaDa
IsVcbyOF/Gkdg07/eECw2fNyZWUK968KkV7K8YD5uzU4c1QoXPlYQnG7tQcI
qfOKFW+m0EkhvEFW2AOaldV9UtUp3OgbbXdl2h3OK53s4GpQaBYdpHJh2B3E
ZJqu2m+l0CA63bin0R0kF/yzZbEWhefVVpr5x7pDB3/jpT+0UftPqSXpDql0
j9q3g0J7jWGreHd3kPt1/HH5TgpTdKvFhKzcQbFLxcJFl0IjiZwNrYru8KnN
8f4hPQoPytgZGEm5Q15Lkqz2LgpZZW9/TIm4w6aGyQFxAwoZ1LHWzZNs0Ljz
xKdmN4XPilfvjnnFhrGbEx2FxhRKvVl7ZOwpG+7lKesm76Ew6vLa54mVbNBK
T1jA2kdhUXuAE+MGG3Qi7ZNlTOn7YS5g4BLJBt6CI+oTtH2+TDR3c9hQ1bS3
6c1BCr10H50MPMcGPaFtPNGHKGyYcyJoDYMNu86LOE6aU6jtVBfDd4hN91vz
Jt9aUHjzwjWJsH1sqH01lVBsScdj00Ov9fT/aX2xwbpT1hR2rmsLfrydDYYX
q9a12lJ4ounIZt1VbJhXeq/6th19/8uZw1ek2PCk9YZNrD2FyZNNHLFlbNgt
mRxteIxCDT/FcwaL2LAnlf29xIlCycufLxb8ZsH+rNVl510p1C83eizzigVC
tSvMzp6h8E1QJff+MxY87xP+vPssHY9vyvYu9SwwUZiS4nWjUGiRX+O3Ryww
zW0hGGwKS7UN7xQXseDwzZDde30pdLb55/bteBaINfv3KPhR2F/eM7kulgVv
vrH8ZvtTqCg97JkfyQLzzXYFZecotFbom/cimAUWd7aKKBEUCva9UIqn+xHr
+wPv5oTR+dOW+/u9HQscE+tGftBuGhOoz7eh+5mzWXN7uBQG3lHrCqH7mXOy
9uoPIuh8fab/+IgZC1I5b2M8Yyg0fkl8tDVkQffeOoP+JLp+zT8fNKRC9y9r
so62XKDQN2pXLiiz4Ps04V59kT6/CMk7SetZMLsIMq5cos9vfXGozVoWrBYr
mTJPpeuJda+O+koWnOzIvP3kKoWy0iM//giwgHGHaLiTTeHFVXue5M5lgXeM
XU/WNQo/PJfNtudnAVdHUpi4Tsc/c/nK9zwsyL16/vS2AgoHw160CowxYfgM
IZ97m75ft6791vjIBPa0bWxENZ3faf4vHB4zwXeKp92lhsJ/d2YfKKxlAjGZ
pmBUSyHfh1EmTw0TYsd7HvA/psct9JyvVTKhYPTE8Ll6CsdPtoNYGRM+fjlr
7NZM4U/1BjuHAiZYdgbwH+6kMGNXoy03kQnalane0hN0Pv+KKuo6xYTiytIT
v2lXkIvKclyYoPDo9aGXkxQeMnnbz3RmglDVAtWQafq+SJu9n3eCCf9We34a
5uVgwhaWr44DE/wf77eqEODgnt2DmZ/MmXDv2bSWjTgH73xeQUzqM0Glw5bn
kioHU34tLaxYzYShRIfTIWocXJfX3pq7ignX9h9/y9rMwZqac68uyjNBptKl
cI8GB4VYDzW96H55Uaa73ZQmB8e1p+buXEk/7xz+0F6bg7pF73y+LqGf/1kS
qGDCwQGR1A/ds5kgvXDRrBJXDh4YcM0o6XODyjKOakcmBxeojfwUL3YDe7/B
9qxODh7je6zQQffzqy68WHt4RTAOPuDp6bdwg2S1oHRR02A00mwYfaHhBiJd
UkmMyGC0jtrsl7TEDXYsCi5vrQ5Gla2zLj0fZQA30TVww3gw6s521NDtYMDr
TboV0hoh2HivYFijhvbu7vXSriHYU5t1W7KQAS89zi6tuBaCrMy9EV6XGBAs
V7vRpTME1+x781mcywArxZS+KbFQ9Iw17bnuw4CNOg4Saqah2F3FHYo9xYCS
1hEfdlgoLhVfu+PfowzQ4rgeOVQTimN/pBd6mzKgl+vSLMUThswr9zZGGTBA
R0jl3E+NMLStm/axAwakZPdmnGKG4YaLL8td1BmQX3Hsz3BOGG757H/3wwYG
dG5y+GLZGYYV63rnbV/LAOHb+446reDildtesfdkGDB6d/bUOVMuZoRp1Ouu
YIBh7uQs94NcfFvxKGs97X9SfvGfMuPit8KtxFLaWkT/wiOHufjGarvOx+UM
IIwbVipbctExbWhXOG3BjvM7/rXnosLygfuvlzFAjk/ef6cbF29nx6SzJBjA
+rkiSJ3JxUM6T0ttaFd/XMJZx+JimOTP1wa0TzTMiRR356La/N0LJWnnJXxK
/uLFRaWDXrw14gzYolBUnhrIxbGax67LaYcuz32YEMTFehXRXfy0WwUzq8MJ
Ls7XsJIbEWOA39eEBk+Ki13Lm7/U0H5U6v1+fygX25+MTbrRFs1ndu4K42Ls
03ciNrQdU0992M7l4srGxQqGtOdSNkNrI7jI3bZJX4q2ucfhkZWRXPQ9zjkg
QPv6yf0/RKO42HtplPFjKQPGLQ3HBKK5+HDbu4x/ae/Zqz0xTfud86H+p7T/
A9y1PYI=
                 "]]}, "Charting`Private`Tag$130265#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                Line[CompressedData["
1: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
                 "]]}, 
               "Charting`Private`Tag$130265#2"]}}, {}}, {
            GraphicsComplex[CompressedData["
1:eJxdl3tM1WUYxw8IBiJ5gINIhnLTEd4YRfOCnLPIC2mOeQ/lFErQYg61SYIt
SpRSJAGZIaGTsImKJKaIweRkisCY0pg5b1wMBK2GIUPxWp3n9/2+8/AP++z7
8H7f3/s+z/s8+K1KXvihvU6nW2Gn0/3/e7+5qCfMkGEqHzh64/nzAMuCiuSp
+QcVQ/f0PfSea5cfdTD0h3lzj4blj6UOhl7XFXEw2jyaOhh6/tSw4qQgL+pg
6KuyJnyX2edOHQz9g5rI4MhUV+pg6E/iQsakujpSB0MPGTE90Bw5WAsdDL35
xPhR+VfaqYOhW4SN0MHQg2Q96mCen+zHxPPTGPpK+R7qYH6/nAd1MPQ8OU/q
YOjn5D6og6EPyH1SB0M3SD5QB9vkl8kmv0xRJ49bMhs3a/fpbwHXW8/Pl/y+
9Xt9yJOs5+dNfmw9L09yg/Xv9eTJ1nhncqNV15GbrHyvFqyz/jTXgM+JbgTX
yd9z/8GyPvmC+JMHZX/kCbJ/cqx8n8nm+8lxcj5k2/NDvYJRn2DUI/ev1R8Y
9fbifbiTUU9g1A8Y9QJGfYBRD2DkP/en5TsY+U1/LZ/ByF/ej5avYOQnGPn4
4KVMfVdsBvPtxffE3wId+QcdDB35CB0MHfkJHQwd+QodDB35Cx0MHfkMHQwd
+Q0dDB35Dh0MHfkPHQwd9cD3QmPoqA++9xpDR71AB0NH/UAHQ0c9QQdDR31B
B0NHvUEH29y/yeb+qaMeoYOTu4vcntSqevTxO1DhdEz102EJO8t0ls2my9W7
w4d4K+6NsQw6N/mTZ3TlntY/8yUv2VKd4lWheLbPK2vC63zIG1es6Y6aqNiw
Vp+4LMdbxZev7ogfGEW+dXZo3PoYTxVvF3M93WIgH/N8GpMd6KbiF0VfLtyu
Jz9uvn0o+qYzOe7d7H1Jh5zI36a07M1cZ0d+2peaVzxTR46f+kVAqktfLThh
VaG3eU4v+eK0gpPRET+RFwgbwUslnrxS1iMPip8JvEv2Q46V/ZIfyPeQ2+V7
yeVyHmR3OS8VL+dJflvOW8XLfZBT5L5UvNynyea+yVo+kLV8IbdIPqn9av0B
jH4ARj8Aox+A0Q/A6Adg9AMw+gEY/QCMfgBGPwCjH3B/Wj/g/Wr9gP5aPwCj
H4DRD8DoB8x3rR+gXvH+87zr3pqRcVXV51fRhsfbXPwtiEc/gF7SO7Mq54w6
39b7Y+5N7hjL+sf6m7+vGOnwH587FXs3sCOAPL9xU3acm+Jn5sF5PUNU/Mb5
10uPtPhzPfhDn9ixPDG0zo98/H7KsOQBpTfq7+T++dtYcuuG38edrvLl96B/
MV9D138cPkflR9lsz7tRR0bTH/FYb7xnaX36UrV+6PTOlwcrlV6wui1raNFo
8o6IklnZM3zoj/7IetryUfwyN5WPaXtcOuM3eNEf8VivP3Hf2UJftb4u+5qT
4UulJ1Re3uqX4EWOyd1jLHX0pj/6L+vnitm8/vpI8ty/7FrTjR70RzzWO/tz
fs3JuyPJF9ua7afMU/obzk3p4SEe5KDOndN+vWSgP/o7/D4LXrI8+wdVb5M+
v/djmMfL9Ec81stxzapsPuFOLgq98CTK043sWLXlfnm/K3ngzczXW/fo6Y/5
ge/lo90HotuGkxsCbpYkHXSkP+KxXrXFPu7K0+HklmGb/m44o/Ti2HXdnV87
krd5DMb0XXCiP+YT+E3Zn1GQ+YkDuT5v15TITx/Vwh/xWG9ZQu9i1zwHcvKx
xI7nC+1U/QytqQyb/qgWPO5014KglTr6Y/6BX0FW+6jUEQ/J9jVXJ5uNf9Af
8Vivx6sqN3P+Q7KhrPRw0sV/yPElwTMjz98iO2yKckn9pbcW/piv4Be+ots+
v+0G/V8VNsIf8Vgvbces2w0tN7n+8TsR0X3Xyskxohup91h1I/wxv8Gvr9r6
veQcOQ/6Ix7rLZbvI/enWb+P3C7nQx4u50N/zIfsD3Lf9J8g+WCCP+Kx3lq5
X67vJ/dLfZHkBzlJ8oPvP+ZP+J2XfCfvlHqgP+Kx3l7Jb/JWyW/yKakP8iWp
D/pjvoXfa1Lv5DR5D+iPeKxnJ/VN7pf6Jn8j7wO5UN4H+mN+5rwo7x25TN5D
+iOe7728b+Tx8r6RLfI+kpvkfaQ/5nPOs/Lek1ulH9Af8awved/Jy+V9J/dJ
fyA/22HtD/TH/A+/w9LvyHrph/RHPNbbLf2NvF36GzlQ+iM5RPqjyWaeoN8N
mR/IxTJfmGz6P9erl/5O1vo7OVjmA7I2H9Af/7/YzDtq/pR5iP6It5lXyNq8
QtbmHfI7Mu+QMa+CMa+CMa+CMa+CMa+CMa+CMa+CMa/yPrR5FYx5lfmrzavs
39q8yv1p8yoY8yr9tXkVjHmV56PNq+zP2rzKfqLNq/8CkEyeCw==
             "], {{{
                EdgeForm[], 
                Directive[
                 AbsoluteThickness[1.6], 
                 GrayLevel[0.09], 
                 Opacity[0.06]], 
                GraphicsGroup[{
                  Polygon[CompressedData["
1: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
                   "]], 
                  Polygon[CompressedData["
1:eJwt1Pdvz0Ecx/E7oxqjGqOaWqVKqbYoLUpbRbVmEBEREUREhEZEYu89Wnv7
JwgxYoQYIUaIEWKEGCFGiBFiPF95v3945F73zefzubv33X3bTa0aM6dWCGE4
6uAe7mMC6mMF7mAAcvAQD9DQn7mBmxiPRDzHMyRhIj7gIyYjGedxDgkYi8/4
hCb+zCVcxjh/ZhmuoRRd8RM/0AxT8A3fPesb6/AOg9ANt3HL16I5rsELDEQe
VuERypCLJ3jqc9caz+Csz1X1WYILKEE23uKNr20SXuG1Z9XgKq54bbSmDfiC
weiOEziJ0dA+FMUQDtL2xSjsQBq/DaUt0Djkxkgjz0C11ka/grYnUskt0Io8
E83JKdGy3mlETor2bqrqSi5BR/I8HNDY9Ef6HLaprvQraXthi+ZJfwhtPvqT
i6O92wF1yQmYTk5BIP/zPA2ZGguzyW2QTm4bLc/SnpHz0J5chSxyJ6QHe6c3
uTDaWHM1J3JBtKx3Wutb0b6lGuxDD/ojaPsgh5wb7dv6ZiK5XrRaaM4VWhuy
yPO1T+TyaFk1OqSzEm1virAAR1QHdMZRLPRcjItY6melFMexGF38DG3CL5Rr
nmjJt3f6Xg/TOaV/2Mfqhwz6u2kLg93ZbPp7VZdga2xKf7vvlc5Mbfpbfa90
RhrQr/Gzoj39io1+FjWH0zgV7KzrTO7RXKONpTH+4K/vpe7gIhzztWpN+Ty7
32utM/QSa4PdNd3Ju1gZ7L9Ed+43NvvadabeY32wu6s7ch3Lg919/Qc9xupg
d1V3eJf2PVqtVJP/qo10KQ==
                   "]]}]}, {}, {}, {}, {}}}], {}}}, {
          DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
           AxesOrigin -> {500., 0.}, FrameTicks -> {{{0, {
                Rational[1, 10000000], 
                "1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, {
                Rational[1, 5000000], 
                "2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, {
                Rational[3, 10000000], 
                "3*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}}, {}}, {{500, 550,
               600, 650, 700, 750, 800, 850}, {}}}, GridLines -> {None, None},
            DisplayFunction -> Identity, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, PlotRangeClipping -> True, 
           ImagePadding -> {{80, 15}, {30, 10}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {500., 0.}, 
           DisplayFunction :> Identity, Epilog -> Text[
             Style["b)", {
               GrayLevel[0], 16}], 
             Offset[{5, -5}, 
              Scaled[{0, 1}]], {-1, 0}], 
           Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{
             "Interstitial N (mol N \!\(\*SuperscriptBox[\(L\), \(-1\)]\))", 
              None}, {None, None}}, FrameStyle -> Directive[
             GrayLevel[0], 12], FrameTicks -> {{{0, {
                Rational[1, 10000000], 
                "1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, {
                Rational[1, 5000000], 
                "2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, {
                Rational[3, 10000000], 
                "3*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}}, None}, {{500, 
              550, 600, 650, 700, 750, 800, 850}, None}}, FrameTicksStyle -> 
           Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {30, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, 
           PlotRange -> {{500, 850}, {0., 3.5138739425769267`*^-7}}, 
           PlotRangeClipping -> True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], {
          Rational[931, 2], -1122}, 
         ImageScaled[{0.5, 0}], {931, 557}], 
        Inset[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
                Line[CompressedData["
1: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
A9y1PYI=
                 "]]}, "Charting`Private`Tag$130727#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                Line[CompressedData["
1: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
7TvMf0+I7fniQqRkIgP+B10Xocs=
                 "]]}, 
               "Charting`Private`Tag$130727#2"]}}, {}}, {
            GraphicsComplex[CompressedData["
1:eJxdl3tM1WUYxw8IBiJ5gINIhnLTEd4YRfOCnLPIC2mOeQ/lFErQYg61SYIt
SpRSJAGZIaGTsImKJKaIweRkisCY0pg5b1wMBK2GIUPxWp3n9/2+8/AP++z7
8H7f3/s+z/s8+K1KXvihvU6nW2Gn0/3/e7+5qCfMkGEqHzh64/nzAMuCiuSp
+QcVQ/f0PfSea5cfdTD0h3lzj4blj6UOhl7XFXEw2jyaOhh6/tSw4qQgL+pg
6KuyJnyX2edOHQz9g5rI4MhUV+pg6E/iQsakujpSB0MPGTE90Bw5WAsdDL35
xPhR+VfaqYOhW4SN0MHQg2Q96mCen+zHxPPTGPpK+R7qYH6/nAd1MPQ8OU/q
YOjn5D6og6EPyH1SB0M3SD5QB9vkl8kmv0xRJ49bMhs3a/fpbwHXW8/Pl/y+
9Xt9yJOs5+dNfmw9L09yg/Xv9eTJ1nhncqNV15GbrHyvFqyz/jTXgM+JbgTX
yd9z/8GyPvmC+JMHZX/kCbJ/cqx8n8nm+8lxcj5k2/NDvYJRn2DUI/ev1R8Y
9fbifbiTUU9g1A8Y9QJGfYBRD2DkP/en5TsY+U1/LZ/ByF/ej5avYOQnGPn4
4KVMfVdsBvPtxffE3wId+QcdDB35CB0MHfkJHQwd+QodDB35Cx0MHfkMHQwd
+Q0dDB35Dh0MHfkPHQwd9cD3QmPoqA++9xpDR71AB0NH/UAHQ0c9QQdDR31B
B0NHvUEH29y/yeb+qaMeoYOTu4vcntSqevTxO1DhdEz102EJO8t0ls2my9W7
w4d4K+6NsQw6N/mTZ3TlntY/8yUv2VKd4lWheLbPK2vC63zIG1es6Y6aqNiw
Vp+4LMdbxZev7ogfGEW+dXZo3PoYTxVvF3M93WIgH/N8GpMd6KbiF0VfLtyu
Jz9uvn0o+qYzOe7d7H1Jh5zI36a07M1cZ0d+2peaVzxTR46f+kVAqktfLThh
VaG3eU4v+eK0gpPRET+RFwgbwUslnrxS1iMPip8JvEv2Q46V/ZIfyPeQ2+V7
yeVyHmR3OS8VL+dJflvOW8XLfZBT5L5UvNynyea+yVo+kLV8IbdIPqn9av0B
jH4ARj8Aox+A0Q/A6Adg9AMw+gEY/QCMfgBGPwCjH3B/Wj/g/Wr9gP5aPwCj
H4DRD8DoB8x3rR+gXvH+87zr3pqRcVXV51fRhsfbXPwtiEc/gF7SO7Mq54w6
39b7Y+5N7hjL+sf6m7+vGOnwH587FXs3sCOAPL9xU3acm+Jn5sF5PUNU/Mb5
10uPtPhzPfhDn9ixPDG0zo98/H7KsOQBpTfq7+T++dtYcuuG38edrvLl96B/
MV9D138cPkflR9lsz7tRR0bTH/FYb7xnaX36UrV+6PTOlwcrlV6wui1raNFo
8o6IklnZM3zoj/7IetryUfwyN5WPaXtcOuM3eNEf8VivP3Hf2UJftb4u+5qT
4UulJ1Re3uqX4EWOyd1jLHX0pj/6L+vnitm8/vpI8ty/7FrTjR70RzzWO/tz
fs3JuyPJF9ua7afMU/obzk3p4SEe5KDOndN+vWSgP/o7/D4LXrI8+wdVb5M+
v/djmMfL9Ec81stxzapsPuFOLgq98CTK043sWLXlfnm/K3ngzczXW/fo6Y/5
ge/lo90HotuGkxsCbpYkHXSkP+KxXrXFPu7K0+HklmGb/m44o/Ti2HXdnV87
krd5DMb0XXCiP+YT+E3Zn1GQ+YkDuT5v15TITx/Vwh/xWG9ZQu9i1zwHcvKx
xI7nC+1U/QytqQyb/qgWPO5014KglTr6Y/6BX0FW+6jUEQ/J9jVXJ5uNf9Af
8Vivx6sqN3P+Q7KhrPRw0sV/yPElwTMjz98iO2yKckn9pbcW/piv4Be+ots+
v+0G/V8VNsIf8Vgvbces2w0tN7n+8TsR0X3Xyskxohup91h1I/wxv8Gvr9r6
veQcOQ/6Ix7rLZbvI/enWb+P3C7nQx4u50N/zIfsD3Lf9J8g+WCCP+Kx3lq5
X67vJ/dLfZHkBzlJ8oPvP+ZP+J2XfCfvlHqgP+Kx3l7Jb/JWyW/yKakP8iWp
D/pjvoXfa1Lv5DR5D+iPeKxnJ/VN7pf6Jn8j7wO5UN4H+mN+5rwo7x25TN5D
+iOe7728b+Tx8r6RLfI+kpvkfaQ/5nPOs/Lek1ulH9Af8awved/Jy+V9J/dJ
fyA/22HtD/TH/A+/w9LvyHrph/RHPNbbLf2NvF36GzlQ+iM5RPqjyWaeoN8N
mR/IxTJfmGz6P9erl/5O1vo7OVjmA7I2H9Af/7/YzDtq/pR5iP6It5lXyNq8
QtbmHfI7Mu+QMa+CMa+CMa+CMa+CMa+CMa+CMa+CMa/yPrR5FYx5lfmrzavs
39q8yv1p8yoY8yr9tXkVjHmV56PNq+zP2rzKfqLNq/8CkEyeCw==
             "], {{{
                EdgeForm[], 
                Directive[
                 AbsoluteThickness[1.6], 
                 GrayLevel[0.09], 
                 Opacity[0.06]], 
                GraphicsGroup[{
                  Polygon[CompressedData["
1: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
                   "]], 
                  Polygon[CompressedData["
1:eJwt1Pdvz0Ecx/E7oxqjGqOaWqVKqbYoLUpbRbVmEBEREUREhEZEYu89Wnv7
JwgxYoQYIUaIEWKEGCFGiBFiPF95v3945F73zefzubv33X3bTa0aM6dWCGE4
6uAe7mMC6mMF7mAAcvAQD9DQn7mBmxiPRDzHMyRhIj7gIyYjGedxDgkYi8/4
hCb+zCVcxjh/ZhmuoRRd8RM/0AxT8A3fPesb6/AOg9ANt3HL16I5rsELDEQe
VuERypCLJ3jqc9caz+Csz1X1WYILKEE23uKNr20SXuG1Z9XgKq54bbSmDfiC
weiOEziJ0dA+FMUQDtL2xSjsQBq/DaUt0Djkxkgjz0C11ka/grYnUskt0Io8
E83JKdGy3mlETor2bqrqSi5BR/I8HNDY9Ef6HLaprvQraXthi+ZJfwhtPvqT
i6O92wF1yQmYTk5BIP/zPA2ZGguzyW2QTm4bLc/SnpHz0J5chSxyJ6QHe6c3
uTDaWHM1J3JBtKx3Wutb0b6lGuxDD/ojaPsgh5wb7dv6ZiK5XrRaaM4VWhuy
yPO1T+TyaFk1OqSzEm1virAAR1QHdMZRLPRcjItY6melFMexGF38DG3CL5Rr
nmjJt3f6Xg/TOaV/2Mfqhwz6u2kLg93ZbPp7VZdga2xKf7vvlc5Mbfpbfa90
RhrQr/Gzoj39io1+FjWH0zgV7KzrTO7RXKONpTH+4K/vpe7gIhzztWpN+Ty7
32utM/QSa4PdNd3Ju1gZ7L9Ed+43NvvadabeY32wu6s7ch3Lg919/Qc9xupg
d1V3eJf2PVqtVJP/qo10KQ==
                   "]]}]}, {}, {}, {}, {}}}], {}}}, {
          DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
           AxesOrigin -> {500., 0.}, FrameTicks -> {{{0, {
                Rational[1, 10000000], 
                "1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, {
                Rational[1, 5000000], 
                "2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, {
                Rational[3, 10000000], 
                "3*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}}, {}}, {{500, 550,
               600, 650, 700, 750, 800, 850}, {}}}, GridLines -> {None, None},
            DisplayFunction -> Identity, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, PlotRangeClipping -> True, 
           ImagePadding -> {{80, 15}, {30, 10}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {500., 0.}, 
           DisplayFunction :> Identity, Epilog -> Text[
             Style["f)", {
               GrayLevel[0], 16}], 
             Offset[{5, -5}, 
              Scaled[{0, 1}]], {-1, 0}], 
           Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Directive[
             GrayLevel[0], 12], FrameTicks -> {{{0, {
                Rational[1, 10000000], 
                "1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, {
                Rational[1, 5000000], 
                "2*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}, {
                Rational[3, 10000000], 
                "3*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)"}}, None}, {{500, 
              550, 600, 650, 700, 750, 800, 850}, None}}, FrameTicksStyle -> 
           Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {30, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, 
           PlotRange -> {{500, 850}, {0., 3.5134682026435876`*^-7}}, 
           PlotRangeClipping -> True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], {
         1336.5, -1122}, 
         ImageScaled[{0.5, 0}], {931, 557}]}, {
        Inset[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                Line[CompressedData["
1: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
KNpuxPG/xO/bhAYX54fi/wB3LXvr
                 "]]}, 
               "Charting`Private`Tag$130380#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 Dashing[{Small, Small}]], 
                Line[CompressedData["
1:eJwVlXs01GsXx8clVFSOoted6ggJOXSSy94zqCS55ZrGbQwi1zSMy5if+eEX
qSSJblKiKKI6UgmJ6E1ESoRI1En3SHjn/eNZe33Wep793fu79tqPhl+4E0uU
RqM1CM//YxArUZIGydBN2/jVq9cULat/1tzEZDhubbn056gpyotFBYQzkoHz
u2VZ/ldTbDwbeH/AJhnme7w7Py/ZjKqvdnLv7EiGzj5O5Q/rzfjMSXMy3isZ
AhPlJh1qNiPAw57vsclQtCY8wyffDBWUZC++L0+Gf0ZNkm8fsEDfeFA++AcP
GhnLcnhxiO/f4nE9Wx4E3fI+srSfgXkVjRW3eDxwq24rvCGwQUw3wje3eXD6
6c2n0U+24dmhUHGlrzxYmG/LT9u5A2ftjuGX9Smwtlrqim6nAybKmalUBaeA
Y2mb1Uq6M1Z5lGsnn00BxbjMbKcXu3C0Uvra+74U0Lcc7q+S8cD2DGM2S44P
0QW+uZ0HdmNP3UDdw2180Pz+InqNpg8OiMRmtqbyQepoWjST64cFzT2Zvbf5
YJU7nSczE4A/ROptHtbxgfdvxdt8CRY6mJfSbtzhw7f8wsPr/mChRDU3Juce
H941LRFnabMw6pz6bvtGPjSOF44Rriy0TQjRbXrEhx8nYyJ/VrBwynCu9eoL
PoSuOhLB8AxE57Ax4vRLPti4uegUBwRixaUO86w+PkjXGatP7wvEALXzlSH9
fFh9IS84iQjEDumt+WuG+DBQ0fv0w+VALBk7ElTwjg9LZTYNSPwKRNFVXE1q
nA+24j3aPDE27t4T8IozwQf+dqe8MWk2/tFt4uD6gQ8XLC9MJamxMamhb6Ps
Jz60DGVX3Wew0fXUGsm0n3zYmjOmsDSdjaov0/0jp/gwvaJXbD6bjaPyH+55
TfMh/Ohsf2ceG2MOV3EMZvjQx+930Chho9njFd2Kv4V+PHOdOlHBRrFFcYYL
ZvnQtdMr92MNG48SlhMv5vgg/teibp0mNnrWF9k0zfMhR2V0dHEbGzVmF5yv
oBFwttgg/N5TNl6LbfciRAnoDd3fkj7AxgPX9W+FiREQUcNcnD3CRotPR5e7
ixMw3hz80XqCjRJ6PyLoCwhIrE0azJtk4+Ngj8frJAh4Uqcy7f2Njccu1mkr
SBLQtKX4ntWU0J83aqSIFAF91uQT5i82rlInht8LeR99T4H2TzZO7H5r0bOQ
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
Hfh7XsgaRa9plm1c/B/NGJDk
                 "]]}, 
               "Charting`Private`Tag$130380#2"]}}, {}}, {
            GraphicsComplex[CompressedData["
1:eJxdmH1U19UdxwFxCi5cemYst5zP5WAOB1bYFFCRnTo+7SjLU7g0j9PMOOom
1AgFlZkPmClnHkqlBk0z9XQoJ1lqWviQpIhT5s8mD6IgISAgD8JvzfN5va9n
/9R5nff9fj8v7+9+7+deBs55Zfo8Px8fn7jv//O//19rLr0WcTwt6tF9OYfW
LFkRNWlYa8L4Use7Zva7NLXOca+M8GkJ3dLFLx+YfuqlYMffXE8cnxzqOCw4
89CaGMdvxX0YsSXecXPS6b05ixzH76oevm+l44OlPXIOZTnuHzjs4VMfOMZ/
+6S5lY0Jh6Pxh/GH8Yfxh/GH8Yfxh/GH8Yfxh/GH8S+5HHmlIeEb+cP4w/jD
+MP4w/jD+MP4w/jD+MP4w/jXBgwaEpFxUf4w/jD+MP4w/jD+MP4w/jD+MP4w
/jD+dbl5zzYk/Ef+MP4w/jD+MP4w/jD+MP4w/jD+MP4w/q07txbOzK6QP4w/
jD+MP4w/jD+MP4w/jD+MP4w/jH9bXXx5eMZ1+cP4w/jD+MP4w/jD+MP4w/jD
+MP4w/i3P/VwZ5+lN+UP4w/jD+MP4w/jD+MP4w/jD+MP4w/j3/GG56GGhFvy
h/GH8Yfxh/GH8Yfxh/GH8Yfxh/GH8X990ZRt83Mb5A/jD+MP4w/jD+MP4w/j
D+MP4w/jD+Of+tb+vJnZt+UP4w/jD+MP4w/jD+MP4w/jD+MP4w/jv6LgwfyJ
bzbLH8Yfxh/GH8Yfxh/GH8Yfxh/GH8Yfxn9l2ZKj4Rl35A/jD+MP4w/jD+MP
4w/jD+MP4w/jD+Of1rOkaHBKm/xh/GH8Yfxh/GH8Yfxh/GH8Yfxh/GH800dG
ePos7ZA/jD+MP4w/jD+MP4w/jD+MP4w/jD+M/6qZWdW+CzrlD+MP4w/jD+MP
4w/jD+MP4w/jD+MP47865U5LfYJX/jD+MP4w/jD+MP4w/jD+MP4w/jD+MP7j
p4f4Je72icEfxh/GH8Yfxh/GH8Yfxh/GH8Yfxh/G/9g1z1/n5/rKH8Yfxh/G
H8Yfxh/GH8Yfxh/GH8Yf1vwnb+g9e6efm39jzb+x5t9Y82+s+TfW/Btr/o01
/8aaf2PNv7Hm37hf0IJ3DxWlRY0akN/YlLBP6wkmLx73yfsRGYXKYfKbn84O
iM8+rxwm/y6+cmzfpZeVw+StyeEF83PL3HneWHlhS8nEN6+53Ji8/ccHbw1O
qXbnUWPlc18L9FvwncuNybsube+TuLteOazc6x0we2ejy43JfYa/EDo5q0k5
rHzyF5G/Wd/icmNyvz8NjgtJa1UOK3971Yz+Se0uNyb3P3ZtTuDiu8ph5TWx
iW1zu1xuTJ7es2RsU4j7HmHybm+v+vLmcLfeYT0/MuKZikF+Mff1s3tc05D1
/PicdK0n1h9Mznoih8lZT+QwOeuJHCZnPen+Zazc1pNyY3LWk+4PxsptPSk3
Jmc9kcPKbT0pNyZnPZHDym09KTcmZz2Rw8ptPSk3Jmc9kcPKbT0pNyZnPen8
YEzOeiKH9bytp/vOH/eY9cffw7pWDpyQfDItalbRjN5tCTu0vvl7E/nZhtvr
47OPKefvOeQ1W7o65ueeU87fS8hrf5UeNiSlVDl/jyBPqkr/deLuq27/svu+
8vDYyZOzKpVznyZ/Na3ngpC0G27/svuq8rOn0gMX1yrnPkg+NjN2SlOI27+4
byn/5P3nKga5/Yv7DHnUlZ4Li4Pd/sV9Qbn/wuVHg9z+xXmcPOYXp1ft93f7
F+dd5dNDNu9ob4u+b/+4d54kn5C8YcfG+g7lnNeU76zbk1LVqZzzEHls4ZSC
RR6vcs4b5IOXX6oIrXb7G/2c/L3AtQuHVvrGRDX+c7T/Ebd+jjww6WTHPvf3
V3LWD8x6gVkfMOsB5veH+b1hfl+Y3xPm94P5vWB+H5jfA2b+YeYbZn5h5hNm
/pTb+SJv6VfZ3sPf/16FQUNDgg9Gw//I3pSycczX4n9VP7MsvfmC+NLqc7vG
nbkirv3RB7dSissdJ7wc+NznVeK6PSOHRu6ucdzeMC44q06cPGRWaEdUg+On
P42sGX1b/NqSn8aVhjQ73pYy48SgO+KUI9/OORDc5vj6uMS8oA5xalBOylb/
TscRfutWtXeJo/aGff1kko/m40h0+fSwpb7iqAubSx9d7Kf5oz+SN2XufSK6
5WPNP/2RvCv1Dz227T6lnP5I7ucJP9gz9IJy+iO5f9LBuuP+V9z6tP6oPHDA
5qjF5S63/qj892V7HplV5dav9UfyH+S9V3h3Yo3LrT8qb5pX/u+wOuX0R/Ju
A7e87gly653+qDyued1pf7f+6Y/k3V+Zua2gvcnl1h+VZx3I21Xfopz+SN7j
s+D8v1W1utz6o/LK5KMZnnbl9EfygF6Xi/5cfNfl1h+Vj3rKM+9El/serT+S
r9lTtGzEbPe90R81f1GpHQNnue+P/qjnz49M+8kMxwWzt44e3H+bW8+P9Fo2
/9y74rsVl895ir8Q/93bK6547nHtf6zPWeuffNFnf7reB/M+mO8fZj3zPtYz
OfVh6sPsHzDrH1+fjUu2j4g+Jy7JfuPZ3IBi1eP74HnGw4yH2Z9gvid9XyPu
nK8KLnX72eO9M18oK1U9vjc9b+P1fhsPs//BfJ/63io+WzUt6arbD6t/W77R
c1X1+H71vI2HGS+2/VXj7XtXvbAVO0a+WOnqPf7DzkUnKl092w/0vI3X+228
2PZvjbf9Q+s5Nabggak33H6+uuihp/NvqB77C88zHma82PqDxtt+pHpn/C/c
HFPr6p3fNOqxnbWunu1Xet7G6/02Xmz9R+Ntf+P96Rsq7lT2dftb26Zded1i
61WP/Y/nGQ8zHqa/weyXqpc/oXtJgNsv2w4E5jeOaXT1bD9VPRuvejZe9ax/
qp7tv7x/9eXcPse8jju+feloWViT6rE/8zzjYcbD9GeY/Vz1/Hr8/KNm1787
up8pOju8xdWz/V71bLzq2XjVs/6vetYfeH/GY38MzbnpzgedIb/0HP5Zq+rR
P3ie8TDjtV/a+QKm36je1JORm8rc+aPzd5nVe/u2u3rWj1TPxquejVc9O7+o
nvUv3r92+Yi41IvufON9tb7lnYC7qkd/43nGw4yHOR/B9EPV275uxuIz7vzk
zZnmv8Hb6epZv1Q9G696Nl717PyletZfef+6L2vnPH/MK/Y9+dGDf2n2qh79
l+cZDzMe5nwH0695f2zLsCfyPI59WtdmftzsE0M9+jnPM179ycbDnB+1v1j/
5/1frb34+TsXHa9YF9nvw3pf1eN8wPOMhxmvf5+dT/Xvs/ME7+O8z/mD+xH5
/9+fuC/B3Jdg7kvqL3ZfgrkvaX+2+xLMfQnmvgRzX4K5L8Hcl2DuS/fN3737
Esx9Cea+pPmx+xLMfem/Oj0kxg==
             "], {{{
                EdgeForm[], 
                Directive[
                 AbsoluteThickness[1.6], 
                 GrayLevel[0.09], 
                 Opacity[0.06]], 
                GraphicsGroup[{
                  Polygon[CompressedData["
1:eJxNmAf8l9MXx+95SlP92iUVTS2l4dfUXv/SUCmRSsiIUISIElmRvbI32REK
ySrKlh0qKysr/kk4787n+3p+r1enc557z73nc+/z3M/9/L4NJ58wclqWUvrT
/yvl/hc3niu7VUnRVtqtqvwubnUspdpuu3pcpHzyqqm/jFt1+bJutdzKu1Vw
qy1f0a2G+su5NXfb3a2eW021MeY3Yanr1lhzMUcDYaLmHvLVNUdl4aqvNZC3
p/qp2VCeOnV9Hbu51fF4q+o0c2uk/lrCVKS5+rl1cuvstpfyqdnXrVh9rYWJ
mnvLU3NfrbOFWyutgbw26qdmW3nW2kFYqNNRnvH1HO/ubk08bql1NtC89fRc
rGf6e2ku5ugqTNTsJt9WuFsKVxetgbwGXqe+2z4eb3Nr79bDrbfmY0195KnZ
UzkdtEetNNefWgt9/dVHnaluE9wmsk9eZw+37h5vV53Bbgdo3xk3UGsA+xDl
UHN/edY6XJh4JyPkGT9U/WAfqfkGuA1TG2NGqY06h2o89XcIyxi3sYqpf5A8
9cfJU+cQzQuWn9w2uG3UWg9Q/Yny1ByvXOo18j1o6DZIWLpozU28rbHbaI8P
L4Flimof7HaUPPVPcJus3COFlbyj1U/NY+RZazOfu6nbJI/NYuw0t2PVD/Yj
VJO5/hUG8k5UHfpLWYyb5XayMFHzFHlqnqRccM3QGsibqX5qnirPN3KGsLCm
M+Wp2dxr7eV2nMfTNR9zzVY/dc6Sp/9seWrOFT5wnSNP/Xny1G/pc7dwO83j
XSzWNN/tfK0PXBfIg+tCeepfJE/9i+Wpf73bArdL3G6Qv1Q2V1gWyoOltddt
5Xaux2Ut6l/hdmUJLFfJg+VqebBcIw+Wa+XBcp38Ahm45gjLHOFYJExgqeh1
b3Z/v1t5i/o831ICy63yYLlNHiy3y4PlDnmw3CkPlrvk2Zu75dmbe+TBUsmi
/lK3Nh7v7XaZx4tLYHlAHiwPyoPlIXmwPCwPlkfkwfKoPFgekwfLEnmwtPea
7dzu9Xgf923dbtSe8U3xPT2pfQLX08IEluXCQf1n5Kn/ksY85bZMueQ9q35w
PScPriKLPXjB7UXtB+NXqB+877q94rbKraPnd3B73OOXVQdcb5aY41VhouZr
8s9pjqeFa7XWQN4a9VOz2Ofe1+15j9/SfKzpbXlqVrWo9YYwLdNc76ifOu+p
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
                   
                   "]], 
                  Polygon[CompressedData["
1:eJwtlHlMz3EYxz/PR0hCQqolRaWRFM3M8j+bv4z/8bfjT+U+yjEzzMyMZmZG
M3OGuXPN1ZyjmHO55mq5SfN6vH9/vPZ+P8/neD6f53vkz5w7ZU4MIUyGJOhH
kA71+N4WwkqohzRoJJfNWBY0BOVWwT5IhyZytege01qf04Aeg0xIJT6BHvc4
KPcDvkM1cTf0BlyHSuJcdA0cgAx4Ra4RvQA5UEDchn6G2X5+dDFshQAzkKVo
nWnMa3Sif6EWn4wuh50mv5HcMnSH6Sw+5x36NrFXRJfANpP3ml3pRVLU2hRy
o/Cl0BJ05ktwEcqCzrwa9kN/05wadLf3xtTzVNb2hLqgXDF+WFRvfc0K2GWq
5XOuotdMvfIaZ9DTid5ko7fgNuQlevoSfQHTgnr0CT5CFWEx+h4+mPwscm/Q
1wlfhLb6czD56f6OcLY+MJp4L/ET9KnXh6nEFYyNgTZ8JblynxvlW8m1oM2J
uUPQB/DQ5CeSe44+S9TyPb/BV6ghHo7+gt9Qksh1oH9gQ1CuL7XS4GjQGdvh
i2mt37k7Y8lQRryduAs+RvlSf4/wFuV9zxR8j6i7+pqR+JKou4wnHoDPgApT
zUz8QDgflKuCdX4H4iw4gj8MvYJy1fj1/k3gC+EK/rLJ/4Rz+LOmtT5nIX4z
dOAnwSH8Qfv/aEM7LMJsgc6gZ/4Y/8g013Mn8adM74p/k/P9OzDVKocF+E3e
Y/wEGMpdCmAcuZvEg/G5UX6s9xU/IqoXzeTuo/dMa/2MRYwVRo35HnfhTuJZ
+zuaw9igqL28Z01ex3QWP8M8/FrT3bxn+czNi/o3+T/oH5drjp8=
                   
                   "]]}]}, {}, {}, {}, {}}}], {}}}, {
          DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
           AxesOrigin -> {500., 0.}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, 
           ImagePadding -> {{80, 15}, {30, 10}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {500., 0.}, 
           DisplayFunction :> Identity, Epilog -> Text[
             Style["c)", {
               GrayLevel[0], 16}], 
             Offset[{5, -5}, 
              Scaled[{0, 1}]], {-1, 0}], 
           Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{"Fish biomass (g)", None}, {None, None}}, 
           FrameStyle -> Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {30, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotRange -> {{500, 850}, {0., 3.1*^7}}, 
           PlotRangeClipping -> True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {Automatic, Automatic}}, 
           Ticks -> {Automatic, Automatic}}], {
          Rational[931, 2], -1668}, 
         ImageScaled[{0.5, 0}], {931, 557}], 
        Inset[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                Line[CompressedData["
1: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
TPQ/qgEeJw==
                 "]]}, "Charting`Private`Tag$130842#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 Dashing[{Small, Small}]], 
                Line[CompressedData["
1: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
3Dni/quFPPwPfIJ0Ug==
                 "]]}, 
               "Charting`Private`Tag$130842#2"]}}, {}}, {
            GraphicsComplex[CompressedData["
1:eJxdmH1U19UdxwFxCi5cemYst5zP5WAOB1bYFFCRnTo+7SjLU7g0j9PMOOom
1AgFlZkPmClnHkqlBk0z9XQoJ1lqWviQpIhT5s8mD6IgISAgD8JvzfN5va9n
/9R5nff9fj8v7+9+7+deBs55Zfo8Px8fn7jv//O//19rLr0WcTwt6tF9OYfW
LFkRNWlYa8L4Use7Zva7NLXOca+M8GkJ3dLFLx+YfuqlYMffXE8cnxzqOCw4
89CaGMdvxX0YsSXecXPS6b05ixzH76oevm+l44OlPXIOZTnuHzjs4VMfOMZ/
+6S5lY0Jh6Pxh/GH8Yfxh/GH8Yfxh/GH8Yfxh/GH8S+5HHmlIeEb+cP4w/jD
+MP4w/jD+MP4w/jD+MP4w/jXBgwaEpFxUf4w/jD+MP4w/jD+MP4w/jD+MP4w
/jD+dbl5zzYk/Ef+MP4w/jD+MP4w/jD+MP4w/jD+MP4w/q07txbOzK6QP4w/
jD+MP4w/jD+MP4w/jD+MP4w/jH9bXXx5eMZ1+cP4w/jD+MP4w/jD+MP4w/jD
+MP4w/i3P/VwZ5+lN+UP4w/jD+MP4w/jD+MP4w/jD+MP4w/j3/GG56GGhFvy
h/GH8Yfxh/GH8Yfxh/GH8Yfxh/GH8X990ZRt83Mb5A/jD+MP4w/jD+MP4w/j
D+MP4w/jD+Of+tb+vJnZt+UP4w/jD+MP4w/jD+MP4w/jD+MP4w/jv6LgwfyJ
bzbLH8Yfxh/GH8Yfxh/GH8Yfxh/GH8Yfxn9l2ZKj4Rl35A/jD+MP4w/jD+MP
4w/jD+MP4w/jD+Of1rOkaHBKm/xh/GH8Yfxh/GH8Yfxh/GH8Yfxh/GH800dG
ePos7ZA/jD+MP4w/jD+MP4w/jD+MP4w/jD+M/6qZWdW+CzrlD+MP4w/jD+MP
4w/jD+MP4w/jD+MP47865U5LfYJX/jD+MP4w/jD+MP4w/jD+MP4w/jD+MP7j
p4f4Je72icEfxh/GH8Yfxh/GH8Yfxh/GH8Yfxh/G/9g1z1/n5/rKH8Yfxh/G
H8Yfxh/GH8Yfxh/GH8Yf1vwnb+g9e6efm39jzb+x5t9Y82+s+TfW/Btr/o01
/8aaf2PNv7Hm37hf0IJ3DxWlRY0akN/YlLBP6wkmLx73yfsRGYXKYfKbn84O
iM8+rxwm/y6+cmzfpZeVw+StyeEF83PL3HneWHlhS8nEN6+53Ji8/ccHbw1O
qXbnUWPlc18L9FvwncuNybsube+TuLteOazc6x0we2ejy43JfYa/EDo5q0k5
rHzyF5G/Wd/icmNyvz8NjgtJa1UOK3971Yz+Se0uNyb3P3ZtTuDiu8ph5TWx
iW1zu1xuTJ7es2RsU4j7HmHybm+v+vLmcLfeYT0/MuKZikF+Mff1s3tc05D1
/PicdK0n1h9Mznoih8lZT+QwOeuJHCZnPen+Zazc1pNyY3LWk+4PxsptPSk3
Jmc9kcPKbT0pNyZnPZHDym09KTcmZz2Rw8ptPSk3Jmc9kcPKbT0pNyZnPen8
YEzOeiKH9bytp/vOH/eY9cffw7pWDpyQfDItalbRjN5tCTu0vvl7E/nZhtvr
47OPKefvOeQ1W7o65ueeU87fS8hrf5UeNiSlVDl/jyBPqkr/deLuq27/svu+
8vDYyZOzKpVznyZ/Na3ngpC0G27/svuq8rOn0gMX1yrnPkg+NjN2SlOI27+4
byn/5P3nKga5/Yv7DHnUlZ4Li4Pd/sV9Qbn/wuVHg9z+xXmcPOYXp1ft93f7
F+dd5dNDNu9ob4u+b/+4d54kn5C8YcfG+g7lnNeU76zbk1LVqZzzEHls4ZSC
RR6vcs4b5IOXX6oIrXb7G/2c/L3AtQuHVvrGRDX+c7T/Ebd+jjww6WTHPvf3
V3LWD8x6gVkfMOsB5veH+b1hfl+Y3xPm94P5vWB+H5jfA2b+YeYbZn5h5hNm
/pTb+SJv6VfZ3sPf/16FQUNDgg9Gw//I3pSycczX4n9VP7MsvfmC+NLqc7vG
nbkirv3RB7dSissdJ7wc+NznVeK6PSOHRu6ucdzeMC44q06cPGRWaEdUg+On
P42sGX1b/NqSn8aVhjQ73pYy48SgO+KUI9/OORDc5vj6uMS8oA5xalBOylb/
TscRfutWtXeJo/aGff1kko/m40h0+fSwpb7iqAubSx9d7Kf5oz+SN2XufSK6
5WPNP/2RvCv1Dz227T6lnP5I7ucJP9gz9IJy+iO5f9LBuuP+V9z6tP6oPHDA
5qjF5S63/qj892V7HplV5dav9UfyH+S9V3h3Yo3LrT8qb5pX/u+wOuX0R/Ju
A7e87gly653+qDyued1pf7f+6Y/k3V+Zua2gvcnl1h+VZx3I21Xfopz+SN7j
s+D8v1W1utz6o/LK5KMZnnbl9EfygF6Xi/5cfNfl1h+Vj3rKM+9El/serT+S
r9lTtGzEbPe90R81f1GpHQNnue+P/qjnz49M+8kMxwWzt44e3H+bW8+P9Fo2
/9y74rsVl895ir8Q/93bK6547nHtf6zPWeuffNFnf7reB/M+mO8fZj3zPtYz
OfVh6sPsHzDrH1+fjUu2j4g+Jy7JfuPZ3IBi1eP74HnGw4yH2Z9gvid9XyPu
nK8KLnX72eO9M18oK1U9vjc9b+P1fhsPs//BfJ/63io+WzUt6arbD6t/W77R
c1X1+H71vI2HGS+2/VXj7XtXvbAVO0a+WOnqPf7DzkUnKl092w/0vI3X+228
2PZvjbf9Q+s5Nabggak33H6+uuihp/NvqB77C88zHma82PqDxtt+pHpn/C/c
HFPr6p3fNOqxnbWunu1Xet7G6/02Xmz9R+Ntf+P96Rsq7lT2dftb26Zded1i
61WP/Y/nGQ8zHqa/weyXqpc/oXtJgNsv2w4E5jeOaXT1bD9VPRuvejZe9ax/
qp7tv7x/9eXcPse8jju+feloWViT6rE/8zzjYcbD9GeY/Vz1/Hr8/KNm1787
up8pOju8xdWz/V71bLzq2XjVs/6vetYfeH/GY38MzbnpzgedIb/0HP5Zq+rR
P3ie8TDjtV/a+QKm36je1JORm8rc+aPzd5nVe/u2u3rWj1TPxquejVc9O7+o
nvUv3r92+Yi41IvufON9tb7lnYC7qkd/43nGw4yHOR/B9EPV275uxuIz7vzk
zZnmv8Hb6epZv1Q9G696Nl717PyletZfef+6L2vnPH/MK/Y9+dGDf2n2qh79
l+cZDzMe5nwH0695f2zLsCfyPI59WtdmftzsE0M9+jnPM179ycbDnB+1v1j/
5/1frb34+TsXHa9YF9nvw3pf1eN8wPOMhxmvf5+dT/Xvs/ME7+O8z/mD+xH5
/9+fuC/B3Jdg7kvqL3ZfgrkvaX+2+xLMfQnmvgRzX4K5L8Hcl2DuS/fN3737
Esx9Cea+pPmx+xLMfem/Oj0kxg==
             "], {{{
                EdgeForm[], 
                Directive[
                 AbsoluteThickness[1.6], 
                 GrayLevel[0.09], 
                 Opacity[0.06]], 
                GraphicsGroup[{
                  Polygon[CompressedData["
1:eJxNmAf8l9MXx+95SlP92iUVTS2l4dfUXv/SUCmRSsiIUISIElmRvbI32REK
ySrKlh0qKysr/kk4787n+3p+r1enc557z73nc+/z3M/9/L4NJ58wclqWUvrT
/yvl/hc3niu7VUnRVtqtqvwubnUspdpuu3pcpHzyqqm/jFt1+bJutdzKu1Vw
qy1f0a2G+su5NXfb3a2eW021MeY3Yanr1lhzMUcDYaLmHvLVNUdl4aqvNZC3
p/qp2VCeOnV9Hbu51fF4q+o0c2uk/lrCVKS5+rl1cuvstpfyqdnXrVh9rYWJ
mnvLU3NfrbOFWyutgbw26qdmW3nW2kFYqNNRnvH1HO/ubk08bql1NtC89fRc
rGf6e2ku5ugqTNTsJt9WuFsKVxetgbwGXqe+2z4eb3Nr79bDrbfmY0195KnZ
UzkdtEetNNefWgt9/dVHnaluE9wmsk9eZw+37h5vV53Bbgdo3xk3UGsA+xDl
UHN/edY6XJh4JyPkGT9U/WAfqfkGuA1TG2NGqY06h2o89XcIyxi3sYqpf5A8
9cfJU+cQzQuWn9w2uG3UWg9Q/Yny1ByvXOo18j1o6DZIWLpozU28rbHbaI8P
L4Flimof7HaUPPVPcJus3COFlbyj1U/NY+RZazOfu6nbJI/NYuw0t2PVD/Yj
VJO5/hUG8k5UHfpLWYyb5XayMFHzFHlqnqRccM3QGsibqX5qnirPN3KGsLCm
M+Wp2dxr7eV2nMfTNR9zzVY/dc6Sp/9seWrOFT5wnSNP/Xny1G/pc7dwO83j
XSzWNN/tfK0PXBfIg+tCeepfJE/9i+Wpf73bArdL3G6Qv1Q2V1gWyoOltddt
5Xaux2Ut6l/hdmUJLFfJg+VqebBcIw+Wa+XBcp38Ahm45gjLHOFYJExgqeh1
b3Z/v1t5i/o831ICy63yYLlNHiy3y4PlDnmw3CkPlrvk2Zu75dmbe+TBUsmi
/lK3Nh7v7XaZx4tLYHlAHiwPyoPlIXmwPCwPlkfkwfKoPFgekwfLEnmwtPea
7dzu9Xgf923dbtSe8U3xPT2pfQLX08IEluXCQf1n5Kn/ksY85bZMueQ9q35w
PScPriKLPXjB7UXtB+NXqB+877q94rbKraPnd3B73OOXVQdcb5aY41VhouZr
8s9pjqeFa7XWQN4a9VOz2Ofe1+15j9/SfKzpbXlqVrWo9YYwLdNc76ifOu+p
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
                   
                   "]], 
                  Polygon[CompressedData["
1:eJwtlHlMz3EYxz/PR0hCQqolRaWRFM3M8j+bv4z/8bfjT+U+yjEzzMyMZmZG
M3OGuXPN1ZyjmHO55mq5SfN6vH9/vPZ+P8/neD6f53vkz5w7ZU4MIUyGJOhH
kA71+N4WwkqohzRoJJfNWBY0BOVWwT5IhyZytege01qf04Aeg0xIJT6BHvc4
KPcDvkM1cTf0BlyHSuJcdA0cgAx4Ra4RvQA5UEDchn6G2X5+dDFshQAzkKVo
nWnMa3Sif6EWn4wuh50mv5HcMnSH6Sw+5x36NrFXRJfANpP3ml3pRVLU2hRy
o/Cl0BJ05ktwEcqCzrwa9kN/05wadLf3xtTzVNb2hLqgXDF+WFRvfc0K2GWq
5XOuotdMvfIaZ9DTid5ko7fgNuQlevoSfQHTgnr0CT5CFWEx+h4+mPwscm/Q
1wlfhLb6czD56f6OcLY+MJp4L/ET9KnXh6nEFYyNgTZ8JblynxvlW8m1oM2J
uUPQB/DQ5CeSe44+S9TyPb/BV6ghHo7+gt9Qksh1oH9gQ1CuL7XS4GjQGdvh
i2mt37k7Y8lQRryduAs+RvlSf4/wFuV9zxR8j6i7+pqR+JKou4wnHoDPgApT
zUz8QDgflKuCdX4H4iw4gj8MvYJy1fj1/k3gC+EK/rLJ/4Rz+LOmtT5nIX4z
dOAnwSH8Qfv/aEM7LMJsgc6gZ/4Y/8g013Mn8adM74p/k/P9OzDVKocF+E3e
Y/wEGMpdCmAcuZvEg/G5UX6s9xU/IqoXzeTuo/dMa/2MRYwVRo35HnfhTuJZ
+zuaw9igqL28Z01ex3QWP8M8/FrT3bxn+czNi/o3+T/oH5drjp8=
                   
                   "]]}]}, {}, {}, {}, {}}}], {}}}, {
          DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
           AxesOrigin -> {500., 0.}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, 
           ImagePadding -> {{80, 15}, {30, 10}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {500., 0.}, 
           DisplayFunction :> Identity, Epilog -> Text[
             Style["g)", {
               GrayLevel[0], 16}], 
             Offset[{5, -5}, 
              Scaled[{0, 1}]], {-1, 0}], 
           Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {30, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotRange -> {{500, 850}, {0., 3.1*^7}}, 
           PlotRangeClipping -> True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {Automatic, Automatic}}, 
           Ticks -> {Automatic, Automatic}}], {1336.5, -1668}, 
         ImageScaled[{0.5, 0}], {931, 557}]}, {
        Inset[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                Line[CompressedData["
1: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
                 "]]}, 
               "Charting`Private`Tag$130494#1"]}}, {}}, {
            GraphicsComplex[CompressedData["
1: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
h/pg5yXsvISdl7DzEnZe+i+fuQxp
             "], {{{
                EdgeForm[], 
                Directive[
                 AbsoluteThickness[1.6], 
                 GrayLevel[0.09], 
                 Opacity[0.06]], 
                GraphicsGroup[{
                  Polygon[CompressedData["
1:eJxNmAf8l9MXx+95SlP92iUVTS2l4dfUXv/SUCmRSsiIUISIElmRvbI32REK
ySrKlh0qKysr/kk4787n+3p+r1enc557z73nc+/z3M/9/L4NJ58wclqWUvrT
/yvl/hc3niu7VUnRVtqtqvwubnUspdpuu3pcpHzyqqm/jFt1+bJutdzKu1Vw
qy1f0a2G+su5NXfb3a2eW021MeY3Yanr1lhzMUcDYaLmHvLVNUdl4aqvNZC3
p/qp2VCeOnV9Hbu51fF4q+o0c2uk/lrCVKS5+rl1cuvstpfyqdnXrVh9rYWJ
mnvLU3NfrbOFWyutgbw26qdmW3nW2kFYqNNRnvH1HO/ubk08bql1NtC89fRc
rGf6e2ku5ugqTNTsJt9WuFsKVxetgbwGXqe+2z4eb3Nr79bDrbfmY0195KnZ
UzkdtEetNNefWgt9/dVHnaluE9wmsk9eZw+37h5vV53Bbgdo3xk3UGsA+xDl
UHN/edY6XJh4JyPkGT9U/WAfqfkGuA1TG2NGqY06h2o89XcIyxi3sYqpf5A8
9cfJU+cQzQuWn9w2uG3UWg9Q/Yny1ByvXOo18j1o6DZIWLpozU28rbHbaI8P
L4Flimof7HaUPPVPcJus3COFlbyj1U/NY+RZazOfu6nbJI/NYuw0t2PVD/Yj
VJO5/hUG8k5UHfpLWYyb5XayMFHzFHlqnqRccM3QGsibqX5qnirPN3KGsLCm
M+Wp2dxr7eV2nMfTNR9zzVY/dc6Sp/9seWrOFT5wnSNP/Xny1G/pc7dwO83j
XSzWNN/tfK0PXBfIg+tCeepfJE/9i+Wpf73bArdL3G6Qv1Q2V1gWyoOltddt
5Xaux2Ut6l/hdmUJLFfJg+VqebBcIw+Wa+XBcp38Ahm45gjLHOFYJExgqeh1
b3Z/v1t5i/o831ICy63yYLlNHiy3y4PlDnmw3CkPlrvk2Zu75dmbe+TBUsmi
/lK3Nh7v7XaZx4tLYHlAHiwPyoPlIXmwPCwPlkfkwfKoPFgekwfLEnmwtPea
7dzu9Xgf923dbtSe8U3xPT2pfQLX08IEluXCQf1n5Kn/ksY85bZMueQ9q35w
PScPriKLPXjB7UXtB+NXqB+877q94rbKraPnd3B73OOXVQdcb5aY41VhouZr
8s9pjqeFa7XWQN4a9VOz2Ofe1+15j9/SfKzpbXlqVrWo9YYwLdNc76ifOu+p
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
                   
                   "]], 
                  Polygon[CompressedData["
1:eJwtlHlMz3EYxz/PR0hCQqolRaWRFM3M8j+bv4z/8bfjT+U+yjEzzMyMZmZG
M3OGuXPN1ZyjmHO55mq5SfN6vH9/vPZ+P8/neD6f53vkz5w7ZU4MIUyGJOhH
kA71+N4WwkqohzRoJJfNWBY0BOVWwT5IhyZytege01qf04Aeg0xIJT6BHvc4
KPcDvkM1cTf0BlyHSuJcdA0cgAx4Ra4RvQA5UEDchn6G2X5+dDFshQAzkKVo
nWnMa3Sif6EWn4wuh50mv5HcMnSH6Sw+5x36NrFXRJfANpP3ml3pRVLU2hRy
o/Cl0BJ05ktwEcqCzrwa9kN/05wadLf3xtTzVNb2hLqgXDF+WFRvfc0K2GWq
5XOuotdMvfIaZ9DTid5ko7fgNuQlevoSfQHTgnr0CT5CFWEx+h4+mPwscm/Q
1wlfhLb6czD56f6OcLY+MJp4L/ET9KnXh6nEFYyNgTZ8JblynxvlW8m1oM2J
uUPQB/DQ5CeSe44+S9TyPb/BV6ghHo7+gt9Qksh1oH9gQ1CuL7XS4GjQGdvh
i2mt37k7Y8lQRryduAs+RvlSf4/wFuV9zxR8j6i7+pqR+JKou4wnHoDPgApT
zUz8QDgflKuCdX4H4iw4gj8MvYJy1fj1/k3gC+EK/rLJ/4Rz+LOmtT5nIX4z
dOAnwSH8Qfv/aEM7LMJsgc6gZ/4Y/8g013Mn8adM74p/k/P9OzDVKocF+E3e
Y/wEGMpdCmAcuZvEg/G5UX6s9xU/IqoXzeTuo/dMa/2MRYwVRo35HnfhTuJZ
+zuaw9igqL28Z01ex3QWP8M8/FrT3bxn+czNi/o3+T/oH5drjp8=
                   
                   "]]}]}, {}, {}, {}, {}}}], {}}}, {
          DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
           AxesOrigin -> {500., 0.}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, 
           ImagePadding -> {{80, 15}, {30, 10}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {500., 0.}, 
           DisplayFunction :> Identity, Epilog -> Text[
             Style["d)", {
               GrayLevel[0], 16}], 
             Offset[{5, -5}, 
              Scaled[{0, 1}]], {-1, 0}], 
           Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{
             "Fish excretion (mol N \!\(\*SuperscriptBox[\(L\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(d\), \(-1\)]\))", None}, {"Time (d)", None}}, 
           FrameStyle -> Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {30, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotRange -> {{500, 850}, {0., 0.00025}},
            PlotRangeClipping -> True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {Automatic, Automatic}}, 
           Ticks -> {Automatic, Automatic}}], {
          Rational[931, 2], -2214.}, 
         ImageScaled[{0.5, 0}], {931, 557}], 
        Inset[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                Line[CompressedData["
1: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
fuWAb1RkSIkOgV7Xxj1d2ceBXKNKJTEDApkWXzqsOo7rwRIzvw8EKih+tHcU
25DBPMUxJRCrpGFz/QQH4jxf19uZEUii9D99eooDKoKdq7+sIdCnspDePiEu
lGbI1wqvI9Dxyo1bn4hx4bL84yFJWwI9rJky3i7Lha7d5+sDnQm0sFZBZ5kc
F6Jy8ow0XAh0udZIXlKeC3olTfm12FFv9g2WKXDheX35LPZWAjnVv7u9UIUL
J15OGtRsJ9BgY47KuCYX1o5u4/x2J5Beq5tAqj4XpG7XeJ33JdD3M+6+tAEX
Mle3dhr7EShzo2fTIUMupEUKH/mIrVbsk2uzlAs5Rknjcv4Emns9aOfkCi68
Fmw8Rh/A/b1PPNtlyoV1n9cFrQrG/QfvRbDsuNAuvcZJNJxAHtkPv0vbc+H3
gZ1HY7HV9hY5CzpwwbBF4ZNUBIGSm4qXNG/iQlPiBW/FSALxCqvbTjjh/y2a
MzQo3D+yA37u4EIyVZglSRNIdc5cwXt+XFg8MyDH5ySBmr/VX0nYzwVUELq6
HjvpZYqZvz8XLDZ0wKo4As2O0uKwDuDx/R66KhZPoD9CJqKpgVzoPj3ad+kU
gSpH9s2JOMqFrF1aFvlJBAr4/ELeOpoLDY7l1w+fIxBRGvdIm88FWTJ18A12
15XNW2ec4EJcpXkNOxWvN7f280UxXNCKv6bahG3ePKK6OJ4LjQvMLRZfIJBc
LVNbOpkLalc62ZWXCFRcyNVvvc6Fm3+D3DKvE6jMwcD+VRrOl+4N1ih2RU+b
f1E6F0yNth+1SiNQlazx7XOZXPB8KP6sG7vh0G+mUxYXJJYnNDEyCNSj46Zc
m8+FbcOz34XdIJDk+eWzSkq4cGaiwKP7NoGkDb5o55Xi8ZuqnNXJJpDMy0SL
y2VcuGSY77UfW3Gkjwyr4IK+0ZPO39hajmkTK19y4e3QKbvhHAKtEJcayH+D
n/9bPawvD++nY99a0tq4oOF35WXKXQLVSs+/FN/OBSMPj/RabLi9cufRDjy/
q8/1Re8RSKU1usPuMxf8TAzdDmE3I9bXsa9ccOl6ImV5n0AOMzz77X9yITdV
xKLzAYHM+K1CkxNcWKg3/KCzkEB56jPLuie5kCI/HCpZhNdP4SJu/RTeH7pX
h1ZjT347JnpDkAdzhQMXpmA/slUUdxThgcsc9xjrxwQykHRecFOcB8HiJvuv
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
aDZ2W2ItE9nYmo5PYbvF6f5JMGei/wF/y47g
                 "]]}, 
               "Charting`Private`Tag$130956#1"]}}, {}}, {
            GraphicsComplex[CompressedData["
1:eJxd2H+s11Udx3GGDhdCTDNCUMGZ6JyuRKByLT5wVdC00Y1kQFwhA0Zw48qv
e/lx4d4LcYF7gZmILZ3ummv8KCAZK9slvoUoWGE0SyhWunUrMGri2FAXVN9z
H+/v7uEP2HOv8zmfJ5/P+bzf53xv/PqC6lm9e/XqNeF/f/3/367zJ7tGvdxS
LDj++pFLY7aUxg+/UFN1ssI7Hh54YuK/Knxl68gv11y2Jrj2J9WvzRtU4df/
Xle17I4K3zloS+e6cRV+YsKPRm2dXOHzDb/a3TG/wpN3nL5lT3OFXzp5RUfn
tgoP6Tt88Gu7Ksx/2LhBp/56vi38MX/MH/PH/DF/zB/zx/wxf8wf8z/+4ox/
H921Pvwxf8wf88f8MX/MH/PH/DF/zB/zb7lpR+89M78d/pg/5o/5Y/6YP+aP
+WP+mD/mj/nftfXdj2/9REv4Y/6YP+aP+WP+mD/mj/lj/pg/5n/kI4urz32v
Mfwxf8wf88f8MX/MH/PH/DF/zB/zv+2dy5d19qkPf8wf88f8MX/MH/PH/DF/
zB/zx/zbf/3kc+sW1oU/5o/5Y/6YP+aP+WP+mD/mj/lj/qemPdTe0flo+GP+
mD/mj/lj/pg/5o/5Y/6YP+bftLxz1psTHwh/zB/zx/wxf8wf88f8MX/MH/PH
/OsSF/wxf8wf88f8MX/MH/PH/DF/zB/zP5HeR/hj/pg/5o/5Y/6YP+aP+WP+
mD/mvzF9D+GP+WP+mD/mj/lj/pg/5o/5Y/6Y/62pHoU/5o/5Y/6YP+aP+WP+
mD/mj/lj/q+kfhD+mD/mj/lj/pg/5o/5Y/6YP+aP+Y9I/Tj8MX/MH/PH/DF/
zB/zx/wxf8wf829O+6Hwx/wxf8wf88f8MX/MH/PH/DF/zP+3aT8a/pg/5o/5
Y/6YP+aP+WP+mD/mj/kPTeeB8Mf8MX/MH/PH/DF/zB/zx/wxf5ydH4vs/Fhk
58ciOz8W2fmxyM6PRXZ+LLLzY5GdH4vs/Fhk58ciOz8WAz869/nOY/bHm7L9
9KaSvKHc7zZGjuVpP9ia7WdbI/9jud+siRzL036sKdtPNkW+rHy/5ZFj+Z/K
8y2KHMuXl8d/M3IsX1nmqZFjea/yn08fkGP54jQ+1gOWL033ixzLTybfyLG8
Pv1/I8fy1A+bsn7eVGTPv8ief+SpH7Vm/bS1yN5/kb3/yF9N6yVyfObdbdOr
OtbEeup5/tlUkltPciy3nnqeP1ojt57kWG499dz/N0VuPcmx3HqSY7n1JMdy
60mO5daTHMutJzmWW09yLLee5FhuPcmx3Hrquf9qKrLnX2TPP3Lrqef+p7XI
3n+Rvf/IrSc5tv78Hnax+cZ7lh1tKZ4529F/We3m+H793iR/sObMsJqb2iL3
e4784rERI6tOVuqX30vku8esGH/rlrWR+z1CPmPvoan9720u9ayvjZEnnxVZ
/ayPPN1vSVYf6yI/Wp6vNnLnQfmm8vgZkTtvydeX+e7InWfkfyjP95V4vs4L
8lvKvnOy+lMXedpfLczqS33kqf83RG4/Ka8tv8/Vkduvyfs0DD0++ExL5PZD
8klXvHlg1Mh1kdtvyF/YtnnnxFUbItfP5e/dfN9T8460F8W5n46+vFRZP6X+
449+uKfy+6vc+sHWC7Y+sPWAvX/sfWPvF3uf2PvD3hf2frD3gT1/7Hljzxd7
ntjzw/YXP1j0ytOXDrYUbzz9yQUznm0v4bX9alvunbQheHTj/idv67su+G9n
/7N9QKkl+M4D7Q2n31kV/MSz1z+3b3JD8PnVuw83HnosePcvV53YUjM7+K2+
Y784YX518PSfn537+e+MCb8+54cU+wbPDB434oNzN1R9K/jgZ/5ZfXj/kuDp
D0+7/cP7VwavururZdCC5uBjR59ZcNdLa4OvmzLpa1+6bH3w/H9cef/ch9qC
f1Z/aNTapzYXPdfHpvC9Zu+cg0vPtcf71h/lLw/b+7tp2zdk66k18qWPX+gq
atZFrj/Kh/ce+/7N16zJ1l9T5Hu6rr524NbVkeuP8qte/f6Yty41RK4/yhdt
Hzl757yFkeuP8u0fa7v29O45keuP8lM/nPKbD/p9NXL9MeYf3TZz4YBR8fz0
x3h+E4Ze3Lf1kcj1R/mEt8/++PC5+ZHrj/KxA2a/+N3+SyLXH+V/ueP3bcc6
VmTfW1PkXxj+/IjeQ5qL7PlHvnn/lKHXz1qbfZ+tkZ+656p+n93TWmTvP/Lb
3zhyofr9jZHrj/KVjzZ11VZtDu5M662U5aVsfZay+aP+WZ9T2z/3jV5718R8
2HzY94+tZ/NZz3L3x+6P1Q9s/fO9IX1vwX9Ozy/u5/twvfHYeKw+Yd9T9r2X
svcZ9/O9ud54bDxW/7Dv0/xNqd4EF2l9xf18v643HhuP1Vfsezf/I6neBb+d
1nvcTz1wvfHYeKx+Y/XD/L9I9Ta4Kn1/cT/1xfXGY+Ox/oDVI/Pfl+p98IOp
HsT91CvXG4+Nx/oPVt/M3zf1m+DrUn2K+6l/rjceG4/1N6xemr8x9btK/0z1
Mu6nnrre+Hhf3eOx/hnPs7v+mv9E8qn0/+RTuJ/67Hrjo150j8f6c9SP7npu
/p3peQe/kJ533E+9d73x2His/2P9wfzvpfUU/FhaT3E//cP1xmPjsf0F1m/M
/3j6XoIHpO8l7qcfud54bHy8v+79C9a/zP+pVA+Cd6V6EPfT31xvPDYe2x9h
/TDb7wV317siq59xvfFZfQy2/8rqa8w/MtXz4MWpnsf99F/XG4+Nj++xe38X
3193v872u8Hd/arI+l9cb3zW34LtH7P+mO+3g69O/TbuZ3+Q9edg47H9adbf
i+w8lO//o77k5yfnJey8hJ2Xeu43GrP+XZ/1u7pg5yXsvISdl7DzUs/1XZet
h/pg5yXsvISdl7DzEnZe+i+fuQxp
             "], {{{
                EdgeForm[], 
                Directive[
                 AbsoluteThickness[1.6], 
                 GrayLevel[0.09], 
                 Opacity[0.06]], 
                GraphicsGroup[{
                  Polygon[CompressedData["
1:eJxNmAf8l9MXx+95SlP92iUVTS2l4dfUXv/SUCmRSsiIUISIElmRvbI32REK
ySrKlh0qKysr/kk4787n+3p+r1enc557z73nc+/z3M/9/L4NJ58wclqWUvrT
/yvl/hc3niu7VUnRVtqtqvwubnUspdpuu3pcpHzyqqm/jFt1+bJutdzKu1Vw
qy1f0a2G+su5NXfb3a2eW021MeY3Yanr1lhzMUcDYaLmHvLVNUdl4aqvNZC3
p/qp2VCeOnV9Hbu51fF4q+o0c2uk/lrCVKS5+rl1cuvstpfyqdnXrVh9rYWJ
mnvLU3NfrbOFWyutgbw26qdmW3nW2kFYqNNRnvH1HO/ubk08bql1NtC89fRc
rGf6e2ku5ugqTNTsJt9WuFsKVxetgbwGXqe+2z4eb3Nr79bDrbfmY0195KnZ
UzkdtEetNNefWgt9/dVHnaluE9wmsk9eZw+37h5vV53Bbgdo3xk3UGsA+xDl
UHN/edY6XJh4JyPkGT9U/WAfqfkGuA1TG2NGqY06h2o89XcIyxi3sYqpf5A8
9cfJU+cQzQuWn9w2uG3UWg9Q/Yny1ByvXOo18j1o6DZIWLpozU28rbHbaI8P
L4Flimof7HaUPPVPcJus3COFlbyj1U/NY+RZazOfu6nbJI/NYuw0t2PVD/Yj
VJO5/hUG8k5UHfpLWYyb5XayMFHzFHlqnqRccM3QGsibqX5qnirPN3KGsLCm
M+Wp2dxr7eV2nMfTNR9zzVY/dc6Sp/9seWrOFT5wnSNP/Xny1G/pc7dwO83j
XSzWNN/tfK0PXBfIg+tCeepfJE/9i+Wpf73bArdL3G6Qv1Q2V1gWyoOltddt
5Xaux2Ut6l/hdmUJLFfJg+VqebBcIw+Wa+XBcp38Ahm45gjLHOFYJExgqeh1
b3Z/v1t5i/o831ICy63yYLlNHiy3y4PlDnmw3CkPlrvk2Zu75dmbe+TBUsmi
/lK3Nh7v7XaZx4tLYHlAHiwPyoPlIXmwPCwPlkfkwfKoPFgekwfLEnmwtPea
7dzu9Xgf923dbtSe8U3xPT2pfQLX08IEluXCQf1n5Kn/ksY85bZMueQ9q35w
PScPriKLPXjB7UXtB+NXqB+877q94rbKraPnd3B73OOXVQdcb5aY41VhouZr
8s9pjqeFa7XWQN4a9VOz2Ofe1+15j9/SfKzpbXlqVrWo9YYwLdNc76ifOu+p
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
                   
                   "]], 
                  Polygon[CompressedData["
1:eJwtlHlMz3EYxz/PR0hCQqolRaWRFM3M8j+bv4z/8bfjT+U+yjEzzMyMZmZG
M3OGuXPN1ZyjmHO55mq5SfN6vH9/vPZ+P8/neD6f53vkz5w7ZU4MIUyGJOhH
kA71+N4WwkqohzRoJJfNWBY0BOVWwT5IhyZytege01qf04Aeg0xIJT6BHvc4
KPcDvkM1cTf0BlyHSuJcdA0cgAx4Ra4RvQA5UEDchn6G2X5+dDFshQAzkKVo
nWnMa3Sif6EWn4wuh50mv5HcMnSH6Sw+5x36NrFXRJfANpP3ml3pRVLU2hRy
o/Cl0BJ05ktwEcqCzrwa9kN/05wadLf3xtTzVNb2hLqgXDF+WFRvfc0K2GWq
5XOuotdMvfIaZ9DTid5ko7fgNuQlevoSfQHTgnr0CT5CFWEx+h4+mPwscm/Q
1wlfhLb6czD56f6OcLY+MJp4L/ET9KnXh6nEFYyNgTZ8JblynxvlW8m1oM2J
uUPQB/DQ5CeSe44+S9TyPb/BV6ghHo7+gt9Qksh1oH9gQ1CuL7XS4GjQGdvh
i2mt37k7Y8lQRryduAs+RvlSf4/wFuV9zxR8j6i7+pqR+JKou4wnHoDPgApT
zUz8QDgflKuCdX4H4iw4gj8MvYJy1fj1/k3gC+EK/rLJ/4Rz+LOmtT5nIX4z
dOAnwSH8Qfv/aEM7LMJsgc6gZ/4Y/8g013Mn8adM74p/k/P9OzDVKocF+E3e
Y/wEGMpdCmAcuZvEg/G5UX6s9xU/IqoXzeTuo/dMa/2MRYwVRo35HnfhTuJZ
+zuaw9igqL28Z01ex3QWP8M8/FrT3bxn+czNi/o3+T/oH5drjp8=
                   
                   "]]}]}, {}, {}, {}, {}}}], {}}}, {
          DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
           AxesOrigin -> {500., 0.}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, 
           ImagePadding -> {{80, 15}, {30, 10}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {500., 0.}, 
           DisplayFunction :> Identity, Epilog -> Text[
             Style["h)", {
               GrayLevel[0], 16}], 
             Offset[{5, -5}, 
              Scaled[{0, 1}]], {-1, 0}], 
           Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{None, None}, {"Time (d)", None}}, FrameStyle -> 
           Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {30, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotRange -> {{500, 850}, {0., 0.00025}},
            PlotRangeClipping -> True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {Automatic, Automatic}}, 
           Ticks -> {Automatic, Automatic}}], {1336.5, -2214.}, 
         ImageScaled[{0.5, 0}], {931, 557}]}}, {}}, ImageSize -> Full, {
     PlotRangePadding -> {6, 5}}, ImageSize -> Full], 
    Placed[
     Unevaluated[
      LineLegend[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        RGBColor[0.880722, 0.611041, 0.142051], {
         RGBColor[0.880722, 0.611041, 0.142051], 
         Dashing[{Small, Small}]}}, {
       "Fish absent", "Fish present", "Fish carrying capacity"}, 
       LegendMarkerSize -> 60, LegendLayout -> {"Row", 1}]], {0.5, 0}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.8430770396328907`*^9, 3.843078180354985*^9, {3.8430782505204973`*^9, 
   3.843078299932973*^9}, 3.84307883040012*^9, {3.8430788751235647`*^9, 
   3.843078901311507*^9}, 3.844510794368659*^9, 3.8455667832765913`*^9, 
   3.845566983013558*^9, 3.8456451755515957`*^9, 3.845645218641218*^9, 
   3.845645306326708*^9, 3.854026872585758*^9},
 CellLabel->"Out[859]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsXQe8HUXVn7y95ZXkhYSSkARS6B2JKAGVhwIWbIgUUSAgIkWwi92XoGKl
SBcVUFA/EbsfinwGRdEPsSAoWBBBPxEVe8NCvnvK7MzsPbM7s7vvvvvi3d9v
9903OzvnnP8502fOPOXYl534vFOPfdlJzz122eNfcuyLTjzpuS9dduALX9IJ
SmYp1TpBqeGXLVONzu/1SoU/XqDUINIg0iDSINIg0iDSINIg0gYb6TX4Jml2
HkOKr6UUlnQeLR12pBAPEzhNTPvhFP2UzuMrnfvy9MXj8EXzos7jH537wc59
VeeeA6GL8d0wkD+/c9/FcR7q3L/p3B/r3Pt17q2FtHfPSRbpnprH5ln8/+1Z
Nr/J/+v7UxC6iD4CNh7Q8Zv4TIDV0zU8K4TEd89JtzyfyRGKNPR++G+IeHms
sq4F+Bz7KH/35859TOfeqHOPdO5Hd+5v8Lt/d+698vkvpodBJ8fJciC9uJb/
/wT8tzmF3c1ha+G/BoY15ncef+DwCzzsrhSSlHOEaoJZb9G59+ncE4rNbAnR
2rjzeGTnBhm3BSANC4/he5PO3c5Jadi821mR4vbs3JCy2pSSg8+3YqKQ+T6W
kxwZ4bAjbefSHK1SpNyNcqj2kNst6B2UHg/r3Pt37u0hAEJbMsQkYOOpLOA/
FRnDQgxOdtXMKJ2MSv6Lo34Z/psdT7EdBmlb/nosh+CYjFhDFhHt8RQijr9/
RfF2UKbAgMw7SmK/xeY3obDndh46z6iEnlCcPltDRmV48naOc6sF4xs57E5l
aIDKP6SoKNbpQfonsJRcBrR1+hrDj3RuoPGgiZOAmFA2b6JSCIr5Zbkg+qs7
96/xW4p3ndJlioknyaXDvmviNQ/uPP5owXohhF6C76YR7qaG73uKKmgbPvj9
PsU5m+m/i+NDEc7WHQzVAHqCfsyIOdm5f2+lB7XMKzSynF5gjmhqPhwVMX0n
jErcxqMt0V9uojqi54jkIE2Za3RW57G6c3+tc/+pc/+9c3+ncx9vsXWHQblm
BLrKhFCjjk1fX6H8C9YkGyUX01nN+Irpnax4xxpYtWbuMCy0X2BFhWYraA2a
hn8x4rVOsUSzqyZW+Jkc9COVkhq/zkr23s796c79dUUtOwi7j/8C6nM56XMN
WP9iLn5tuGh+X+kcQtcLzLtGlnP+xGYcrqvNJwl8cpvmmsOgTbpKR2YdOXUx
S/xOZexIx4NXf+Zwnd4LbeIX4XP6ddM+y0oWbtAJlD/3m2TbAPZ8K+nzOe63
kCgGta7OsKfRZPAdMNVAX/H6Imt3cIakvq0oYzCWl1kpXpcGzwnNdY5mmQsn
jGuFSy0uvqe6SnsLh2IVcJPrvVaSuj7X3SkoZhnrcgCMhQJwFtIl6kJWaGaz
wnXm3UgQjSREipYthQ1qqLlSvC41xVURI446OViTBXNebkiNQO34FX73O0W9
eA1oVv2OXVPE5pYWCx9XTs3Y3JYB0u/vMu/mnWuF/7hzb8d0oZHxKmUUMVks
Q9snw9MxDin5C0oPAtD1JEUKhLc/UazfuNKntdSSAbBZwbS59Tmd2sl0AHQN
vodJu/HizuNf/O7dRnihKGk+3UomBZLij0pASiINdGVxKOhq+IkWC9Cv1c0k
6O2/KwWnBU1LKdMV5zlJtW4YDUkkwJAuwnUxtaeyrkzHIaraoIJ0+CCLR+hQ
QKsYRneepah0Y7L32GTbPQIqL9u0stlGMRmmmpaBfGkyXA/dpdzricq8k2TR
7w7mcAFyr2lz/6dQmxh0ovU7t3ZpZvPEQVa6e9npEnvDh1rJ7MqvihpNlHca
E9anz1FpDwrGvXR58N2UUMOuUvZOYzc/yEGQb+cV8zsi8Xs7//9zxXMBzMmp
VtynqNhCyRmfAFYupeBpBJ5INewMcFAq7vBlqrvlZRcglGIjixYrIgvWQBGq
UBH/y2E/5Wg8vpBYUMDY6ITFwXO6OfDkmNAKoXUUh/2tc3+Vf0M87gJUqAca
31KmDdgywQCTbgJCHTDSAzg8Vt/MWn1s6kke78NZ3uHq7jp0WShB6tUMcmfP
m+WW6cNZiwaiUI08QVGLnHgdAa3caKWwNUeP6Sw8xOFfVE4OTvRg0zcNkoku
0e8y6Q4/wqL/qDhWwZq1Ub3GJInzKTDNtJy5iSw8bExhFDu38JhyqEdd5n9q
Qbe7ld4hnJ6d3RsGDhsm/lpCaQB8V5sFktK5/3UGvRd1Hjd07rMVNRez2SAn
FwSW0u0vcthnFGV9+P2Afp2ZVYkqqhnuRRYqJ5qoH1emmNbjTPWDINjzSNae
I4sXD5dtm0u4BMy6TI8/zVUBlsMnUZrFZbKrKs6a8Ap6yjCfgD1hTKd1syIT
hiusYTF2iUVUL4qZ7NzQ0YD1M1fwu1uM0GlxjINnnIXHrXRWq7SykxlNNKM7
YaoUdjZTxS5Oi556NMgjUOXCYGrBTY31egPUMBQP2jhfwskJha/NLyAzjIAM
24BoQv+B+HIZu9gi+uw0uJRNFxau1JkfXqZMFQZzxUus/5+pailfJyz2TRMv
mVTd5WuNAAi22pJsFdImixouSnooj0kJoi7jaoSB3lWiPg8er5g45g2fntud
cP7EDw7Og7H9AT+kvPMQSzpXAKyoBQYyAJ0/mfQakN4/upBKC9bPIPoY1tbR
XsP4C+w1HfY6177wGKNs9SplrpJZfDNC8+5Lt5p+NHU8GyI9EnsGi6nzrbVo
IdnXYlmNEGwammmAFJedDQOkw1V/JfBro24yvVIMl8W7WaQPSoNjrN9RW1MI
4yJ4ksNg3clGrIb/4TCYv6uhCH6WJcw2JqpuytlFcHW5Q0w6PDkfQxHFbRHA
nuJ2/dFrPisUEGtBnoehbOkKSyWNbQy/0/pK04fq6GWKul8NF6+fwn+SRdJa
zRbwAp06WFEOdgTTSbCIh0fob7GY0QXvzWmKyKudleACBqm10sjyxu1dG3yY
e25+EoOvt4Kfpbo0/ytLEntZU36BvP6e92zdF3hnimZrSdrwbCv5FzMnOk//
ISXhga2Vha2fdEAr4JPJey7dChQBt2riE8NS3Jv/kfEadjz4LVRQvTdUrqqW
WEnBokVemhNRXtgmnKmp/mCBAN2Zuzn8o6k4jdUcBCuXF6bBuRVWkXU+3hLp
ESbqGtVdYVWX3s7oLGk2nychiTbsRJekwcnxVrCeiw6pvjj/B6KOtOzpzmwt
ltjpq2F8ztGFGFzZkUQgrFd7wnQxzPeMGX6Tpi1XZq7hQY7LpvxuZemYy1eY
Qn6you0AuuBMWEatjswUKHAzN409eoAl0D45DHO2c/hVlH0e5OgwmsC630e5
ashIBs2U2Uay93DwrRYIRfVbn2kijQqtsXlp1JYNxFM4cbB67i4vCIJzNAtn
vyppUAGWqAD7xpK5KrRXIl6QMt+G6URYF/8wTjii6NH1INwLTGxP8GOt4INN
InMstl6q8mrIGAtebhF7fips8lnVXUnWj4tcZgxLZYadan6igWxGVJ6BCilV
eY7lGTp0fHVv9nkGzgQWhcEyuvMs3u0J+hcZ3uHP9zn4yyotrfXmWFjXO8sk
fLMVU1o69MY04RH4SneAYdBzdiS/2sKg6bNFmmwTkr2GX8FC4xGPiK81IoJ5
3snBX1GVKtBp0oYd+01pwq1PcRAsYNCL30zdmehxEFWI6oiEal8ra1CR1lSR
TpNFa6v4qzJbcXkdsK659RRytijKK4vsGvOMNKov+P0c9Ftlr59KruTg20zC
ubVogQVz8G0cBOtxhk0w7N7R00XWYq0pwkcuSEakgiQo2SSP22GJW2F5lqdW
DdFOV5UqLAuAfYJt9CHQGlXm6mak/TUOgoFzWB4F9cCWmnfufp9uJXFWGtyE
Vc1vU7REEVY8f8B8graTXtRWwtUcmkFodsESNcikwPhFhtq51pfnGmpgMLB1
EsZxdlHUyuF3o6+0PskTiDcJ2fLAVvp/8id3K2rLQK8fPDhcY0g0Vyv3Ost6
B8UFCAwDKtB1/rSF3Rs4PrQpDzf4HK2o1QXLIaQ9BX2pQDsngTper2iTFOD1
bkPtrdaXpmqeAyi/lxmAMgIyWCD6o6utJAcKnioFzwH59F4FKJifpqjVAcv/
9XLUhzgtuF5kYSTlaClLG4toSRZhjYNkX4PgevnVxSrtGR1oobrSC6NjvJI+
WQytTn0dbokI1QBoANBfrXint3/jSU/gtLQtZUkpT74oiMpmNhXFYMVIk21Y
uRmkbWcQuG3N6sZKVrX45fMpOV/VVzCdDRs9/qo/J+9Jw9By0fP3GlN4A/r9
cxotgR7dEh2HZ0uhktZLBVWLkoOe+worOd1ZhPB/pMm1PpEySpfmjFJJHKaY
eZBNl2WaK3BVMMuNlzZ5YPr6L2nUxq+V9mOj1LUmBb20F6/oDdA1I5ryDiu+
/mVSXKdcRwC6efsDRVbHU3378WuNFIHZckBSA6yZBOyC+ZebXNNetKKtW7Vl
y5aV0NxPeKUV9A5LWNjDx4U4NHT/j4PfxakLzWYZ7MQGW7eZL7AI6XUr9yhT
fNWFgWyvray96mQolcRJJfFyMmxzki1QjVk1wayOVy6y9pCgDW1kIXpc5/E5
xW0Y7uTAQmrok8AmHMgjIA1sWoRpxI3SaKO2tqCWAUdZv2Yhf6HIg94ypddh
jAC/q5na/ZwyzOD+lKPuYDgY1WUqDNtCpoBZ3j9zfGgowUSiGcMrZNja8PBB
Zg6YhDnaLylajWhSGz2emYSKdEdF23AARFhqCEM+sLYRlMsNOJi/1o04uP+X
Pwe+8/cT9wL8MVcmmCrfV9GCdgD0rwwoDOaaLvzwiRz9FEWjJPdzVPhsj1T0
QEAH6vGrZw4xCY2vqxRN7fyTo0Bxgr4LeUQjIv9sXKS/vPcX8ruPMOx6NuFU
Dn+vostBh8AO1g0tbxuB9iJsroHxEJilggEQcLiyLycDYrEF1w1RcI6ISboV
wCoviXDQU7QKBsyUm8+2lb5WiQpJHIWEFvvkDNVdAbmUwuxCl+eMQpf5S6k+
u3IKn5ZTQPFeXiwq5+JlihwtYsdlfErED6UUB0loqo8X4h0vhHnGJkPgBIvH
lqhqnk8x3eZKJKywllYv3PcAUIbis6c0dYbZiXe8EDYkc+GB2Z3A4BXpn6qC
MXXQExgYgwFvHDO5tAZaz5midENxTQT6PlDncTC+GsFn82nM0KM5fLXF0L4c
dowF6gSHwSy69vg7pKzr3TXQOmqK0mVQnXjHC2ENgT4C+TLrt/fRP/7GB5EG
kQaRBpEGkQaRBpEGkQaRCiL9E38m5/D/OBvIS6r0KPLbhCQaMZ9NWPT+gT8b
sJEdekUwe7FJ+m1jEw6C4bE9uqkOxX+8bxft5L9tpsn7a6LnKz4uyDoU85lN
7z782YQZUWjfw2A1nGwCJ17wgF8D+NRrpCCchnTQc9XjFI3LwQ537HbwWuRt
+JOH+BPD6AO9o/cYS8wvERa/5/9hx7DepqOnh6xl12nY1zF1orGKw+DeNQ1O
7uUgXAPB/T6YA0v9tvOED8zY76j44uES7YAYyfBIGSwoSh3n8kzVDYwS/Hef
iapdtlyciomPr/1nyCqo90/8/yctkS/isNstkXXYNyyR7VXtuxuRnZlAHqaH
6eFbrOgwZgprrXGQhhdhwDDxUg2B5VpIe2dem5IYA3+xD1jJQRQYaf4d/68V
aW2oa7yKw36maJzVaP+mARSKZx2nwziaZ1hR36aDuVIAFzJ6RSYMsvM6g5XW
J/sbotqVNuSsVxgCMMfwaesLG4ssn9NkFn0IQk8MYiS7bmAWswZh31bOSt7U
bkEyWMbFOeNUKxik5OW4kDP0jPw1JhGoMnXm+JWBACZ39ICu9gAxxXbQ37L3
RP3NLATWGS0JD1LSZa1VfyTfoykM6QbwByyKj7MoPikVNjnPkl8fe/RrDntj
KvHUar5vxZ4epT/Wkh4O9DmBbzyMuxO2vY0I8345p3GnRe5Ei9wyI7rOI7bo
d3CYmV3tscb7QuYa1P3NeNFx9oK8LCWnCmJ+jOPfbCWttyPCvakR89mCmHof
yIdS0aqodibIV4Maf+4Rc5VfzIdjMiQm9DXeyTc5W1KNi61koPfJZZYO/pFF
8WAr6m5Geg2KLf1POezCVOIq2p3BYpdXekOHQZ0PtQlXMvtZ7ByZcjn8Cw46
hwGwfQ+clXLtnHS2v5H7DRz0W0vuXayopxi5te9+W269XvZ1qawl1D2zBa5B
0XBbG/6OtYKvN8GAjG40TppEtMtf6IFYW2Xh7Sf4FaCD60C5Vbqaw6FVOm4+
gfbsd/jVPfxKE4fBD71i22qa2m6Ij1E1mMAGBkV54xi2EYExVOiBwlKPCWV7
bG3A2kYoDmFQC37zLq1nKnPtpkwG0ZtLFvJnWEtxcXmR9Y0+EXcLZYYuwYkQ
58HDLeZgN+5TFZ0a9RzlnBjzKztFhk8PhUGq2g1SGZP5zwKohlIGhpOgJ8Lr
+iFH6M6mHua8W1nbZrguhkHt7F4N0NRsHY9369zKcd6sUhRwZcvVmW9/rqxS
lUvaCznsu6mM+Pjaf4CggYO+4PkX9uldYRieB95ob+MwsK3PWAJAPQW7NKDa
gr4K7GfQJSZUs1CYbmMxBqtmYa7FPsAV+jEv1VFoIXDyeht3dpYEdgv83clp
Aw+wKx3WOZ1ggWDtmfgZB2vfaIX63tDlLzKDeRQGFGFfoL2BHkRcqJFiGwUa
8zXXtEQNZ+q0+5jH6PhDSYonHrucGiwz+2QLz81UkbL6isvAnAVMwQwb7hja
mcL0Ekks/Me8dBPt5+C8lBA+vt4ravtaIn6BIsFgxfeUPtcHnmzNf+l6oZq8
ZF05pSlx1QAFwr42yDXQQB4VGOMaC0a6wfChlNXNIHp8uc+YEgC7QZmamocF
mq+XWNiF4us+/+dVLv1E+yo6KiWIjxt7TXWiW2RohLyebzWGz+ajmPgTOByH
uXal+DChuk7RwLbOu9DPfodOg7PmUo53vivyV3pNdT9LZO+j39eIDCL1MNJl
+GxCOQH7hKC1Dg7gMFNRz78JkzMwYA9mDMVIo+jdY3LSbJekx2lCPOiGwggV
tFxGi75rV0szms8nlcTsSSXp7UvvoHqAsR4o/WAEf7Oi7yqmGc3nm0t+F6C/
vDTL4hltZxXT/I+0s8fkpFm2nFiG73i3aAJL9WBL5L/xPyz3cHLx6YovbjxA
Enohg+17Za/YeHvH0a2Nv30oHrQSfpiJB67ITo5Nr1Ez3aGa5aXmU6KPBMfp
kuHAb6vQaNcsB+MHpgwjJP+w0oPf4FmuFZNe3XTr1tvamtMLtdPQfDlFdlpb
vqyb7iBf9le+3DuObm3ybkl/3oPPNljFFzj6HzkYJhk+Zz6ffYQyF1TkeowR
xhLBL5ieRAJ3GrDLnixtJCQqTj+EsTFqs5EXvyTXpI8RwEnPk3xVkR7ea4W9
WJMPlTCJiEs8zAvioQCFsjBQlmtsycFww/RPK0KKGHQ85NgjyFQISPl9RDs5
h4Fs8Jo6qWiQXWN8ZqwkMXGJh3lBPKip0fOaqUM4xuLD8/+IZmMKjaL2zF/C
KAaZfwPP/HtH8zAlUDjtgIbe1gYeh2A4nvLw8FoOhhZEmxPX29Xek/KH56p/
joMvTIMTO6Yv6qo8+iMS/WzUirySOhpf5qDLOSYvwNCzboDa/PBEk3AA4ujX
qydacZH8hIPQvU0rnPUINUuUeFFRvSIxnHpjCiwwOcAkCoNOevp6s/BEIwSN
o1+v7GumAtAIU87Ny13062WTSvaas3GE3uPoD7Jxn2fjVXn0RyT6NVdLTvWc
PEPRDg9cFsHL7+CL3/IXK5kRvTTIrAwd1qeUwiLyWd5ojWy0vcIJw2XHi+LP
QxjXyOg1h4vSRNvf5qAnCglq7WRTVP64cdRbNvX6JOZRLr1EBkZ5dKaqV6d+
QhUMrIsKZZ105cYthkr7+xx2oF8jZWXzU23ZVOvT2mRV4GqwU4l6O0u9dtVW
yJvVtDvIlhXEmZ5suVcYVbhqlHULSvFKfLa0qwPYX/NE/v3jlEZ7lkVjx0wU
vfgyG2eCxLJT5uVbBdS6UmKA9D6gvxmAWnqrx2liSsPZlFRVgolNkOdyYsXh
IZ09OQiWh46msRMB2lLwe6jMLsUyZ4wXcNDNlgb0hNohYkqlWPdTS2xqJeF/
S8hXZS1ngth0jL4cmwxCvNFXgXxg8dNj8Xt5qbkWX6785KL+A8QfpKtd0UB/
Te+t+7wlom4t7J95zzzZr3ktVCOb7HAwNTc57l08k8PgXqZ0LYbg2ogIybWd
5CqTbGRJtksKxuMC3+AwXOLMOaCqCqSkx0qyyc3IvTjsX5w84w+DNNof2dZy
clGc51JrZKmVhf7M4O/ijcdj/mVZZUDKm38Z+AeWb4HRI8vfK49al+WXLU25
6OcFoF9StAv1cfAfD7vCH+1JEqr9jTv36fz/1UY0PWj7LPF1Yr/WdadArSlR
02OO5blzyROyzWcpY9Sw7W+OSbatj0mFAcoVmSR1SeCkKceJpTucpQuXLXYF
qSknNPSGY9hDlah0akJgPkqlntQ5F9elORrRnqMdLsAw8bv5M2i86F6tPq6l
qlA8yxxErmYbXVM1uXjz9OfKETFXKtc0q0hLpKvmyBJl0CAzlpehx5mRFBaW
GZN6JXUqyZZeBAIrTG/gYNiCyce5nsbyavc/n7HkvYnDjsq8Z6L2a5a3gNqo
pqav8sy51Kmuaj9JmewBN2whhWyCfgk4zbf702w7adZLd0TTzRM7Wm7OOmAl
2n8DtBnZoKrq1JM6D8HXpTtejf0hCz9e7dyC3DNLSKeELH4qozYVuOoSbE1V
nOLtMSgXjti5sDZT5GWdFbNgiTJnkPtsIfoz9+3tpZI4uW+oXuHc7qJefvlj
Q70N+ymOtTg4juPcZJJsaQ+Wj8+8Z4r2a90qFUglDqmkEksuTe6o6a73Dzr3
qxWfGMBHP0InG3y5NPxptp0066GbOHSHapSZdpc2DuAwOHtv3JCoqkVP6nUq
jZuj2pEOtA9hDRAMmb9f0UAJjKEc6E8vSiLuGwaRq1NPayqlFW+TofmvThm5
b1Yx/5UoZgZZr5QAPc563BMMIlenmE7l1z6TX8E6xs0Y53TPPY/STnCc3yi7
fz8Mif+FX8Fhq3K0RjbaqgDCzarMdVHlHhnMkv6T0R5jxJZoUBp5KY5kU1SC
yFWo1y/zvhicfICDcEXAUF4KZVUqEUpqF4cbiz/ioOeZFIbfymFfYFDrFc9P
OHEID9Uu8pqqKVay2pCc2qhdZqZaPqdWLJgGmXRGZtJVXsJuJq1fZLc3eTy/
QW8L7DUXpjX/zuH7GEkfxUGwiAU2acjRGtloqwRCI7HEfanqKebjDQ442HyF
orNbNvbyOZJNUQlRa6Cu+L2WM05MygUjsHwYfEjASMIj8nktqyai1MhS4vZw
BU1xFtP+NneyWH0Ch93lEamaRH7CiUO4uohrYlOow/gcasOVZWC0ymeoimoa
5KV+zkurvITdvJRUFtGtnib47TlapI4Cr+QwsBjtJhwqua9xOH46FBF3b4HW
SEX6vA3wuRx2b+denrI1fggH/1WZwZSQZJO6OBiWOLCFjZc1mcVJYXINfI7r
/fyw73LTCEFLqE8gPyyRLyslTzHokXm75QvEtIP5z0VyHxM3moXy9ru24vfx
lirRKk+fdzXXnP/ilTXIfxtQ/ts7nAWuCG1ho6TlXdRcDS7mV+hrrQmOVNTs
s5W5YDGq3lsAo+dwVunP+X/Yub/CCBoSVQsqkG3bZOGqgzWe1oHq/+v8CsaJ
oel3FScNYTj7HSNGEi1yDA+1aIWR1kuG1yPG+Bx7Z0QyZbQr0GxqmnWIxi6L
YF2D3vp6E6N5J/8Pi/ysybow9mPixvNQi1bX1pdUvA1LZFs2Wft9Nd3WnmNL
6HaQY/HaUHLs3hE8cCVbh+hufTuL31CK+Gydr9wLdjR+CyKjHnD8Qs9YaMZ0
FIwxJMSzmk5F5HScVjw33HKCERRoojxkcQONMzj/ZSSG60ZgvFC6Q+Eo5InJ
YB7NSWACbUrsLCGJOhQn0GpoWhUUxn4VYCn5LzJcQDfikFhuQ+OF0q1JYWvr
SSbUHP2ZrWmT0+8rKK62nBapuEFOi5VkunLaPnF0qyqMa7erKbVF/Ar+6oEW
J+xwIWwCw9CBDKgElvXCtp22EHUk/PP5QtQnV+YSNzQuUwTzUsV2L7EqpZuX
hsTveYEQHCaE7ReOqsSq5/N+RHXfnDQ2FuIvxzB1KH0mnqMylvOuVfJdu+R3
69PH93NizZ4Cjsu+MxzzCgc6dLfYDz9XInol4I/wv8Bv647XqDk9A8ptFdCo
m6vpimfQ+DwFUL0U41k6OZHDran2+j1Tx8RNpihdA9Z3K6I0VRz2Q1yPScW4
e4XuPJjuUy38avYWGxE1mZJUs8ZUGp+pYW/ao3aZ0TMoXqCbvWZe7ECPgYHR
YpxllvVVaND4ThQMrd7BUG+0HAQ+RwiTPUhezLoccTW9UUO8hoXECfRbV8pJ
WVb3QSK3plzkuuLkyOtqWo+Ne53uNL3xCjwEFbwOcU4V5YMIlbN+svM4cxLf
wptJvtXcwLB74bkqEJvWFGFT7bXI40SXkCUBQoTfBI9lmLI2pEKXLU1vvALX
GgWvQ5zHRDnv4DAQcZ2WehSeQ/DvRlPxy4/7mbNmzYJbzcVnVJiU3n9s2Dg8
p0SDs4nahLIuWiFbnCla3njVMkW11yKPOi+gtKMCwv2k7RJhfZnTps5qp+4X
5odlCi+uHAp9NTS98Qo8TRS8DnGiEuXLAsOGQMKx9NdGU/GLMtwEs63mmrCD
kiSZO2/ePDUXn8mNEWFSenWGrVfW1e9h4xQGMqzLxOvbMGotF2eoljdetQxV
7bXIo2NHo0LYFNlqr2wfcp+dD2PCpPRqCZuJto9hU1Li7kwEuLY6TpGRep0r
NL3xCnxDFLwO8XgS5X1iUFsNaqvpDOPaqjBDtbzxqmWoaq9FHge11aC2Cg+b
+tqqAUQBrAL/Bc282IHuGAKjxbgjKesIYlCzDWq26Qyjmi0087XyYteb+eqN
5pFkUAsOasGIsB7UgoFuEpp5sQO9PARGi3FWUta/hL8WnAj85ftiHhJ0JzXm
CmFsk059uBHlBf2/nT+csHEKG1uwYEGa5kb5NHLjSfztQWFOPjpcCDvMfLsu
E88J43I/UD+tvNj1mlu90TySFJf7oXoJDauieylsGYU5ZfdKssPhpUuXpvGW
m3jpFWojy328DE2o8ByYn2e59OOVpVcq0lbu3vh2RNyhKYob498iJt1WCowp
CI9wf2UKqZWm8FH6Wm7iTegwqbCoUoAcECHVVHnu6Ye4vAGisEA53B82pZkY
wzJ25GY6WDBauC+3HRF3aIrixuyFj0l3xmW6IKmGpwitfog7gzMdb7Mp3CI4
HBiv7q2JjZrTy2QuWo824QDlD8vNcCsoXvqd0myMCi8sLU3qsAMDRRgJjFe3
KuqOl5NrJu0wLvHS/+Fiy4cckptrXi18K2FfoPg0bCeHvLNFcI4QJm09lMKk
DZreeGi9lLcTyB5ZAByrRNxvF5Iar8BuaJhUBn6Rwgo1h4xfS78vKyc2PpYO
eBjwsMHzgGPgX6jCyKRmJrGSiueGysv1GpYheF5fjq+m9e0MVs2AhwEPAx4G
PAx4GPAwU3jYEJsTNHayTkpqBmtqwMOAhwEPAx4GPEg87ErfwLDZZnyrcXwm
myjrOqp/eH09B+OrufA8ZsBcFHNwLIxqvAmfl1gMX9q5WxicrFXW1YfK/zky
j2GN7S0RYPj5BIo6aQXT8HrZYRbr2ynleYZBPGB3wO6A3brZhfn0v/O9fR+z
e1r/8AUzdTD7v7hf+LqsD3ggbFpw3NtFfC/kaHBA+9hFmKTjlbh/6vmW3Y7i
hRjqK517NgQc0z98Qu68ne8VHO2Kzj2GM8rJrRa6fQFvP1gm+6iZZWNDi4kS
WK0KqzzQI/KxfcDrw/E5ezdFLUBY0HR/535HyrJSj+RPwJcmnBsFy2aOIVKa
d+R/aJ0Kb4L+F5KduPvSrZCbk+BRerpvJX2zu6Lzy/AVrZNKzuDoe1phH1XW
dZQrCYJpj1gWSvJ+igeiTN5DdweKe96zdXt959FRUee5nm/VgicGdUh2YsJX
cBPPx1JSwMek5mVoohIoY9pL5Q86N4DxS2X6SCP8GQhzFRIjgLa1AXoOvtD4
hCDCebAj3pYgLoIxlKr62UbICf1FGculDQgtWGv0IL/ahaPtl4rSfrIlCYir
V+6hAR8dLdp7KB7IpvWqxlOdbiKIe1it4iZLOfhB/I/CtExnW2Gf4LCXl5Pz
EoqnjRrlHDb2bAwdYsxO46LSEYA5JrJr48+oFY/GlsrUo9BM4nL2Axx0qwXJ
VRx2WjlILhIgweyMQpPjYRQztQ7M5mM+IJ5aLxCwrFEXfiekQIys5iA4goNP
XcBXd3P4QeXAuJDiaSBQxsZ6p1jDGFulsKBVjKQZhIB0BXpiTYhQyTd+DQf/
TVEhDQgtVOYYJ3gPC9UuUCZLLS6Fxvn5aKTxdhDQkEzj8bUC0YYe1/3KzSdw
wUpmGvxRyTuUdcU35M4TEEgEBHaneCBqmkOGfTDsXxMM1MZpg7tesFtYkjqb
oy1R7NGaaz5o48ABbbhIOL4Zfm4gDNga4dKiu33gzSD71gQInWGDrmyhqofd
abB2leToq7MtYBEptJefyqxiUT4crZdzBL0MuWaHMfgYHG2eGKMtmOcfczif
pjM1RKR4VXFlg9mQj+JgnmEHILQQ/o3/UTw4vvHpOp7ZNxBqdXQelGtNUmmw
rxtvnc/qfhsnkaOFUDSmS1uhWpC2DFQYWTtYmdEjNS4MGdF27Q3hhJF5QXE5
6S9wOOgM+jzQc0T/5qy7I2yM0LaicgYdElpcTz6O4uXlDIzxq4pa6p8TTqZO
S+x6q66c8w5lGpQ0EcynZm2AJ6eMZKPCtQf/D/MYOPDAG/zXcjgUb21lu5II
zR3UFhdbK07ueALFK8wd91VTTB8f2VJJMZLnhQoZ4lRFG7O/gf/hs6UH23T3
Ek4MvqVzNynS15V1kfOFGX5iTDsb9xmMCHYQeQYQwNc7aleqMjnkbRSvsP7g
QwadFlhLyCE/j8K+1TvsA6OVgr0u+6dRhiZkuz8xdy9U3PdYROnNqGNvujjj
jY23cNCRSpWx2bdSvMJS/WCKV2iz94RD25pyaEsdnSPhWq9RJv/DwVilLqGw
YzmsL0/mcTmh3g76inuAww8wUScVWd8kfo5Pd5/zf1O8QtM8k+LhnEVecYrD
ANKwVcOdGsAYdwei3ZoitAteBwFNfX7AuDWpeSs3PA8E9MAz2D7b4ukc1JeH
+3TF+ZKi42SxW0YtMDxA9xyOByPtG1tcA2apgSKCdEZWsUW+mRMoGrAjzooL
yx8Hwt2aIrhjtRGMtFVeTqrioqDqFBt0DNh0+/rokdFsHN2FhrPKb1DkKgmW
sHBP+TQbq/jxjDdRvMK6nRcbOObaFMz1h4EQt6YI4oLXldCtaxyCrXNcGeuE
8Q+2zuM46CaL5B0cNu1HDXTF+aiyWkvWsCdUW9jjih98fiPDbFfTkkmupniF
Jegdgbi2pgjXWNgLIa1rJJm7P7cqY4eQzLuQBraskjcq6+J+/gTHnZnexWdL
cc/k/x+rqJ8KQ5l6Kip+zo52aLiNUqkJ8DwTL7dM/V4U7q3e4R4YLRryuib/
uCsFGesf+tUoPOcTRhuYh2C4juewkxXP50ZZ7hqKV9gaOJHi+Sw37UndFoVz
q3c4l42WhZgdZ1W2VFro0QCDfZ+ihR0wINbG6aHkPmVdPK93JaewAfp3xfY/
hOHih3grnqR4hVb8AqZWVP7eGiHBzPTP6iJel1Fv+E5Rk8XKdB9UExfXJGcr
64rvkb2B0S9q/r6Q4hVa77cjpJqZjk6LtVBXz21D8TjKuEFv4g8pbvh015DE
W+/rKF7h8NdLKV6h9X4rUKJ+dywainhdltoLL5/ohiDKOl5L8Qpr5tMpnmMd
mZF6jPEtgau6nYNuWpNGLotG6zWBaGlHsUV5CbnZbNrEYTYLK7bXxYizybSJ
80qBTaukS+OtiRFn/rSJY2W5XO1IA8YNnzjScWm9EecVgeK8RdCOVxzp5JEy
4jwSny0oU6HjB+MTMAwCe8qhgjguWtqXC0qRpH17jLSza5J2T/oGFnp8XPH+
rwZVkdC9haFvrF1Wp2Lj4FXoLsaXBcourWluCvGQM2sEalLLX9obHHXuk6OU
2e+n2gQArCCYq785miXhOKj8IXiGbk19aSAU5+ZD4ZoB9swqbnAdhY3FevHP
H1kZX+T/YcADlAgdFW46fUhZV/yenpf4cXC2ppzvx6E7O9TVMuM9XnpNICyG
2YKjvZPDTuD/oTB4G4fBFDx4Uojf4/XiQDSsbYLFaCQ1ocFzYZCczhtPU2lz
2QGE11jCn19w+FGlAHkRPpt2QwRurLXfJ4DlLSFn1QvCfA6Ge6EHBMZdrw4q
uSP0hTkIXBGIwEP1Cj9mCb8qX/g7OeyIcsKfSvEKmwbvDwTiXzUBQQXDsJbu
QykIbsHA2eDpFl47l8LBGv7MxeGqQBz+USsOc/TkPdywJ/zRnftiCwfoq71K
mc05N8NXx0SjcEogCh82KOQ2nf5eKwoJ1Dp6zQK3mtCziXZtATcMk+1YSviT
A4W/2sTLFf6vNQnPLSZogUKtRC4DqBbWwkPxc51idyKroyU/KVDyjwVK/uea
JCcPLG2QHJb3PVdReQVdAxjDx43w8f0Da74uV9pPBkr7x5qkZSOHueA0Ao/B
wPjLt3VYfOH2/ECJPxMo8e/rlRgmRmEcEP2m8LwnyAQDZLodFJ+dSeiuah0F
/nygoL+tVdDmbcqUU2BdyCzV402Y7v+69R5bFPFSn5Aj9fWBUv+mVqlHIL/9
2ZIM+rmwsQEajFDt/gWFpIY0LPN5nE4r3tCflyP9ukDpf1WT9FxsQzflev2K
pGz9xEIDOoLQrYECbXUqcFSn//gcqb8cKPUvjdSTqmofnwc5ZjFvNAdFCoYl
kSv1N+woaVKV7eM/N0fyrwZK/guVsrdOYqKM5JCnoRf/V0tyaBHC8E4rlTzK
tI/LEfXrgaLS/qjaPHFAM8susiCTQ4fpnygcSX1bGl2VKc6OzZH6G4FS31uT
1FycQYdZL45Zzwhsw9FB/XdY0gMSZ+q04ouz1TnSfytQ+p/WKn26PhIke4Pi
SVHuisI4IayZ+HeKQLzCjyEydv8qFfnWQJF/UqvIOHUJxRa2Rnm56X6M7PqU
5ygpj5alxCGH2wOl/HG9UoIQY/o9NzthiP88h+coKY/KkZLXIRf2o39Yk5Tc
lQBLBedFsCsauhJQqsKyNpxqiu9KPIcktBvWqYQ/DJTwzpok5PYGVLrQjcdS
j71CQXEFS0Bwq8nqaCnZ1Z/UfXDGTEMl/n5NErPlgk4/rF8Nk8SwXjBlLN5y
jwyU+K5AiW+vVeI5L1Gm+oHCDiaTYZgQ2prgnOwpihbO/5vj3AhfxZdShIJc
/dwbKPl3a5KcBkabYN164RMMeGBBxV3GF1iowBBBvNqflSPw/wUK/J1aBXZ2
bVmbbbVHAnTDGC8oeRSRa9lfBgr6rXoF3c4SdNgI+k0OOricoIfLgmIB/etA
QW+pV9C5lqDgN4n3rIKitePHXUrJeliOrL8NlPXmmmSlgqqhO7rQC4AsSdOG
6GPgu/wKChLMwPECH0qpibXvHyiNwlbU12sVuPl85Y7g4OQyj/Bcbr1brwU+
hhVjhauoQ0CeaQTNrapCAaGdXhYHZWCAYhoqJe0B6SMGhsa1yvQWof20GkUG
AEL1fkigyH8OFPkrFK+yDXDnHxbKQZPpCCN0ArqGqVxcRhLf+SeJ5YrpwUAp
v1yTlJdFc/+MHO7/Fcj9DTVxz21GmCp+C99qBJ/Jm5V1xa+zIIcfcp26PlDK
L9YrpT3eTHu94huB5LJPLmSprR0o2/X1ygbuo25XdolJW4N+yLdq4DO5Q1lX
vFafZqTLLWuioLiuViia0HTQNS3sDIBuAE1/lBC1K5si19S3EsSTFo1dW6t4
jc9zMLQYoLF0YrRk5KM7J2uO5UuWKu6zNUlmLfPQfTQYGj4pWrKnFEk27pfM
MclP1ysZjDT8gO9nlZKMfH7llDvzAiX7ZE2S1b5OFSVs+MoSXvxc2GL/eE3i
xS9MDZUTfdPnlSsLjKi5xeY1NYkatQQ1StQnkaj+7MiO1ApriKtrEnVaVpw+
UUbBZN0tBBSkrPvhWlHo4SpTcumZU3gtC0TggzUhUNPK0ipHBSEm3uIuFJAr
EViLbs/XllY5ZIi8muQUhdsyhaJSn5djAheTmpOhiWqo9G7R6YEEg7+Y3IES
KrSGywwMEzrxmbDa9AACwF8+7BwIwHtrBaBXy0xRfDRr5GG3QGEvrVXYKV5N
iv4I87I6nwTlZHWpz3FxTVJP/TJSWriVk625jVmo6AtrEnlq1o8+lsT0Z969
AsU8vyYxLyspQiNrnJiodXiKe0BWhvtza+KecyN0rWEQAxOP7y7uR0rxZ7fH
+JTyrprkoFIMjW0n675LWTN17Z0wXZjrStda0Jbq3h3XMz/nXbx7L4IsJ8/v
J+Au7Qw+IIetqTiLZ17Ou7pcbnHFdqiyhmFnUxcLlmS8Rn/DRy7MqHN5eCHU
fRwHTwRrBn6Leokys33xmVPmkvmkZob5/sAKsDamCdZWBVjrcoUome0cogct
hHn6mw3hUB3GTK+nwEZZI+L70qbsr6neWRHWpA9gbVWEtV5TbkOd92jr/ilH
w5nY9qORu+OUMXf4jAdgZ+w5OH7LDvo83rCphZXTFDirGqLJdCPqN+oYhdTV
YNaTu9ik5Km533HYCviPiuc+PInGcxKLC2wSz32UtWKm725RZK21Dw+T8aiu
CnysgLpME7YrQmmAVsmm+QgOQzcBPHfXH+fJ+M5ZEfAM5zjKFh+Fz5zW7dnh
1Fu9x8tvfzEcVzY+OsCrBfMMF/G9kKPBgumxizBJx8Ecu2SatqNkxCNUJBxD
OZxUqp6zZNgk/a3UswMZa/UEuhwTDONwCFBrTapyp8Ow6b1emSbkzhwNFhdi
n5/bk6fz+54fFSOekCIBFsohgJXaGkIXeiwMDTHmtBTPCeSk1ROscowrlEON
0yQJjmETyrrKHOzCVgfjFrfzvYKjwTbMMdx1ktxqk+ECb9oOfRHPPZGADeMw
qpal49JzatlzA0m3egJOjtWFcli5SqWVu4nuGt9k0buDw6b0FBbxTBIJkTAO
480lEUaq7RKqkG6rJ8jk2EoohzXZCjougOD+ORClizb1z3Ev6ObW/Ztu9KKk
ibKuVfjMaV+9K4qBVu/gbEkHmODrzfFXBRjrMkWe9wU9Q08XikRYv7NaUdMD
3eTStFsfnnrSRZtHqFYq07jkifvhPZR7xUgTZa40x5DTYjsvCs5W7+BsSaeW
4HHFlSCsy1R5SQS4Sblbv+JltzBuA4s/UAvk2nmmHXTSgCIBxj6h9oG5I562
ckCPSTZ+VJqWbee0+i6IIN8/B5rUjmzNo9MwyHO5fsWb8qH030l/Q93hmXMe
ChdZUA78TZkarhGbRBnj9bcSLogg3w/nmTSro1ivoY6fpEy1Cus/wRssjErC
xpmFTAOcfuopS9iQDsbNazb69vQThulDFsq6+V/4bbyhUosrp31wUSDp6Tq6
pFUBrnotsvFjDobDg0dT1hz3FsASH8VR26EmVDMkUC5vr6m2hXiooSjjoDZO
ThX8boFMlZNLRgJFYZErK44X0G+ujIZ2N6zpdh06J4xfK07oyWs1/69eAXbg
YGh5JkYAvVPoxeUEoIXHXWWDqcRqlmKZpYYFRop7OejoclLwXlv/fPEv6pUC
atVf8SuYimY3ISdbwu1QQRDHntZpe7qvJhl429mbLGZhJxPMucOSVj23DQsv
ca8FFapfVtYVv+2MXQT5G0v1SpdA6aEnkrSTR72b164rfqbowHW84vVF1UyO
4VmuOyuJxRsEYIoAGjzoxY8diMGyQ/BjiL3Q1akIOK4Tuvdpd1kOUwvcb+SY
1LKUdkHKQ0Cw5gEsCZyRwNlDsAUAViTjPMhxlO4kf4oKGVqXhqXX5+Mk9Bvg
/fReldumdVmKe6jp0Oq3nFZZXb5uOUfAgmY99a5GhPn2+ExNc1w5VvPrekWo
w2UG8+y3g3p5bsNU/A8tvmFIFY7JRsdVTXSTmny9mhp2IZH8dXi9PqObUF6C
l3EY2YBaBBu28S4taBI+x3oeqJXt5OMcjIsj4jexELtyU68uV+TcvABe9E7g
XUsxSyM5OSZRM8cLlbHwnUpxvCNx7K9Jf1cvx/aG2nPLc+ydg5xC7/QwNIjr
0Nt4Yl/yemVd8cUH7efNKRFrPlEA3KLoAZuypfj2xLO/8vxDTTzzcecwxfJ+
Rb7yoEckHXcej/x2JIW/BKzr9Ir41gmz5jeK6WNtW2LNr/s/1c5aVFua/I3n
aNU6gWVSVW1LX0bfTKpsOznU9QOz69c0s6tT76IwxeqmcjVH3X8xcE7oj3pj
ibTXNkfTdZ0yVJY1ubXyt2njilbA5TRLpo+15cSav/1R13FZNGQ4Cp3f1Yr8
9MNEMhzfdLminjzsg4fKcpYqs9OfJJHHkB6sSQhuRMGQA7Q+YBkj9AZ4LhGq
xffqWPGDKstIFf4SqS4paEwgAcowiocFHY0VtUEaaMLBflNwpAGzTw+wlHo8
CX7D0lBcf/GcaDGJp5yCra5j6mikYRjcnur1P3DDCtQ3K/L9AwP6PP0HDWNY
er1WkQNeHiiDESdYV4fD8kdGC7slCesvKv9Zk7Dcvz+fg6GhCaOYuP+NZmBa
0JODJv/vOc4PWPhnlZXKb6n1SoXpwIAX9vh5C9kmLA1kipFSUpC7rRxDrOvc
SJZiS2VdPFULUz6zdNgR0SIsIRH85vXvmkSIr1iQNW83sd4jOWMG+Xh+zXFx
8yl8Ntb/5N1b33jruVvpe+iga9es2F2QbTHB7rf/hwTxtAMH6wMm3Fr/o4u3
Xn/7+SnhM29+51YW7Srjg35xExAXqMLdER6eCVAHykh4Z0F0chaYk2nWR4me
aNGLmCgab4TNBT+zcADDh2Ua30R2feONkpPzdiBiCT6bwKwO04yrnQTkNifk
/HkVH1gYNC0+CkFrCaDtGARaE3q7ULtDjftabSxmRBP//SxadbL/9961HJIH
01RDQEyiu71XbrlJTqj7LEaTvvksJI3IFpEuyiuf4WDwHVow+DUETywDiFRG
8xiWRt5WkJx2+uUUE17xpaIwoSfwo7nRGQaUkuWkqA0LNb/ehVs8dNkUiCeC
FrYRYKBfRUVGEghDJCdFMCxQJv9PFMLQ9hPXhDHGVgIMmxEMBfm/EQhDJCcF
MLSg2NEnfYDHK9igCHOSbdwWl6xS1pU/4DdCBMEk0wwzJDC2wg9RQYYJhSiS
k6KS4wLlr2UlIEZ95LcWJGeHWwV5pBkoOZFu2qR19aS2DpMW1id9IkLaMZkk
VhdSbqC140W5IXRFewD1AoFbMLSuXVXACB/09cDsW9hbTnZV1pWfA2bjs5Fl
xouCt5EcpfN8qkXqvpaD/wv+yy8D58AzESqeZYKA1M0pytGhixWLSBcV9mBO
egpmVZig3YhKBRf7ryvIvsMxYnoJx8xJFs+ijvsgXSqIOU8WM5NpQz3VzcnJ
tMuDZG2C4ejlTWC62GLNP4thXAZ3uSAubUwuKqNCF2zmEy5qquvjmuEGE8aV
fW1cpYirCNMrv2ya61P3lj75G1Q6dXvHjjLp8RxdF2VeLqJgwuZuFV4jzZXx
lkop8q5fVEqNBcqaT7hoyhXMCc7PArFg4LGNmy6Ts5V15et4I5+OtxBEpyXN
RSXX7CjRZTUvLZD/MkpPS4WSeWf0NsohJJnyHFnMTFbmperrfSw4sm4kq7lI
zJB9oNYiwBRyr0/3eZa6nS7pEgEH9lpaUKSNG3VPavpDE7k45Kqi8k7D1ciB
xkNEwMOBZPPWyTrpyIr3/KQo+58n20QRDKH70/LnlObLxP0IFBV4c6OkzsV/
qnY85SOysa8kXCRgMipjkikJNwrEJF8ZNW23CZDeo5bFAgAjQQDMiwJApr4k
rCVbfe/KJqQFe/QObkl6SryoIpwfKP3GsvoDBa++54UEb8I4Rxf6kvG3Zekz
9cLGgdJv4st3m4fJv8xS/AJVZrfMpjnWt7kgfytI/k1i5O/W/uIw6WvZZbMZ
PHF4WBK3GSTupoHibupT98Kg0q7SlhweYOi1p3qYBjtQkRNYWJiHo9f5nuo3
k7MkDsotFHTUKNLRzTlsTqF3elH00D7/pnLOWBTWQCq1u2lDcWTPw97OVijG
APZuPF1/m79RekFOwbhAsELiuNAKZ75D+1B4Q8cqN/MViguCxgGKt7yx95UN
ztM9KRE7yF/gcJAbvFjDpC36c2SlHqGsCxXotfuFOXa/mWD3JEWh3W94HvHL
wh86T7GZXAMUtQxD9k7S9OGG5R2ffRbtwWGwGncXE7yWg+/hr/OdaBHGzWxv
CPMAN5idPADJ0HoTzwTV/1YDvC+d58cBHjpBucBXG2xWYPfswXBGO8xPQAhY
goUO2RpGF9qvzkpVZLqL0u5MBr/5btmNI1iNfHud2e7zg8CMMsvuwrio38YL
WiHpt/CtxvGZvFlZFw+WzSCX+jw0fAuH4YLvAMukFSXZVSaOoc4zhpoeYccF
q3NQvd2onkG+9SXgQq1woa9w3DTMDm0X52ouPHmYro996NNoM67Ce4DDDzCf
T6oSLvMXB1oiTdgkZ3773K7pj25L/EYgkq2eIClZngdJ6gYDiK1JJXvQD+gT
FJkezFv8kG81jk/0ZJxeXASezp/3oYd97vjCVMP3FR+Yyr0f+HMOx4Utahtb
nAKoqYkixJKn/SV+m3RWa85hm9SquPPCnNLxlkBMWz3BVLLJWEytknJSFWd7
x4o3t0pPZ/53k6CmZT/73ScYW7rfCsvUb1C0xw52cXE39DQbofxRgC2MOeYu
Hqalo+1syQBm6U4KfScQw1ZPMPSbYhSGoV35zXPKz6Kqu/+9+HMe/qiyGkTW
gCBUVbPSb70WtzRTsBmLa9g7feAeMsYJwQhjkz/oGF5aDtqGV4hfqyf45ZSB
hfiFDqgukvsqYYaGngwgeIYfAcCt9jM57LGKepQw2hc4DbVMKALnmlZiOgCE
GN4aBV6rd+BFOfwPAS10AmtRzsR6WIU7s937S868cf0WvIUpapp69JrfCsH8
rAZhWkbSFq+G3XEB00QevhuFY6t3OBb49S/GjhcgFlrhYrksLDLAQ/C5ATvs
x9YyvMWjcPItcWvXEnEeHq1uCGBtCHNCVpG4AbvmdzEMtcglvjGceWE2CSO1
M9/nfrJYmWa2aqKzKHfpdn7/ZAdjk2lYu8ASg7juez/7xciF9kqW5PRK5hcY
4zMpvRnlQJ/xg7b0H1L88Om6QMi3PMmFg1XZziwn+aGQhJrUFunsU5EBHUZf
T6kDfBwxilfk7ULydTu0D10guUVOHi2qMHjkFbYDPY1vNY5PdLGYXvF+Cden
j6WBcmwpt8MCReietzimBzwv9dXU433Ptcdi5gYx3jrNYhxuGIWAgY0xLEuS
3ZR19cJ4lqWlSpEAxFr7cEX7/rQAMI/8NsWFRLwj15Ice5RQZD3sdAz2lEA7
FJe1cXkODgcer7+Jd6gcL8dyOdsWiUCN5QSWEerhVC0CNMU31d88LxUBx0JC
HWiKckxqWbyeMlf48vNYgTgrDV8vV+wGjsWB4ZPV+pvjKZ5WyWT6X2XBJlOg
pI1lK3KsbXaBbLyxDF5+Wrmq+h9lLQ4+LuVg6qyNtuB3bUIpEuGR+GxDk1Q3
peEGLx2w+g3bLsf2jH15xKvIxGjFbQLNDNjG+i9LDd9V1oLcXtQgW+eY02iB
HHRMc8tujMINhdh5PWJ/m7S2KGKW62kYUPox32qUht/vtpgnRfSMdQ/yI/3c
6Ng2h/HhMMahSXoF32ocn8n7lHX1oqWxnVwCFYlwWc9Yk0uXdh/wt32OCbT6
gD8aMepa04tey5p9wN+OVuvEWZ2Q9AtzHuU2+oC/nXL46wf8dk7rpHBuetEk
3lkuVHCIfyiE0yqO5bt41sl0JeXwvAs+u5ac6BY98oup0ko28uxLTatHadLx
Pqfjdb4rPlsSnxDPZpG8xrWhpQp9jZMYXVgRpXft9aQa300uI8GvpAMp7bxC
X3jQQYA1rDAHAlMmMGDd6lWzYzfZfMHrp8Mvn+0F/U7YrAlMwQIxPPaojREb
0OLWXs16xf7uQqnVYd1snaKFgrqFBIvo7tI0iO0WbOC8RtHaO9jeA0Oo0BHq
WZP1YRkZwOGqs/Arp3lKHZwmjDxDXxNWxB+seNCUR5yfacfvhTx7WPKwLK48
/23L03qJIhcbMFKzWtGqb5jqGZkm9ldyDv7BhR7XFJ+lbx89rfxhWPGS6k/1
Da/aA45eatvt/eaTfcMrvEQsvQ7JzqAEHMB37Af+G3ZjA9hrpA6Q1xITnTDJ
AdEO/cB902kqsQT+PYGvTSVqChnAlQiO7DhUMzQN9oRX4U7fV6cSDfsl4ooA
lvsv0a9OmyaJCvfsv8KVCH/t4shxBfMxZzrlaBTJ8RJKCCJor0WdFoSWaPcC
iSTn7yUb+U3r20KxCp2vaO5ksVb2n6JaRRKdRAlB4aalUsb0HtF/EtFCi5Yk
EVaa8PZ4V6j1rlCr+k8onsV3Tjbw+r3jvmQn7ogp9dJo+/SfdCN+6brbYEfm
SveY/pNOOsfDK91hqXTDpppOJXxs/0k3FiPdM0xkt3g0cmKMAxw5wVMEDLy3
p1NO9iMpeZ7sbkk9xUQWCs0nUszLpkmSOYa5dYIkaVZCQk8kJnVuw19PpnSo
+ZRA5GO1dl46TTJpf5dWge+3wv0FmZ7myPRKjrrZdMrE+0+lnNVtcftS5G6L
y5Qgz3Dk/Gw/yDnPsC7J6drjPoLuaOWePgAWxtRACD1O+SoIbZ+CNE5W1tWL
ZTeSvPONvGn+826YpQaWW2KakuRZtuS4PCJtE6Ob7VOmScRNDNfFKn0YMWkq
dMdgn+OICAK/mm81gqrFzJpe06VUdrjoGLFXqTu7EuOv1fR+uiqFBfytUIB2
a2y7lP/MF6ar81xLnFDP4DVOyUgiLvSrqFvEFa6KMkZ5gijdBKWv6pokG5qI
kG6RoECvAS5JpRtNNXayJdM0GOBio51sqditnQUmclrbSXo6dXplomMq3WLQ
K9N8QScvnl7+9beCTXXzPzvlXyoUMop52fQKtoziOcbW8AnWMpGBf5QwY2wY
9srplWlFjEyzUmUZY3vt9PK/tcB/U+D/wZT1ADt7w/TKtG2gTH8y8dLyzCjm
jOkVYntBiJYgxAOpYgzrZ1ISh+Kz566exXf5e+y9MN6Wk+QUumwW34XueJe0
SSdSuB0KNMkhtDp3OPH/CCut0kzmehtFouHS5rLOA0YGYBcAHNyNsxLs13NG
eXBmXl6orN4ULW5oHqrMpdPRu+u73RSX3rHX5x6Zm048RUd+dKrEOIhCnYdI
RkwzXkKRJBnxT0xkX2MRa5OzKDr1uNHpAMgFJw/Drms+2wb62It0ylTMzGw/
zszX05Vt7bCIR43xOJ8Kd0gcb/G3VoRwan0xjwXFVexjHHNHGeyqZAXcYDZE
xy07zSFvoX4nfuHW0++iV7z3BnZLfU85RV8CTDd0EjxkN2PdNXMwbMd9kO9l
Kp1lC/Y/XNbcZ4zb5VY2KlyA2hC2wpNlyrpa4RSrGDxv5dNlv3ekG+vSjJln
csJ59IcWj47CIp1/MJNQ4sPi0ZcwhxDlmM79A5VWlum2R7ho/mEm+HpmjVzF
wbC1HMqgVrwA8db/nSgiuSzVi9JINhpcWYgiMeLsUMrGuRx2bFwa3/oG6cEz
SnkJJcbHkEJfVPs9giYRzqSwJUKW1meIw5gZl+996v2ZyyZYP6+rUnh9Cn/R
iGS+rB33iY/nsWwcuHzYxIBTxYCxlS+1SobTVgm+/TIpwCmk30tJ8Hl672eO
wEEhTLJw1aG9VeM2WjbXPvEZzQ7FYFwDcuBD/A68Lh6Qvg5mdlJZe7dD/UkX
WW6f+IQeqgcpaosBSK1JJfuLlmyU9t64heyYa57XYcq+8vVySoc34/+aWcK1
ZdyS1JsjsJHOVno6h02zP2kKG4XBm5uV6ftdmjIf7D4ZME8tFDUguZMuMslC
WFo9gaVRHRar3JxUxRm30E7pI9dOZ1udO22PaJOfMJHTlY1mkvlKSpFPKxy2
BIQCn4vWQzkIfNHpxQp95Wl6BMoNaKbo5swFjFQYl6Xr+75yFV0ehCr1Opa3
qmGPpcE9bsyxYZsj3FcR5p4y9EOUrnV+5oPKFO3c4obRld8r8nMCyz/ZKI/j
mDdZkt7BYT30QE3lQvsQDoNabKvMZ37uShtjYfKtngjfLil8FSN8AgJHjUvb
CtU8MLBENsNLCG1nzc3VlB63NG9QpvmxpUqHRWD5LoiHJSuOApP54W5o+Ld/
/FJ3RYMLRqshT/0i5aX9E45yuJBSrhilu/yBWLV6h1U7G83GqQpQVSybRkcF
y940tWwMxwL4raQRz1Lxj1GKZNttYEwfTAxjFzC6C8KRf0XUVPJPZV20+LQP
HV6PSI6agT6s94TiB2dnuPv8c477TCG5XFlKG3r/ebbuipYFqwJWVWwdHbai
rdMmSrDeJWDIeIw9lt9tePsS0oez44334ZJzPdz1D4sUYN8LOAmFUTHIybjr
XzXv7jw+rGgsFwTA/Rh0tPCM86e9jsM+rkhvlMS4nhKDmaZlnERIstUm7YIY
7yNH2jWDV2USA1c1G+PHontHMO8R+DUGYRvD2/0wnmv8vGGeN8fAfhjtJoJL
8iasxIE+OByzChORuAqDlr/OHG/dPIwG3QC9lB9y8n91buhu0yzMbNspcEiy
1Sw+iPF+cNg9NCXgVbF49KzZSC2+AXZ+Ctj0IvhlrNvxMDLyDuYAbqiQIP+d
q2iBEbgRxrkaXmbbt66/ecwdOhH3ZuJBNbVWcaMjym926cVFfesOPKkZpirW
io2OJlgrNkRaYKOvTG2UlvezjTYOUjS/AnPEoBpeyFqbI3EKa+pWzr6KNmA0
LRm7vXvHm0fdTsbbkWzzNtlS6sJlpsOgrmHQzzio6+BUXZRKX/l5wDmKlcDw
CHD4JYfDvtjXiwm4rpIGfA346i1fmcklZDMzi/L5clwPrdOpy+lNCf+9cL09
w22gL/b623xd1gc89NNOe4GvvtgtL/DVF7vbbb5myg71bp77aG+5wFzf7grv
t4JkwMOAB6HSNS+VHhlPYAZUr4RVR6S84tzcFPuADuQaEoNiCae4aHFVAxxP
wF4GmNeCfjA5yOi9S+gwEVrnczDUBDCnAYO1MLxBGwpbMMIFI2C/52gwM93U
Uk2z6dDcyzCsKLG9FMPuF1jhDxazSKWLVWBcBCaSXsXU9FI/GHOHbYQ4gHBk
H4jFZx0B67A7ABZF89avFvz+qSLvuqAJWPAHiuPNbSASzCzgUpbn9IEovKYG
Wj8wEfBdhn2Y2AVFXazYF0kvvI8XsUtr3kdhaOaYzv06RYYEC4RgtuWNig7a
BQVBubS6D1juhyJ8wMOAhwEPAx76nofp8tnbl2AMeLB4oNkYPIgR3uExkpfX
wtciIeUrauC18RqO8DdFo02X1chuV+KX18BxE6bXfsaRwKcBzqK+r0a2ZQqX
VeKdZvYbxyhTcLy0NrYXy4nXwXET1l/ozT+wYBQ7dO+tkW2Zwvsq8b4lAfKK
DCD1sL1ETrwax7Ttugkz7uAk50gmiL1Jmk/GwVa9lPEX+t17ahRJpvDeSnLx
cgFYKa9XnOlu5u8YONpAR2GXKeui1SaND1pAH1ObyLwWAYZW9Og19ClxtTCv
adVbAeC+0QRn+akGEHtjfqnFBy/3bHzTInSFoX+0FXxN3XiMWonDPd/C4zAr
/Kt+fqrhQU60RmxacMMCLngNy6WgQ30vkiajuUJZFxlNc6n17R81r5dOL1Iy
U++pBBeVDbiD/D4rdai1YJkkrzCCjP0VncaQgBove7/HSuJx0wlYW+anDqya
q61Ef8846fMwtlXGI4LOdpqZD1vhZ/QBOFl+SoMjebVlGp+2aBh3J04ReIUJ
PtsKvroKQuu7+GmVhinLVA0wTeB/E4a0XuUH96GG9EtkmF5jBd9cBSbgZVLz
M2T4KQNTlqlqWY1WXuKSuQethHEglwnaJ0lZ4DzfCr6zKjgT+m35XJblpxZc
xjJ87GLh8lgZl2dbwT/oA1yy/NRRNDf+biW60tB6mgzJqVZw5XxUBMnmxZBk
+akFkp9ZiVpFy+kyJGdYwZ+cakh2siA5UoYky08tkHzCSvR8Q+t6GZKLreCL
pxqSoy1IXm6FX+fnp5Y2zQlWorD3AZ34c5sGpqP+rVxsNDPXWeGvqRmcVhYc
6ENZTsOusV592M9SLe1jmFT/tZUw9EWt9jEseNcZTWwfc68C/vzJSgZ3FNaJ
WWJjpjm5JAVH6f0wTRgkeMiKiwuGWjlcVoORe2UnKlej0OWAZiGYOnhHsCaZ
RfweaX0LZppMLX400ND8JXP5ZkWbgR6ysIVpe+1qSmcYkcsy+E2Ts2gYxTxQ
0R7sbTX/xlk0jzissZHi7XZQTHzDCr/CUHSKsw+ryGGHafI5LSIh+Zz2FOf/
g+/IUl6vrKspY1Jm6OOZ9M2G5lgaBtKgSPg3xqQ0oAR+uk7D7P3iMUJQ4o3K
ybroHG1C6cNCvQVLQw9uwA1NkSjj3IB8VReiLm0lY7cvWeOHFWiw15E861Fa
4BvgcDetLuzLZIJD8Lmh+p8efjK//gKHg2rBRKF5DNtE2RKOUNaFlmXNDTSg
TIOGCpxbbLy6OPMQkDW4EtvRCr5HB0dliw3UoXUpZbDjn5A6Y77hsQFbjUFd
ezE/3P0XdVM+22xw3qu5YNmDY8KoAIyQsOeItRZybY0eZhQ6usyTIxrnWMGn
qsjZwA3Z3XUzCm7JU0peVuDSK4t+melSOvJxxvumTkAOaGaj125uwQC02mvB
ShVg1dylgiLlAQ6+X3ERE2XaG4Qv6yBMY013PAfi8vY7Q51Rc7dRuyvGJe6B
RuoEn6wil73MYB/VEmbljLALwssomTL2NzO8S/NgL3ypM98BJqVJVeBMenY3
bFekRJtQFerNHjBujKVLGaucGf6nPVhSFxxgbE0abEQrnJODWwVT1NMYfeFC
uuXzlcztLPBt8X1FKxH0OCz80U0bWOWIe84Q12GAVMi8xgobZ3EQdFeWqsi1
l/3obbo2BLEH0J7ElCeUucA2eVhjvhXMo6ldgF5OZMtYZl/5iUaQulwkc6bX
NQ/sFLxBUeMPWkfcjz3Nxml9+vh2oJitnojZnCoxXaUex8E3WdLewWE997M8
nHU1DNdHlWlyWON3UP7PciW7NVCkVk9EatchEnks0d28CQ6ecV6Jx2xnu3Cd
yf/D0g7o6sDQVTodYcS/LUruVu/kDvEwXFZo9kDGOt+AvPTCdTz/f7Ir8x1R
wrZ6J2wZD7s5cq6jtzy4fyUHz2wPtcOSk9UJDtPtGHrcGUGz753LRsjtqh3G
QTccN60t29PoYmWaJE06HvZs67UFyXci+JgxXldLYuHOe894X6fctZnF8JEf
enwmNj7dLbcZ7740XnJW/WH0YU/8ihri9wpfTpVbUEP1piwG0uMFg0iDSINI
g0iDSINIg0iDSFMV6TJ8yutiy661fUxOmu2S9DhNiAeTrAd37kco7rrmfdeu
lmY0n08qidmTStLbl97BVBD0zWDsXI+vldZfQJrRfL655HcB+stLsyye0XZW
Mc3/SDt7TE6aZcuJZfhOr3cqXP1c9zr4vePo1sbfPhQPVgP/MBMPplBPjk0v
dBV7KN2hmuV9FMXTS6thuEp3yWvTpUSjXbMcjB+YMizK/IeVHvx+k2Jrr9tO
Q+nWrbe1NacXaqeh+XKK7LS2fFk33UG+7K98uXcc3drkJf9YvB2knbcZQh+w
Zu+GCNl5EbOhY1UwG6M2G8V7OKK5Jn2MAE7abQVsZgc9vNcKe7EmHyphzFYY
4mFeEA8FKJSFgbJcY0sOhhtWZbcipIhBx0OOJvmnxDopv4/olSmw9Pz9ihaT
XmFhfGasJDFxiYd5QTyoqdHzmqlDOMbiw/P/iGZjCo2i9sxfwigGmX8Dz/x7
R/MwJVA47QDPBrDh7AYwxQmu5y+r72NblUd/RKKfjVqRV1JHQ69ovpxj8sqX
J1uozQ9PNGLPXxz9evX0aGJTL98Dv056zWjN2xUlSrl7DyuqcyUHweK1A0yi
MOgELWjIdJuFJxohaBz9emVfMxWARphybl7uol8vm1Sy15yNI/QeR3+Qjfs8
G6/Koz8i0a+5WnKqZ2mH63B2h2u9u5j3CicMlx0vij8PYTwDS29ls1Yf651v
TxQSzNs67IkbR71lU69PYh7l0huYYJSnlg3sEYQqGFgXFco6yXM5+BZDpf19
DjvQr5Gysvmptmyq9WltsipwNdipRL2dpV67aivkzWraHWTLCuJMT7bcK4wq
XDXKSudXqCvx2bK34Nvb+iv4S5ggsZzN/SMh1LpSYoD246C/GYBaH+ew08SU
hiVvBJUIJjZB7cgzUhwe0tmTg8AV5Wgau6xzhlAqs0uxzBnjBRx0s6UBPaF2
iJhSKdb91BKbWkn43xLyVVnLmSA2HaMvxyaDEG/0VSAfWPz0WPxeXmquxZcr
P7mo/wDxB+naXi7iXW+4vjX2JaLZZIeDqbnJce/Cdn+/TOlaDMG1ERGSazvJ
VSbZyJJslxSMxwW0/9gTMHEKq6oCKemxkmxyM3IvDvsXJ8/4wyDNQ3xvLScX
xXkutUaWWlnozwz+Lt54POZfllUGpLz5l4F/YPkWGD2y/L3yqHVZftnSlIt+
XgD6JdXlX2YY/mT9y1R0drPKS032ZjNUlTuXPCHbfJYyRg0bK+eYZNsv4nAY
oFyRSVKXBE6acpxYusNZunDZYleQmnJC43AO+55SloeKEu6NglLnXFyX5mhE
e84HOQyGid/Nn0HjRfdqL2HkqgrFs8xB5Gq20TVVk4s3T3+uHBFzpXJNs4q0
RLpqjixRBg0yY3kZepwZSWFhmTGpV1KnkixwpNXUjrTiPX65Lr1WhVAbddx2
KbNCJZ45lzrVVe0nKZM94P6VomyCLv85zbf702w7adZLd0TTzRM7Wm7OOmAl
tyrTZmSDqqpTT+o8BF+X7ng19ocs/Hi1cwtyzywhnRKy+KmM2lTgqkuwNVVx
irfHoFw4YufC2kyRl3VWzIIlypxB7rOF6M/ct7eXSuLkvqF6hXO7i7ZnQqbe
dlwTKtfxYRnHiKu8pFwviEklllya3FHTXe8fKDof7D6VItaGTjYcT9rwp9l2
0qyHbuLQHapRZtpd2jiAw8BP+7ghUVWLntTrVBo3R09Qpn0Ia4BgyPz9igZK
YAzlQH96URJx3zCIXJ16WlMprXibDM1/dcrIfbOK+a9EMTPIeqUE6HHW455g
ELk6xXQqv3auf1YepZ3gOKW8xnZ5rF0VQLhZlbkuqtwjg1nSfzLaY4zYEg1K
Iy/FkWyKShC5CvX6Zd4Xg5MPcBCuCBjKS6GsSiVCSe3icGPxRxz0PJPC8Fs5
jN0Ie/guK56fcOIQHqpd5DVVU6xktSE5tVG7zEy1fE6tWDANMumMzKSrvITd
TFq/yG5v8nh+g94WaCq5mtPuLk/gqwRCI7HEfanqKebjDQ442HxF54ajujf2
8im6SM9GrYG6Uq6n8TgxKReMwPJh8CEBIwmPyOe1rJqIUiNLidvDFTTFWUyf
7b2TxeoTOOwuj0jVJPITThzC1UVcE5tCHcbnUBuuLAOjVT5DVVTTIC/1c15a
5SXs5qWksohu9TTBb8/RIk3FEQJ7C7RGKtLnbYDP5bB7O/fylK1xfeLMX5UZ
TAlJNqmLg2GJA1vYeFnRpXpDJ9fA57jezw/7LjeNELSE+gTywxL5slLyFIMe
mbdbvkDsag7/XCT3MXGjWShvv2srfh9vqRKt8vR5V3PN+S9eWYP8twHlv73D
WeCK0BY2SlreRc3V4GJ+RadV4EEls+2DSmAxatHxKCxoSFQtqEC27ZyPotwj
VMqyxtM6UP1/nV/BODE0/a7ipCEMZ79jxEiiRY7hoRatMNJ6yfB6xBifY++M
SKaMdgWaTU2zDtHYZRGsa9BbX29iNO/k/2GRnzVZV/+RQPE81KLVtfUlFW/D
EtmWTdZ+X023tefYErod5Fi8NpQcu3cED1zJ1iG6W9/OUl2nQznnhsGlT6Ti
eflSh1ZZTacicjpOK54bbjnBCAo0UR6yuIHGGZwgPhLDdSMwXijdoXAU8sRk
MI/mJDCBNiV2lpBEHYoTaDU0rQoKY78KsJT8FxkuoBtxSCy3ofFC6daksLX1
JBNqjv7M1rTJ6fcVFFdbTotU3CCnxUoyXTltnzi6VRXGtdvVlNoiVXBI4OFC
2ASGoQMZUAks64VtO20h6kj45/OFqE+uzCVuaFymCOaliu1eYlVKNy8Nid/z
AiE4TAjbLxxViVXP5/2I6r45aWwsxF+OYepc+kw8R2W9+9gkKOr1lO45RBIi
5Tqdz9CYF/3ZdRRA7dEwP7sZmhuV+tShG+Q5UCQb+SVTpZLZ422qy+lRhvB4
yY8/b9OW/Jd0ueAQCUd+6VIt3PqN2eWGdfgCAtfxreYOwjbosCUmLL1egs9A
o/GnN+2yDcJ6E/ZFeC5TeHGBU7jBnFaXJJOcxgT8NzrRHTZ3ZoTB/5NC2Jmz
Zs06KEkSNRefyY0RYVJ6dYat5/9nRNg4hYEM/aLzwrAxeL5c4YvCDMGFqaMo
zhB1K74XYT6Fgnnbhh4TJqVXS9hMNK6ZGIYZYpnCiyuKwl2mWFEMQTJj6a+N
puIX2fGE4muuCQMLnDtv3jw1F59YOIeGSenVGbZeWVe/h3FPBmRYl4nXt2GT
FFZop1b5PaG/HRXCpsgOemVXYNm2jceESenVEjYT7QrDpqQ025kIcAF7nDKz
leJOxkEBOyhgpzNsksIK7XRQwA4K2OiwqS9gQ/e3DYrZQTE7nWGT+Ay11kFh
Oyhso8N6UNgG7tbyFrbEdnrNrRo2dSnLRbb+H/9bTmFjCxYsSL9dbr5N0+S5
c8fIpLDDDC+pYh8eyLNktJP4DNVZZJFTyNFK4VtL6hTFlYTi8NKlS9Nvl5t4
6SWhc6BAV0JCspBxIaxPbM/OeGfjM2x3SDv92GS7I9xfGbNe2QMTPlwIWxMh
1bDAj2SYh+fzXYvBSbJgWAZrV3lBK5xnnPKCpJrByuO1QIWL9rKKm0gTS3+p
BBaM5CpuhWEuvZDY/YFsSEiPCYkeLoQxWoBqLtJIdjdBSobsXZSOs2ILtY3w
rDNQZKk4UKxPH/OE9MYEOb8Yw/+19PuyCnwtHfBQPw9msgoZGYInOwmYuPvS
rSbvuXQr+Av3J8tyuj6SQhUpEBHMZ7zYAtJdf897toa7w0rnObQOf9qE1Ueq
aGFS0x2aUKZJxzSD6Ja0HS7TIcWU1IiP1JVVRJzQb0cE6YpIVpMOUoK0Mf25
KakhCL+sTpmA9QJCJSXBVi+mk6Ey7kPukloEm1OWbkk5N03pYdpIRTXgp03k
/Fpk2zhXNi/VkpIt8lGbQ/nbpqbbMBUF3NxHcragPPzi7EoiLnOV56Xytlqk
W+qjhmFvryTJNgJyqKYxQVln1iLO1oI4MqGSMuEZjQagRS69MRe+tbXIRG2+
hkZQZ6Qg0lWkzNQuQwbLtJha7PIw6vLw+lrEt6oftx4vw0tJPMYEHlrEQ5of
4drCxNPqUoaRTORXTRk8TQNPmsqWJl5aghWxVs16HFINgaUVqcYypjbs4+vl
9UFmLMXLmqTITGFyelmgpPb+7JQvJKL7tLaRb5ELWSbyS8uh1XR5kfRAU+QN
rWFNsQx39XQyFhiG1luEJd6XBDKJkV8YCCE2NYbALEyimAhy/1bWpMr2URYS
2zYb0Wy3fV+cVhZgzMSLmWebFJcrKKa+rHIlzSkjgrpfEIjkO1IkpQIWeT3T
wDmhXyzys+skIBWDI4LiX1AHeA4ViZsVQjwpr5wUA15bKM+Qzbf4caub05K4
oXbIyJ1MASFtw0GairfAafkyxfExSPpbQGCfmA2sEZT1jAv+htA3CHhLHBOY
dYpXEn5LyWlMGr5p2LzC+2Umqn4lFqDHBeK9hpjAAnS9nQDSpyLHZYxGC9rZ
It+pnlHM1wpqWC5ISpVa01ZlKookrrfgPbaSEnY0pFJ9JwKyS12W1uWydHSg
Gl5nEtWjWbrp5pT6mzCmtlE2BCZRxFcJCtihqpSZhtjq2jHHPOZtojZdXjHG
UYEgs0E6w4VSk31TgauGKzsqpQnPRlrsvNAPdyHJZa7+s3BnRS0J904+VIcE
lraKUcGRcSroNj8sgmjvfTosrpHYDCIQc+5oHUr5fAH2HQsEdfLoVsXYY4wj
K2G/q8AS/re9IS/ltJT84YEQv8ykl4ZxZZItp+cLkm+VFmVDqWUfK0C8iyAP
voiUpySc6IpFKnELCq407jMD4XwxkezAg7ZjtTDTghrHQMcg9Y2tesAZNEQh
ni3AuLtPWwGyrS+QrQq09oxNIQ8tgYdnBOJ7Woqv1MuxiuIUbqu5kxbFaIg4
3O/p1XHj1h5IhnuOYO3SqgA+hSi30WO1bUKQKamdVYZKbgsglJunBerpVEZF
qAkc+2D/KU6NZ9FN0cJ4kvHiSjHvuH+m3kGMDvEqrLihFAlTPQNOjxSISqNh
WwnxmgJzT4nToaObobT23cS8laBI8+UCP/eOJQyniswMDEtjC0+FRzMGHGmo
UNLcU6prboIoqdSsnNpFalNsIwghMfekQM3xmNJ6u8xDfaHm2oKWcNyKelV2
JkCON3I1M+J+bjIW+2nqHj+zCqFUvBpgKFkk7utSwf92FChLWecJgQp4rkkv
tTaedZCKOqfyX27ipWFm+hZV4B15R4kfb/QwoV88xmUI/9vBDfNmiSdUgvuJ
9KtDILR8OjAQ5GMNUK5ZLUpJtgV8TVN0bvpLGqyV+sgHCNAyPE7kzDhckagl
oSXKLamZAWES3pmOKcbYPxDvYwze2UpSaoV192JRJbQY0Gl2QfA8l1k0Rmmk
CpF4rKCGx+eDIZX/kkb2r0EjrjFJ4yWh9rFfoGqODlQNlSOZnJG+fZjhyq3w
M1yhrrwDnpLC9vUqrBJWDvf71aG5Qiqhmts3SnMtW3M6S0Ba+XlpT4EZqdm6
sRBPamUjNI/260qS2ql/ItEpqauDBCpSe2LrQG4eHagrLgC1fvA/UlAzq791
ljU79pNpEmatPo23qRDPm732FlTGjaTu1vt2caiU1NFTXCoo244CS5K57hOo
j0OJ2j16SjudjsRf1OTpatIilcx8Wj66jxTQfbIRJa1LM+0pL7D7VALWGhPN
zfOrAkE8JIVuSDDXha6cRYWv075cIpiAF+Q9BZBfEydqSUAPd6lgqlLJIVF+
ZCDIBxsYs3WdA+NmQjwJbit3pWE5JUb34OIeAtyHGeJlgaikgqadTaM52DNQ
FU8z6eVCbI1vSIVVGjeTHlr55gLPUkmAaOzuU4XUGCpo06fc71lJH4cZKllz
LcXNykDdPB0ejbQEl3KDefuMbqNJa+YoBewqKODQOAQKG94ry+rDDCtNpupR
7s6og/1acHgI5fVhMdpSDZ2eHmnyai1DBiseSSkLjTy59Shihbu6cJg06R00
ldWI/1k2ljInTa1uE8jcboF6syqjNCyntHPiHSbEk5qvUgaUSm0EituFGh1E
SDL0Q/yAOUxGAlaykKT5uYZNBTiT5vClkmPXQG09ngjqRm6AWM8KhGmxEM+r
o+2NjlKdHOkyhAYgtfFzxI/CnqraJjTeYeAMJgG2hUQglNZ+yy70V+S82yTV
51EGjpR6qDQ7ByrzgFSZ9vRwoUYt1lJNLQvU3u05oM3OAWZ5zjtuajrG8BwB
PqtHlMsjwxdlDNwEhskJOGHr3/gfRkjgLLWn62+GKN4J/PmPlBY+4CwE3hTZ
UNbF38KfWTqMVwXex2lhi64ZSANXVaABniAgKA2oSBayo+E01wB5eLN7VCCg
IyLRfaOfP0fD36F4pbTVCESyaTBIr7q1xSNpjuXjak4cDs3pq0jairJ3GnFo
A0Bf4FfAKRxucYaiQy2Y49YRFgAnclw445zADTuOgwGBnP5dxavVGMxhJoc7
6Xk36C/5e+xXNiLoGPN/ngEvbcdLM4JS+csFTaH588RBd3me39/IqO8tAleS
0X+zusqSCCgbPVKZNw+YwfwyyiuRGxp7cDD4DtolFXd4LQdD1m3z15A3IXtD
BcilTMgBMZQPRqHpCYXWQxpYReWIjvorRf2WYS+2QdSyuUEeEpHatxKwPNJb
mCv286dXqpNgLRxJ+ckMBnrzzDcqKTYJh7rRU8VKeYYWCXhnLCO1XCL7JM9g
wM8z0iDn2mUOjFrwJrLAM40o9vDxFqqnZ9AEdUpFUBJFiOYgJxXnFGmVNNfG
dhYSzZqBDqs8CvJFbrVPy3KaWYVjHGtPam7++N9wzbWiAG30SnO8jFjICsUl
UM6Ao6TSqDzBy2Bv4WDs3HIrKORcLUK79VzGb30Gt1EvbkGpG3PnXoJk1U7P
IQcqKV6Y9WMzaUGgsl4kxJOWE+RUDU563xYU1AqHsDmlCpKs+nhBMKkEl7oN
OfGirJrGzNB56wP86oAUjORYDvKe30X4NiHX326Bhhtpx/yIFaZr7Pn5gvA5
o6CFI/LcYy60Zx4l81lxmt5L8+Ol6eVYsZPfbpEV0goErjlFCpHs1xqQyGZg
R6SClkoaj1VTZpjnS53H9zv34+A/amPhgZzncPS/KW5jsWync7j3LCUKawOO
1ynTN9MlA+7jyCkSCtM3Bn6SgE7OuKJjVMsoXqExryJqnU+XCClLhSn7aJDK
HEe3VrskN9t9NVJPrUAcG1OsJ8nuT3QxXGdprLDaZY2VsPGW7mjDIck3KPIs
Cnmcx6FOU9bFXY/CI2e4Xw+9l88rt8I7zoIRq2p/066YjjH3k/EXYLITxSus
1giUYiOnNQbpfj+thkWutrwWT/tbnfkaYGOF8LnE5Y3xSmoGgpf0SEmSrZ8U
qq5UKlZXmVL8o8pqSFnDv1A74fAslwrHcbybLEnu4DCcD+NG2JEZtLjzrUH7
k6KpCqnvngRS4k4MzJTA4BgMlUD5ZTyGsg+4wqKcC9JCK3+EkF7oCL1EN7Ne
DO05tBv1pUC1tePAnD61SY5ZL/YDKdWEJey+fSYHQx9qM2YpnYQjMUNPXWBh
X8HQKQsUyOP76jCuN+HV5tb9m24wPZSHs5ThAm3D0b8wLMeGcEEqgkoNYVJZ
ax2a+HRn8k/meHZDu6AXlH7LLZzCjPRwQyM3g0hLrKV4H8znL5XjBkIiV+cj
ech36Zwr+z7VOW3cA3W3JpUz+FtWtWWqluM5GC2L5rVDTxXganGlMt0pFnR4
D+VecopzsinC9VoO+7migWUYptS18UUpbpm8ggieQmzaTW5Ac1sDbG45xe2h
wvyx0igl1+6lUX9LeWncj+THS9P7oqCwOVEKmzc9CtPOfJW1TEkq3KjDV1V/
ZTLBhLJGAwjTsPML2JUGlBYXstgwAMyNWgdUqqzHg5Jl0H7fuf+qqG9kzY/c
rWiyEUQyDurpZPmW3dHSTXVrVqSwKOEFaGG1RJVq4W0uQ6jKZRRW2Fm8nr9V
ltrozI8wtVHJNY1qkxz6Y5e8IagktBZg1ZXJAIuV6Z2p5h8x7GwbBmo+hZ0L
QS1sLH3+pkwVSrXsnKAkFG2jgbD/Vum3yVkchisxs6YvlsiO2TCQhSUJD9TH
tpTQvEO7F+SBrWs75zIjSq6uvxCot1aE3jbtjd68tl+/BstkhVksD0GKz+T8
bkiLD+1gHj5kQal7IcK3bedbRZvmfDiaU5HR/tkXkVNsSl3fnIJE6iIX2r+1
nzBdcC51h9nbYGHXfKkQT9Lu5yleoabaXrRdTbG8U6YpyeKtMitXF5E6i7L4
1fSNcwQLt6KghoSlyy0LRycejySdwkn+WVEJwPUdjBfcy69WKttWafxc3vfJ
a6ULJz65iVFon9JWTgm7sw3GuXSX+nXhFM63CHhtPiW4Spb1MhlhlDgS4Shr
omMER1cr07uAgSpYsffqzn0rh32JpTEm8QqSzYbV2hBQaPm8RKjQGnZyZUdZ
pTFwica7/Lw4JVNoCfa3OKwkNWcmotAAJXcsEnmGrIR6G09TZrD8NpWObMCZ
Opvrz4xqX2kYShOV5vCk2oCHFwr1Sul1zU9s7leFQ+YCfHZlF2RZWkUuZfi/
hmMjqfJ0P0qFdTqjVEKV7W04+NMcBUaRoPGH0JqB+g8KQHq9WwToSyqDJCPN
GT9xEMiMQxet9HRo/DkACWns+6p8TNL055XQDtdGsOwL2jS4q49HLeHAks8q
PpnS5LIP0dvCbD83UEPbBUondfUzXqQxxqWGv/TbnPEIR7t/DkRDylfWyHOu
FcwtraWRV3MwzLHrcQHwKgEdfVimYqZ5UFOT+AsEZowL8zcfZVqoM2mUTEov
NFfd5E/PyfV/isBB0tHrXR0hD5HYlNDb8Kgyg5RgYt9TZg3mCzSrqLI34AfN
bPWCAOSA7mSUOVFK7FroirSkgQVJIf9rAM0tDP4QBoQ1eJvRmbzGPhKSKN3R
iVctKJDB3m5QtFUEplmfoVm1dCYakDScUFhAjAXqbzviwLMlRspmHzLxUnik
lRWS+f8hHw7pKNbXVwBGMrbZJbR4GYunCrbnvzoQhm38MjnxGI9CJT5GoCsZ
BalOLhhyVOjkAsQFy0acCJS24ofCEDpQwDDUsxX/dXE6Kow3EqijR/l15KT3
X3660uqzQntfT/GcqSzJdl8zNbiU3HG/Fv+X909YfsRzLXU4UDNWDzgNC+2K
XR2Ihj4IuyjH/9toK9XOGhkL1HDB6EgWi5LaOMMgvk5rQeq4S/bXDtQCrblx
+sTw2/IQkquIj8UpojDevwRFrI2HIU2vXUkBn/Jz7RQK1r7oXLClpcNSeqFN
708QdTG7hlbM/xQQ53OPCyv/ZiV0P+1Hw5GyEYiu5OshtGMjxfu0iyDa1bYm
LFt3Osg8KKAaak2NSqh+JlC6JBBVy89MbiNH8jMv2ezdgfz9XUAw1GKSSgi+
w0icliWhneahKFTlofec/ptD697AeH8TkHy7+basjCXRJcpOmZWWR1buynDQ
dDhQnEn2FJDNDNTjd6ErTX7upS+N4rqI0iqVrsHl7bxJdomE4O0ZCWRxcSI1
9ylewxaq4cHTKlXTMCmvS3XLjYZ0+i27CrLrlrR0lSyVcJWnAf3gOqIBmOG4
5sxBC+OSbUkQiOc1UO2NUKhcHZBvdONZlXrLR/MvAn6hZpIjjsYwwjjfGUVV
jLf/9961PLcM3VX4VsrVBKTsxlBaJiLx+UcB2ThDERX++FvO3qpEGXqWjzL1
S7p8Xa//ybu3PvPmd271cAFFdojR+ULqfEmGyRvRpFLSiZcztCGML7rYkv3k
Tf53C/mji7c+6No1Kx5e06gSHVbr8T7nUu/Au/7287cCiCVDpbmdroM8Q0f+
vlYdbyfe71Fi3yjSW91UEPEdBZk7aIPMgHjpQSErB6UWkZ307WDbkaJDSSWA
b5pbdheAnutHyqm/Q+uvm2tG/ncUr3tQ6J2GUBo5C0QHcA0EgJ4FIqDY+KKV
IpusCO1uArTjgSJqNyxFtRutfJG7rtJGdCmN3xo4J3TY/1h8somKqO0WjNo6
ShGqI0jHi9quAmpzAlGbL8STioJvucjgO38jyP32AQEtbRG3nbdVVjYHrV1j
0YLWD6RAaQlo7eJFS66oQzvttxo00jDJH79ULPzGjxBIDvwXyROA0MX06550
pb3uLAJeqiGkvbMXK2cLBPwO7YU/JEONcEiGchGH3WNN1mecZQDLeewHQENU
ugYjiVDD7lQDVhKtnfxFl2MSUobzDuMP5YAl2cyFxO+6jA2zGHa/GXjPESMY
MjnPkAhNG7dcO9tRAG+FUXxuvrtLAJnpi424X3txy5XFBi9EltD86KEquToZ
opR16eatD3YQ0FxG6RVmz7vceFatKKP5KwHNPMuQ/IREyhWA7CU5HCwXkE0C
OdheQLZlEEvDQgfSfiIjW4j6/QLqaE0NgchSAfJIgQMgf7eP/JYC3o1A8tsJ
ePPQ/zobq9BhNh4CLmyx5JUfv/RhL6frlEtbCqqIxCJUFd2bFCXDbwYS31ZQ
BM0WyJkstJ9zbw0KuU9QyCW5EDj4R0IQgL+1ljAVQgK/FUh5GwH8oUDgNhIU
ETkAHVyz/kJQxLv9WDhaiMQiQAu4D/4LAuztQFJbk3k4sINoAIdU0ElQSzZ/
ny/etjK2SOT/DLaTGt/EktABM07CoOETCMYeFg7fXC/AOhxIdCsq9WxYcdRa
QHSugJRkvPe78dAYt88BE429aQnioBcnSGTXNP16JJDKCtkKUQ4pw4dixs1g
J3MzZmKJ/jOK7+uilpQrBL0rBU4XCoiOBlJe7itOsWscWmAir4tyALtXAOz9
gijSluhIUQJA/AD+AkYlHxJjgfSWCdCFdvyRryU5gN0jAHaFmzjmbMmJQqQA
AYAR5a5hQuRAckAwO5CDpQKE82IgXJoD4U8FCC8vFsSBMlKQACjJ6uU2g5SR
5wRysKUAZWj25WUywny1jOzdArJXyHJh/IUCspFyheZqDweSh4DxQA4WUR1t
j8QCyqHg/sONh++2zQH3JwK4HqOxRXPADRVti8h6J3eljAPu3EAONofn0I23
nstj3an9SmP2idCA/KcMpVnI0hAa7j8SMP5Ajk6kzdqhEi4JxviqHFGkLdQb
+TkAQLXBqgXUaoIwHQ9uhJo3BOguCWIltT7/ZeIFdImEeHcJkF+Z6kcCOEc8
B+DFwQDj/rKctYgOuvMpWRs1cVJmE3y29LSEvuF/QHjMb8fd1ZmnXvD0hfDd
j324mg6/zi8SyPOiCsFwkIGeVOhu7EfVoUfot7Oowne6ANaL7H1FRAov8pnI
GNrFsfhOKip4N6lj+BK482MKwRxweYpnhMkgqXF8Jpso63p+qgSpk0WGmtiQ
isUF5bumzbWGXo9OS2OQjhqkImS9iSzv3s5Tww8FNUg9ro0DIV8YBvnrleV6
bS48T0ox9o6pbCrwIE1W+ptAXY2NhrG4tJiWDvNFPvW2TRu/vN7sDwy2k6po
OGWTQIAXVAI4dJxlgVCcSFDPNm04HQ9+J4I5m9PVJWyt4jx9gdhKFv99wlzJ
QyuSmUhIbhaHJG7wbbwJn5dY6MJAbAuDk7XKuvILjYWGSQ2ynuhzCg2rz6mZ
1/MqZ377XGO0XmDp5LniBsb3KJ5TEFxjvk3jSXuNNxOEsUrArGZCEccRNPYD
s72FODgweVGKLjOZIgGXtMF/kVBMI+JWKzmNPGLKavgg/ejOC3Og3gd/ys2J
OwR4P+rn3IF3odzORLYjjTgPUlq5W+UEVBKoa5G4pI3Fgsm04YkW0wDAUS9N
1lMHeBtTLExQzokc0C/M4Tr2eFLak+eserBkc/RFzY6WpC+Qd5P6VMYT3c5J
lFylncBhfXxeKZmL3C6R3D1sKdjMfK6aOvaRtk2R6P45ib85ELZGoEjTdXDo
1cUAOoYpFYFS12te7RYqHXtnH1PZ50eLXpMDtOTTYplba2NJPY51DS4jcxtG
1ph1Wk3jf3nt9jcF4ppEyNvoEa6SKeeVBZKLjMV+U3YaeRv1xJQhFX2E5Ew4
HJT2Ncu9Fh65cuwZ53CHwJyH0jo6IVN2Cg6pG4to0zarrqWP2+Xw8cZAuJNw
ABo9hVsy82uKgXfMfEmgmc+dWjPnIyb69wzPj+N7oVsjOdLYprvTCgY9mm+8
ctm0nY/wGkG6kSjpGr2CUTrW52MFgDpWuoW/x+30/8Z7YaV9ddjmxylCdjuw
VMaiVWKH1GuIPLGdM9Yq9PPPEGQZCZel96defqwbM5BQKh6lHoE09DqnvOHB
q7/zDUaYY3h9cBjmJ+hXBy6pWbq1PJCAq8y9RocuVKSSgGeyRWtcK0gzEihN
L0+o/HgWL8e8lgmjoFLtO1bCvHYUJGE7Op3D+uDsyXX01rEiGoRsShNzGgmP
FXkWiHArUDQkfzXan0c/SnMnywMbcaNhZgQ9exi9wmZJjhn14dmOkjmtMEOt
XaObs33mRGvc5ekuT6cC300KYowEipH0CK5Qs1rhNyun8hsJMqvWExRtqoF7
IUcD5/xjuNPGPVBgc0E8trrCk/W4Xu3BGX7cEddHEJiTvdAW2wDu5yiKZJDZ
8g1rSa9BErSuxxmeGxTLvElBrpFAuZJpRZArSjBPEAJQVC0LS8dGtxIaaNI8
YjvMRu1ZzZ052lc692wIII3kn17Xp2cldlFm4J/KQbhOjRvAkxyGZSlOgvIx
IEIlnRYOaLxzfMZL55fIFfBrAmTr09MIg1Blc9aIdqHqmPM2gQ3CVpg5w2TD
7XzrY4NgvefY7Uj6VmVdPCclnFnnntNFfYyeHV3YlSJjDI0UGHrABeqm0OUy
QnIIJ/RU3MFFb9n7ZPwpm++rA2FrR8FW+QDBINisknZCJ4dn6+AqMJ6rc+xz
28AmQbPAPukIqKBz4Qi4KTolMCxZNqCvchj6xMWOIprcf9Nbxz2CNc+ZYie5
tllvgZFtT746XJjhCGGij+QrjxFXKI59fZbCnEVnkqVtF1ixJwWW9nQSN3vW
GtUoNRyzF5YEo3M0h78P/stYkLS2lGutGDOSW4OvlUUYjRAh99C68ihINvIZ
WRKERvKZukNgqTRUYCvU4kvS6XRUEIXBMowDFecePmjbOcaM+/k1H1bnfss9
G4j+U0WnCIwr+wQZKorkikqqBb229NSchF4rSDAWKEHcAXBB0kunxny2GAfH
gHYU5heosGnYhQ18g4xR043HRmbDdAesEwQ7h02c4JZriDl5JEsEc9bnMLfs
EtI5oYyzQakT4rgDdiqTwnlNYxPXylhgCymqfNmWkjSzqjnNeZfpOQLToce0
ScJJKmfTFwdl9BoDW+U7+1vauszAcsLWNx+UBstq/qpR4bbeGczGnlbYR5V1
HYnPBujlZ/w9jDGZozSw5YrD4JJWtjBFXFqcbezTFA+ci+WnmU+8XuZIOs3i
WpIKapJmOvrAF6K0m7+2XveDCzL+gK610RzT042wmBlQ1OMIf9LoKCo0ce0+
lwvbdiObdrpwG0MGVo+tSt6GaUK8Ydcl8NuLNTk46Wq8bSerAMG7XmDYi3o+
645JkxK6tl6gHzf9na0AdgQJ5vYg86L7y/ulWLefbEENsOpa/RgIOIrYgC1Y
0IiEc9msE30o23QtypBgX5wzSFuAfY6de8C7XuBaOn7ncy7/67g8kbDf3Uz5
p0VKB3evT6zP2CpIlnIw7ufk7K9xPtsK+wSH4ZGEh1MYYPJIvlWCz8ZjFbXG
wBUZAGHOxbqOPgKRUoZy9CHO5Hn1kbeeLE8fnw2XRDrZ6vNGppQfSUd7WM1E
zhPizkSU5VO2ghpbKtMRHzfJf4CDbrV0dBWHnWbp6MXW56pFZdgblXU1UwWt
E5SxKGdCbBOfMgjwroLJ7Hn4bCBvLQFyabrAcmOa9oMbPng/4cALJHSNekIK
78hqDoJMuiVThld3c/hBFsRQYp3Pt2rhMzkoHOLNc8qfTX0QI/eJMHPt8XqF
FvqZQH7jYG/oTo0ehmj6kKfVD1z7jl/DwdClez9TXciQQzi8h7bYBcqUUNB+
PTFF07ubavOcIiQf0sym6x1y0PyqQWlSI+XdAkVQtZz+XwhkH7Uha0Pr537l
lgdw4ekKTcpA77DTfz7LpKxx9SF4ShujNu+uSCCfb+YD7FD82ciCw7hoel00
C08f4NLMGdXy5uaP0DfUH2pD9xiGlqA3N5uTg5VF30UmCCDoD4FrdbRyszUv
kzXRVqydHCnHXvs5jMTuHkr5MqWcl52QmoRFMwaLD9M3tNkF1yNBtQgjs9AN
OiUjKnrl1AU7/N0jVzJPLrjRK1xj/5vPWm4b0h6CfG1BPm9moD20XX6BGtol
sr69glCB3VUx5cigPRFnknZkGImRgVwG6PUOByszMa3Ghdno7E67pu3MOK2J
H5YvsNxM9Ztl0/YqnCXiiD4miN7yiX65I/o7lFX5Z7bJWnkxdd0b6rgZ09uN
kioYMPiSFwHXa3AOaQeNOQaNdLI8gwYigiy+z0EDBhm+wTcNPqn/Z+894C0r
ivzx5p1zw3uTmBkYYAgzBEHErCiDgcGsYEBQkggCZmTXtAoG3oCKuEoQUBQV
xAAuKmYwPhVl/aHu/nTNqAj+Vze4v3Uxs6vzf9+q6nO6z60+94S+913Yez+f
e+dNnz7dVd+q7q7urq7u2umoHfx+YDj4doczfc04n+CJTPZkVw7CaGGciTC+
nCHgzz7QdoZgiEr4DGKYBA/DbXMMNY3KZg9EKgcKtKM0lvQwdccmE3zfqV2+
MAQMD3agis5RaCcl15dClDqTbVW9vjgcGq5AcSfWoOEzDrys5IqBOxuKTVUw
BonYt7ggJZ+XZDITXlwAxwvUTOcUFc1fodur7oAZUqr687OFIIYD0Zg1WjUY
ZbfZahjB1g+1UumMZbKA0cqap3cbhh9pFagh/dKEHNSve3FpRUTyCVRFWIgE
CEa7acC5KNDHgTSJ9IyIOd+DwJ2O7qVAoAVE0Q3xXULck/2iGVJlc5svBBEZ
bnDSqrjWsHoKHG/04FjpwHHWUDhW602H+uhdS+Fo0HQ+3wKRDYpuzClgnM3Z
pQP+lgMGaqITdT3K48/ry+MHSNfsKg3+1qKVERH3EUZd5okiZ4Ule+OzLVCh
nURNT3Jo8vWtvA/Z4oKUwPnsdkv6XGb35JM0ekBzFW2SFoi0Qi1qGELe2FA2
taWKOw4JQ6HZO4OGYFhRCghv1MicLYWnCYwhzNFwbKdHIdGTXxrnU64wTsDR
LJBELxvUtYCBRMbTdQSIzqpq0s96eS24+n7MoWsQ4rsqb0m0KJ01pxfza8UJ
jhZ+d2CbQAutToUeT0UoTeHTFXksr9Bj+N6+GqxBrUnGaJIx+tzKjGo3BGjx
nHNWAzr9mTrcltTq8bt/xq9JXQnjuw5Vk71MTaCTMX9MdSmr5848G3WvEBYn
0J8DNkQtGBqGQCYPHO5tEhcVswEUdPEnyaifQfLwKpBIMx961mDPECTPoDIV
w+LaiqC0iWz8iAwUbgtA4T6gZTm1FKTdDU//qwoUs2EoPO3YIwTFA7lQLz5L
mTFxXUWESqIXe4RpQfs7iomsBZfX8hV8sUj3ekqf56yn+dOnycrn+6jl+bK0
d2ctKcl61g9X0Rw+iDNwQDjYpT6AilDazN7OA4+FT1VUlQAlWscz1Yzq+Wj1
fCbvfH01IpV5p2J/BNZWg2GuradKeDB+AJNde95StTPWiJkqz0Tky8z9Tmi1
Kl/NY58S/JKtRCsQffz1Qs5t37VGBOWnmt9ZRWWDPmU8Auqb1GbAbKqqlLRZ
1icXruwvzSOdTJ/+Uv61dy6abFG149tsJICdss6iMJV7awT49R7A3dz2xpxP
VJRC8FpTVRVTly3fQNuWM7gg4ftmLlLW7rEh/SX5mpX0m3zBOJ/y2WsQIo6P
pa8CDiZXHXZLsPGWe6SZemsGvSxbwbBfmY8oePomD5+KOz3DAdlEeRW6XFvE
U5iPtwUlH02lCWx1u0HaQs7Z7mSZC/As9+E5x4MHznhvlq9J6He5PQiGL45J
4H4sHBDEmzDFrRs8toXONDWXkMrxreEBwcd86ywTUTW0xZM63Yony24IxGX+
uEE5OFSYEJmeJDXAPxu+gzxKpbsKiHj0UdNY+55FeZXBkP21WiiZdvkxWWva
hqIDQ9YVywqj9AzY+L9ZysaJbTn/hVVu62yJ4wa5H019GAIK0bq5ERLaCquG
e56Z9GjOB4ayvMoDZieTN4+NJvPo+64kUeCDhqiwo81Ap9waED5W1nE1YOst
bnz/nP9ZRTFO9/jfw+F/v5z/f5Okp7XmX3c0aN0++L8DsemdZpN1EvkGVqFb
eamHBLaGbVtA3ypN5DgHoP2bg/EcLq2oDJFwUG909bSe3MKC+1mFzLLmLE55
1s0XX7gT3d/kB0pmJBtGdxt6CwEQt2mO1OZchNmD4GB+TVv8dstr8/vZAgVB
xSpA99cudHQy4D+MO/iaBBs92Mi4nXmiXxvTgD4NcTuIM1devvtIW+g2+pCw
WYzfvBNSFbNbnF9ZAE/lwu+WY3eNrUscGWHjwPeTIoM9rxlOD2XcB3UpqGQf
bosUF5W6SOHfHUM4BZ03ZI+ETwb28M9Ri1/06GiA0D1YjlTuKS3QMYEJhq5I
rdsgO4JkJg1xvCZPy5RL8yLjfrXpjJPaTFAXBmGIxKp3Lixjp9yXp8D3M7lQ
iaxQJ5hNw5kndy+lS3fqSN+68RBkGgQFFVkIqchJHlSlMVUaTgOIsRpqFAeT
gpakijm81oco2IpO8CCqE6ej4E3ecJbJKOjb7sGVHw5UVnuqeW8FkxkFu3VK
Pk0N2WWgaQ90sMnYy1Y+y+bXcolCc9XhkAreWIS/11fk9mlclIxAMP/gmAYj
GaP3CYZ9y+mOhIYj0ME5JdmDu2UgFXTg79rCcX+lNglO7i15pgoWsmnPHh3J
ySafYi9mpzSYxJhL7JAxYTpAGmf3MVKjf6DlJG5mwy6cqIUjW1O6Fj2/hJS6
N0XUgvshxIti2Wg9lXYzEXuvW/sa04zLbdl9xvxXmUhMdmh96NUHcoIOy1DY
9foz/Y/Lw6W+T7LlOZFUso+cTcE/kW+MqCVvjl+vQHZMRQySihgs1fUPtRSN
/E1Mt2iS2PZbcPgtqlummnyeyc6En2vyUe4HAjlaNSbXOwqpgM5eCfBNgUO0
UImsvsy7vcCwIn5W0oAQIq7DifQ6B6mjFOTHeDtEfa0M9ELHBknSLsvo1YZm
ZkzQRFLW4Zc7yv2SQwfpwzm7LIH/WKrBLhQO9kvItFOMv7AVVtI+jKLsAgJ5
hjwI9HWPDNT0TElGS+5lb4//uodaCkoLNhrYR4fJ8fAQcipikowVk9aa+RDO
7C2PpS008zDOriy+3zvn1lpRNMfV1FLyPdnw4agLc1QIARv5CV7ES3A5Q331
C/SPxyhEzVZnPR0X61Uj+Aa1jNcW/P5Pu7RvByWfpo1P5H9Ey/aVav5bOBDt
+YIk02kwTcvk2Nk3JI2kwX3n6C9SqKVDj8pQCc6Vj1IIW63wN/7rD2opiswN
rQLQPKJktuZBwAHprFJsdLgDnKIUt0oSTeo1peB9AAr7ZRf2H2nGcdVBLY14
JFNZtH7LVnG14W5bndlx3lhQSz0eRmiBa9nW0SwqbzyScEKiFBhF7c4ngkDL
FuDzHCbRmWh6Ib0obCxc10rO6zwod2YEG+TFBsbanP+lutNgSFcSWsnUHhyp
EDlXE4x0xGC0ViwKhUKKpQ1BmmI9jt9mE3zutSbXIATYglmFloIOcp3kRhRC
mcV82TgfLfg8a1vXzkSwlfhFw6FPv5MXc6pbDGO11LcflCueqbXvpI1pc/WB
mRkTMHGUsHCmUdRxcA+2oI6P4XJk2Qwo2Z7XLvG4w73FCYH4sgXxkl7vg8YZ
+50lI/T42+R4LP0lCLVUki8fqNMXPlUhfK4iROmSQqTF3q6lnNzfdYsN1Sph
VT3lbsC6AHhLkeICgIEBx4dpxsl7nVWi9dORY6TBRkCXi5WdbM1b4JyQGP2F
mw+2ZtxrNx+Uq6+p1aMeXoG9uQpw9iYKTtLtvoNfHY0eviin7RNq849H8D+y
c4bpNLCA7wZcNTHjwuyGTG7paitG8aedp6wl7xR8dzRXHNTqUh/D1NToUg+r
CEVfgWLHsUDRuuuUcV1TIG/1Q1M0zfSUg7O1LzWgQHXZRG6n6q+LBfVeeb3F
5QX1lclkHZzdPi/r4J5cnam+gsmO48NEC0RfS6seL/Qrbg6eVkkjCU1osny8
9FJ+gUGys8ntbtO5jdLOc2HZTn9ddltQW8vLC2ppEDkAa73O4TqZcxW5XDsa
LlvrBK+L+oc55PaABaepqOdpZNCWGQTCdWRB6mYVLzMZhrzQ+qIk2wifDN/t
g+9ur7wb7VKC+goS6EueolA5V5HD7eJzqEWhr6Uc3LJ9oe+ap5UOOew1apXj
n4wz4FI4G+2OgX2VtPr3CdQS599Q3mB7j0dfa2G8iDMPNT4f7ALfg5Pezx3w
MW9CzwI/BDVE4NBrAOrDG2gtF+s1aYHmawF1dA5Upo3aZFPT2ge54HXgxIpV
bjTXV1rS2M02FM2/Fjovo7yKDC9S6miNCy+OebM/8L1TDlepXm1yoUk+IaXC
20I8rkNB9utDElCYtyjVaFHxa6Eii9XedvaMwn5VDRJ/Jdk+QJdst0vhgXYi
l1IvJH4tANkBoXTn79zqRGjR7BsonbqP68HmhBks1cIHePDuYPKebXMOb8to
9kFseWto4F72sunFeRUpahDD3qft6BzAon56AArQnnGnCWR/F+guzBcb//6n
htcoYf73qMNMNrmsyJJny3j3Q4RQMyTAmyrS1FoMx5ZQJybPUB2/H/8jPa0N
bJ+bTg2PJDw+BM7eJTRf3haQp/lM0wRStmJDOpgVcF8PCMjGHjwcCIm4YNGY
wW+tkwayKlJk340N6cHFIZlbRK6nWo/LcckeaFvUWtu8j4tLF0r/n1IsSIAF
hwbZ5Qip9zTOxzmbkYnUvY2gxhhTQ5OI8Mu4BlQ7b6ue2VwXtjNy2Eq7uXu5
ECXXyusfwP/Kg68OuXGuupq8M+d3s02r1XKelbOaPdCWZrSWI0KXYRItx7qs
bmqOwBMdVgfP4g5C40i8GQLPzBHI1Gi9nxZsI/fwENjR5J3oPVsiQMbVfg4W
ntjf0Zbpk+lP/eScdiRHI2I/l/kOLEm7l4sWQDOJFzVDQO7pLIr6XXG4VhXb
40ybrWj5eLvQTuQ+Z3LxoyH8Aqm9f6aibjXOp+FJSAogoQni0ra4FJpAsMGX
4OLl29f9J0Go7JtNBNuCI2gMqEXMPnChrLUz+x03X9ZopDFIHGEo/xGGxyCs
4Pc4oI63WNtQC15NeRUteHtbGCRUhMsa/qa1ODo6JcdWL2tBuBmQXuuuzNpn
tzj9t5jbEmsaXRPmmdQlFa+eqUW93mG2bn8c0c1epIppEAZQrOztLtmw0opN
ZTvNR/+CXnaNadyajvBxy6c2vozwdywGZbkQ8rBL0PiKkxDfRyPuFtca59Ow
qchuSrGtBmbSpDitG5HH6bKXOFxiIMB8F9ss9uIGXD73XPuWtp0nXZNlveHk
Q4CobFVewoW3nHw4a8nZg4e58Ky8SbJejnyS4yRJw2lve9QPpuUtkn68yZYC
LSqb6X/4rTXBOCLEfsDSdHRj3jSeW7wwRyWbqsrOubQ+LIdZBcGQI5v/bzLO
Qr94tXzcAaVp/JYjdG6DyvHWHIbNNq1WE5GjJ9oRSasfjERiL/hwLwS1V/Ud
66RZN7NNLWB4SojfgDa8rS0MrAgD3RDBcLALA1kTthdBhy8K8U1JotVK8dez
jiM4v9giFlLgOr2gTrylLRgvKgFDSuQ+Y4W9c9AubAIQeGLBQ7EvaZiXYwER
rYgWXhoOkbTIqBn++wziA1IvaQvDi0tgOMiD4QKT6wS6UXt8AFMwuNj+xOSd
CKB4WFsYCrPxslgRrXuIlwzCi789BMgbwg4gZpbHTuyh7WyLamg1nMWVF62G
1ky9lMnBhiGnirMpvA4wMSVPny4frEPn8lt5EZJr2IzPGsQR39asiJEjMSxw
sA8+bCSXhpTyoKa0tIsi0cpzlyQLEkBkchqOVsH/lxzlG04PXqMj3bpf9GcG
6NdgbMDHA/3gGzMmeIPNzgygSnAFaNjeKZKpJowL27LDsyi/J5HNNmnVWE62
e0DW4fIsybm/k/ZB43watnSO2DrQi1/clktZvnINHPz9QJfRZfY47A8Nt1Pr
Uo9xbFZKA70UDF+mBnu7TMeZGhzN0EHKWTAgehoI4Ueio0bZqT0h4LuWlGUm
QUa2AWHU2YCY1o374AyE3qEOBgDKurDlNnDrmQFvc1Y3fzgGd9uZwSt1xGnw
93akkw1m0C62MJznpNmNrJdm0NRvJMeEmA7Yxa077FeVwODtFze+jr4NEmag
uwhqxQVtkXi1jgRVcn8PCUyQm94c3wqNktBpZkA1Wg8fZ5TU6e1nR7jQvRYY
PBkNNhJ92dDpNZrBMc+ZvRW8+7swNLykvSH/Ru8wzYAd35pxjjHumxEi/+iX
r5czLo4HljMSgcI1vq25Fluw4pXqFRk4x2eA/heL0hHb3PSzIRKt47Ww45D+
es7sdTiyR7ME1nQcns7Oecp08h4uT5EM56Xi73X0pz4giOzim8EN5wY5x/Vt
fZbjQNfvsdjCjm1t4j9DSnH9t537KOdNYzNeWuWC26N6bI/bbj2eay06lLa5
fdhl1BuFfUbbmKWyS6eGA92j5FnDqKUCUnHQfkVJTSMNWOrtIzY2Z4WMvzK5
wpke/XYkwqTRQnEODZM5weFIT6C8iil+ck0s0op03iHCkvob8LWnBXJu7EnG
xe7nlNuOQ0rkzGpRLAWDSQ0kegL9OdAxPKsmIkkNStMxIRJLq5rOufhgeQoy
/iTfjSZrKFDSQrDLSrEnWZ8mPPpn8Prnk6pjklSnMh0rJrH0KjDTlQgB1jRC
fCWoM599rBo7ctLjc7J9OmA/P0vnfXktktJx8d469JQoAh+e6GKYsp0Yzo89
X3gRQqtEgpzIOJqKrPMhJsj1XHW6Jjy6pkiZzz500Y6x/21tWzj3IPqjdEpD
ozlOWEhMOS1oGzDNlp5dzulsRYomNh6mCJRP9nfhlXWjQx+8SSFMmUQMjaI4
oSEr/6Gcu17F2tMRcxdLmBwQieJowjHZBi2izXKR5NBQhGKcTmosyH8sYbFX
sepkTCzGEqu4Bh8uyeiK9syrHBrTT4aEMUQPbCjTb+n8dSvWmoyNv1gC5dkn
hQrB5OEXTn0/laxH5mlV49tJCUsXWW8wsGa+BDxP/NBvkmGHj9xDXk1TbqwI
XLcW+elEAUcx42aAWRdw1YpL6OkX1WYnD+tzPu3q/RE5emnFGHfSAOJHzQvF
uMxUh7C4jh/U0ZVKIHRrgbB6LCA4oQPnzfD202Culi5I8jUCi/SYdk0M60Ab
M3SqhauT6Gaxo+BJa4wRZvLrtXjv1SByzfh4bx1XUhSBT0TOYXngBMO+O/CP
xx2UlxveIISVBVXHjJIPnXcxAbFG0s2GD7l9OefUi2bG/Uu1uHay1hghNF6M
EJI2QoK78veM+gB0a1C//WgAaB0bULRFdgyx0QC3N5htUHC5Ww8kvVMotkGS
YNLdaksRdDBwn2lEM8QaGxrYTsprERQvSlBIPoQ9EDnrpIrczlakeF1kbmMp
ALtoULwomCy/pf9Rhh4UAcqJbTmMvLgCD7Gj/pLnSfA3hqsDch476FagVzCy
9rFsCr1eKD2JeDA05J7cyxEpyKMIvHjQ5OQS4lcoRO3UjvjWIQNFfneh3z48
Aa3Rii8WpuDz8hipTmxC1IqeDuqLyICibej4zreIHslUxAjAqLQtfK9UaoiF
x17027nI5IM+qqOIlSzGLpwl4CT8a8nzQ8GHz1vFio5Iy8jaVtN79WpahwD0
AKByMM+g2Q+bt9TLg/E/CVci6RjRDmWDpLhvcqVSQ2RGdzPOR7bA0PAyBwDh
Em4+bQMYKlzie5VSQ+vYhZ4zJ12GCccXNF60KgxPQJW6GBkfPIdPCTMABh5o
RhKMkIwpTcEvq1516xCEntGbAHm7umPvZIZErhP07KzsY4s/MKcOc5AaVVxB
hgkAXVGxom4kUMQZFTy/2z5iw64HG3NbeeVak3eVFDBdouOOKsYf/ayoWEdc
LNbauSC+2Nw7wfAICizQlGBbX2ZyH45LpSg0fHvU97tGOhcxES0A8xkchel8
rWs86Id4oPWiJFxeA/7T70oyIOyagR2E/6B6OSsMw9slfY8At/S/Wv6fOXuF
dZAS4JpMaDDDtkKkWJacDH7t4s3OGa/J/3VyMqNL7BbvcGFlgC5Ouktr6FHn
LyzY2eGjJ4WFQnBw6gZl6eUBJl8rs/57YO2/JP2ek8VDamOjwGDEQR9xdcIA
9iN59Dp5GxKz3qD/Juw15OQUeg1z0Y9EZWcVyvi2PMLoiEUHHO2BPY59TYyO
1gMeLGPJCEFYyBlBZgyvMM7nxGYMPo/RxdC44NiMcblNPmmc4XYFUw8vKhv4
pql4HOpdWzAy9fBTuEm+ZpYdZNFbodPFfB3b4A0PVtDxH81++1AkFi5rQZcZ
mEpcM3FU4RuLKpnM5A9NNpnBBCcz7Rs2NepLNFl/MC79KOfzRk4FOrNO+M1i
IMOsqE13aAaOAX84KgNdu26AFRH0g9h2Q0/By1dd2Irw0LZLB5hsdMyITMEC
x/agI3Ec1TiUNSRsjNpYw/hidQK7Hgjzvt5k6/6wobDxdZogbd2oYG69wYiR
crICyARai7L6Ce5wShprMTJv7OLvnxm+TANixu2N0Apn4RONnxZyl/Rom28y
Yg0WgzkGeGclH7LENhAtJzQ80BSVXNmmgqP68YajD0DXsGCEHQdMiDHCwhd5
G/l7qUluOHJMaeC3JS6hd27tA0tLEjvj0xE9NzDg1RNDlWtqLDFV5DqnmRBX
TQBdZsAu+LuJo2prbKpi2xvk86pJmFbxo1ocGv31zQMO5TgwU3A6lXkPnFrn
idvJv0DawiBpGYb/y4aBKQ1TGqY0hO6eTOxqGHXA719akpR4oCBtMqgqmkfx
qSKP31oDUvCC2ffkxM1bAt3gGU0Hz60WPBqda0UZYX0bEC6Fb6kfdySG7g9Y
S+/LUdts849R0YLXh14Ria7j6beD1YdHGd7Px4IErUyPINbG3wyijEZ0cgkV
44i1IScnKgeIkA0vbNlCQf5M/6P8CdZonmTr6ObYZJ8JCZbBkkjsvJP+d1hN
GJKKMNyR4mSIKijRHVao0R0Ma8NnJQ00YmsH4amuc2g9SuF9UuNe3BiEoCzk
R682DDNjgiGuagQCNPSxep8FaBAy8Tb2+u+RcZaeKclQ3l7GyITHrLixjHMt
XEdakftkrNzHUgQ56KKHoUjgwATf6Qtz6ogS62SPjalJj0HxdZ3D5dU5TMfF
4ZgiTcjxrG/II4qBO5EhJb5ezscahY87RZCIVVw7ePkPeYTkCYsJ8Y1yJrbV
mbiDh3uQMwlfWvz53uL34QQdszQjbCD7H4x00XfMsA/9mlymI+ZyHOEfWLJd
29HAv+KLhrdPoahi9Z1qnM+4wiQ0FPLpnNnOi2ir8MklCPTrIzAzJgRGHChC
JrcfNM4Q4Mz+0Plsk5M2jkAKwYABpAY9gFDrrPdpTGLxmNYROh69inikS4pH
4QA4MDFdB5kmk+WKgRN6Z0sajmDAusPsLVvnEUaXLlxCKFgA0qgLoSXJWtuZ
okDFRcXHV4StVwG23kTBRtrVd3BqMsGuHlshOdk4qi3HIeNHUIgRIIBVYSD6
N40vNfjuKXzvOBa+YwUHaBIlgvYpMotXokDGjoggcMc45E9GhLZsf0gt5nsK
8zuOj/lY57tlZo0ZR734DnTRn7WqTOc2SvNu0uboxDFCG8Q4x8+248B+VgP+
uxX5Xzsa/mNJnqfswyMYiKJvI3Qxu7cPwiL7PS0iGMQ6wS+iLnbnVRnuV2R4
u/gMxzrlTkeMA8EK5OTI0MAEAkOMc/50Gkjrcg8dEZ2xcOQrd2Id+X8Fv0aX
+nlurufr1cQ6CS8XfMU4x08/a5TyYtEq99TFOI1PP2uV8mKdvT+X30G1DzQj
OUNPPyuqVxPrvLxwNqoz7y5bYzvuLjzdqY6tX5bRWt8ZiX425ITMW2KW2PFo
njN7HSSfs09sqQMlj8Pdhy/AJKvCXXR6Z47gZpt/jE5Ir2ZgBofWt08AXYPL
c++YCKqKaz6TQVXRXl1iqs6gvIpmvW0C6DIDXv2XThRV9jDmElNV7OOnNEwH
3aF0LekoeyfWllo0nEl/ZkcPF2Q5+pIJoEobE94yAXSZgcW9SUDLDFgbS0zV
WZRXkeHFE0DXoMX41omgqqhZk0FV0WJcYqp42u5f3rrEJMXvyvOhlh7R4m7T
63udd++YYExpuCPToF1UfuHSkvQ6+nNgcnfRxFGFQWDyqNq69FTRDeNiXnhr
eBdMAF2D5kV8fZeo5e+VZxTY8IoGlBa1bVSUpq+QDNikxqbbuxsQW7REohKr
DblMRsdumSEJAcvJZ+byOgxIJ+gu2nAnGGF03pnBOd6h/sV16RvRQMGkkdvs
TyQTXMqWO6C3pI/3YPvwmkcbwPXCcIdGvEWsbGI5HdGmZEvXay7vbsCanEDA
VjJOpeLwA85F3l+YYmra3Fu/C+VK/8b4wqwF1jfKiVxeQkjdo7ayyYndLAwU
8GSQ86Lkib7R5hNPhGIncDm/3sCXiHbnre+0dbJF9QjwRO1TPNi046oTdsU9
n1vpQoo4+4xbFCCv/aVS1t0O4LeOe7+wdb8rJ3S4Xny9BXJpRa6W6qCvKKI9
rua+C6ea3xb4xXb23Xz69F5eGl4DJ9YeeLWHrLB1Dlm91uZi2rqnOTC5J2rF
ca/S4VaBbYxniWUDGu6jOOtCp74l0P2/Gg6kQARwM0rfb3KhHG9qKu2N7cFM
ajCZjglMTYe5TSxzvXjx/ajh9jEj2TBYwJ/htpx1OtOVtTlx6S0aBM1VOX2i
yZG/S1ZD34akhmPbGnkbHof2KLB0JFUO5ko067EfghY/x1NN7plpB7BPOJjb
Acz6SOKLCMUNVLkpmEl19tKxghlW5Y5rxvxfW6ocZdxs8sOP+DpXyuoGo2Dd
5HjKWZJ8aV5/8jNJOzhPq3rgeAnObrNlOfuEAmg4VgTDCzbDiZZtGeNea5yP
jHEbnHfRf1APLc4ldZR4OKLdWoym40JUOxHHypqij0Q/Cq9s4Cy3NVzrQPba
jNkBC72FduLsLIR4kIOldwpI0qoctR7XgXQuqAvKrD85vt8U9KUdn+Y8gkz3
zrlJb3Ge4aRsEy0cily3Om/jPwIvrvuuJn0gI0S39wWkJoc3n2zyruOeOVxD
T4iP/vg8Q9t5qlM6bPY98jfJd/vvnecvy5+lVznpZ5maivQtHZxuRSbGeSxf
hgCsELxB6rtNoILOY0UW/twnEq5bs/ezj2hm0RpvolJy2h/e8NjPvd5B7+oc
vZc5Ser59PGd8udS0ksc3hFYX7r4FzvJX83KSs9zkq82NRXrH8oh6lVkIR0x
RJqiSXlPNs48vMO/OJPszrG/RkwyXEXbuIVifcspCt9rjHpTVPDcu8zExhhh
QBTM7aNebjIFQ1/+ZCl826ysbDkM3xtNMwULQdWryMK4gjFoisbl9TF626t+
rKWAsRQ6cbOxupd80zgfMTA2OK9l9qy4tDZRPFwIgIkIxpHbhf1DTaZ4Q8/b
Sx+75JEORB1/6MCD5i7BZZ7tJOM+3SZ6F0KqV5H+ZEmR0o4ySxwPMPBjByBQ
9oi8Osze7f0kdpj1NDNg3jZRSpkf4MwNHO1pDi8T89Ml6yeJZq5ys6QNObUv
GE1IvIBCmIV8sJGmdKvzAI1UVPhYJxla3mT2MBTXXi3u0onCleMwbM1e6rjD
s91/sfYrlhxvd55/0+G+aF63UOT7SLK7o2BXw6hKUeSKMQpkSBlbtAfpVO1a
Lr5QQ9HIFzjJtQfzGysC1KsF0OqxABTuS721k0tz8q80vqpJctHebq5pBJCd
fj83o5sazsck+cqs4mrxEWS2Pt6YE6Jy1jLD9wyTqdxZTvJHTSOVq4pUvwZL
a8aHlBamQPZLsWRgb0jD97D8mTd6OApYtMebKCBvT8/aov4iNWBhx65MYXPo
YTk11YI0rGMSRxfnQlTtHAeDL+bQwGTEWAk7PzcivAk1/q6lgV+vAVW/Bp/b
jwaqEl1b6cCA7z75sywObkHXijZ4c12ju7VxCoCjg3ArwwhyhH1HrOeh8SJY
PiMKriGrfHZEsRJ/QF5JB/+4dvPz8mfpZ5x0aEwDTRsO1GxFZtfFB0oLJiHa
tYvxtWu3/Fm6j1G1q2geN9EuDu+RAhPYsxAUYJXh3ouOId6ILaN9yJ4CTA93
VQM+GYi4ySZJF0J8i/MYdut2Ga4d/PMb5zGMmXrK8k2d75UKPzu14LtE4HPG
F/i98mfpQ40q8KL12UTgQ+OQMMndB5rcwcFKALOEGbpRoPP1AvW0GC4t/IFO
Ojphkmkt6dDPap1SLTyIWKJ2IRPfJ+awHa+jWTSsmqBZHg9FBhPMaO2F467f
QWJLlN7ipQ5BgLqW3wH9VA2nInh93qnwTTkwV+h4Fc2AJniVx2SRXmdPyfif
VC3jhf4NE2yyJWUG+RWHoGMa4VU1pIt4Org3ZmBqTj2DKD2Wytz24s7kisNa
E+QaRYhhp0PqLjcufh9iuLta6fB0N4e2Wyw79ZFsGVlGluXWmjwgNr6YVaBv
lRUWdL/fszVqy3Jlw0ML0GsErxHX3vOdN9BrX9YU0EYxbViFZ5/jvIsvFlbR
cHGt1eVGLKQ0DKPaj7eAsUa8HPEpByNWH/7VMtYYy0axdKT7nDcDckg/5qR9
M3t9oBtvskV2WQEJz38AFvPltUHYoDAn5gl8G+yGoZjMXayOY9UdQwqGX8ye
PmmCfW9jJvO4l3mrlhMZ6A3sKjxOT5BfcUPGabWZ2U3RK6IbPMiw85049Ks9
YRO+OPZCavci/ktoqHUYhn4eygUVO5MmXkhbS39OmWaaZppmmmaaZppmmmaa
ZppmWtpMl9GvflOq+OqqxzfLnj20pMxew/qkTOSD+YztNyylzg17r9euzNp0
Pq4hZo9rWN9B/AxGPdyKsHKFZZB1w95rWWZtOl/X8L0K8isrsymetfWsZZn/
K/XsoSVlNu0nNtIzO5seepNw1SPcVfMdWK/eaPQ9iPPhUP6PCvmwaf28uuWl
keudiczvgzmfvVIYa0Z2uTeaLLU6epH5EPygytiFvN0pD3/jhFi3Tnmx640t
tzMjl1dVT6u2yxHpabR2GbveabucrHZ5YL16o/G7G//Dey5Vbl5f7t68XiVG
QZ0YFJsqkzHnklGWvyHVLI9Z4GTPlMBjEHJ4p5P2Qlt9VQ7rBJFgGlZXomEI
Ck1h4CaX7ibJ+OJcbrcGF3XQCVQnB/xGwSC391l71ya8keGcMG94N8VifHZd
TurkZRpWV6LBjEbOW0aHcB2Nr97+Zy0ZI1SK6I2/gVJMG/+dvPEfWJuGkUDh
2QGZszGOcsB5UWLLnCnJsCB6Urgb2iUQ2aVG/J5NZfXPavUXs7aklcWRWl+F
yyUn5+4f6qC2pnqhNWLu1Ks/rpwewmRap3k4/1qHlSqk1xCzVpM4aMdlSeC0
R5fggvfIvFAsOsGCRqNbV73QGozWqz8u71tGAWgNVS5tywP1xyWTe/bIzbiG
3OvVP23GE96MN5XVP6vVH3lY8oZnCqkB93jyDZeYV3jDnke6nxAyGMiqXwxk
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
9NXiYyPTT3KYmTfiTEN/HeX/xdcGH5IkSfDW2t3zfJtt2pE5MqYsTbqJzZY6
J5+X9malDu16+yPLaSm9NHf3FvRRWgG/u/OjKchTkKcgT0EeSJuCPAV5KBNT
kMsZM2Vp/6tA5txJqhDiAbo1+9mgsPMFTgPppexQAddOaZjSMJk0XEC/+pWk
sy3o27akXK3LaEL7+fwOyi69I67Xgo9VFevoR+KJt6iqXb3Thq+VNeqJy1ul
Cwvas1apmlic8aJzIJD2QDznbgvmVtSqqReVPy3860AE0/bMVaomMmd2Ez0Y
nY/98ZN542y2d7I3mnA5tEpise/U0YQxJdaTH1EpgryG1hFZWENjY0TgaWgd
kXk6UZKDR54j8DS0jrg8VT17FqE7rFhTZP4qHl6IwF/FmmLxJ0ZIJZ/UCEZI
pXoiG1iV3I4i8Fapnli8iUE8dKM5gkE8tI5YPMmag7cNONeC/tVKecsi0XpZ
C7o2TGmY0jClYUrDlIYpDVMapjRMaZjSMKVhSsOUhikNUxqmNExpmNIwpWFK
w5SGKQ1TGqY03ElpuD+/c4LhAA74mpX0m3zVOJ8jJ4fWV0syPVqF36Mz4sTX
bfPxZ3x8/rgtn8TXfIx+k/ljX3XN2U996RUNCSbvPC4wOevo068+5LBTLq5D
9XMNB9f/ISFMv8n3dISFCdS19en8NR+j32TrcfMf33rMKz6I2sNM4LJ7syNA
2A2F7LHAAODXfs4PsbiYptX7tFd/BPWWc0ys7oB6N6Cy3ZV69+V/ctWvwOz1
R552lcosHRFfgfq2xfvbor5T+N2FCMxCW1RmC/WuRiHP53crM7sgX/Mx+u1Y
Zu2XJHwfhWlyJ5lF5ctQzhxef389pr36P0q/XQJBGLegg4b7KPwXSFiGEt5X
hf8FC/qrP2rrMTP0m9imSdXdU+H7/fjpodI+Kumj0tej0l3w112Q1sFTzWv+
85yGx5bHRTHTr23Hbr0es1q952T17o20GTwVz3eJ0vmKxZ+3ytfM0m/inRZX
O1SA4BLngXIPBRSKPENs90BIFyQ9DcStwl+rkbYWT/9TAcXpgiHsYfV6oGj1
Hod6V+KvNUhbg6ev90D5J+P03HN+z10YVkj9U4WauysovBw/KerrkhqAhkeD
mln8tZx0lGSPfPcuhwLFU8NPFf24uwJF1cq/5kJBIdx+5MABvylcV/kNAvbr
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
thWYDHNXc2nr5RH+tcsuXtqRStpmSqMIMhAJPHtxbqenZJ2t/voaJeuhramk
E40bDcO8wYjea6Rq5ZaVodF7UcVyn6qkHVwdVa3IwOuTiOpBJWWsVfLvTmnc
MoI/E3x91eWUMG9/LsAPH3inJaJ5+TpZzps32S0xl3FOpCzYnHP4ncF/tx3F
X9xxZHStytPO3mabbfA1q+i3VppW3v+mtAU3bSV+RyLB5VzbZuN8XmMGKSjo
0GRhVSdtInVydPId3V+kORsNfV5Gv/r1VctKnnHAgHmbi/7adhR/FW70XpWn
HZIkCV3tvIoveL6+RppWXsy0rcb5TGDagpu2ktPAw0Ih3+SkkUbwVUG6Ri4v
ebY253qzLXUuK3WInk1SmimkQbbZReei33XStPKipN0hdCqoZ7F7srtzBX/D
lUI1Sy9Akjm7PXxxE/0v+G7He3fx81f4meVyn+KkcxnTTjuUNkkd9J2o034u
P22k9Wnw3ZpaP+38p53/0nb+L6XfOvf0JM+RdMd5eVml943cukdNpfdzKuxQ
43ymI8F0JBhrGmnEc+j/zZsA9+Qxm8B0WJgOC5MwLNS5/AZODjCInpBn1V7v
Fl/HBxPhmT/RKxuN88kVvzAe8IL05gJEzdNGV7I+qmAJsGpaVp7Ql/0fn5V5
HaX5Vilp9+U0rzEcqaRtrFjekDRNoeejpTk9eWOtTYKv19faYV34vImvZVla
VQ3Q0pgVvxu+H2tjf8OGDVm+3fN82ee+9evVtELLN98irYrm4f+bG6WNuFeS
Dvkl9Bu4N2Xg+o5OWW71eqf3SRoiQ5Glkve4+V9H+X8V+jbRkmU77LCDZcNq
iaedWh+jpck2Nd5b8PIRBc+uBUg3EiDBZn2U8tRhqnZTCjIfBCQXjqiM9IZg
6FIjroU9+u08X96ucveAxENRsi4rZsUHI5I1e/Hs+Tb7bEbfZCrUsXHg6saE
6w6obokwQ8WLj/BH5G3rPxwMSC5pQ/PJqAxFQshX66iLmD2IdiRuH/NCOVHf
WcjSss9Mnm9zgetQWhXl9N4lBKTvQGJGgFbRMZzWCkNRwCgY9hfyl6uiBF0r
1b/Tw2AMBUhL24//eW5exMHyNV367UiO4UHaJW1oPm7QXRxNvtHkskK/Ady6
OZVZC+3i9zp+gNeLEHmKRCL/ZQSGulEZAjPzlqEOfj/ND4bKnBi6lv9mU0YL
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
/wP1Uno=\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"d86fc605-dd2c-4052-87d6-e006497c98c0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fig. S9: Post-bleaching dynamics when prey is low", "Section",
 CellChangeTimes->{{3.843078978634528*^9, 3.843078985461816*^9}, {
  3.845645391557177*^9, 3.845645396923788*^9}, {3.846192122030787*^9, 
  3.8461921231473637`*^9}},ExpressionUUID->"4c4bfcf2-ea3b-49db-9b8d-\
fb0788e9f59a"],

Cell[CellGroupData[{

Cell["Run simulations", "Subsection",
 CellChangeTimes->{{3.8397595524329348`*^9, 3.839759554152747*^9}, {
  3.843079234967012*^9, 
  3.8430792384848948`*^9}},ExpressionUUID->"1a3fa8f8-ff42-42cf-8a07-\
f1d16c525401"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh", ",", 
    "LfunH"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.831830789369714*^9, 3.8318307905412607`*^9}, {
   3.835995882215592*^9, 3.83599588299831*^9}, {3.8363089619914494`*^9, 
   3.836308970966587*^9}, {3.836309185335792*^9, 3.8363091870313787`*^9}, 
   3.8363138138722897`*^9, {3.839759712641057*^9, 3.839759713514749*^9}},
 CellLabel->
  "In[860]:=",ExpressionUUID->"7e30e19f-5b57-4a81-bab9-56966e00218c"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"environment", ":", " ", 
    RowBox[{"flushing", " ", "rate", " ", "and", " ", "N", " ", "level"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jN", "=", 
     FractionBox[
      RowBox[{"jNm", " ", "\[CapitalNu]"}], 
      RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jNi0", " ", "=", " ", 
     FractionBox[
      RowBox[{"jNm", " ", "\[CapitalNu]"}], 
      RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", "=", 
     RowBox[{"0.5", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"low", " ", "prey"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jX", "=", 
     FractionBox[
      RowBox[{"jXm", " ", "X"}], 
      RowBox[{"X", "+", "KX"}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "1000"}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tStartStress", "=", "600"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tHigh", "=", "30"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LHigh", "=", "35"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "use", " ", "Table", " ", "to", " ", "simulate", " ", "the", " ", "model",
      " ", "with", " ", "and", " ", "without", " ", "fish"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LowXRuns", "=", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"jX", "=", 
             FractionBox[
              RowBox[{"jXm", " ", "X"}], 
              RowBox[{"X", "+", "KX"}]]}], ","}], "*)"}], 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"jN", "=", 
             FractionBox[
              RowBox[{"jNm", " ", "\[CapitalNu]"}], 
              RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ","}], "*)"}], 
          RowBox[{
           RowBox[{"jHT", "=", "j0HT"}], ",", 
           RowBox[{"rNS", "=", 
            RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
           RowBox[{"VH0", "=", 
            RowBox[{"kv", "*", "H0"}]}], ",", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
             RowBox[{"jNi0", " ", "=", " ", 
              FractionBox[
               RowBox[{"jNm", " ", "\[CapitalNu]"}], 
               RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ","}], "*)"}], 
           "states", ",", " ", "rNH", ",", " ", "S", ",", "H", ",", "VH", ",",
            "P", ",", "Ni", ",", "jNi", ",", "\[Rho]C", ",", " ", "jCP", ",", 
           " ", "jHG", ",", "\[Rho]N", ",", "jeC", ",", "jCO2", ",", "A", ",",
            "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", ",", 
           "cROS1", ",", "jSG", ",", "jST", ",", "jNw", ",", "F", ",", "fh", 
           ",", "LfunH", ",", "tsolve", ",", " ", "addtimetostatevars", ",", 
           "eqs", ",", "inis", ",", "sol", ",", "t"}], 
          RowBox[{"(*", 
           RowBox[{
           "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
            "intermediate", " ", "output", " ", "values", " ", "in", " ", 
            "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"light", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"LfunH", "=", 
           RowBox[{"L", "+", " ", 
            RowBox[{"LHigh", "*", 
             RowBox[{"HeavisideTheta", "[", 
              RowBox[{"t", "-", "tStartStress"}], "]"}]}], " ", "-", "  ", 
            RowBox[{"LHigh", "*", 
             RowBox[{"HeavisideTheta", "[", 
              RowBox[{"t", "-", 
               RowBox[{"(", 
                RowBox[{"tStartStress", "+", "tHigh"}], ")"}]}], "]"}]}]}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
            RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
           FractionBox[
            RowBox[{"A", " ", "B", " ", 
             RowBox[{"(", 
              RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
            RowBox[{
             RowBox[{
              SuperscriptBox["A", "2"], " ", "B"}], "+", 
             RowBox[{"A", " ", 
              SuperscriptBox["B", "2"]}], "+", 
             RowBox[{
              SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
             RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
             RowBox[{
              SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
          RowBox[{"(*", 
           RowBox[{"same", " ", "as", " ", 
            FractionBox["1", 
             RowBox[{
              FractionBox["1", "\[Rho]"], "+", 
              FractionBox["1", "A"], "+", 
              FractionBox["1", "B"], "-", 
              FractionBox["1", 
               RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], "*)"}],
           "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"fh", "[", 
            RowBox[{
             RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
           RowBox[{"Piecewise", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", " ", 
                RowBox[{"y", "<", "0"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"kv", " ", "*", "y"}], ",", 
                RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", "Calculations", " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"jHG", "=", 
           RowBox[{
            RowBox[{"F", "[", "jHGm", "]"}], "[", 
            RowBox[{
             RowBox[{"yC", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Rho]C", " ", 
                 RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
              SuperscriptBox["nNH", 
               RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"jSG", "=", 
           RowBox[{
            RowBox[{"F", "[", "jSGm", "]"}], "[", 
            RowBox[{
             RowBox[{"jCP", " ", "yC"}], ",", 
             FractionBox[
              RowBox[{"rNS", "+", 
               FractionBox[
                RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"\[Rho]N", "=", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
              RowBox[{"\[Alpha]", "*", "jN"}], "+", 
              RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
              RowBox[{"nNH", " ", "jHG"}]}], " ", 
             RowBox[{"(*", 
              SuperscriptBox["yN", 
               RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"jeC", "=", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{"jX", "-", 
              FractionBox["jHG", "yC"], "+", 
              FractionBox[
               RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], 
          ";", " ", "\[IndentingNewLine]", 
          RowBox[{"jCO2", "=", 
           RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"jL", "=", 
           RowBox[{"A", " ", "astar", " ", "LfunH"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"rCH", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"jHT", "+", 
              FractionBox[
               RowBox[{"jHG", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
            "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"rCS", "=", 
           RowBox[{"\[Sigma]CS", 
            RowBox[{"(", 
             RowBox[{"j0ST", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
               SuperscriptBox["yC", 
                RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"jeL", "=", 
           RowBox[{"jL", "-", 
            FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"jNPQ", "=", 
           FractionBox["1", 
            RowBox[{
             FractionBox["1", "jeL"], "+", 
             FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
          RowBox[{"cROS1", "=", 
           FractionBox[
            RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"jST", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"rNH", "=", 
           RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"A", "=", 
           RowBox[{"1.256307", "+", 
            RowBox[{"1.385969", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "6.479055"}], " ", 
               RowBox[{"S", "/", "H"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"jNw", "=", " ", 
           RowBox[{
            RowBox[{"\[Rho]N", "*", 
             RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
            RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"tsolve", "=", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Rho]C", ",", 
               RowBox[{"jCP", "-", 
                RowBox[{"jSG", " ", 
                 SuperscriptBox["yC", 
                  RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"jCP", ",", 
               FractionBox[
                RowBox[{
                 RowBox[{"F", "[", "jCPm", "]"}], "[", 
                 RowBox[{
                  RowBox[{"jL", " ", "yCL"}], ",", 
                  RowBox[{"rCS", "+", 
                   FractionBox[
                    RowBox[{"H", " ", 
                    RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
                RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"jNi", ",", " ", 
               FractionBox[
                RowBox[{"jNm", " ", "*", "Ni"}], 
                RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
            "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"states", "=", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"tsolve", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
              "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"addtimetostatevars", "=", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"#", "\[Rule]", 
                RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", 
             "states"}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"eqs", "=", 
           RowBox[{"Join", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
                 "\[Equal]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Lambda]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                   "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
              "tsolve"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"S", 
                   RowBox[{"(", 
                    RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                  "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"H", 
                   RowBox[{"(", 
                    RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                  "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                RowBox[{"fh", "[", 
                 RowBox[{"t", ",", " ", 
                  RowBox[{
                   RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"d", "*", 
                    RowBox[{"(", " ", 
                    RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                   " ", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                    ")"}], "/", 
                    RowBox[{"(", " ", 
                    RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                  "addtimetostatevars"}], ")"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"P", "*", 
                   RowBox[{"(", 
                    RowBox[{"rp", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                    ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
              "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"inis", "=", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], 
                 "\[Equal]", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
              "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"sol", "=", 
           RowBox[{
            RowBox[{"NDSolve", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Join", "[", 
                RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
              RowBox[{
               RowBox[{"#", "&"}], "/@", "states"}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
              RowBox[{"Method", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<EquationSimplification\>\"", "\[Rule]", 
                 "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"{", "sol", "}"}]}]}], 
        RowBox[{"(*", 
         RowBox[{
         "save", " ", "the", " ", "whole", " ", "simulation", " ", "as", " ", 
          "output"}], "*)"}], "]"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"P0", ",", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", 
           RowBox[{"kp", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H0"}]}], "}"}]}], 
        "}"}]}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "repeat", " ", "once", " ", "with", " ", "no", " ", "fish", " ", 
      RowBox[{"(", 
       RowBox[{"P0", "=", "0"}], ")"}], " ", "and", " ", "once", " ", "with", 
      " ", "fish", " ", 
      RowBox[{"(", 
       RowBox[{"P0", "=", 
        RowBox[{"kp", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H0"}]}], ")"}]}], 
     "*)"}], "\[IndentingNewLine]"}]}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836576641311953*^9, 3.836576745811816*^9}, {3.8365767807913227`*^9, 
   3.836576796666417*^9}, {3.8397597459926443`*^9, 3.839759802105448*^9}, {
   3.839759878523665*^9, 3.839759923348648*^9}, 3.8397599985444403`*^9, {
   3.839760173960647*^9, 3.839760182799574*^9}, {3.839761922159543*^9, 
   3.839761922310317*^9}, {3.839761984940593*^9, 3.83976198588113*^9}, {
   3.839762907889144*^9, 3.8397629668633347`*^9}, {3.839763005522172*^9, 
   3.83976300573435*^9}, 3.843928293720766*^9, {3.8444654203133574`*^9, 
   3.84446550903106*^9}, {3.8540257816248703`*^9, 3.85402579537888*^9}},
 CellLabel->
  "In[861]:=",ExpressionUUID->"62661c2a-0fef-4bf6-94ff-b632c4d46b4e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"get", " ", "the", " ", "state", " ", "variables"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"LowXnoP", "=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"str", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"LowXRuns", ",", " ", "1"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LowXP", "=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"str", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"LowXRuns", ",", " ", "1"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.836312582405016*^9, 3.8363127024010077`*^9}, {
  3.836321497376748*^9, 3.836321508582407*^9}, {3.8365733465398703`*^9, 
  3.836573353815216*^9}, {3.836576902405587*^9, 3.836577012031846*^9}, {
  3.8397598176790133`*^9, 3.839759854829193*^9}},
 CellLabel->
  "In[873]:=",ExpressionUUID->"eaa87126-d966-402f-81bc-ef8d153a32d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot results", "Subsection",
 CellChangeTimes->{{3.843079253211746*^9, 
  3.843079255997774*^9}},ExpressionUUID->"664b4812-2cd3-4559-a947-\
0a2a0772d77b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plotS10a", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"H", "'"}], "[", "t", "]"}], "/", 
              RowBox[{"H", "[", "t", "]"}]}], "}"}], "/.", "LowXnoP"}], "]"}],
           ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"H", "'"}], "[", "t", "]"}], "/", 
              RowBox[{"H", "[", "t", "]"}]}], "}"}], "/.", "LowXP"}], "]"}]}],
          "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "400", ",", "tmax"}], "}"}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", "\"\<a) Host specific growth rate\>\""}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "12"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
        RowBox[{"ImagePadding", "\[Rule]", "paddingS9"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", " ", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "12"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"400", ",", "0"}], "}"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
            RowBox[{"(*", "right", "*)"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
            RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"(*", "True", "*)"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "0", ",", " ", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", 
                 ",", "0.05"}], "}"}], ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"(*", "None", "*)"}], 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"2", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.2\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"4", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.4\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"6", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.6\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"8", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.8\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "6"}]]}], ",", " ", "\"\<1.0\>\""}], "}"}]}],
                 "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], "*)"}], 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<C-mol H C-mol \!\(\*SuperscriptBox[\(H\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(d\), \(-1\)]\)\>\"", ",", "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "10"}], 
          RowBox[{"(*", 
           RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
        " ", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "12"}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], "]"}], ",", 
      RowBox[{"RegionPlot", "[", 
       RowBox[{
        RowBox[{"tStartStress", "<", "t", "<", 
         RowBox[{"tStartStress", "+", "tHigh"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "590", ",", "640"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "1000"}], ",", "1000"}], "}"}], ",", " ", 
        RowBox[{"Frame", "\[Rule]", " ", "False"}], ",", " ", 
        RowBox[{"Mesh", "->", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"GrayLevel", "[", 
          RowBox[{"0.09", ",", " ", "0.06"}], "]"}]}]}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotS10b", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"H", "[", "t", "]"}], "/", 
              RowBox[{"VH", "[", "t", "]"}]}], "}"}], "/.", "LowXnoP"}], 
           "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"H", "[", "t", "]"}], "/", 
              RowBox[{"VH", "[", "t", "]"}]}], "}"}], "/.", "LowXP"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "400", ",", "tmax"}], "}"}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<b) Host biomass per unit host volume\>\""}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "12"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
        RowBox[{"ImagePadding", "\[Rule]", "paddingS9"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", " ", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "12"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"400", ",", "0"}], "}"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
            RowBox[{"(*", "right", "*)"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
            RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"(*", "True", "*)"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "0", ",", " ", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", 
                 ",", "0.05"}], "}"}], ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"(*", "None", "*)"}], 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"2", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.2\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"4", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.4\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"6", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.6\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"8", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.8\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "6"}]]}], ",", " ", "\"\<1.0\>\""}], "}"}]}],
                 "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], "*)"}], 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<C-mol H \!\(\*SuperscriptBox[\(L\), \(-1\)]\)\>\"", ",", 
             "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "10"}], 
          RowBox[{"(*", 
           RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
        " ", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "12"}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], "]"}], ",", 
      RowBox[{"RegionPlot", "[", 
       RowBox[{
        RowBox[{"tStartStress", "<", "t", "<", 
         RowBox[{"tStartStress", "+", "tHigh"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "590", ",", "640"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "1000"}], ",", "1000"}], "}"}], ",", " ", 
        RowBox[{"Frame", "\[Rule]", " ", "False"}], ",", " ", 
        RowBox[{"Mesh", "->", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"GrayLevel", "[", 
          RowBox[{"0.09", ",", " ", "0.06"}], "]"}]}]}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotS10c", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"P", "[", "t", "]"}], "}"}], "/.", "LowXnoP"}], "]"}], 
          ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"P", "[", "t", "]"}], "}"}], "/.", "LowXP"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "400", ",", "tmax"}], "}"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<c) Fish biomass\>\""}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "12"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
        RowBox[{"ImagePadding", "\[Rule]", "paddingS9"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", " ", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "12"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"400", ",", "0"}], "}"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
            RowBox[{"(*", "right", "*)"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
            RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"(*", "True", "*)"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "0", ",", " ", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", 
                 ",", "0.05"}], "}"}], ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"(*", "None", "*)"}], 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"2", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.2\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"4", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.4\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"6", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.6\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"8", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.8\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "6"}]]}], ",", " ", "\"\<1.0\>\""}], "}"}]}],
                 "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], "*)"}], 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<g Fish\>\"", ",", "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Time (d)\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
        " ", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "10"}], 
          RowBox[{"(*", 
           RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
        " ", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "12"}], "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], "]"}], ",", 
      RowBox[{"RegionPlot", "[", 
       RowBox[{
        RowBox[{"tStartStress", "<", "t", "<", 
         RowBox[{"tStartStress", "+", "tHigh"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "590", ",", "640"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{
           RowBox[{"-", "1"}], "*", 
           RowBox[{"10", "^", "10"}]}], ",", 
          RowBox[{"1", "*", 
           RowBox[{"10", "^", "10"}]}]}], "}"}], ",", " ", 
        RowBox[{"Frame", "\[Rule]", " ", "False"}], ",", " ", 
        RowBox[{"Mesh", "->", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"GrayLevel", "[", 
          RowBox[{"0.09", ",", " ", "0.06"}], "]"}]}]}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotS10d", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Ni", "[", "t", "]"}], "}"}], "/.", "LowXnoP"}], "]"}], 
         ",", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Ni", "[", "t", "]"}], "}"}], "/.", "LowXP"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "400", ",", "tmax"}], "}"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<d) Interstitial N\>\""}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
          RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
          " ", "12"}], 
         RowBox[{"(*", 
          RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", "paddingS9"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", " ", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
          RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
          " ", "12"}], 
         RowBox[{"(*", 
          RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
       RowBox[{"AxesOrigin", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"400", ",", "0"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
       RowBox[{"GridLines", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{"{", "\[CapitalNu]", "}"}]}], "}"}]}], ",", 
       RowBox[{"GridLinesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "Black", "]"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", 
            RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
           RowBox[{"(*", "right", "*)"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", 
            RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
           RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"(*", "True", "*)"}], 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "0", ",", " ", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", 
                ",", "0.05"}], "}"}], ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"(*", "None", "*)"}], 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"2", "*", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.2\>\""}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"4", "*", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.4\>\""}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"6", "*", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.6\>\""}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"8", "*", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.8\>\""}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1", "*", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "6"}]]}], ",", " ", "\"\<1.0\>\""}], "}"}]}],
                "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], "*)"}], 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<mol \!\(\*SuperscriptBox[\(L\), \(-1\)]\)\>\"", ",", "None"}],
            "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Time (d)\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
       " ", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "10"}], 
         RowBox[{"(*", 
          RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
       " ", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "12"}], "]"}]}]}], 
      RowBox[{"(*", 
       RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], "]"}], ",", 
     RowBox[{"RegionPlot", "[", 
      RowBox[{
       RowBox[{"tStartStress", "<", "t", "<", 
        RowBox[{"tStartStress", "+", "tHigh"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "590", ",", "640"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", 
       RowBox[{"Frame", "\[Rule]", " ", "False"}], ",", " ", 
       RowBox[{"Mesh", "->", "None"}], ",", 
       RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"GrayLevel", "[", 
         RowBox[{"0.09", ",", " ", "0.06"}], "]"}]}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/WkL/+1Ds984WlWp3gfRBT6hL0F02L8Vv0H0gWea
XIeB9Iu7f7hB9Ky3XYIgWrVipTCI1mzNtZOb88bR7NRzBxB969+MFBA9Vcs3
E0RXLUnOBdFu4sJFINri9dRWPyB9NO1gB4g+WPyzB0SLJzv3gujLbA9ngegl
detng+gkxbu7QPSXOWv2guh3B9cfAtECUW3HQbRfONMZEG1j6nkWRE/XsrgM
olXUL4FpZzn3GyBaS+vxXRB9OuNip+jcN45sfQ5dIHpNYCOHBJBOMbkOpvX+
Vs8QX/TGMeCo0kIQ/XjWzxUg2qpEaiWIVsh9vB5Er3Bp3A2ia1S2HQDRQs7K
F0H0slUqV0H0rifm90H04vJd7BJAep/vOX4QvTKriFkSSG+uagHTd9iS8/cs
Abo/XrkCRAMApfbN3g==
  "],
 CellLabel->
  "In[875]:=",ExpressionUUID->"4deaa5c5-bd8f-47b7-b6bc-5247f70465b9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lowXrecovLeg", "=", 
   RowBox[{"LineLegend", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ColorData", "[", 
         RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{
        RowBox[{"ColorData", "[", 
         RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Fish absent\>\"", ",", "\"\<Fish present\>\""}], "}"}], 
     ",", " ", 
     RowBox[{"LegendMarkerSize", "\[Rule]", "60"}]}], 
    RowBox[{"(*", 
     RowBox[{",", " ", 
      RowBox[{"LegendLayout", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Row\>\"", ",", "1"}], "}"}]}]}], "*)"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"lowXrecovFig", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"plotS10a", ",", " ", "plotS10b"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"plotS10c", ",", "plotS10d"}], "}"}]}], "}"}], ",", " ", 
      RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
      RowBox[{"Spacings", "\[Rule]", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", 
           RowBox[{"(*", "left", "*)"}], ",", 
           RowBox[{"-", "30"}]}], " ", 
          RowBox[{"(*", 
           RowBox[{"first", " ", 
            RowBox[{"(", "leftmost", ")"}], " ", "and", " ", "second", " ", 
            "col"}], "*)"}], 
          RowBox[{"(*", 
           RowBox[{"left", " ", "to", " ", "right"}], "*)"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", 
           RowBox[{"(*", "top", "*)"}], ",", "0", 
           RowBox[{"(*", 
            RowBox[{"first", " ", "and", " ", "second", " ", "rows"}], "*)"}],
            ",", "0"}], " ", 
          RowBox[{"(*", 
           RowBox[{"second", " ", "and", " ", "third"}], "*)"}], " ", 
          RowBox[{"(*", 
           RowBox[{"top", " ", "to", " ", "bottom"}], "*)"}], "}"}]}], 
        "}"}]}], ",", " ", 
      RowBox[{"Frame", "\[Rule]", "False"}], 
      RowBox[{"(*", 
       RowBox[{",", " ", 
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"1", "/", "GoldenRatio"}]}]}], "*)"}], ",", " ", 
      RowBox[{"Alignment", "\[Rule]", " ", "Bottom"}]}], "]"}], ",", 
    RowBox[{"Placed", "[", 
     RowBox[{"lowXrecovLeg", ",", 
      RowBox[{"(*", "Bottom", "*)"}], 
      RowBox[{"{", 
       RowBox[{"1.2", ",", " ", "1.3"}], 
       RowBox[{"(*", 
        RowBox[{"x", ",", " ", 
         RowBox[{"y", " ", "position", " ", "of", " ", "legend"}]}], "*)"}], 
       "}"}]}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.843079981972872*^9, 3.843080038979529*^9}, {
   3.843080070991851*^9, 3.8430801322270184`*^9}, {3.843080177642465*^9, 
   3.843080177762775*^9}, 3.843080330282305*^9, {3.844465608477653*^9, 
   3.844465630117147*^9}},
 CellLabel->
  "In[879]:=",ExpressionUUID->"3017b337-766c-49c3-a60c-11c64cad6b93"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[
             {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
NYrXfVM2JFtGRxmKDVEh/cFaRRwPSe7U2bdU+EPvxPaxzDdrnHhHBX5qMofk
lmo10Q8fqTBwM3EFyVZNQvavPlPh9JHzA6Q+WrvfpT0bp0LQie/nSbZ+3957
b4IKOtTvdJLvTVcuuT1FhbQFWtgeNhKnD9X+pkI/S9GT5PtLwi6WzlBB/9T2
fSTbrt37Le8fFaRct2N7tVuaGKUJ0qDdr5hN8va9KrR4YRpM1o4UkvzQX6CJ
JkqD9+mFLSTbUYdFj8+ngcF9P+w/j1Ja7f0kabAsqEsZ+1ftiT4nWRpkeU5T
SbZvDVpqo0CDR5fGKkh+8sLp8KbFNJjP/t5HssMng4q1KjR4Wl2J+4+Ov4rf
VyylQVRAI85PDlIzRirLaHBV5/l2kjvVX9NkNGmg35h+EPd7Bo1N81ai50FJ
GMlPrc+L/V1FA8rc67geO7nF7/yuRwP3S9Rwkp8dPZLxbg0N7q4sOoD7W4b9
y/71NEjNHsT9W9fpNWpPjWiw4uAnnC93F8v6tpnQ4JU2FfdP3Vd/VtzcRAPi
3g4urif3+75fBhqsNWvD9ut5ecv4ggUNTq1f0U/qx/lLIT3Xigb11QPnSH4u
wG0+vY0GFl0BFJJdFvqKx9nRQM7Q0YfkFxq2DtSdNGh+LeeMfzfWzQxxooHU
dthLcq+tVP/hPTRw3Od2gGQ3zwk1DxcavAscjyK5L6jH19GdBtfXn87Ev7Ov
V1p50aCi89ENnA/TcydMfdD72je8JdnjAmPDmoPoPHOPSJPn77++n6HpS4Of
d34DyR4Pt7YoBdBg5BwzhOSBV1rzpY/RYOO53LO4P/g231EkGOnrv89PSH41
92vmn1AaOKcs/IN/l3/aPx5OgyT5OjVSn6+1rqiPRtFA7UvYFlyPTPl+L2No
cKZ01h3ntx0xVR10GpgsnzlK8lDoZpMGLg3emInheWA4a17r+UQa7C1fivsd
md7Q0L5kGnwJ1MH9KCx+pfrfaRrkrh26T74/0H3bA4t0GvQYFAeRnJtbFxmV
RQNPI18JktsHliyvzEH68xO4S+rjl2pSx5s8GrygZCaQrOk9RZU/S4PMic2H
SN591mfl9mIaKN1UdSKZPfSwm3GBBkuV7exJrl5mzK4rp8Huq2PYXq8OFul9
qKQBg6t5jGSJEsmXKpeR/zxTP0HyxnfRcU51NLgBkrUkB2iNrIu7RoPBWkVc
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
phFpRy/W8BoTISw79PSl5WmE9lvPVq976DzDLU7OImmEFNt2fvf9RIiz+LXf
aTaVmFpi5LD9QSIIf7wyrDSVStx1l+ozepwI4n/cjs8bSSVcnjV+lupC5y+Q
FK8gUgmzkEtr47qR/U9Ib2NeSSWW/5cb+bcnEfy1B6TGy1OJr7bhcz72JkJ+
tPvDg+mpRNd7Hyvvl4lwxINnvDU+lbgRa5/U04/O79SsSI9JJWIbV8g1vU6E
PR2bzwftSyWOesu6bXiD7MPK6OnYmUo4zQoUXBpKhGvPOps7zVIJ49zPw/9r
kO7jqbyjAIDXxSrKXYpKGZW6SoWELnJOw12qyZCaFEneVXcjNZGG6nl+P8/D
ZV20SmW9W7NeZ20X2UilZpvJLualYvIaeZ2758/v55zzOef8fmdJG4u1ksFp
c1YoVCaO9RZfv2QRqN+zBXMUKlHdrzEGr1n83Pj5TiNNpqo97tb3J9tZjDSY
vKiiJVNVPSt/aKKDxS2VrjaikkzV7SLqHNfJ4pULLUtPKTJVeVsOH+t8I8yj
lijXf5KpSu7a++vubha1HbyPa5ozVKHEW6+uh8W0hM9NJy7zqk3LwMuzj8Wr
/qVBbvXxKusKy6/K+1k83+noKz9EwWjv3HrHARb/2JZtZnuYwrhIx7RokEWj
TU5StRBvye/bIxliMfBivDJVcKVL45Uzwywa50bJVwguVFd1zRplMcvaveL3
eAqH5hbET/qPxSJzq3/MBIsz/MgLEUHfgeBXt+MobHY/kbJfm+DGb90eeAk+
OXovQec9giNTr1V3xlIQ7Z0XbTON4G8mOf5mggek6s2MmGDSMjbs2GcU6lp3
60sXECzKjfp68X4K+Q4xmTl2BEvz9Jtawiio35xhVjkQfDhW/zBc8LwL1cfK
1xJMLylu7AqloJhu/VmvE8EZphU/De6lkNrc773hQ4LxRs4T43sohJNDs4c9
Ce5RlJ1+FUjBuilFuS2coI54WeHCbRT4Pw8cqYkgWFCzVZbjR6H78c7dH0cR
7MP7xvqCb9x3sHTdR7DjS9nRIV8KForOn1fFElzalfys1JvCQnefVzrJBCUF
A4U2nhQMri+yu60kqBs6uTfJjYL8vNjYKpcgeyJwQYMrhefK8YmreQRFjRcY
R8Fcam3luTMEA3bkG75dT0FvFxtALgr7PW5J9AcK2jP7U4JvEpwdYNaqkVIY
PFha834FQfdHYt8bqyhcS+2PvF5JMPekYqxpJYUgxWItWRXBKX2TbhkIflKY
ZpvwlKAJa+ISZ0mhoM0j++XvQvzvNFxlQcHHu2Zr8T8E1X82hsYspFC0srVu
zyjBe3fCdpnPohDqNFs+MUbwZllls70BhQUe7tNy/yPYaN3uuWGm8N8hl6XV
kyjGbU+sDRML/U9H5a2dQjF5383juXrCvUwb2DFjNsV7cZEnqrQoxLRpN91d
SdHQh6nyf0tA9Dx2zMOKYpr5zgNb+gmc+rFtToM1xbEnFYaufQRKFOVeWmso
fhH98BNJDwGD9allWxwpzrf6y6b1XwJ3z2hdapdR9DoXnihpITDhJ4oxDqLo
FJVc+PIZAe6RZjRRQbHCeWPIuisE3N9Zar/LovjibfBNncsExhdtn7HvK4o9
K+WGT78hEHnkO9NdORTnMXeWf3qRgMxqt5vLWYqPTULZ0LMENNll6RNXKZb7
vZe+PZvAgaA0s6OlwrwPQhpyjhLwGdKVJfcK9efF5HsfAo9H5wfv90tH+Zqq
07GdLLyWrSvMvZOOQ/Zb4/pTWLihazT1pQGHD0yNe4pMWTAvGLA1OcThmNpD
o/WAgRuBQZOVhzk8n2KvuVrMgN38J9XvJ3D4bTOp8PqBAZniYoR2Eof04PLB
/LsMhCd7n+tM4VAjn3t/UxED1wO+0y3mORzZZeBZdYmB1YbRzX6XhfrjrRvk
CgbweCuXUcuh/MriqoRoBqQbuc32dRw6dSjfSaOEfH2prvoFh1GyDM+RCAbM
T3FpkgYOP9jXFZIQxsDUS9IjP7dyuLNhNC49mIHffuEj3vRy2M9ViTu2MxCs
4+y2QY/HpGuJ3UdkDOx49Gpy93Qe8930GwLdGfBNz1Rl6fPoMHS919VN2Mfw
tWPTTB5dvaMjxR8ysHyJwubgXB7/HS57emsdA/1u7R8ULOHRpjz+49V2DHRO
zVJ7SHi8M1P5kWQNA21P1uX1WPCY5SBdamLLQK1vlqHTCh7V3bkH9WwYKA5x
mV6zmsemkTKj4RUM3LLoeBS/hke7k9aWg5bCe7/JOmFiL+S3ztr0djkDZ2M7
RBFSHvfbbgwYsGBAuTa7RN+JR0vKagYlDGSMuyTddubxh631fsNLGWBLOpz8
XXhUNOgEjC1hICU1e0QDPOosK4rWmDPwP3us0Zw=
               "]]},
             Annotation[#, "Charting`Private`Tag$133962#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1:eJwkmnc81P8fwJURRUVGCUWSVLSMVO6VGSFKKCMadlrmuenujDuRfcpqSFbD
KKE+hSiyCiFKRvmWikKR+H0+799fHs/Hnffn9X7t1+tzyifOHjq9UEBA4IuQ
gADx9+9Up7iAQCiQ4w/W7lnHJT1IOPJI1zUU1oo+zSf4nGb76bNVoXDVtaeD
4Fnbp9HZWCjo5weI7MU5MrCwqK06FM6/opIIlkrjty2sC4VNfQWhBGdWsSd3
vAwF6K4vIrhM0GVvSksopJod+EzwKwttzp+OUDhm/7yEYEd/5byN3aGQXdhz
nODBeImmY72hcEc8bpp4vn/Z9BjvQyg8EbF/QvBM17D044FQKMtxzCOYM9um
9304FBaGCZQQvHztE+c1/4XCv5CGNwSnG+UzbEZDIf6NqRBx/gbPlJvMH6Eg
+nHlXoKLueEvin+GgvTfqSCCDe74jw5OhsLw8fx8gl+2HVsuMx0KnBXL2gi2
mzTdaTqL3+/ZikGC+1fucAyeD4X9GY+6Cfbds4ZyeyEZgk2l7xA8dXxJdrcw
GQxumx8lOJz1u2axGBloroa/CPmW5g5+3i1Ohn1y5eUEpzW0LDmzjAwrm4Jv
Eqz6vVIrU4oMfl++3CH4nuTtwy0yZKjWj20leI92UrDAKjKENI4vIM6vd2Rc
3aZABt6r8t0EH6L4YSfWkIF/Pg3d732W42CiChkE3zgXEOxTY7zo+XoyGLW8
f03w5Ketm6bUyXB4VOITwYzFigc3bCbDwV1f+wgW1xS76KhFBtJWLrIf33Yy
JXo7GcZTl7sRvC7wY0WFNhniZa8g+93hN73/qkeGURVlZD/9qkcLFfeQ4cel
f7cJrvuQo2ZNIkPpLX4xwbaCCRZ0QzJkK55F9utVo/nfMyGD/PByZD8vC5+E
j/vJcExKGdnv1xn7B1KWZHB6ciSYYFq8YY/RQTIs+xyM7re4THMu4BAZMm1O
ovsld8mr3DpChkEPkWGC186KmL51JIPQmhO9BBeu+eUt6kwG3e7o+wTrGn24
tOs4GQoMb7gQXO3ReN/nBBmMf6T/JuSz5j7suHqaDNOSt6oI7i66Mf3Kiwyf
1rXmEnyqLU5xzpcMp/6y7xM8NhG2T+ssbu+Wfa8Jpqz0Ou12gQz+cqkLifMX
7bGLjg8kQ9MZdWS/hONQVB1Chr1nCwMIVmJtbvsVRobC9NFcgrUbhFbZh5Oh
avf6DwRbSva5lUeR4U1a4m2CFR7ucy3hkWE4/Bfyv2/Ot5zuxJJhfejRP8Tz
nyxccjQvHtf/USEkf+zts/Y3k8gwcd3sOsGu1u2Hs1LJkMj4ifxRa0LP9soV
Mhz4MPCYYIErGdbJGWS4bi/8meBW0kLLy9lkeCJ1RJ54XvawhznvBhnsn7yz
Jfg8r9E04hYZavzuRxJsuG2rMTOPDHLs2TKUT94m7aMUkiEgd7wT5QPKtEHw
XTIcufZmiOBSFdc9F4rJsMj6F4o39ovqXWfKyAARd+8RfMR/g65XOR4fYoEn
CVaTjtl5spIMLnlMFB9Tj8a2uT4hw8c3a1D+qz9+ROvoMzK0h3ujfMIXrths
V0uG4rItBQR7FShpHKzH/X+LRQ3Bu2xZGywayMA9UvCV4MW/P6uaNJFhnZal
EnF+T7qlCrTi9tmlc4TgfMP7a3a/IUOqC5NLcNiIjKJOJxkcOg+XI3vFkuW3
deP+pTDQhey184Pc5l7cP1v9UfyNdhvJbPhAhrM5Fu8Ifky/LaUyQAY383bk
n7HrJZYrDpNhyeGQUwS7Np6XWDlChiTKEPInzfOdi1d8JYPFsnfPCXnnZXeL
Lv1Ohuex2uh+rVVZwmLjZOjIrSkkOPuEkKDQBG7v+pNIP+dEvQXmp8igLCw4
SvC+O03/pqfJQF2SoYjsZbf978QsGS4K7jlM8MB0yp8f82S4R/0TgfJr1t/J
LwvD4L3zdDHBLBO3X8PCYfADu/j/fPq1dqxfNAwujuaj+FON3/j93ZIwkNk1
1kzwhE7s186lYaDy5/p1gp/3/hxpkwyD3Se2HiI4Jdzh0yvpMMhoPTVOyOeh
XjVYLxcGM8aFDwjWaV77sVo+DN45HcgkeFEA5/1jRVyeHknk312rvrwrXxsG
TWbvKwm+jVl3l6wLA8vXGcMEh5wu6byjFgY1ey1XEc8zX7KyPW9jGJg1/rIh
WP4+pe3mZvz564rQfb/Yf2zO0gqDgH1ZpQTzrue/TNYOgyMtywcI3vz9Yi1v
dxisD7mK8tO/xK5nEQZh8MfjozPBzbv2Ysx9YWAsGPiXeH7mh2tVFOMwkFDy
xAg+yxGpCDYLA5t9wzkEW2ZuXqkXFAbWWTnIfhoPDwX9uRkG1JcbUH4tX6lN
GcoNg1cbHV8QbEqWC2/NDwPdA1GTBLe/m46sKgqDQk0pDeL57nt7L92+FwZO
W11QPv+e+SQxqSQMPvzqSyCYInAtjfEgDHg2slUov55gZfk9CoPivckoXvk1
p3Mcq8JAEZtC9lRbv7/AGAuD2LbBlyh+IzTub63Gz3eQ4qP4HxF/qPA8DNYJ
mxgS3Gr+o0r0Bf79FXUon7gWtFVPNITBgLwVqu+j4qUv+pvCYO3fHVkEk/1T
ml+1hsGqXblIH4taQ9rL34SBw5/+pwQnbXPqudkZBiOf1FG8qiTu7b/cjT9/
YzuK13sTaz5ResPggamJPar/9gtHvT6EwW3pUR7qVx4OjdsN4Pe7YVJB8LFV
9b9hOAzCNvWieBwh5/3bPBIG23+bfiU4qJcnuOprGKw4pIH6AyEDfzHh72Hw
/aLuE5TPs2yWjY+Fwcczm1G9Wrtgh0zfrzAYDBeVJbjohMzql1NhsGRFZTsh
74v1PWrXZsMgvaoF1Y+hkcztoQspMO/dgvSzNlQs66YwBfRvS6F86yQWsKRV
lAIeP/tQvk1Jex/8dwkF9Nxlogh+vdF8SG0ZBQTd76J8u7SixOaQFAUUk0rf
IP+2UHpMlaFAQBkJ3Y/dE7UxbyUFDoRRnxP81OdXcvtqCoiSC5F+ZmdcFgqs
oYDNstkNqF7yXvhvUqFAZ9KFNkK+C6t3vLNfTwHVde7IPncKMszC1SkQnGuV
TvB/u0VLizZRYOVMK+pvVF9dWNutSQGZpymo/3Rz7osR2k6BCUsXMeL8q6Nm
01raFKhlTyJ/6aQUn3bSo4DaE8MwlI8kFF9H7KZA7E19FF9WGZEGxQYUeCA/
3Ehw1Jaf+X37KLBJ0Rn5a+1jZzkxEwr8u9lYQ/C8VT1r534KpHDPXyJY//22
seMHKGDtkbkZ2dc/3ZlnTYFLe6ZR/1U8J/LygS0FLNduv0bwt9jz2gN2FGg/
05hMsPqa3msSjhQwunDs//3AXdOlu5wooGQV2YzyLek++ZQrLv9rcdTfvGtZ
/TnOnQJ7fMuBYFm3iMOVpyhwfsabivq5sTHskycuT9UK1H/FMpw2S/lSYKNG
RQ/qV5fX8ff6U6C49+I35H/Xtgp7n6dAjr83qp+w7er5pAAKXD7egeoP5Znw
eyyYAt1Tgqh+PLQ9Z/GVTAG7EDUBgn9+7HkgS6MANZ9XT8irecFknSGTAtcu
zKB49Fl4L+4MmwLONBHU3+UkyM/yIymw38b+PcH9KhyvWi4FmpRvSKD6VvKj
/cclCszUlhsT7GB0bN/qeArcigikoPh4U1tkmkSBuOUNaH5oPqklfyGVAn0H
HqF6ITaRFpFxhQIsI8ePBBuzhX69yMDjQaS5A/Wr0mePT2Tj/nzpMOp/Km92
N665SYGplB2oXkztNNY7kEsBn9K+74R825/fuRmUT4E7ZB6qF2eOrJK8XkSB
fIf1N1A9GGZRm+5R4IoxqQjFX+D3//6UUMB0GaMJxZ/IUXvVhxR4svvaLMFO
KTXVBytwf/jkvwPFn5qmVthjCtBz6n1Q/D3gX731FI9Pv/SrKP7MBEVf11Dg
h98Yyg/mb88E/KujgPdMVxOKP8+ufvUGCuzwoz5D8ffb0MquCfdvAblEZM/F
aonmrbh9i9SNCH6mINZt8IYCL2d+9xPyGGqNKu3spMBFi1rUv1Xvazm1sZsC
u+8Z8dDndsX5Sr0UkN7gGUtwjUfy2IoPFLjwbwuqH8ahITpiAxT4jOWgfrWW
50SZG6JA+bovi5D+Mw2qf33G7TeuiuLx+T1l0f++UODR2CUUj6Y1Qtbvv+HP
a/NB81Bdx+fEN2MUeCq3DNnLbKSh+8UvCpiL9v5H8IuZojVPpnB9xQOaF/dL
xJ8umabAEr1H9ci/1wQU3J6lwIKFrRyCLbY7jGfMU+BE8s51BDcY6+smLqTC
k0TJXkLeAw6K1ChhKti9KkDz1StvgRqqKBXOtYyjecOSMih6cQkVWOx+1O80
xdZZey2lQr40awT199fyklwkqWDa8VMO+WNJTM8haSrUbHewIti67uza/XJU
OHp1OJzglq5DHnvlqSDh8xH1OzZftQu3K1LhRtvVt6i+/Vv5c8NaKrTWX0T1
wmb5rK7iOiqcGusYIbhN5QNVSo0KN6P2NKB4166uWbSRCoWHtFD/+NosR+zf
JipclpfdiD4/FnXwpyYVWoaDkb3f+Pkmf95GBUxUEfUzdnTrd707qSC+dxLd
tz1+m/JrXSo8jZ97hj6/Ke1Zr0+FtiMmAwR3PPhdWLWXCs8XDqF4tX/Z8/M+
UMFlgyCa9zvfPdbLNaJC5KHus+jz79m0dFMqaMzlXyH4rQC7Nt6cCjbkhkcE
O67wXBxpSQXNrlRkv671FjaUg1Tw7WAgf3fU25Jy/hAVLtYLpBHcbbG81+MI
FboislH9OubyS9nZkQqy2d9R/e452+lp60SFhrHltwg+Fv6oyNSVCnI/PNkE
v0tK/7XbnQpnRT8yCHbOpe/adooKioIhKB/3PjpBV/PE7zuig+Yd51cmz1f7
UEFnXPsHwX3v1ZdInqHCbb+r6qifHl9iK3KOCkvuXj1B8HvBHyl/L1ChdCYk
FX0u+7p3LJAK/r4sFJ8f1MtUPoVQIe7jSlQ/3Xbzvd6FUcHg2833BPdbhd1p
pVHh/qPsOtRvublOPGdSIfdPAqo3Axf26VeyqZD9tF+T4BMcVca9SCo825KB
/HkwdVFdDhe3p92hewRLdV+40HOJCpILlVF8g/x7pWXxVHjzs7QM7U+czBuN
kqgQOBPQh/Yh6aXBIam4P9HfrUDx0rdGtegKFUadgpC+/yjxWj9mUKGk8lMs
6t/cpiiy16iwar6/FvXr19w3HrhJBc8rm0cJDh941UHPpcLvqRv/UD+1Ti+8
NJ8K6nY7fyJ9nbqh+V8RFai3+6oJlri19J3ifSqEROR7Erznc2jkoVLcfqff
ovruoz68I/IhFerHTd6ieczbpr+yggrlMfqof63Lr4wZe0yFS24SqD+Y+Kq2
a/0zKuwx1JhC/d2WhOGjtVSQjl+uiuLL/198bD0V5mUPOxBMu+tlUNNAhd6R
VNQPFY69+fK7CbevGR/Njz3bSKmb2/D70ta+IFj0Yr6RezueD+qXIdYtlRlL
fksF702OeQR7TDLSG3qocMhtDtXPJJ3R/fN9VMjMuY/m6+pgh8kdH3F9rz+O
9mtj5dXXvIao4PFIK4JgpZkt1hmfcfkjfZD/Wu5Om2n7QgV+mE8G6m8pQrki
36lQp575EtWjx2cP7x7H7Z8biebZzrme+bMTVPgYUIX2IUJgWnjzNy6PwzDa
92xn3nfsnsHl0X+Sg/yxWkF46RweX1KyqN+JFYy6b7iABv1VzSg+q4x/uQQL
0cD9Q28hwV84rosLF9FA6JWZL8Gr6l8+6F9Mg2kfT9Qf7BfVPimzlAZRCxbd
JeQLMs9eZiFJAwE9RjTBN7lLqmjSNKh+JhNF8OvGIK8SORp4r1FC9VVAYkB6
RJ4GRTRBtO/RtLZ6pqBEg3NXjJYT5zvHlZ+xVabB4JWzaL7ktq6Tj1ClwcTk
pmSCyyXj6io20OD5wa1oXvx0aObCDw38fCez3wRLJ51eo6pJw/3ZWswAZ6OO
1kbHbTTYM6SD/PWC7J6QSztx+WcWviI42yFXtVqXBkvLk9B9m/lSbVP6NLCf
DJJC/W43lbrJgAYJVj8H0by1+r+NbvtocL/JsotgR2e7ziRjGrhZ9KP+PCID
C39pRoNRkvwS4v9L32tozVnQwLo4TB/F+5qUd9utaeAvkeZP8HL3BVGetjSg
CMtnE2xw3W9nuh0NOMH/r39nBt/2tzrQYJOFCconjv1Pk6eO0SB4ywiat4z7
8iwUXGl4PxPzmGCtnoT5fe40YH5LRftZ+bdhpZ6naLDVv0CSYJH2U96XPGnQ
K2iN+rvxViulEh8abB+XRfmkt0nnTdcZGpDWVmajeaRhTdTcORpYtS9A/VJp
vehe1QDcfjG1KD9l1Y6PmwfTIPnzd1Q/uM96bp0l48/j0FB/EPSkximZSoP2
L+EXUX6rLFxeyaCBnYciqh9W5cnP+1k0CB1n3CVYr4xGFomkwV2Zn8gfVYs9
tTZzaVDVUofmj+V3bYZsL9Eg76KHCcF/C3alBV+mwanP0EnI8+m2inVGIg32
ZhqjeHuds0SwJoUGrrqK7mj/dX3i4UgaDQR1g44TnJfV57c0A39etAQZzY/p
dco7s2kw4lGC9kOMtLudR2/Q4N8OC2RfvxQ+j36LBmKedZtQP5vIhJw8Giz2
0TxHsOFln8mGQhpo0q6gflbz0uH8sbs00M7aifapq7h7jsuW4M/31PuD4jdy
vfSeB7h/jP9E/jvGWvrS/RENyFg16pfeMX5TI6toEJMuh+5fR+3fXoTRwFlX
VYXgYvLLz6+raVDYWYT8MyO4OP3Pc1yeB0aNBEcFXLVVekkD06AMNJ8FnGeL
GL+igYYEB9W/4/5nKr1baLDrdifa71j42p+Le02D7DgG2mfpeJHWl3XQYL8Y
K45gldPqPT1d+P33jKH6IHFCMk6glwYSK0a/o3riOmOk9gG/j3KhCBF/Q06D
fw4M0ECPEyxMcKvjq6Lzw7i/v7qF5pPKI2UnUkdo8OvtjQyCbx3KlHv8lQbF
ujN6aD44GPlq4DsN5rdvRPmVZnmOKfqTBmWng94R7G1+VEdzkgaNPpmI7UwN
vx7+Q4MdGufQfgiMNmWH/qVBRuUrGeK8zSB9JGuOBizz3H0Ey+39J/Z8AR22
TgiheFyo/+nJFyE6iJfNon77u07LxeWidBAyfIj8sWdHubrOEjpIjvujfdzz
rdf6nJbS4dPVs6i/v7eFm8CUpEMjSxbVh3SNi2a50nSI0H6N5r3IDc6zr+To
YC++kY/mZVWT+z/l6XDX/SfyR1dlTY+VSnQwXtdvRbC5ktxqA2U6/L6ZdwzV
h4yQvC2qdPg1I04hOF+hR1dxAx3s/uqgfdC7q7vrxDXo0LnWG+2zxFdn2M1u
poNz1E9lVH+vzA181aLD9V4ttH86s8rt/LvtdFhgyEP1P5P/bL5Bmw5GhhQ0
bzbLrYut0KNDfHkk2gfMpbAV8nfTIfQxCUP5RvZTfpoBHRQTjdD93ZLNdkXv
w+WJJ9kRfFk6rz7EmA7rp+KRvz1NXGzvZUaHh20BqD6OS/kNOVjQYSVNhYvq
eULTBTMrOtxJuY3qxyFJrQW6NnQwvKWC8lH45ctxaofx+0hVNBBcsuynoqw9
HVJEbqH951Ds4ULho3RQcduE8o/00jL9SSc6uKSls1C+vCT7csiVDoFlR1H/
Fige4tDujp+/uXUS+R+ve7jmFB2WdpJXE/7auXh3QIknHdLeftxMsAg3feEN
Hzqsi72iSrCu2NzlhDN0SAozQ/XFK+r4mvBzdLD9aY76Bf6iZ0XnL9LhKbUf
zaMvIlT2uAfh8hZarSV4WpjdYBNKh5uR11C90OAMOwKFDj6CM0tRPyxk9lmL
Tgfy13DU33BZtwPXhOP+1RRoiuJn4WKhZRw6mH5ahfrzUaZvwlwkHY4trkX7
NoUFTWu/c+lQmtSJ6gN1Pm5v02U6vPNcgOLv/b9DxwpTcH/KKv//fohaOnI1
jQ7KWn7nCSbNygTz0umg7nYIyXcuLFg4LAv31+j91WifMdOV6HOdDjGbqq4S
3Baqr3Ishw5iZ57GE7xw+uo989t04DkHoX3s9pB/BrsK6PC5Rxz14yd/uzap
36HDq4inQyj/Bj11WnmfDma336H6Wzup/GVRKR38FB6g/chkACvk9wM6zEGZ
F+pXJ4ZEPj+ig03/ATQf2l80Te6swv1RceYyirefuevqMDoku1qhfW35ebHi
smo6+O7pR+8fR8Z8IOc5HQR9j60keOW5V81JL+hQk3sO+af5jy0u7EbcPzXG
3f6/f4z7erEZzxddkiQUf9/GQk+20eH0GSN9NK/4HRI93E6HjZU5lgQvGS1J
MXyLf9/T4xzBe3xl1m/vocP3zqdon+n3JahEuY8OS1bPof2fBd/ttk0/HRY6
v0L2Vze1yKAP4vb0L0f5SmRiR8KdT3QY+nDHA/n7NcXIvv/o0HD3Dur/qg8u
ooh/o0P21pdo/5D9b+zc7jE6ML4o70H9cEHPaZ9fdHhZfxnNfy5Ha4+lTdHh
mpcemv/3LLpz8MU0HQrKjycQLF+Wavx7Fo+PalYawZT7TxVWCDAgqmwn6gd8
o7RT8xcwwPelzEc0nx3PlzQUZMCcQh+yn7nOmphuIQb08Q+j/Y+eRJLIeREG
NLXaoXy7YUiUKSrKAPfh5miCZSupf7PEGDB/uhrVG5GEn4G6SxjQvt0Q9TOT
Xp5jzeIMuJqzywDdn9Tr47GUAeRKzTk0D8vaDv9bxoA4F01UD6u/PT+eLMmA
W7tLUT68X6vfs3kFA3y2HETfz756165WGr/PimvrifPiLqi2OMkyYKzcFeUv
mnma+S85BhiUHkT548zapbXcVQw4am6N9o3Ov8MNVFYzYNUBM5QfDzT/Ln+k
wAD9f7vQPK+f47fDVokBTlO6KJ9upHwsGlnDgO0LT6P7rDxsr85QZsDSASE0
/81sHQ86a8cAa6de9Dxxc5X3X48wIERuBvWniu6HTbwccH1f3q2N+otQduGQ
IwPsNRUFCYb4shXux3D5XkigfdehvE/kPicGDI5Pofx76pncwFEXBix41ory
ZVD3fvNOVwbElF9D+ShyPPTeITdc3mIa2i/xxQrkWtxx/b3kniY4X7mXduAk
A/xMfjPQ/LBL4lP9KQaIsgRRvDXbGlgZezCgu382huB+77OlTz1xf7htcIHg
cWb26r3eDLg7Ceh958IrbeGPfBjQIXYXzafSxQu/aPsxYKtGIZoP1Rp22Baf
YcDp9LVoH6M7cKpc8ywD6jUEddA8MpO8puAcbs+lR9H7i2NS9REbLjDgTLc2
ksdP48+3GxcZYOxeieoVzXDjkbWB+Pl5q9D+6fKxY1XpQQyoeRWL+pVrF3jr
VoUwIPKLhxTBxdwqbnIoA6qWzqLPa69/G5cMw+2n9AD1450VSkdjKQwoEdmS
ifLJ64NPF9MYMFkVh+y7RLA4VpCJ6/9iLbq/5g5pl1kWA6T4sekE254M2jQZ
wYDWDeWo3w9I7Jr+Fs2A6jXfkT9FFIi5+/AYEKY/juY5fo3+i08xDDjb9Ngb
2eOdr9bJWAY8zF6F/KfyV3rKhzgG7IkIRfp8taT5n1M8Az7a2aL56v26+VNd
Cbi/zaSi9yFju7e+sktiwP22Q6jfWmjnvqMtmQHnLiej+VnaL+GKVSoDBDXD
UX5Zz65Z0MBnQF7LfhSfOukTXqZXGJBfvAHdZ3/p+tbqqwwQkfNF+5Jjr+x1
SRkMUNM4g/aDvkORmZWZuD7Hk1F9psyWC+tlMyD3xmXkv7HSX/xKrzFAp9UQ
+W/25tXtW28wwLs3Fs37xcaWu4tuMiC90Rm9P6l1pl7feIsBhmo3zAjuCLgj
diuXASuGPNgEf4r5cE4lD49H+0q0f/lzc3lXZj4DMMlqUcKeix/vI60uxPXT
nW9MsELHhVupRQwo5JYEEKz57YaE9F0GXBFUTySYJNwRcPkeAyylTlwh2EZR
pFe8GM9H1j99CT6hrWsUXYKfb1KmTPChTbmac6UMaGA0o/7CUFlO/uIDBhQp
PuwneLtcpPDIQwYwu56geW6dxO8x50cM4FcbovosNN1Zb1rFAPHMwHmU74Ye
ZG7FGLB7moT8sb1HjZvzlAHrFC9MIH20pgTKVzPA9tIJtE8urRNxj6thgNil
l2h+yKkKshR6zoC9LUpnkH/dtl/3vZ4BEVQ95E8eSTozbxsYADx3tH80Zci2
PWtiwIUei5soX/tN5Ra04vEeGoTOW3nCI3Htazy/n7zlSrCoYyct+Q0DzLS1
Ub/9x8rUZ3EHA86nm6L+fMTowRF6JwO+T31F79e7dqntm3jLAEV5IbSPfaGV
stm7mwHaK/rQvqd8vcjK9z34eWav0e9n8lYHCR7uZUD4cUtUr69Ifvpe38eA
BO1naB/CXWTfs+cD7t9PS5A85H/Pn9/vZ4DkfEkgwT6/tO+rDeDxNuKK3q8c
+y8n/eogXn/sXdH8ZvFBJmr5MG6/u7K6KH93cC5yPjHgjnwO2n9vapx0nfnM
AIFTAUgehWenLc7+h+v76csJ1G8/7NAe+sKADS9/CxPfny00UT46it/P2xX1
36PXy8SbvzFA94UPque9/PV/DH8wYL9eKspfr2KTBx+O4fld2Rfljyq2cMvm
nwzI/E5G/UsRObDi2i8GnJrxRPvnzHPDObKTDJid2oL6mViPI/G8Kfx5AnuQ
PmjOzykCfxjwtnPFNoL9D2l7BU7j9r68CNUP1/05h7/MMMAlKQjle2sDGdLx
WQYURDb9//3oTo5G+z8G7NOPQP6hpTEpYz7PgK8JG1A+WLv29IInAkwQp5ig
95vLZTtGty9kgkErA+37BMRNunIFmbDaLBLdd2xBWY2CMD4zSywSJ7jtW9IV
EVEm5AbbonpU3B1wfmwxEyLtTiH9X28Zcj4tzgTrrvNOBCc8t9vfI8GEguQg
GsHhlbU7Di5jAljNoH3Cxfs719Qux+Wpjkf1ueLJyGNHKSZ4xL1F/fjCV+nO
31Yw4e/mP6g+mXfb/GXKMKG+RxjtQy9/EroiK8eEN10nUb+ttODMW5I8E6S2
P0f1p3B1h7S3IhNU7LXRffR19h5KWMuEVM44uu8Lm5y4ynVMkDc7ivqHZa5H
NW3WM4H5JwO9r7D3lWgaUmNCmJ8Teh+fEfLMN1SdCVOvaaj/HeIELl6qwYSD
Ok/+I3hT4sa865uYkLBu4B+aF7P7zHS3MKEx5jn6fcKjovhPjZpMiCo4guqh
QKUJx20rE84OxlsSbPZiet3kNiYI5PDQPB/bUVQdvQP/vo2HBcqXA+7uStpM
2LjKAd1XYUxGoEQHl1/SHPn3yX8vM830mODusxT1i/mLaXt7dzHhW1XrFzS/
yW3vPbebCdIp1uj3gnrrP5GF9zLB5I/jFoLp26+sumLABPLeN44E15GsyzWB
CRXTxUyCl1otdKjZx4Tqvnm0/zpy7MGkgxETRtPeoH1QuqdP0qgxE2SeHUW/
fxoKUNrBNGVC/MosMorH8NdtMvuZkKiuj+arC3ER5/LNmVCiJIb2Q4/S9ZeR
DuD+klV/AOkn/3vRG0smfHlphOLF7OF1Sy9rJozIuYYg/dTaf509yIQnhmKo
f+hoW8yNt8XPU7XIQvr58ERd7TAT1qfrIj45eqG+wo4JF/1n0H45f1rN46A9
E7QSrJG+x0XeCQ05MOGP/FlUb/Wk426EHGXC7/zN84T+6MpGhhJOTLhnaTmG
9t2av/uvOTNBITAH6VdiTwFdxxW3zydltH+yMz+u1HicCXvjH6P3rVftVzw+
7s4EQXIEmocHTtY7TZzA4yEtHe1bN54Pm4k6hdsL23aS4HM0rTRFDyaYk6MX
EvyQN6hb7MmE17mH3+7GeY6f2mnqzYQdwW+7CTa5dSDwnQ8Tjv+J+0VwTMn8
inN+TDhVZqiI+u2nJcVC/kwwu15/EM0LzZ62aWeZEDwvivbb7u9Wj205j/vP
HkH0/vj2SEts9QUmaPbUovw+Nsna4hDAhPvW/qg/1xXUe/U1kAlun7ehepFt
e9vhdDAT9B68Ru9/FmevHHwfguvjz2wA2md9j/J3JDPhhhb7BMHv90xPt4Ux
oXSjvzfB+3nenANUnNuaWaj/7+5e/pzGhO0KL9DvoeTVLdINGEz4Ph6NnscO
qthQzmTChPwhtM/8XqtRso3FhKaNfqhfdVhx1aCAzYRWj20oXz91X9KgGoHH
c6Uoyoca98KOZEYy4fPOaZQP5iyd/eK5TMDYYI7y3X97WOxLTBBVakf+F7Ju
7p5PIhMqb5T9//d+Lth7mzQmrE1noXwUVaDl03AFt2erMJp3x6ezJo3Scfkt
4P/1a/9y5uMM3H/qIlA9rk1hiOtmMaGnQB+9X9IcHku9l437/0QDet/O3+G+
TuM6E9gKpSg/LQxvu3PjBhM8MZIa6s9a9+kr5uD5jv0c1e9yo9rk/+4x4a3I
dlQvhB+ajpdVMSF9xh39/qPr8AbRPIwJws+N0PuBwrFFa9KrmfCoNgb9vywp
JF+mFvenmUr0eyP6pRHtuOdMSP6zH71fHHnn+Ey0ngmnxzno/eohjZeW4S+Y
MPDs9UHUb9bnnQxsZEK2/jeUn/6c5JK9mpnQW2KH9p8nimeEB1qYUCtwfzuq
nwK+8U5tTDgXL4/6QZ2D7xQ6XjPhjFMX+j1kVsaB29btTPi4nITmmaIjXbSg
ReEwdjAJzaeVEqePZOqHgxijHvXTGcymkk6/cCjbPCqK5J/UllqWFQ7vve6i
ehWzujiuNj8cJOMeoP41bZ+mBPlBOAyG/EDxeqyur2rsYTgEtADa/ykcuOTn
+Sgcju1kIv29b9mj8L4iHDwCJVG+zrYbbbSrCofYJ8f90P26r4Y1Pg6Hac5n
VO/XuR7YZIiFg07INtSfDQ3M9JQ/DYdHpT0x9WLRpFue+Vyt6nDouUvNMcmK
InmNHtW/VRMOVHLDuY/novB8IPZF4Xk4hP/uTfy7L4pUSPYyX/wiHPJPjS/j
fIgklVxSEx1uwj83d8kNFYkkBUh1PnRqCQfhxarylY0RJJ1Ujufr1nDQL855
JRMXQarIHqrD3oQD/Z1hT/eyCBJlfVKQTkc4tP/ns1aliUPam2+kVtQZDjca
FhhDFIf0tOQ650p3OPw6Mvit8DebFK53SFvyXThIBD7LaCpgk4weLxiO7A0H
7SX+vh4ubFJdnZtx4Idw8Fzbv4NSziI1dSsJ2gyHg9OLGqPz5uGkWNfm4rpP
4VBfsJoUOcQk2QxST+wdCYeVW2VC94UxSe2jvc80voZDK8PhbkQag5RyPub8
tdFw2Kjdt+7aGgbJYWq38srv4QArmrVL9tBJK8O+tsb+CIfORQsunVOnkXrm
rzCEx8MhK4etv3+OQkpnW2yl/AyHBhmhDKnyMJKL2MyHn7/Coc/hx/JVlmSS
UmxenPdkOHSrlT3+lxdC6pc6Suqfwu0taWU0WBxEup4q+sP+TzhMZYiS/1MJ
IJ1SKM9smg6HoCQZlald50hq1zytjf+GQ5OqklXxRlfS5/VycxWz4dAYuOv2
TjcuJlC92N12LhxqJWdWWbinYStd52o+z4fDjN+2tLRTadjWmXE12gIW6Czb
v27p6TRsf8pwtLQgC479jNxBwdlte/dovhALyrHzy4ZwDm1+dXCfCAuk9TTu
mXikYfkipTL+YixoKhnfMIVz9fXcEKElLBhSHvtl7JmGvTO4+u6KOAt0T/7z
v4TzRE+swbalLDgRFZ/SgrN4cPi1+mUseBwudXKJVxqmuiJIyFWSBcpu394C
znvventOSLHgwZeiL2dxtj/g0sCVZkFHr+d1Ps7+n222KMuyYIGD5EQFzhEs
48sP5VjwjrP/v06cs9bo/bJaxYJvPpOhoziXV26yH5JnwUWzyry/OLc6rHlE
VmBB+PJbZCHvNGzkl5SCpBIL7BprR0VwXnBZhJ67hgVv/6wWFsRZfvPMx73K
uD5+KNX+wf9/+4tvxu0qLGgMSdQawdni1MdcH1UWVLnft2zD+aRAx+IFaiwI
WOS7phRnSvqLM6kbWMA5qHT3Ms5JelWtWzayoKJxQtAT58L2uztqNVgQrxyy
Xhfn2nM3Uo5txuVvO6mwAOde8dTpsS0sUFO5/LMW19/kba5zpBYLFs2fKg3H
eakJDVPcxoLDc4pn9HFW+3hepXQ7C5iXrDeO4vYxoJ7mWOxkQUaX1e9UnO1X
HR3p12ZB9VGlz3tx9i+zPBCsy4Id072i73F7R9rCHYldLJio1fIPwbk8ekOA
/h4WqMuzrdNx/2ldv/pt614WTIa8+7Ue5/+eLdX3JOH+s3Vuc/5JXF8zk/OJ
hiz4oqVbc/0Efn+fWt63/SxQ6ipzcXDD7y9S/p1lwYK940vjy4+nYUXXC2zl
LVngWnZkjwzO73sS5MwOsmCl6BLOM5c0DA6438g+woIU6tB//x1LwwQ3z1Uc
PsGCz/f7pTPt8PuJ3VncchLXp8SL+LeH07CQTy7HLE6zYK1vsNcynL9nP54G
LxacbJTAyLZpWI8MVU/TH/dHxxsUY+s0rHj+b5komQXi1yr86s3SsG+9BcLs
MNy/ks6Rpk3TMPUKpyPzFBa4PN37fhPOmQGVE5N0FtSIeaskGadh3P/IOwY5
eHz4rCIH7EvDTryZvvc4ngXZhy96xu1OwzLu5QnsSmTBkwUeFn36aVjXpaM2
pUksKKsx796Cs/X+Rz/yU/F4Ommt8VYvDdN/HKLJz8CZ8pJtqZOGBV5Rp63I
YsE/7QMh97XTsHvBXU2x2SyIwTZfWoWz2na9M5wbLOhvemH/a0caJpX7u+BC
HguwdXu1m7elYVbs3L/f8lkgmcc2tcI5yt3hgHchLl9c6b2WrWlYjcGiq0NF
LGiobKEfwXlu9cMvx++yIHFxbMl7rTRs17SH/rt7LLgS/dDhw3Y+FtApy7Uv
ZkGzwL7BrFV87G5JXXdbCQvyV+Q9jsL5y+WgjVZlLHCaeEIuxnm9v1roiwcs
uG8xa/ENZ7cDnS+MyllQkHvIQE+ej11Vj1iJPWLBiJoFloBzp7COl34lC6x/
eGnP4iw5OPywrIoF3ecTlwas5mOWT5MXbXvCgqveRg+mcY7MMHEoxHD79C3I
iFHgY9XkyVsbnrHgzFX5NZsV+Zjd2f/yqqtZoPhtY/onnD+d7Ct0qWXBgFXQ
tTtKfEzM6nlxYj0LLOrEd59ay8eu7HtUpvmSBb79O3k2ynxss05R+csGFlwa
Sb1mpsLHbNYkP5lvYkGeyV+/w6p8bGBF9LMrLbh+9Ir+eKzH9SNKrdVuY4H3
+6rmcDU+xh8/1eDbzgKSuNHPVnU+9qFmZ+fbHhb0bq82Lt/Cx86Vq3df6MXj
uZDeMKfJxxYWKfRKvGfBbqfMc+Zb+ZhaitCA0UcWwDWu63+4/v292r/d/cwC
9teP7fv1+NiseIBw1AR+XoXpoL4RH4td4CW6bgrXn4RrNN+Yj62dclry5DcL
glZVmEya8DGjD0aSEzO4/Lk7DQv28zHu/RWKbgvY8Cn7e72QNR9baV+yU28p
Gyw22GjZOPKxfItc3TfL2OCutGFB7FE+tod0Vd9fkg3hz2DyxTE+dlydBTel
2bB7SbWmjgsfuzVzyHL5ajacrvudOOrOx7Szfp4c2YB/38lgsNoH//z8+q9h
G9mQ2XDYv8GXj8kaO15YtokNDrnzw81+fGxq5DFDR5MNg0Ork5v9+Vj59ugM
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
1BWu
               "]]},
             Annotation[#, "Charting`Private`Tag$133962#2"]& ]}, {}}, {
           GraphicsComplexBox[CompressedData["
1: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
h/pg5yXsvISdl7DzEnZe+i+fuQxp
            "], {
             {GrayLevel[0.09], AbsoluteThickness[1.6], Opacity[0.06], 
              EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmAf8l9MXx+95SlP92iUVTS2l4dfUXv/SUCmRSsiIUISIElmRvbI32REK
ySrKlh0qKysr/kk4787n+3p+r1enc557z73nc+/z3M/9/L4NJ58wclqWUvrT
/yvl/hc3niu7VUnRVtqtqvwubnUspdpuu3pcpHzyqqm/jFt1+bJutdzKu1Vw
qy1f0a2G+su5NXfb3a2eW021MeY3Yanr1lhzMUcDYaLmHvLVNUdl4aqvNZC3
p/qp2VCeOnV9Hbu51fF4q+o0c2uk/lrCVKS5+rl1cuvstpfyqdnXrVh9rYWJ
mnvLU3NfrbOFWyutgbw26qdmW3nW2kFYqNNRnvH1HO/ubk08bql1NtC89fRc
rGf6e2ku5ugqTNTsJt9WuFsKVxetgbwGXqe+2z4eb3Nr79bDrbfmY0195KnZ
UzkdtEetNNefWgt9/dVHnaluE9wmsk9eZw+37h5vV53Bbgdo3xk3UGsA+xDl
UHN/edY6XJh4JyPkGT9U/WAfqfkGuA1TG2NGqY06h2o89XcIyxi3sYqpf5A8
9cfJU+cQzQuWn9w2uG3UWg9Q/Yny1ByvXOo18j1o6DZIWLpozU28rbHbaI8P
L4Flimof7HaUPPVPcJus3COFlbyj1U/NY+RZazOfu6nbJI/NYuw0t2PVD/Yj
VJO5/hUG8k5UHfpLWYyb5XayMFHzFHlqnqRccM3QGsibqX5qnirPN3KGsLCm
M+Wp2dxr7eV2nMfTNR9zzVY/dc6Sp/9seWrOFT5wnSNP/Xny1G/pc7dwO83j
XSzWNN/tfK0PXBfIg+tCeepfJE/9i+Wpf73bArdL3G6Qv1Q2V1gWyoOltddt
5Xaux2Ut6l/hdmUJLFfJg+VqebBcIw+Wa+XBcp38Ahm45gjLHOFYJExgqeh1
b3Z/v1t5i/o831ICy63yYLlNHiy3y4PlDnmw3CkPlrvk2Zu75dmbe+TBUsmi
/lK3Nh7v7XaZx4tLYHlAHiwPyoPlIXmwPCwPlkfkwfKoPFgekwfLEnmwtPea
7dzu9Xgf923dbtSe8U3xPT2pfQLX08IEluXCQf1n5Kn/ksY85bZMueQ9q35w
PScPriKLPXjB7UXtB+NXqB+877q94rbKraPnd3B73OOXVQdcb5aY41VhouZr
8s9pjqeFa7XWQN4a9VOz2Ofe1+15j9/SfKzpbXlqVrWo9YYwLdNc76ifOu+p
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
                 "]],
                 PolygonBox[CompressedData["
1:eJwtlHlMz3EYxz/PR0hCQqolRaWRFM3M8j+bv4z/8bfjT+U+yjEzzMyMZmZG
M3OGuXPN1ZyjmHO55mq5SfN6vH9/vPZ+P8/neD6f53vkz5w7ZU4MIUyGJOhH
kA71+N4WwkqohzRoJJfNWBY0BOVWwT5IhyZytege01qf04Aeg0xIJT6BHvc4
KPcDvkM1cTf0BlyHSuJcdA0cgAx4Ra4RvQA5UEDchn6G2X5+dDFshQAzkKVo
nWnMa3Sif6EWn4wuh50mv5HcMnSH6Sw+5x36NrFXRJfANpP3ml3pRVLU2hRy
o/Cl0BJ05ktwEcqCzrwa9kN/05wadLf3xtTzVNb2hLqgXDF+WFRvfc0K2GWq
5XOuotdMvfIaZ9DTid5ko7fgNuQlevoSfQHTgnr0CT5CFWEx+h4+mPwscm/Q
1wlfhLb6czD56f6OcLY+MJp4L/ET9KnXh6nEFYyNgTZ8JblynxvlW8m1oM2J
uUPQB/DQ5CeSe44+S9TyPb/BV6ghHo7+gt9Qksh1oH9gQ1CuL7XS4GjQGdvh
i2mt37k7Y8lQRryduAs+RvlSf4/wFuV9zxR8j6i7+pqR+JKou4wnHoDPgApT
zUz8QDgflKuCdX4H4iw4gj8MvYJy1fj1/k3gC+EK/rLJ/4Rz+LOmtT5nIX4z
dOAnwSH8Qfv/aEM7LMJsgc6gZ/4Y/8g013Mn8adM74p/k/P9OzDVKocF+E3e
Y/wEGMpdCmAcuZvEg/G5UX6s9xU/IqoXzeTuo/dMa/2MRYwVRo35HnfhTuJZ
+zuaw9igqL28Z01ex3QWP8M8/FrT3bxn+czNi/o3+T/oH5drjp8=
                 
                 "]]}]}, {}, {}, {}, {}}], {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{400., 0.},
         DisplayFunction->Identity,
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{
            FormBox[
            "\"C-mol H C-mol \\!\\(\\*SuperscriptBox[\\(H\\), \\(-1\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(d\\), \\(-1\\)]\\)\"", TraditionalForm], None}, {
           None, None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{80, 15}, {30, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotLabel->FormBox[
          "\"a) Host specific growth rate\"", TraditionalForm],
         PlotRange->{{400, 1000}, {-0.024814708901611596`, 
           0.013941333848836297`}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}], 
        NCache[{Rational[931, 2], -574}, {465.5, -574}], 
        ImageScaled[{0.5, 0}], {931, 574}], InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[
             {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
               "]]},
             Annotation[#, "Charting`Private`Tag$134079#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
               "]]},
             Annotation[#, "Charting`Private`Tag$134079#2"]& ]}, {}}, {
           GraphicsComplexBox[CompressedData["
1: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
h/pg5yXsvISdl7DzEnZe+i+fuQxp
            "], {
             {GrayLevel[0.09], AbsoluteThickness[1.6], Opacity[0.06], 
              EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmAf8l9MXx+95SlP92iUVTS2l4dfUXv/SUCmRSsiIUISIElmRvbI32REK
ySrKlh0qKysr/kk4787n+3p+r1enc557z73nc+/z3M/9/L4NJ58wclqWUvrT
/yvl/hc3niu7VUnRVtqtqvwubnUspdpuu3pcpHzyqqm/jFt1+bJutdzKu1Vw
qy1f0a2G+su5NXfb3a2eW021MeY3Yanr1lhzMUcDYaLmHvLVNUdl4aqvNZC3
p/qp2VCeOnV9Hbu51fF4q+o0c2uk/lrCVKS5+rl1cuvstpfyqdnXrVh9rYWJ
mnvLU3NfrbOFWyutgbw26qdmW3nW2kFYqNNRnvH1HO/ubk08bql1NtC89fRc
rGf6e2ku5ugqTNTsJt9WuFsKVxetgbwGXqe+2z4eb3Nr79bDrbfmY0195KnZ
UzkdtEetNNefWgt9/dVHnaluE9wmsk9eZw+37h5vV53Bbgdo3xk3UGsA+xDl
UHN/edY6XJh4JyPkGT9U/WAfqfkGuA1TG2NGqY06h2o89XcIyxi3sYqpf5A8
9cfJU+cQzQuWn9w2uG3UWg9Q/Yny1ByvXOo18j1o6DZIWLpozU28rbHbaI8P
L4Flimof7HaUPPVPcJus3COFlbyj1U/NY+RZazOfu6nbJI/NYuw0t2PVD/Yj
VJO5/hUG8k5UHfpLWYyb5XayMFHzFHlqnqRccM3QGsibqX5qnirPN3KGsLCm
M+Wp2dxr7eV2nMfTNR9zzVY/dc6Sp/9seWrOFT5wnSNP/Xny1G/pc7dwO83j
XSzWNN/tfK0PXBfIg+tCeepfJE/9i+Wpf73bArdL3G6Qv1Q2V1gWyoOltddt
5Xaux2Ut6l/hdmUJLFfJg+VqebBcIw+Wa+XBcp38Ahm45gjLHOFYJExgqeh1
b3Z/v1t5i/o831ICy63yYLlNHiy3y4PlDnmw3CkPlrvk2Zu75dmbe+TBUsmi
/lK3Nh7v7XaZx4tLYHlAHiwPyoPlIXmwPCwPlkfkwfKoPFgekwfLEnmwtPea
7dzu9Xgf923dbtSe8U3xPT2pfQLX08IEluXCQf1n5Kn/ksY85bZMueQ9q35w
PScPriKLPXjB7UXtB+NXqB+877q94rbKraPnd3B73OOXVQdcb5aY41VhouZr
8s9pjqeFa7XWQN4a9VOz2Ofe1+15j9/SfKzpbXlqVrWo9YYwLdNc76ifOu+p
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
                 "]],
                 PolygonBox[CompressedData["
1:eJwtlHlMz3EYxz/PR0hCQqolRaWRFM3M8j+bv4z/8bfjT+U+yjEzzMyMZmZG
M3OGuXPN1ZyjmHO55mq5SfN6vH9/vPZ+P8/neD6f53vkz5w7ZU4MIUyGJOhH
kA71+N4WwkqohzRoJJfNWBY0BOVWwT5IhyZytege01qf04Aeg0xIJT6BHvc4
KPcDvkM1cTf0BlyHSuJcdA0cgAx4Ra4RvQA5UEDchn6G2X5+dDFshQAzkKVo
nWnMa3Sif6EWn4wuh50mv5HcMnSH6Sw+5x36NrFXRJfANpP3ml3pRVLU2hRy
o/Cl0BJ05ktwEcqCzrwa9kN/05wadLf3xtTzVNb2hLqgXDF+WFRvfc0K2GWq
5XOuotdMvfIaZ9DTid5ko7fgNuQlevoSfQHTgnr0CT5CFWEx+h4+mPwscm/Q
1wlfhLb6czD56f6OcLY+MJp4L/ET9KnXh6nEFYyNgTZ8JblynxvlW8m1oM2J
uUPQB/DQ5CeSe44+S9TyPb/BV6ghHo7+gt9Qksh1oH9gQ1CuL7XS4GjQGdvh
i2mt37k7Y8lQRryduAs+RvlSf4/wFuV9zxR8j6i7+pqR+JKou4wnHoDPgApT
zUz8QDgflKuCdX4H4iw4gj8MvYJy1fj1/k3gC+EK/rLJ/4Rz+LOmtT5nIX4z
dOAnwSH8Qfv/aEM7LMJsgc6gZ/4Y/8g013Mn8adM74p/k/P9OzDVKocF+E3e
Y/wEGMpdCmAcuZvEg/G5UX6s9xU/IqoXzeTuo/dMa/2MRYwVRo35HnfhTuJZ
+zuaw9igqL28Z01ex3QWP8M8/FrT3bxn+czNi/o3+T/oH5drjp8=
                 
                 "]]}]}, {}, {}, {}, {}}], {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{400., 0.},
         DisplayFunction->Identity,
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{
            FormBox[
            "\"C-mol H \\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\)\"", 
             TraditionalForm], None}, {None, None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{80, 15}, {30, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotLabel->FormBox[
          "\"b) Host biomass per unit host volume\"", TraditionalForm],
         PlotRange->{{400, 1000}, {0., 0.05917159763313621}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}], {1366.5, -574}, 
        ImageScaled[{0.5, 0}], {931, 573}]}, {InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[
             {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1:eJxNy30sFHAcx/HrpMwzy8MmysbOmqfknHNcKonClPMwtrIrLY1dU52HCJ3n
hyNn3TTOWsiWNqYsp4UW5rDFJJrbaUd3nAnr3Fyi2trv47t99t3rj7czl3cl
hUqhUCL/7t//tTVjSqFkB1P+36wmQLZBhXsWJKVKQzhDdpM6YgKvNG3pqu32
9SG2SgevfX1dbC/jKnzHczqF9w6OsJInvy3LIeYVH5JmXnhAvKiW+GRTc4kH
dGcjOROwUnx4uLUijzhd+WXhU/xD4nAnOwe2cz5x2gq/21kO6703+DxOATGX
zjhX3g3f7fI99tGykJhh4D+uuQ83N11qj5qG+8xSYiUBj4jztXRri2ZY5Wq3
K92BDdx3pTFcAfGHHG0bbRCmN29eV9OKiC+zXnjLqmDL42nuqhVY8NVvez26
mLhBbqWld8IJCS2URrMS4rH2QPlaBvztzJI6dxJ+2Ska0jFKiZ3E212iRth3
mDdxWw/vyjS9nsllxGn2WZ89+mGBvI8SdbScODLL8HdiIdyXdM3tuQKeP9Lv
Mnu+gviZrVd0WCtsURtXOUetJPZWCMTxt2Atf3DKcgROXzyo6PGoIhaO7unz
6uAYnXFowTo8pnfg8uKqiVWhQa8a3sAdxrZGS9ZCYpeWn6ccs+DgEqWwdgZm
XhRG+M3CPuZM4/m5ff0TYTFNDhu1MXPfK+HJoZrU1XWYaxgYEmZSQ5w0+v3A
minMqX7cLzKHQ21UAQor+IRr3Um+PbwZonZqcYU1RqL5cBq8OB709IcbPMMR
2bDcYekNtumUD9zttjya6Qt3rIpKHf1gyb1laioTFvvXD5iz4Nod9sPXgXDF
wDIrkQ0Liuq3907DfwCHfCPk
               "]]},
             Annotation[#, "Charting`Private`Tag$134196#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
aBtfv78vbZ14fL9RFh83+sjX61vWUrv7/Hk4zFnys5+DmWf78wzLSFj4jXYc
n+Dz4fe0UaKaRHWw7llCjotb1F/ueTUkNmZ8tM3kvw/OMapzd9SRuGrqlqSo
wcWrOzTd4NckJvWrW5w2cJHZt5PT/47//kXUmHyy5GLP7sa9pV0kdi8sz5K8
yIWI89wRhx4SyUYnSlrCuKjw1KN/7+XPq5laWxGLi9Ws2GK1z3x+eNmNeXFc
CD45sDRqmEQu02HL1SIuCtf2thybIvFqUZeS8i8uTm5Z4vNvmoS/+0Xumiku
5HeaL0j4S+K84T7XnYKxYB7PNqwXCMfx9rCsCqlYOCedSTSYH47/tjWfiNCL
hfiCsYOLl4RjboRVde7/90Gf0KfiteF4WjD0ymUpf580+E7vXB+OC272z64o
xyG2rG9pp0442qaNrHlr4vAk5rn9XL1w+O6x6DFDHKQIauV/RuHw4or+Xuce
h+KUuTe/7AjHWbnLEmJP4/DPUdBzhXM4biQpi5QHxSNm+znWHZdwqM782dtJ
j4fmup4sHAsHY1GGzuJr8bAXrvx48mQ4Kh9VBCTlxSPj3hX7ex7hkJm+VOfT
GY8dEnP0bALD4VTzMmWOWQIia2enLsWEI3PBJfNY+USYT6wRmrgWDvdNx97c
XZWIGRWnxV7ccJTLHWA2bU6E+8UCpSPx4YiveRJmsSsRO9a7mBmnhiO52jfs
JT0Rs5zKiH+54TCNYS6xHkvEWWfaypCn4RCyPk5otiZhz++FO0J/hOOcQsb8
oLoUOG8JFlz2i1+f9En37R0p8AoZrMgfDYdjtgpzxUgK2PNf6X+aCAc7S1Ng
SjIVlUsjVhn/5dcz9djQ70AqNhiIL55ZEIGtE0oPTo6kQjxQuslfNQIvCPcX
KyXT8XJKztXbMQI9f1fcOH34OmZCLBcN7YtA5+mJHwmnrkNb+ELR6f0RCBbt
5jT6XEe4eP0810MRMJ8r+GU//Trs1ELzHFwjUK3m++9J/nU02vaNGXpF4Gp3
3LzRuRloTb/NEKJHYIfYqt7fhRn4vGPbnYT7EYj69EF9hXombi+UFemXioS2
w1kTnYPZUMsc01UIiIRHrl1hsE8eQO+NjH4fiQlrjZ7FffkwtIq02dwSiey5
gblnJvOxUcxwYUdrJA4V3ks5M78AarGRNM3OSPwweDYyKF8AkZuGFyt6I8Hm
2E+aWBbg7Ysot6EfkXA0+b3cML0ArsJbzSwXRYFo8Qsl9xbiYO3AnBHRKGgx
PxYpuhTCIeLq42tiUZiusfrvoUchdsh8NvokGYXEsxurhaiFWK0es8FvWRSW
6PsZjfMK8cvsi2KmehTsbPx+m0jxMChyrWOnZhQ+0MKirRV56Hu1LfG7VhRa
eiSbj6zm4b3DNZkt2lGg1IWcS97OQ+lxY9HGjVE4Ps676Hueh3taX2v99aL4
e/XK9/IQHm4PXWMobI6C+aKuDeLhPKT6fhV0M4zC87sP9WszeYgz4DwR2xKF
W2VeQhsLeYieMb5ctDUKO8LV72WU88B+8nXLAWN+/r3BlnJ1PFConMlZkyiU
q0jVJr3n4X8eW35P
               "]]},
             Annotation[#, "Charting`Private`Tag$134196#2"]& ]}, {}}, {
           GraphicsComplexBox[CompressedData["
1:eJxd2H+sV3Udx/F78Zo/+KGiXRCtJiU4wpybNI2hly+a5h+JrmmzgUNwppi4
udx15QpuYCVaRmNttIX9sKQR5Y/CaSmMCHFJolkopYTo0MQrwg3hek3P+Txe
Z/vyB+y51+ec8+Sc9+fz/ny+p1y94LJrhnV0dFz0/l8f/Ltr/7ZdUzYs6rl9
77j3Zq8ctv7CCQdmz9jW8H2Xd/9z5p6Gh99+1qWzD+sLf+UPl22eP7bhLa/e
NOPW0xs+c+z3Hl3SanjZRaun/PCKhvf3Pvmbe25o+Ir7dk9cs7Dhh7cdcc+j
yxs+6egJ4zb/umH+S558+K0Fqzrij/lj/pg/5o/5Y/6YP+aP+WP+mP/Rn/vd
ps7r3l3HH/PH/DF/zB/zx/wxf8wf88f8Mf8jD+1Z/fHb3ok/5o/5Y/6YP+aP
+WP+mD/mj/lj/h9aPXnZBXfvjz/mj/lj/pg/5o/5Y/6YP+aP+WP+XVdd33vt
L96KP+aP+WP+mD/mj/lj/pg/5o/5Y/6Hj5/5yOibX48/5o/5Y/6YP+aP+WP+
mD/mj/lj/sOWPLn48hU744/5Y/6YP+aP+WP+mD/mj/lj/pj/0DN3rjzr9n/E
H/PH/DF/zB/zx/wxf8wf88f8Mf+XFox+rn/2Y/HH/DF/zB/zx/wxf8wf88f8
MX/M/+ybKp7OH/PH/DF/zB/zx/wxf8wf88f8Mf8Tnq2+R/wxf8wf88f8MX/M
H/PH/DF/zB/zH1nPh/hj/pg/5o/5Y/6YP+aP+WP+mD/mf2y9HsUf88f8MX/M
H/PH/DF/zB/zx/xx9j91P4g/zv6ncPY/hbP/KZz9T+Hsfwpn/1M4+5/C2f8U
zv6ncPY/hfmPqPtx/DF/zB/zx/wxf8wf88f8MX/MH/MfVe+H4o/5Y/6YP+aP
+WP+mD/mj/lj/jj1X+9Hm/ovnPovnPovnPovnPovnPovnPovnPovnPovnPov
nPovzP879XmgxR/zx/wxf8wf88f8MX/MH/PH/HHb+bHVdn5stZ0fW23nx1bb
+bHVdn5stZ0fW23nx1bb+bHVdn5stZ0fW23nx1b3qOt++uhT7+/vq/ncmfMY
lg+v+t176ddYflS1nh1KjuVHVP3mf8mx/PBqPX+72Q8Xjl/1vDeb80pheVd1
v1eb80BheWc1/sXkWD5Q7Ue2JMfyjurPxnPlWD6+ut+W1DOWj6mflxzLR9W+
zXpUWD66/v8mx/k+9ftKjuUj6/fd9PvC8mPq75Ucy4+rv3dyLD+yrpfMB/za
W8tnzbinL/WU81thuXqSY7l6kmO5epJjuXrK+aVw/Eo9xa+wXD3l/FZYrp7k
WK6e5FiunuRYrp7kWK6e5FiuntI/CsvVkxzn+5R6yvcpLFdP2Z8VlqsnOZar
JzmWq6f8flFY/fk9bGjhKeff+sSino2/Wj915/hhWb/83pR84ZxP7Zvckdzv
OfLvPtTROvrGwcx/v5fIv33tuRMnLzrQrE/l9wj5khO/PuLzy/c161M578u/
Vfn0N+tfOU/Lu6rn7U7uvCrvrO63I7nzoHxw8Qfjn0nuvCV/sOI1yZ1n5B+r
vt9fMr+dF+Tdle8LzfpS9uPyUdX72JXcfld+XPW+30huP5n3X33Pvcnt1+RL
e/514rSlA836WfZD8rvu+slZJ/UebJ5f9hvy72+fc8k7c4eS6+fyiz48+qHX
J3a2evau/XTX4039PD7ywicOrWl+f5WrH6xesPrA6gH7/tj3xr4v9j2x74d9
L+z7YN8j/uX9Y+8be7+5vrxP7P1h+4t7b9644r3HFvXccfyaWdtHda7H3dtW
rHz+zKF1+IQ7ti0evOBgePS0MfM/euVA+Ng3vzCz58a94ZNbp87f0PVGeOy9
K6ccefqu8OQTzu740arnwxevnTXpvIE/h/sWXHfF3Kfvn45fWbaz5+m5z4YH
rhn4+8+P+k/4YOfXhs/ZsTs89NQ3Vt61vT/c8ZHWIzds2hceNr/ruYsfPBDu
enhj/2krB8N9fRsWH/bZjryfvlWnLts7dVjen/4o7xzz1RGHejpTb/pjfF6c
ODRm+VDqQX+UD959zc5zVh1Mrj/m/zfjZ5u+9KeBph5Lf5Qf2P/S6tu27m3q
ufRHef8l0yac99c3mvou/VG+54G1/Yv270quP8qfPePLt9w5dXty/VH+4zf/
2D1p7BPJ9Uf5hs7L3h130n2pR/1Rfm7vA5tf2Lo1uf4oH//Ff4+bNH1HU++l
P8o/se/qma+M3Z1cf0w9b3q7dWlvf3L9MfXZ/ftZZ8zb18zH0h/l4+b19o6c
eSC5/ph6v/8zy16fOphcf5Qf882h514+vpl/+qN85C+vevmZo5r5uLCut9TX
8DoPL6zrs8nr+2f9U59XLj1nXsdv+3I/7H7Y/Mfq2f3Uc+5Xnp/7ledj6wdW
/5kPa6v5Fu6u3986zzM/cn0Zn/uX8dj6hM2nzK/rq/nerGf198zzzLdcX8bn
/mU8tv5h8zPz9eRqvWnWy7q+8jzzN9eX8bl/GY+tr9h8z/yv17tmPa7rPc+z
HuT6Mj73L+Ox9RtbP7Je1OtteFw9//I864vrjcfGY/0h48t65P7/rdf78Jh6
PcjzrFeuNx4bj/UfbH1z/7/V/SZ8Wr0+5XnWP9cbj43H+hu2Xrr/J+t+19Rn
vV7medZT1xuf+izjsf6Jrb/uf0vtE95U+0z3POuz643HxmP9GVvP3b9Vv+/w
a/X7zvOs9643HhuP9X+sP6Qf1PUUPlDXU56nf7je+MyPMj7zs+wvMr70G/ef
UM+X8GA9X/I8/cj1xme9KeOz3pX9S9a70r+yXtbrQbPfqdeDPE9/y/VlfO5f
xmP7o8zH0g/TH+v1rtlPnV+td3mefpnry/jcv4zH9l9ZD0p/zXpSr+fNfu0H
1Xqe5+m/ub6Mz/3LeGx/l/Wt9Ov077pfNfvBl6p+lefp57m+jM/9y/jMv7J/
xPq/+99Z99vwYXW/bXme/YHrjcfG53llf4rtJ9rOQ+37//T39vOT81J8ynkp
/aScl7Lel/NS+ls5L2HnJey8hJ2XsPMSdl5KvZXzEnZein85L2Hnpcz/cl7K
9eW8hJ2X/g8xfgXc
            "], {
             {GrayLevel[0.09], AbsoluteThickness[1.6], Opacity[0.06], 
              EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmAf8l9MXx+95SlP92iUVTS2l4dfUXv/SUCmRSsiIUISIElmRvbI32REK
ySrKlh0qKysr/kk4787n+3p+r1enc557z73nc+/z3M/9/L4NJ58wclqWUvrT
/yvl/hc3niu7VUnRVtqtqvwubnUspdpuu3pcpHzyqqm/jFt1+bJutdzKu1Vw
qy1f0a2G+su5NXfb3a2eW021MeY3Yanr1lhzMUcDYaLmHvLVNUdl4aqvNZC3
p/qp2VCeOnV9Hbu51fF4q+o0c2uk/lrCVKS5+rl1cuvstpfyqdnXrVh9rYWJ
mnvLU3NfrbOFWyutgbw26qdmW3nW2kFYqNNRnvH1HO/ubk08bql1NtC89fRc
rGf6e2ku5ugqTNTsJt9WuFsKVxetgbwGXqe+2z4eb3Nr79bDrbfmY0195KnZ
UzkdtEetNNefWgt9/dVHnaluE9wmsk9eZw+37h5vV53Bbgdo3xk3UGsA+xDl
UHN/edY6XJh4JyPkGT9U/WAfqfkGuA1TG2NGqY06h2o89XcIyxi3sYqpf5A8
9cfJU+cQzQuWn9w2uG3UWg9Q/Yny1ByvXOo18j1o6DZIWLpozU28rbHbaI8P
L4Flimof7HaUPPVPcJus3COFlbyj1U/NY+RZazOfu6nbJI/NYuw0t2PVD/Yj
VJO5/hUG8k5UHfpLWYyb5XayMFHzFHlqnqRccM3QGsibqX5qnirPN3KGsLCm
M+Wp2dxr7eV2nMfTNR9zzVY/dc6Sp/9seWrOFT5wnSNP/Xny1G/pc7dwO83j
XSzWNN/tfK0PXBfIg+tCeepfJE/9i+Wpf73bArdL3G6Qv1Q2V1gWyoOltddt
5Xaux2Ut6l/hdmUJLFfJg+VqebBcIw+Wa+XBcp38Ahm45gjLHOFYJExgqeh1
b3Z/v1t5i/o831ICy63yYLlNHiy3y4PlDnmw3CkPlrvk2Zu75dmbe+TBUsmi
/lK3Nh7v7XaZx4tLYHlAHiwPyoPlIXmwPCwPlkfkwfKoPFgekwfLEnmwtPea
7dzu9Xgf923dbtSe8U3xPT2pfQLX08IEluXCQf1n5Kn/ksY85bZMueQ9q35w
PScPriKLPXjB7UXtB+NXqB+877q94rbKraPnd3B73OOXVQdcb5aY41VhouZr
8s9pjqeFa7XWQN4a9VOz2Ofe1+15j9/SfKzpbXlqVrWo9YYwLdNc76ifOu+p
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
                 "]],
                 PolygonBox[CompressedData["
1:eJwtlHlMz3EYxz/PR0hCQqolRaWRFM3M8j+bv4z/8bfjT+U+yjEzzMyMZmZG
M3OGuXPN1ZyjmHO55mq5SfN6vH9/vPZ+P8/neD6f53vkz5w7ZU4MIUyGJOhH
kA71+N4WwkqohzRoJJfNWBY0BOVWwT5IhyZytege01qf04Aeg0xIJT6BHvc4
KPcDvkM1cTf0BlyHSuJcdA0cgAx4Ra4RvQA5UEDchn6G2X5+dDFshQAzkKVo
nWnMa3Sif6EWn4wuh50mv5HcMnSH6Sw+5x36NrFXRJfANpP3ml3pRVLU2hRy
o/Cl0BJ05ktwEcqCzrwa9kN/05wadLf3xtTzVNb2hLqgXDF+WFRvfc0K2GWq
5XOuotdMvfIaZ9DTid5ko7fgNuQlevoSfQHTgnr0CT5CFWEx+h4+mPwscm/Q
1wlfhLb6czD56f6OcLY+MJp4L/ET9KnXh6nEFYyNgTZ8JblynxvlW8m1oM2J
uUPQB/DQ5CeSe44+S9TyPb/BV6ghHo7+gt9Qksh1oH9gQ1CuL7XS4GjQGdvh
i2mt37k7Y8lQRryduAs+RvlSf4/wFuV9zxR8j6i7+pqR+JKou4wnHoDPgApT
zUz8QDgflKuCdX4H4iw4gj8MvYJy1fj1/k3gC+EK/rLJ/4Rz+LOmtT5nIX4z
dOAnwSH8Qfv/aEM7LMJsgc6gZ/4Y/8g013Mn8adM74p/k/P9OzDVKocF+E3e
Y/wEGMpdCmAcuZvEg/G5UX6s9xU/IqoXzeTuo/dMa/2MRYwVRo35HnfhTuJZ
+zuaw9igqL28Z01ex3QWP8M8/FrT3bxn+czNi/o3+T/oH5drjp8=
                 
                 "]]}]}, {}, {}, {}, {}}], {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{400., 0.},
         DisplayFunction->Identity,
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{
            FormBox["\"g Fish\"", TraditionalForm], None}, {
            FormBox["\"Time (d)\"", TraditionalForm], None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{80, 15}, {30, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotLabel->FormBox["\"c) Fish biomass\"", TraditionalForm],
         PlotRange->{{400, 1000}, {0., 316165.64890464046`}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}], 
        NCache[{Rational[931, 2], -1148}, {465.5, -1148}], 
        ImageScaled[{0.5, 0}], {931, 573}], InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[
             {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
mfllVQV6V0NBuMfJ5vANCj0v1NcsOxMKj2HChaYMCl86Xzu9QRAKf2fnte2+
ReFBvdzLngGhYPzrgElNJoWKDw7GuJbS4FOpRG/NolAqu50re5OGW9kln95m
Uzg9uVhTJ5GGtlN+i+zuMO316I+CUzQs9NA4+TyXwrX1x7f8DaHB1abyudld
Cqt2z6wPP0FDpdSKQyYFFMqlm0X+3EpDMWsgRfMRhaWnfgY1qtLg6NmaVlxM
YUW17L5eeRq+7a274fKEQuOmO7IzxWmQsXuaFfOMQvXk0MfZjSKwn3v6wWg5
hXrh/9XJXBfBl8fLKz9WUxhVstOoykQEI7I+UsJ+pn1361riiBAixA9Jz/9J
4TeZCbJiu4Qw7+eOSQ8GKZy9r7YhZpMQzL6YTekfpnCGoX/SdyMh0LenqbiK
c3FEU++zibQQlLdmLzeazMVLz3p1PdMEYJjYt7dFk4tU8G6V9QN8SPFe2E4s
4qIm9DXFtfFByXzbcXkdLnqlST0c/sKHny2FnBV6XKwZCrCrecmHuwaii9zl
XJwxuSxA9RIfVpfM/ThvLRdLDwRyLv/HB7NOW2vn7VysOnPtxtYcHuQUBb/t
2MHF1yck1v28zoMF0VnbOC5cxFStiMRLPJBcqXzwmisXfdZ7L5KP5EEJp5Ea
OMDFWrOd1J4jPLCeziqMOsHFb8HqN0rVebBp1TX9l2FcNNxy40tQHBeaNp5J
XhfBxW1Rbi/eRXPBz42nXBDJxanCy3Z6oVyIF+0VuxHNRe+H3nIjBBdaPs59
E36Oi3I5rQ96XbjA8TnnuSmZi4WB1ak4nwuZGaKbVQVclPnP5PO6bArMHgWo
byrkYnFjASvoBgWVFQfPvHjARdEE4Y+HVykY+W0RlP+Ii03TTA9sP0eBlbXE
xvhnXLwjPeHc50AK6r+xOne/5+LwmafmmtYUKMxz1/3exsUHxeoZUd9JGLZO
dAju4KL+W410la8kNPm+Y83o4mLmug/NmdUk5JUavbDs5eLWvq+dHeUk7PKX
OpA6yEUVv9jj+TkkZLxKSDwsycNZe4bPX6VIsA58O7VDhYfzq0o3hmmQsDxV
0oQ7l4dH4+rX9c0jQfX9yj1z1Hh4SHTvzK7ZJPRqJdyyXcDDtNCiDdYKJJyr
OGKboc1Dh3n6OseGQ+CbjiTfYyUPWdefytW8DgGqesWvHnsetl+em6QTHAKn
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
MKa4sb9GTZn5MnZIz2f8P+WKT1g=
               "]]},
             Annotation[#, "Charting`Private`Tag$134313#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
               "]]},
             Annotation[#, "Charting`Private`Tag$134313#2"]& ]}, {}}, {
           GraphicsComplexBox[CompressedData["
1:eJxd2H+sV3Udx/FbtpVwLyY5omtJNoOrjALjForue+elInXthhs0oxuJMpDK
Blt00T/kYpdwCjWvkOmm17QNKYgGEfC1CwvRexWUK9criCA/7r1cECgaySq7
5fmcx/u7ff0D99zrcz6f5/ec9/m8z+deecc90+76cEVFxdT///PB/3vP7++t
3dlcd+z5+14cHDzb/vXRFxrr95d4zfQRbzacKfHQZRO/1XjR0uAfbp7WOX9k
iV/t/3F907gSTxi5sthyU4kfmfr72tYZJT7/05fXtf2gxDPWDIxZv6TEW/Z/
tK24qsSXDxld3bm2xPx/Puet8+va3g1/zB/zx/wxf8wf88f8MX/MH/PH/Mdd
cv1VjfUD4Y/5Y/6YP+aP+WP+mD/mj/lj/ph/1+ZfTavq7Q1/zB/zx/wxf8wf
88f8MX/MH/PH/BfNeu/+YsvR8Mf8MX/MH/PH/DF/zB/zx/wxf8x/0vDfNfY0
HAp/zB/zx/wxf8wf88f8MX/MH/PH/Jtnz9tW29oT/pg/5o/5Y/6YP+aP+WP+
mD/mj/m/snH0yNae18If88f8MX/MH/PH/DF/zB/zx/wx/7GVLw0cr90Z/pg/
5o/5Y/6YP+aP+WP+mD/mj/lf2Drk4ZZzz4U/5o/5Y/6YP+aP+WP+mD/mj/lj
/sXEBf6YP+aP+WP+mD/mj/lj/pg/5o/5fzo9j/DH/DF/zB/zx/wxf8wf88f8
MX/Mf2d6H8If88f8MX/MH/PH/DF/zB/zx/wx/8VpPwp/zB/zx/wxf8wf88f8
MX/MH/PH/MenfhD+mD/mj/lj/pg/5o/5Y/6YP+aP+S9M/Tj8MX/MH/PH/DF/
zB/zx/wxf8wf89+TvofCH/PH/DF/zB/zx/wxf8wf88f8Mf+r0/do+GP+mD/m
j/lj/pg/5o/5Y/6YP+b/QDoPhD/mj/lj/pg/5o/5Y/6YP+aP+eOy82Oh7PxY
KDs/FsrOj4Wy82Oh7PxYKDs/FsrOj4Wy82Oh7PxYKDs/FsrOj4URw+Y9XdzT
XPfl7H0+E/0Yyw9k/e5k5Fh+f7af9UeO5Vdl/eZ45Fjeme3n70SO5W9n6x2I
HMvHZPPtixzLj2bjOyPH8oGMt0aO5RXZf+uKcix/OY2PesDyrrRe5Fg+KvlG
juXd6fdGjuW70v2KHMs/m+535Fh+X3pekWP5G+l5R47lE1O9RI5P/n3Vd+vb
lkY9qT8sV09yLFdPcixXT3IsV09yLFdPcixXT3IsV09yLFdPcixXT3IsV09y
LFdPcb7PWa6e5FiunuRYrp7kWK6e5FiunuRYrp7kWK6e5Fj9+XvYf5dcOaWp
o7mucu5lj8yvORvvr783yTd8fOGO6s5Tkft7jnz6lr1nO+afiNzfS+T//v74
K5qqeiP39wj5U0NW3lqz/kjkzvvyBzOfg5E7T8v3Zet1R+68Kr8xm29P5M6D
8tey8dsjd96Sj9j2Af86cucZ+WXZfBvj/jovyBdlvi9G7ntcviC7H12R+96V
12T3e3/kviflh7LneThy32vym//0vU0Njcci9z0kf7bqQ8vain2R+96QV9z1
9LfPVZf2L/1cPrNYf0190+nC6huunVKxvVQ/8/66e9vg+tLfX+XqB6sXrD6w
esCeP/a8seeLPU/s+WHPC3s+2PPA7j92v7H7i91P7P5h3xe/Xbjr8cH25rrJ
c27dUPvN0+348LC1h4+fHQj+2eaLh7X+si/46llzb6j/0rHgJy5d0X18zeHg
vjtuubb+9JvB4zd+bGXb+K7gfwx5qGewf1fwsO9Ufa7p7T8Gr2r/V3f1NU+F
321VH/lPx9Idwe13L7+p6v09wSPuXDalZvIbwa8M7+zveO9g8I5ZLS/UHjgS
fPmfx6xumdQbvOiSjrk9q04E751z9/U1508FT/jL0Mqm287G/dMf5UuHT/5N
wzOn43nrj3G/tj22d/CrJyPXH+W7Z18YXNffF7n+KF9YOeMLjcuPRa4/yj+5
adPMqrHvRK4/yhdvqxnR9Nj+yPVH+c7KvgU9B7si1x/lnyp+7cn5dS9Frj/K
pz/fvKFhxabI9cd4vv8c9aOeXzwa909/lH9x5jcmNo7dHrn+KH98y57Fbc/s
jlx/lDcPfW7WuRXdkeuP8klb372o9ZaDkeuP8fw3rn69+oEjkeuP8teHXvfs
/KPHI9cf5eNmH/hJse5E5PqjfPnWe6dWPXkqcv1R3n/pZ6ob3z9TXm/tZXlw
d6rP4IfT/LH/qc/bH7ruzoo/LI35sPmw9x+rZ/OpZ7n1sfWx/QOrf773pvct
eEK6f7Ge98P1xsfvycdj+xP2Ppl/VHrfg3vS84z1vG+uNx4bH78n3/+w99P8
L6T9pvR7U33Fet5f1xsfvzcfj+2v2Ptu/n1pvwuuS/Ue69kPXG88Nh7bv7H9
w/xXpP02+MH0/sV69hfXG4+Nx/oDth+Z/9W03wevTftBrGe/cr3x2His/2D7
m/lnp34TfGPan2I9+5/rjcfGY/0N2y/N35X6XXBL2i9jPfup643HxmP9M9bP
91/z/+32zKe0PyafgvXsz643HhuP9WdsPzd/b7rfwRen+x3r2e9dbzw2Huv/
WH8wf02qp+BiqqdYT/9wvfHYeOz7Aus35j+U3pfgBel9ifX0I9cbj43Hvl/i
fuf9y/ytaT8I/kTaD2I9/c31xmPjse8jrB+a//Npvwu+J+13sZ5+6XrjsfHY
9xfWX82/JO3nwR1pP4/19F/XG4+Nj9+Tf99h/dr8b6V+Vfq9qV/Fevq5642P
35uPx74fsf5v/q+kflv6vanfxnq+D1xvfPzefHxZfw/2PYHLv/edj+TOT3F/
8vNS7Df5eSnuZ35eivrMz0vxfuTnpajn/LyEnZew81K8f/l5CTsvRX/Iz0vR
n/LzUvST/LwU/Tk/L2Hnpejn+XkJOy/9D+Fovl4=
            "], {
             {GrayLevel[0.09], AbsoluteThickness[1.6], Opacity[0.06], 
              EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmAf8l9MXx+95SlP92iUVTS2l4dfUXv/SUCmRSsiIUISIElmRvbI32REK
ySrKlh0qKysr/kk4787n+3p+r1enc557z73nc+/z3M/9/L4NJ58wclqWUvrT
/yvl/hc3niu7VUnRVtqtqvwubnUspdpuu3pcpHzyqqm/jFt1+bJutdzKu1Vw
qy1f0a2G+su5NXfb3a2eW021MeY3Yanr1lhzMUcDYaLmHvLVNUdl4aqvNZC3
p/qp2VCeOnV9Hbu51fF4q+o0c2uk/lrCVKS5+rl1cuvstpfyqdnXrVh9rYWJ
mnvLU3NfrbOFWyutgbw26qdmW3nW2kFYqNNRnvH1HO/ubk08bql1NtC89fRc
rGf6e2ku5ugqTNTsJt9WuFsKVxetgbwGXqe+2z4eb3Nr79bDrbfmY0195KnZ
UzkdtEetNNefWgt9/dVHnaluE9wmsk9eZw+37h5vV53Bbgdo3xk3UGsA+xDl
UHN/edY6XJh4JyPkGT9U/WAfqfkGuA1TG2NGqY06h2o89XcIyxi3sYqpf5A8
9cfJU+cQzQuWn9w2uG3UWg9Q/Yny1ByvXOo18j1o6DZIWLpozU28rbHbaI8P
L4Flimof7HaUPPVPcJus3COFlbyj1U/NY+RZazOfu6nbJI/NYuw0t2PVD/Yj
VJO5/hUG8k5UHfpLWYyb5XayMFHzFHlqnqRccM3QGsibqX5qnirPN3KGsLCm
M+Wp2dxr7eV2nMfTNR9zzVY/dc6Sp/9seWrOFT5wnSNP/Xny1G/pc7dwO83j
XSzWNN/tfK0PXBfIg+tCeepfJE/9i+Wpf73bArdL3G6Qv1Q2V1gWyoOltddt
5Xaux2Ut6l/hdmUJLFfJg+VqebBcIw+Wa+XBcp38Ahm45gjLHOFYJExgqeh1
b3Z/v1t5i/o831ICy63yYLlNHiy3y4PlDnmw3CkPlrvk2Zu75dmbe+TBUsmi
/lK3Nh7v7XaZx4tLYHlAHiwPyoPlIXmwPCwPlkfkwfKoPFgekwfLEnmwtPea
7dzu9Xgf923dbtSe8U3xPT2pfQLX08IEluXCQf1n5Kn/ksY85bZMueQ9q35w
PScPriKLPXjB7UXtB+NXqB+877q94rbKraPnd3B73OOXVQdcb5aY41VhouZr
8s9pjqeFa7XWQN4a9VOz2Ofe1+15j9/SfKzpbXlqVrWo9YYwLdNc76ifOu+p
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
                 "]],
                 PolygonBox[CompressedData["
1:eJwtlHlMz3EYxz/PR0hCQqolRaWRFM3M8j+bv4z/8bfjT+U+yjEzzMyMZmZG
M3OGuXPN1ZyjmHO55mq5SfN6vH9/vPZ+P8/neD6f53vkz5w7ZU4MIUyGJOhH
kA71+N4WwkqohzRoJJfNWBY0BOVWwT5IhyZytege01qf04Aeg0xIJT6BHvc4
KPcDvkM1cTf0BlyHSuJcdA0cgAx4Ra4RvQA5UEDchn6G2X5+dDFshQAzkKVo
nWnMa3Sif6EWn4wuh50mv5HcMnSH6Sw+5x36NrFXRJfANpP3ml3pRVLU2hRy
o/Cl0BJ05ktwEcqCzrwa9kN/05wadLf3xtTzVNb2hLqgXDF+WFRvfc0K2GWq
5XOuotdMvfIaZ9DTid5ko7fgNuQlevoSfQHTgnr0CT5CFWEx+h4+mPwscm/Q
1wlfhLb6czD56f6OcLY+MJp4L/ET9KnXh6nEFYyNgTZ8JblynxvlW8m1oM2J
uUPQB/DQ5CeSe44+S9TyPb/BV6ghHo7+gt9Qksh1oH9gQ1CuL7XS4GjQGdvh
i2mt37k7Y8lQRryduAs+RvlSf4/wFuV9zxR8j6i7+pqR+JKou4wnHoDPgApT
zUz8QDgflKuCdX4H4iw4gj8MvYJy1fj1/k3gC+EK/rLJ/4Rz+LOmtT5nIX4z
dOAnwSH8Qfv/aEM7LMJsgc6gZ/4Y/8g013Mn8adM74p/k/P9OzDVKocF+E3e
Y/wEGMpdCmAcuZvEg/G5UX6s9xU/IqoXzeTuo/dMa/2MRYwVRo35HnfhTuJZ
+zuaw9igqL28Z01ex3QWP8M8/FrT3bxn+czNi/o3+T/oH5drjp8=
                 
                 "]]}]}, {}, {}, {}, {}}], {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{400., 0.},
         DisplayFunction->Identity,
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{
            FormBox[
            "\"mol \\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\)\"", 
             TraditionalForm], None}, {
            FormBox["\"Time (d)\"", TraditionalForm], None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->NCache[{{}, {
             Rational[1, 10000000]}}, {{}, {1.*^-7}}],
         GridLinesStyle->Directive[
           GrayLevel[0]],
         ImagePadding->{{80, 15}, {30, 10}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotLabel->FormBox["\"d) Interstitial N\"", TraditionalForm],
         PlotRange->{{400, 1000}, {0., 3.555805421426351*^-7}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}], {1366.5, -1148}, 
        ImageScaled[{0.5, 0}], {931, 573}]}}, {}}, InsetBox[
     TemplateBox[{"\"Fish absent\"", "\"Fish present\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 60}, {60, 60}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {60, 60}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.43333333333333335`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 60}, {60, 60}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {60, 60}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.43333333333333335`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               
               TemplateBox[<|
                "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                "RGBColorSwatchTemplate"], ",", 
               TemplateBox[<|
                "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                "RGBColorSwatchTemplate"]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "60"}]}], "]"}]& )], 
     Scaled[{1.2, 1.3}], ImageScaled[{0, 0}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   DisplayFunction->Identity,
   ImageSize->Full,
   PlotRangePadding->{6, 5}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{
        Inset[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
                Line[CompressedData["
1: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
NYrXfVM2JFtGRxmKDVEh/cFaRRwPSe7U2bdU+EPvxPaxzDdrnHhHBX5qMofk
lmo10Q8fqTBwM3EFyVZNQvavPlPh9JHzA6Q+WrvfpT0bp0LQie/nSbZ+3957
b4IKOtTvdJLvTVcuuT1FhbQFWtgeNhKnD9X+pkI/S9GT5PtLwi6WzlBB/9T2
fSTbrt37Le8fFaRct2N7tVuaGKUJ0qDdr5hN8va9KrR4YRpM1o4UkvzQX6CJ
JkqD9+mFLSTbUYdFj8+ngcF9P+w/j1Ja7f0kabAsqEsZ+1ftiT4nWRpkeU5T
SbZvDVpqo0CDR5fGKkh+8sLp8KbFNJjP/t5HssMng4q1KjR4Wl2J+4+Ov4rf
VyylQVRAI85PDlIzRirLaHBV5/l2kjvVX9NkNGmg35h+EPd7Bo1N81ai50FJ
GMlPrc+L/V1FA8rc67geO7nF7/yuRwP3S9Rwkp8dPZLxbg0N7q4sOoD7W4b9
y/71NEjNHsT9W9fpNWpPjWiw4uAnnC93F8v6tpnQ4JU2FfdP3Vd/VtzcRAPi
3g4urif3+75fBhqsNWvD9ut5ecv4ggUNTq1f0U/qx/lLIT3Xigb11QPnSH4u
wG0+vY0GFl0BFJJdFvqKx9nRQM7Q0YfkFxq2DtSdNGh+LeeMfzfWzQxxooHU
dthLcq+tVP/hPTRw3Od2gGQ3zwk1DxcavAscjyK5L6jH19GdBtfXn87Ev7Ov
V1p50aCi89ENnA/TcydMfdD72je8JdnjAmPDmoPoPHOPSJPn77++n6HpS4Of
d34DyR4Pt7YoBdBg5BwzhOSBV1rzpY/RYOO53LO4P/g231EkGOnrv89PSH41
92vmn1AaOKcs/IN/l3/aPx5OgyT5OjVSn6+1rqiPRtFA7UvYFlyPTPl+L2No
cKZ01h3ntx0xVR10GpgsnzlK8lDoZpMGLg3emInheWA4a17r+UQa7C1fivsd
md7Q0L5kGnwJ1MH9KCx+pfrfaRrkrh26T74/0H3bA4t0GvQYFAeRnJtbFxmV
RQNPI18JktsHliyvzEH68xO4S+rjl2pSx5s8GrygZCaQrOk9RZU/S4PMic2H
SN591mfl9mIaKN1UdSKZPfSwm3GBBkuV7exJrl5mzK4rp8Huq2PYXq8OFul9
qKQBg6t5jGSJEsmXKpeR/zxTP0HyxnfRcU51NLgBkrUkB2iNrIu7RoPBWkVc
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
phFpRy/W8BoTISw79PSl5WmE9lvPVq976DzDLU7OImmEFNt2fvf9RIiz+LXf
aTaVmFpi5LD9QSIIf7wyrDSVStx1l+ozepwI4n/cjs8bSSVcnjV+lupC5y+Q
FK8gUgmzkEtr47qR/U9Ib2NeSSWW/5cb+bcnEfy1B6TGy1OJr7bhcz72JkJ+
tPvDg+mpRNd7Hyvvl4lwxINnvDU+lbgRa5/U04/O79SsSI9JJWIbV8g1vU6E
PR2bzwftSyWOesu6bXiD7MPK6OnYmUo4zQoUXBpKhGvPOps7zVIJ49zPw/9r
kO7jqbyjAIDXxSrKXYpKGZW6SoWELnJOw12qyZCaFEneVXcjNZGG6nl+P8/D
ZV20SmW9W7NeZ20X2UilZpvJLualYvIaeZ2758/v55zzOef8fmdJG4u1ksFp
c1YoVCaO9RZfv2QRqN+zBXMUKlHdrzEGr1n83Pj5TiNNpqo97tb3J9tZjDSY
vKiiJVNVPSt/aKKDxS2VrjaikkzV7SLqHNfJ4pULLUtPKTJVeVsOH+t8I8yj
lijXf5KpSu7a++vubha1HbyPa5ozVKHEW6+uh8W0hM9NJy7zqk3LwMuzj8Wr
/qVBbvXxKusKy6/K+1k83+noKz9EwWjv3HrHARb/2JZtZnuYwrhIx7RokEWj
TU5StRBvye/bIxliMfBivDJVcKVL45Uzwywa50bJVwguVFd1zRplMcvaveL3
eAqH5hbET/qPxSJzq3/MBIsz/MgLEUHfgeBXt+MobHY/kbJfm+DGb90eeAk+
OXovQec9giNTr1V3xlIQ7Z0XbTON4G8mOf5mggek6s2MmGDSMjbs2GcU6lp3
60sXECzKjfp68X4K+Q4xmTl2BEvz9Jtawiio35xhVjkQfDhW/zBc8LwL1cfK
1xJMLylu7AqloJhu/VmvE8EZphU/De6lkNrc773hQ4LxRs4T43sohJNDs4c9
Ce5RlJ1+FUjBuilFuS2coI54WeHCbRT4Pw8cqYkgWFCzVZbjR6H78c7dH0cR
7MP7xvqCb9x3sHTdR7DjS9nRIV8KForOn1fFElzalfys1JvCQnefVzrJBCUF
A4U2nhQMri+yu60kqBs6uTfJjYL8vNjYKpcgeyJwQYMrhefK8YmreQRFjRcY
R8Fcam3luTMEA3bkG75dT0FvFxtALgr7PW5J9AcK2jP7U4JvEpwdYNaqkVIY
PFha834FQfdHYt8bqyhcS+2PvF5JMPekYqxpJYUgxWItWRXBKX2TbhkIflKY
ZpvwlKAJa+ISZ0mhoM0j++XvQvzvNFxlQcHHu2Zr8T8E1X82hsYspFC0srVu
zyjBe3fCdpnPohDqNFs+MUbwZllls70BhQUe7tNy/yPYaN3uuWGm8N8hl6XV
kyjGbU+sDRML/U9H5a2dQjF5383juXrCvUwb2DFjNsV7cZEnqrQoxLRpN91d
SdHQh6nyf0tA9Dx2zMOKYpr5zgNb+gmc+rFtToM1xbEnFYaufQRKFOVeWmso
fhH98BNJDwGD9allWxwpzrf6y6b1XwJ3z2hdapdR9DoXnihpITDhJ4oxDqLo
FJVc+PIZAe6RZjRRQbHCeWPIuisE3N9Zar/LovjibfBNncsExhdtn7HvK4o9
K+WGT78hEHnkO9NdORTnMXeWf3qRgMxqt5vLWYqPTULZ0LMENNll6RNXKZb7
vZe+PZvAgaA0s6OlwrwPQhpyjhLwGdKVJfcK9efF5HsfAo9H5wfv90tH+Zqq
07GdLLyWrSvMvZOOQ/Zb4/pTWLihazT1pQGHD0yNe4pMWTAvGLA1OcThmNpD
o/WAgRuBQZOVhzk8n2KvuVrMgN38J9XvJ3D4bTOp8PqBAZniYoR2Eof04PLB
/LsMhCd7n+tM4VAjn3t/UxED1wO+0y3mORzZZeBZdYmB1YbRzX6XhfrjrRvk
CgbweCuXUcuh/MriqoRoBqQbuc32dRw6dSjfSaOEfH2prvoFh1GyDM+RCAbM
T3FpkgYOP9jXFZIQxsDUS9IjP7dyuLNhNC49mIHffuEj3vRy2M9ViTu2MxCs
4+y2QY/HpGuJ3UdkDOx49Gpy93Qe8930GwLdGfBNz1Rl6fPoMHS919VN2Mfw
tWPTTB5dvaMjxR8ysHyJwubgXB7/HS57emsdA/1u7R8ULOHRpjz+49V2DHRO
zVJ7SHi8M1P5kWQNA21P1uX1WPCY5SBdamLLQK1vlqHTCh7V3bkH9WwYKA5x
mV6zmsemkTKj4RUM3LLoeBS/hke7k9aWg5bCe7/JOmFiL+S3ztr0djkDZ2M7
RBFSHvfbbgwYsGBAuTa7RN+JR0vKagYlDGSMuyTddubxh631fsNLGWBLOpz8
XXhUNOgEjC1hICU1e0QDPOosK4rWmDPwP3us0Zw=
                 "]]}, 
               "Charting`Private`Tag$133962#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                Line[CompressedData["
1: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
LxacbJTAyLZpWI8MVU/TH/dHxxsUY+s0rHj+b5komQXi1yr86s3SsG+9BcLs
MNy/ks6Rpk3TMPUKpyPzFBa4PN37fhPOmQGVE5N0FtSIeaskGadh3P/IOwY5
eHz4rCIH7EvDTryZvvc4ngXZhy96xu1OwzLu5QnsSmTBkwUeFn36aVjXpaM2
pUksKKsx796Cs/X+Rz/yU/F4Ommt8VYvDdN/HKLJz8CZ8pJtqZOGBV5Rp63I
YsE/7QMh97XTsHvBXU2x2SyIwTZfWoWz2na9M5wbLOhvemH/a0caJpX7u+BC
HguwdXu1m7elYVbs3L/f8lkgmcc2tcI5yt3hgHchLl9c6b2WrWlYjcGiq0NF
LGiobKEfwXlu9cMvx++yIHFxbMl7rTRs17SH/rt7LLgS/dDhw3Y+FtApy7Uv
ZkGzwL7BrFV87G5JXXdbCQvyV+Q9jsL5y+WgjVZlLHCaeEIuxnm9v1roiwcs
uG8xa/ENZ7cDnS+MyllQkHvIQE+ej11Vj1iJPWLBiJoFloBzp7COl34lC6x/
eGnP4iw5OPywrIoF3ecTlwas5mOWT5MXbXvCgqveRg+mcY7MMHEoxHD79C3I
iFHgY9XkyVsbnrHgzFX5NZsV+Zjd2f/yqqtZoPhtY/onnD+d7Ct0qWXBgFXQ
tTtKfEzM6nlxYj0LLOrEd59ay8eu7HtUpvmSBb79O3k2ynxss05R+csGFlwa
Sb1mpsLHbNYkP5lvYkGeyV+/w6p8bGBF9LMrLbh+9Ir+eKzH9SNKrdVuY4H3
+6rmcDU+xh8/1eDbzgKSuNHPVnU+9qFmZ+fbHhb0bq82Lt/Cx86Vq3df6MXj
uZDeMKfJxxYWKfRKvGfBbqfMc+Zb+ZhaitCA0UcWwDWu63+4/v292r/d/cwC
9teP7fv1+NiseIBw1AR+XoXpoL4RH4td4CW6bgrXn4RrNN+Yj62dclry5DcL
glZVmEya8DGjD0aSEzO4/Lk7DQv28zHu/RWKbgvY8Cn7e72QNR9baV+yU28p
Gyw22GjZOPKxfItc3TfL2OCutGFB7FE+tod0Vd9fkg3hz2DyxTE+dlydBTel
2bB7SbWmjgsfuzVzyHL5ajacrvudOOrOx7Szfp4c2YB/38lgsNoH//z8+q9h
G9mQ2XDYv8GXj8kaO15YtokNDrnzw81+fGxq5DFDR5MNg0Ork5v9+Vj59ugM
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
1BWu
                 "]]}, "Charting`Private`Tag$133962#2"]}}, {}}, {
            GraphicsComplex[CompressedData["
1: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
h/pg5yXsvISdl7DzEnZe+i+fuQxp
             "], {{{
                EdgeForm[], 
                Directive[
                 AbsoluteThickness[1.6], 
                 GrayLevel[0.09], 
                 Opacity[0.06]], 
                GraphicsGroup[{
                  Polygon[CompressedData["
1:eJxNmAf8l9MXx+95SlP92iUVTS2l4dfUXv/SUCmRSsiIUISIElmRvbI32REK
ySrKlh0qKysr/kk4787n+3p+r1enc557z73nc+/z3M/9/L4NJ58wclqWUvrT
/yvl/hc3niu7VUnRVtqtqvwubnUspdpuu3pcpHzyqqm/jFt1+bJutdzKu1Vw
qy1f0a2G+su5NXfb3a2eW021MeY3Yanr1lhzMUcDYaLmHvLVNUdl4aqvNZC3
p/qp2VCeOnV9Hbu51fF4q+o0c2uk/lrCVKS5+rl1cuvstpfyqdnXrVh9rYWJ
mnvLU3NfrbOFWyutgbw26qdmW3nW2kFYqNNRnvH1HO/ubk08bql1NtC89fRc
rGf6e2ku5ugqTNTsJt9WuFsKVxetgbwGXqe+2z4eb3Nr79bDrbfmY0195KnZ
UzkdtEetNNefWgt9/dVHnaluE9wmsk9eZw+37h5vV53Bbgdo3xk3UGsA+xDl
UHN/edY6XJh4JyPkGT9U/WAfqfkGuA1TG2NGqY06h2o89XcIyxi3sYqpf5A8
9cfJU+cQzQuWn9w2uG3UWg9Q/Yny1ByvXOo18j1o6DZIWLpozU28rbHbaI8P
L4Flimof7HaUPPVPcJus3COFlbyj1U/NY+RZazOfu6nbJI/NYuw0t2PVD/Yj
VJO5/hUG8k5UHfpLWYyb5XayMFHzFHlqnqRccM3QGsibqX5qnirPN3KGsLCm
M+Wp2dxr7eV2nMfTNR9zzVY/dc6Sp/9seWrOFT5wnSNP/Xny1G/pc7dwO83j
XSzWNN/tfK0PXBfIg+tCeepfJE/9i+Wpf73bArdL3G6Qv1Q2V1gWyoOltddt
5Xaux2Ut6l/hdmUJLFfJg+VqebBcIw+Wa+XBcp38Ahm45gjLHOFYJExgqeh1
b3Z/v1t5i/o831ICy63yYLlNHiy3y4PlDnmw3CkPlrvk2Zu75dmbe+TBUsmi
/lK3Nh7v7XaZx4tLYHlAHiwPyoPlIXmwPCwPlkfkwfKoPFgekwfLEnmwtPea
7dzu9Xgf923dbtSe8U3xPT2pfQLX08IEluXCQf1n5Kn/ksY85bZMueQ9q35w
PScPriKLPXjB7UXtB+NXqB+877q94rbKraPnd3B73OOXVQdcb5aY41VhouZr
8s9pjqeFa7XWQN4a9VOz2Ofe1+15j9/SfKzpbXlqVrWo9YYwLdNc76ifOu+p
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
                   
                   "]], 
                  Polygon[CompressedData["
1:eJwtlHlMz3EYxz/PR0hCQqolRaWRFM3M8j+bv4z/8bfjT+U+yjEzzMyMZmZG
M3OGuXPN1ZyjmHO55mq5SfN6vH9/vPZ+P8/neD6f53vkz5w7ZU4MIUyGJOhH
kA71+N4WwkqohzRoJJfNWBY0BOVWwT5IhyZytege01qf04Aeg0xIJT6BHvc4
KPcDvkM1cTf0BlyHSuJcdA0cgAx4Ra4RvQA5UEDchn6G2X5+dDFshQAzkKVo
nWnMa3Sif6EWn4wuh50mv5HcMnSH6Sw+5x36NrFXRJfANpP3ml3pRVLU2hRy
o/Cl0BJ05ktwEcqCzrwa9kN/05wadLf3xtTzVNb2hLqgXDF+WFRvfc0K2GWq
5XOuotdMvfIaZ9DTid5ko7fgNuQlevoSfQHTgnr0CT5CFWEx+h4+mPwscm/Q
1wlfhLb6czD56f6OcLY+MJp4L/ET9KnXh6nEFYyNgTZ8JblynxvlW8m1oM2J
uUPQB/DQ5CeSe44+S9TyPb/BV6ghHo7+gt9Qksh1oH9gQ1CuL7XS4GjQGdvh
i2mt37k7Y8lQRryduAs+RvlSf4/wFuV9zxR8j6i7+pqR+JKou4wnHoDPgApT
zUz8QDgflKuCdX4H4iw4gj8MvYJy1fj1/k3gC+EK/rLJ/4Rz+LOmtT5nIX4z
dOAnwSH8Qfv/aEM7LMJsgc6gZ/4Y/8g013Mn8adM74p/k/P9OzDVKocF+E3e
Y/wEGMpdCmAcuZvEg/G5UX6s9xU/IqoXzeTuo/dMa/2MRYwVRo35HnfhTuJZ
+zuaw9igqL28Z01ex3QWP8M8/FrT3bxn+czNi/o3+T/oH5drjp8=
                   
                   "]]}]}, {}, {}, {}, {}}}], {}}}, {
          DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
           AxesOrigin -> {400., 0.}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, PlotRangeClipping -> True, 
           ImagePadding -> {{80, 15}, {30, 10}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {400., 0.}, 
           DisplayFunction :> Identity, 
           Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{
             "C-mol H C-mol \!\(\*SuperscriptBox[\(H\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(d\), \(-1\)]\)", None}, {None, None}}, FrameStyle -> 
           Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {30, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotLabel -> 
           "a) Host specific growth rate", 
           PlotRange -> {{400, 1000}, {-0.024814708901611596`, 
             0.013941333848836297`}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], {
          Rational[931, 2], -574}, 
         ImageScaled[{0.5, 0}], {931, 574}], 
        Inset[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
                Line[CompressedData["
1:eJxFl3c0F/73xxEaZBSiksw3imSv3Jus7NlSkijKqmRlv/dbvLP3SCWEkCiF
kpBKAyVlhKSMqGzV1++cfn3+ep3Hua/nfb2e957Xuecl7uJj68bGwsJiw8rC
8n/r4swbbhaWIIz1Pnqw1qwUuka1W6fYgjDmL1f1Z1MHOf7js60n2Jq5gvDi
X/6aNTMbs+G/eJeB0OCmHUHI/H99vMNdDaf/4r6KHW4+94Pw0l825+9xvkML
/sc+ZM6aAOMLGPeXh0aylYPYQv7lezCrb2H/PATj//Jgysqma4zQf/u9Bt/2
v9wf9i/f3i0bNumJh/9jz6/+t8R7wv/5XVCa8vexj/ind1HT2EO/9R+fK1cV
a+SLxIS/rLFC89no+UhM/Ms5WWYFlh2RmPyX7611c8jWjvqnD59WW8ebE/VP
/1l6w++apSi89pdZGtYcs/kdhWIenxduLrOw0+9Hn/9EYdAWEteUUSkoLUzJ
hLES0dLre6MCoRRMkj/RBVYQMcs9Q8CUtRScld+NFbET8eZJz5yE9yUQ1PbM
ajcnEfW4x9dyV5VAEWeloPdqIubFVHTSTpdAQ971QHYuIvKfbG27aFQC7/Uy
3qdzE7Fmxmu0TrwEuAOiLjfzErH3s87L4q5i8P5srSAuRETV0q0CRSbFMF3A
OEzdQUSvU62ZSlJFwGMYVi+6k4iPN2aJOawoApmPZyQqlYm4xYr9+JWBQtgn
cnCkX42Ie1Lzz92/XAh36AQ/bV0int5eXvVevBBCTjVGj5sQMYc9tzBfrgBW
bP9dY+dCxDshS7kK+/JBb3XpmhfHiVjZPhC3VjcfAoePHDJ1I2KzI3GYWyIf
JnJr59GdiEsz+6U9Jq5Bt2CopqI3EZPMQwYSaNeg4s/i7VXBy/6TH5fFNVwF
l/b5sto4Iqppa4ZuM78CWWWFLFoJRHx1KJS1TO0KdMUctK5MJCLl7AUbK7Er
YGly91tRChE7f79v7vmeB9q1gYqpWUSUNKbtUs/Ig3XXZ2+cLSTig4k8i+rJ
y9AQPJ1PeEjEhEPtyHonF+x9vhQ2NBCx1Fzx2+CVXBg+3lN8pHG5fitnTHqZ
ubDa4nFFQvPy+WIyjiLuuWAtllT35zkRj0yZ3bkqkgt9j1TfvO1e7s/mnswB
1hxY4vbjoP0k4uCaQU6J+kyIZXVfJTmzXL8fhTx2mZmwdcaRq26WiJuy1goV
B2XCnr49/D8XlvsxvTe4UzUTGOXrRZ1ZSVgbEsjPWpIBwvtuqWrykDDN1oOZ
ejUd1HK+Hx8hkLB5YHSp/mYq5J+RHr0gR8KyVh6nnfGpIGRw4CzvNhKKrpis
b/RLhZmR2gh1RRKufsjBaqOdCneU6VkkVRK6h79+t9iUArpNYm+37iZhSV8q
IWw4GfaMm5sePERCqTGlfba7kqCyPvzVmCMJF1I60holk0AqvuJAxBES1rPT
OuzXJAG7hvDJ684kjHw2XN72NhGaIgaJ0ydIqLLa5oqUXyKYCgTXxp0jYVB4
sJVeRQLY6FxXar1IwgeP37Pb74mHIcvkq/qxJHz/Myz2kWI8+LuQhe8xSfgk
X2do78Z4yKQfZymOJyF/+Zbk9Kk4GHkr9jImlYSNpHLy3stxEOGX6mNzlYQT
H3WcnrDHQVkJvbTrHglNHM/fcKtmwp6HgRI2tSR8qeprn5PAhDcdJ5Of1JGQ
5YvwPIsvE5YWDcNqHpKw7U5otI4cE0xM2Swzm0kYOCGgRs+Khf7h4PGj7cvx
3Clhl5gY4Nvquf3zVxLe6exNG6dFw4Jpjl34GAkXnSNOa5+MhqHzr4M3TJDw
52F1szLDaKh+qvnEeIqEPp3554RWRINTAMeJglkSXii7JNcczoCStuwcD3Yy
plBS2i9F0ME09NW6MVEy2nPf9iRlU0G1gF2bJEZG3oTKH6mRVNjSrnFsszgZ
110b6X7pSoUp2eyb5lJk1LzZvLVoGxVSO06Zl8gv628sTf+qocDwNnaKtwYZ
vYZPF3L2k4HYrT4/aU1GPdXcMpI+CS4Zyaz1tiVjUKbv7KFtJMisEBQftSNj
u3Bsk5kACSoZP00+7SNj49p5csgwEYa1K1LfHSYj96s20w0XiWCSoaDZ4E7G
iM3Hjgt/iAKew1IBCRFkVEjUuR8VGwkbW9ZH80WR0VqVcPJscCQQVFfkxBDJ
aBPjKBx0IhKQe6CJSiHjNWab1FO9SDhzP0co5CIZDY9l8YdPRkDH5k1Vrqlk
lO0eGOM9EAFpPfzTamVkzJgJH7bxDgMSAWNulJNxTkCVDc3DwPuMt7T4LTJu
jvEJt5cPAwOOpw7cVWTUtl/7/dtwKExuJ1UN3CPjihyn9WPHQsEkZCaA2UzG
N11PCzqcQmBu4/uFkV4y+kkIx5udC4ZB19UJTv1kXNxBlqxyCIa2Uo1tHR/J
aNbC4NXXDIar+omO9UPLzJbmWvsrCKxPWdxP+kpGf1er8V2MICi4Wx+qP0PG
zJ7iNKPCQDhw4CpL5loKrmT7YhH+2x/S7wqZ7+SloAglVOHKgD982EhPaeKj
oJFBptSXJn842uOlOLWegq0yBRXdTH844aJx2GgjBZ+E0V9YSfrDec/W6kkZ
ClJ83950sj4P8RGT3oZIwWmZzq5fD89Bx0eXmu7dy6z9+cGGonMgtKeTw3cP
BSNdGF8t489BGkdNZroRBYFnjZ/A8XOQyyC2fjOnoNWUUfgcxzkoTRSSST9I
Qadn5rycNmfhaYFuz8RZCvbdrwTzRV9QMjst6OG3fJ/bhVzyI76QOJ5mMXie
gqvKP1eKdvrCYeXZ2reBy/mrZ3WMbvrCxL3y7AdhFLTu+HwyzdUX+F7IOMcz
KBg2JfrBLd8H9k3zDarlUfDC4hjH5nAvqEmBTWVXKJjmwzzw/YgXiGl728lf
o+Db7ZWXJnS9YCTs6aMtBRTMN61ccWDRE4JWUa6uLKVgXj/R8GuQJ2RuWnR7
d5eCh3mWzD6HnoaPuz+NhLyiIG9qfYl0rgdkLu7vEGpf5l2cCqyRHnDgdmt9
WQcF98a/0F7h4gFtsmXJQ28p6JHSrx8s5QE1vBcMzHspGNxHead4wx0Se/hy
N40u15PvRxC9/iQYBenur2GnooOLfG8r2wlgVbmpb89JRbueu91iI25wf0xc
cWIlFZ/RqruSnruBsvNKDgkuKj7npaoNpbqBmPHrCjo/FU0fea3g3OkGcwLu
PAe3UHFLClNM56Qr3ChLeDyrQUUKt0ex01cXMDAxVGNoUbHFrbrge7sL9PbN
XN2sQ12eL0b9l2tdYB3vIdJuPSouzPmH2MS5QLDX1j3RBlTcb6j7ckrLBUzk
Sx5ssaFiwZXGso2XjsHQlaZ7hqeo+OO8l5GKlTOE6QRu6zpNRSHRsL1TOs4g
3C6XccqLii/H1xY3yTqDGVtMMNOXiqSwHNFqNmeocLbTeudPxdl9/Fr7fY5C
pGh/lSeRil1SwclJZk6wJWW+PCGTipL5Q7EWUoeh2+ckD1c2FY/82JXhy3EY
Ukw6T0XlUBHSHS9VDTsC30KZ5Jk8KrbaC6YXFToC6xH3JMsCKrozJboVdzrC
kMTbwNWVVDxHMtegGB2CwtJKCH9KxfhoA99T9ANwgiqROfOMinfs69dc9j4A
Es6X5rzaqJhy13902u4ApPN7lh9+RUWtDYXT81sOwEU/SUntt1T8KRvvc7Jq
P3hrx3NOD1DxhfWnazVf94Fqk8/zUwtUZOtRb3NydwDjKvEe1iUqqveVNsha
OcCh/Pax1F9UbOf7Hc+v7gARFA3uZhYa6jXoKwK7Azw3+mMquZKG+meJKpx5
9nCiObbl/XoaDtw6KyQ5aAdpLSWPzBVoyHch6HB2sC0U3znaPqhIQ5W78Z6/
XG3hQQH/YLASDcV2CIz5W9nCMO08W6EKDbmeJlffkbIF5b27dnNo03DnFdr8
uZc28OzJs7paIxpefiDuXbLdBn63jt5VdKbhD1f+hRsTVqC6dLCq6BgN77Px
C7M/s4JTCi0VMsdp+Lu9rZxYaAWdzKs3tpyg4ZNdn/PmXK2g2P5IFo/nsl6K
EF3ZYwmHetsiJgJoKMmm/tjijQXcnio3LmXScNhHdl33gBl8ldhqIB9Hw1dE
34PPG81gq30s5sfT8OjF6ecD+WZwseqUVnYSDQlEyD132gxcLkhui82g4cHU
uULZGVPg40ji8b5OQ4ukgpY6flPwFA7sVKhf9scyyJ3qbAIRBOl9eQ9oGJDG
lOYyNoEk9ddvhBpoqHhboSRdwQTq7Ld3/Wmk4d2iARrPojHwxvV3v2ql4a66
vHnDFGOoWL23//wbGtIkZk53dRjB3ILIaO04DTNkz/LeOW4I3GuaTyt/oyEv
WZURamEI4iJ+Y/mTNNSMeVzpqGEIphpt48wfNDS+97DoGJchZJyLmjw2T8OE
EwVCcZUGoDf2dZqDg47lInVqJ7gMgNhzj8VyMx3F/vSuUG7Vh4kVJaoDonTs
jWo8o3ZbHw7JZ7v7i9ExR855k22uPigFRLzMlqCjAEEw/42/PnzgM8z9JktH
ucdFBqul9UHdoA3i1Oi45gz4LZB3w0hRf1iHJR1fbA25qH8Qwe7Vqwp3azoO
eF8mqhoj1M02DC/Z0NHvaIOErhpCosE1S2kHOlJt8iej+RF293ps8XekY7F7
WI9DMiy/jx+1G9zpWNPvwZdL0gOLQI5fhyLp+Hs2y3N9uC5091WIdkTR8YRz
eOV6F11wN3bWsyDR0TS48qiqoS6QhO6FA5WOIeX+Fm+4dKGm0pdNKoaOe7Wl
Y1PTdUB26v3K8VQ63rgt5zVbqw3spyrWhZfRkUz/aKewSQviXx1VmSuno+eR
AbEZVi3YqrXW/swtOhoNPVn1fkQTdFa5Jx2voqOeiF/lXJUmnM0XFTa5T8f2
BgeuCHtN6B+gifK30JH7WeCdK4kacM/xqOyVPjqyD2qy+siqQ2639ZLORzrK
kniki/jUgXRQ/2XHAB13BfYtss6rgeV+6UDOYToeO5+jtbJVDfptR5s9xug4
Ld+k4eqlBuymASeV5ulY5tf70PSuKphrMvNr1zHwoPKG5M+uKqBUHRG8T4CB
s3GPzYOsVUBQ/azlN8Fl/rWqSlJXBXpVHGa2ijBwIY8q37BeBXx3bDIiiTHw
Pu9uT4lGZUiUuf7JdDsDg763XtwvpwwfBOqlugwZeDd14UEn+04Y7PD85GDM
QF9lxVHfn0rwNXFjfrsJA/+oKZZtGVJanh/+hBdmDFQ+UHiv/JESCAgqyDfZ
MPDasck7t4hKYCGYsaPyCAN31b8OF1qpBHWCAdqXzjNwinXNk1I1RXjcKbW4
NmD5fDt1+h4RRXiW9PpedCAD3b9k/5lbUlj+zynuol5gIIfTAvNxowLMCn6C
sEgG0mVZ3nx0UAAlITtDzxgGrn9/7AZ32Ha4LLTD2uQaAx+pybec+iQPlMpN
SXX5DDQepDYdfC4PnrarulULGCi9tmWl22150Iz9eFz8BgN/r5HjfkmWhzaO
xICFMgb2xzNtZwjysPRzLrv4PgM3VWVKBJ6Rg4H4T4MSdQxkq6dlSDnKQYvS
a9m0egaW7Q7JHjOQgwTPGxXkBgaGiZF1XgjLgfzQkSanFgb+8Hgo0/dQFg60
N4zzdTCwmPZCSU1EFvTO3FSmdjLQaXTr9hx2WZDizQz49YaBe588XS8zSYBv
pudZv75j4FYnUnd0MwEoDQTBR30M3H337vVHAQTwdBY4pPWRgVGrmrXFXQlg
+5sl5+YAA5+szUvItSaAqHa3bOYnBi4e5i1bI0+AyvKLuudHl/22rI/62CsD
6VZBkaNjDAwUeTV545kMRIy7NR2bYGCj+q2WDzUycCLalqvrGwO55H71PiuU
ATM5sLacYqDWY4MdCxkyoNS8LanxOwPnD+WUJF+XASE34W7tn8v1+N1WYl4l
AwO5U8cJswy01nYc6WiXgRa93oKsOQbuUTgncn1ABko+tI6vX2Ag0zWwMmpK
BgKFrwaw/GLgTp8IvX28BOC9tC/6HVs0Zsdn6fmYEcDckEr0YY/Gn6H7Uzod
CUBbqL7AwRmNq1LyNI09CcDmJuK5c3U0WoiknDGPIcBPrQ/mdN5oDB9Lova9
IEDX4DEerc3R6Om5OUtxvyzkanjFpapFI3eo7fgVbzlQ6iOm7HePxkCdFu74
hm0w7f/wNV9zNJ5ZpaTs7aAEXkPsfVUKF5FXUfnqmfMqEPvkz0Jo/EUUJsfN
6vBrgN3sGqOIyYvIzjPk77aoDU8XNrn47IvBufisiJ5hgM9Gu0rSbsfgzXvp
ucfT9aF4jdCqT+ti8VJei9HjBEOQuvpTRTQwFrMGn+U8MNoLSBmMvfQmFkM8
pOdldSxAyzTWXL0rFhe2WwxxWFqAMo/Wmg/vYrF8s+uHcWcLkEqOJRN6YvHD
vNLaPooFrMrXCqkbjEXjoSYZ43YLePWY6TE2GYsiPzJmVbwtwYVD18CEi4mc
r051lxZbgeOTYdYJbiYeWxrRXHhgBfYxcfUJPEysr7O6YNNpBUaCn7X7+Jl4
bV1Hs+RvK5CXjt/pL8zEX+oEie2y1vDdYGTLVWkmJooXRhAvWMPoqoQPewlM
5HlUOLuaYg1Dz3alf5Nl4pTgtbTkS9bwxj5BUGc7E3VUqz0brllDjase92tl
JrZzWlS7vrSGW7JfngSoMnE70Xps83trKB5LoIqqM1H/lJ3H+0/WkO33hc1D
i4mj1SpmpxetIUUz8QGPDhOTFLyrdTlt4NKSXlilLhONQrODBfhtgPHgi84h
PSbmbd2f+n2TDRBJifN/gIkOe3QF3srYwP8AZ6ewcA==
                 "]]}, 
               "Charting`Private`Tag$134079#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                Line[CompressedData["
1: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
                 "]]}, 
               "Charting`Private`Tag$134079#2"]}}, {}}, {
            GraphicsComplex[CompressedData["
1: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
h/pg5yXsvISdl7DzEnZe+i+fuQxp
             "], {{{
                EdgeForm[], 
                Directive[
                 AbsoluteThickness[1.6], 
                 GrayLevel[0.09], 
                 Opacity[0.06]], 
                GraphicsGroup[{
                  Polygon[CompressedData["
1:eJxNmAf8l9MXx+95SlP92iUVTS2l4dfUXv/SUCmRSsiIUISIElmRvbI32REK
ySrKlh0qKysr/kk4787n+3p+r1enc557z73nc+/z3M/9/L4NJ58wclqWUvrT
/yvl/hc3niu7VUnRVtqtqvwubnUspdpuu3pcpHzyqqm/jFt1+bJutdzKu1Vw
qy1f0a2G+su5NXfb3a2eW021MeY3Yanr1lhzMUcDYaLmHvLVNUdl4aqvNZC3
p/qp2VCeOnV9Hbu51fF4q+o0c2uk/lrCVKS5+rl1cuvstpfyqdnXrVh9rYWJ
mnvLU3NfrbOFWyutgbw26qdmW3nW2kFYqNNRnvH1HO/ubk08bql1NtC89fRc
rGf6e2ku5ugqTNTsJt9WuFsKVxetgbwGXqe+2z4eb3Nr79bDrbfmY0195KnZ
UzkdtEetNNefWgt9/dVHnaluE9wmsk9eZw+37h5vV53Bbgdo3xk3UGsA+xDl
UHN/edY6XJh4JyPkGT9U/WAfqfkGuA1TG2NGqY06h2o89XcIyxi3sYqpf5A8
9cfJU+cQzQuWn9w2uG3UWg9Q/Yny1ByvXOo18j1o6DZIWLpozU28rbHbaI8P
L4Flimof7HaUPPVPcJus3COFlbyj1U/NY+RZazOfu6nbJI/NYuw0t2PVD/Yj
VJO5/hUG8k5UHfpLWYyb5XayMFHzFHlqnqRccM3QGsibqX5qnirPN3KGsLCm
M+Wp2dxr7eV2nMfTNR9zzVY/dc6Sp/9seWrOFT5wnSNP/Xny1G/pc7dwO83j
XSzWNN/tfK0PXBfIg+tCeepfJE/9i+Wpf73bArdL3G6Qv1Q2V1gWyoOltddt
5Xaux2Ut6l/hdmUJLFfJg+VqebBcIw+Wa+XBcp38Ahm45gjLHOFYJExgqeh1
b3Z/v1t5i/o831ICy63yYLlNHiy3y4PlDnmw3CkPlrvk2Zu75dmbe+TBUsmi
/lK3Nh7v7XaZx4tLYHlAHiwPyoPlIXmwPCwPlkfkwfKoPFgekwfLEnmwtPea
7dzu9Xgf923dbtSe8U3xPT2pfQLX08IEluXCQf1n5Kn/ksY85bZMueQ9q35w
PScPriKLPXjB7UXtB+NXqB+877q94rbKraPnd3B73OOXVQdcb5aY41VhouZr
8s9pjqeFa7XWQN4a9VOz2Ofe1+15j9/SfKzpbXlqVrWo9YYwLdNc76ifOu+p
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
                   
                   "]], 
                  Polygon[CompressedData["
1:eJwtlHlMz3EYxz/PR0hCQqolRaWRFM3M8j+bv4z/8bfjT+U+yjEzzMyMZmZG
M3OGuXPN1ZyjmHO55mq5SfN6vH9/vPZ+P8/neD6f53vkz5w7ZU4MIUyGJOhH
kA71+N4WwkqohzRoJJfNWBY0BOVWwT5IhyZytege01qf04Aeg0xIJT6BHvc4
KPcDvkM1cTf0BlyHSuJcdA0cgAx4Ra4RvQA5UEDchn6G2X5+dDFshQAzkKVo
nWnMa3Sif6EWn4wuh50mv5HcMnSH6Sw+5x36NrFXRJfANpP3ml3pRVLU2hRy
o/Cl0BJ05ktwEcqCzrwa9kN/05wadLf3xtTzVNb2hLqgXDF+WFRvfc0K2GWq
5XOuotdMvfIaZ9DTid5ko7fgNuQlevoSfQHTgnr0CT5CFWEx+h4+mPwscm/Q
1wlfhLb6czD56f6OcLY+MJp4L/ET9KnXh6nEFYyNgTZ8JblynxvlW8m1oM2J
uUPQB/DQ5CeSe44+S9TyPb/BV6ghHo7+gt9Qksh1oH9gQ1CuL7XS4GjQGdvh
i2mt37k7Y8lQRryduAs+RvlSf4/wFuV9zxR8j6i7+pqR+JKou4wnHoDPgApT
zUz8QDgflKuCdX4H4iw4gj8MvYJy1fj1/k3gC+EK/rLJ/4Rz+LOmtT5nIX4z
dOAnwSH8Qfv/aEM7LMJsgc6gZ/4Y/8g013Mn8adM74p/k/P9OzDVKocF+E3e
Y/wEGMpdCmAcuZvEg/G5UX6s9xU/IqoXzeTuo/dMa/2MRYwVRo35HnfhTuJZ
+zuaw9igqL28Z01ex3QWP8M8/FrT3bxn+czNi/o3+T/oH5drjp8=
                   
                   "]]}]}, {}, {}, {}, {}}}], {}}}, {
          DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
           AxesOrigin -> {400., 0.}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, PlotRangeClipping -> True, 
           ImagePadding -> {{80, 15}, {30, 10}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {400., 0.}, 
           DisplayFunction :> Identity, 
           Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{
             "C-mol H \!\(\*SuperscriptBox[\(L\), \(-1\)]\)", None}, {
             None, None}}, FrameStyle -> Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {30, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotLabel -> 
           "b) Host biomass per unit host volume", 
           PlotRange -> {{400, 1000}, {0., 0.05917159763313621}}, 
           PlotRangeClipping -> True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], {
         1366.5, -574}, 
         ImageScaled[{0.5, 0}], {931, 573}]}, {
        Inset[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
                Line[CompressedData["
1:eJxNy30sFHAcx/HrpMwzy8MmysbOmqfknHNcKonClPMwtrIrLY1dU52HCJ3n
hyNn3TTOWsiWNqYsp4UW5rDFJJrbaUd3nAnr3Fyi2trv47t99t3rj7czl3cl
hUqhUCL/7t//tTVjSqFkB1P+36wmQLZBhXsWJKVKQzhDdpM6YgKvNG3pqu32
9SG2SgevfX1dbC/jKnzHczqF9w6OsJInvy3LIeYVH5JmXnhAvKiW+GRTc4kH
dGcjOROwUnx4uLUijzhd+WXhU/xD4nAnOwe2cz5x2gq/21kO6703+DxOATGX
zjhX3g3f7fI99tGykJhh4D+uuQ83N11qj5qG+8xSYiUBj4jztXRri2ZY5Wq3
K92BDdx3pTFcAfGHHG0bbRCmN29eV9OKiC+zXnjLqmDL42nuqhVY8NVvez26
mLhBbqWld8IJCS2URrMS4rH2QPlaBvztzJI6dxJ+2Ska0jFKiZ3E212iRth3
mDdxWw/vyjS9nsllxGn2WZ89+mGBvI8SdbScODLL8HdiIdyXdM3tuQKeP9Lv
Mnu+gviZrVd0WCtsURtXOUetJPZWCMTxt2Atf3DKcgROXzyo6PGoIhaO7unz
6uAYnXFowTo8pnfg8uKqiVWhQa8a3sAdxrZGS9ZCYpeWn6ccs+DgEqWwdgZm
XhRG+M3CPuZM4/m5ff0TYTFNDhu1MXPfK+HJoZrU1XWYaxgYEmZSQ5w0+v3A
minMqX7cLzKHQ21UAQor+IRr3Um+PbwZonZqcYU1RqL5cBq8OB709IcbPMMR
2bDcYekNtumUD9zttjya6Qt3rIpKHf1gyb1laioTFvvXD5iz4Nod9sPXgXDF
wDIrkQ0Liuq3907DfwCHfCPk
                 "]]}, 
               "Charting`Private`Tag$134196#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                Line[CompressedData["
1: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
aBtfv78vbZ14fL9RFh83+sjX61vWUrv7/Hk4zFnys5+DmWf78wzLSFj4jXYc
n+Dz4fe0UaKaRHWw7llCjotb1F/ueTUkNmZ8tM3kvw/OMapzd9SRuGrqlqSo
wcWrOzTd4NckJvWrW5w2cJHZt5PT/47//kXUmHyy5GLP7sa9pV0kdi8sz5K8
yIWI89wRhx4SyUYnSlrCuKjw1KN/7+XPq5laWxGLi9Ws2GK1z3x+eNmNeXFc
CD45sDRqmEQu02HL1SIuCtf2thybIvFqUZeS8i8uTm5Z4vNvmoS/+0Xumiku
5HeaL0j4S+K84T7XnYKxYB7PNqwXCMfx9rCsCqlYOCedSTSYH47/tjWfiNCL
hfiCsYOLl4RjboRVde7/90Gf0KfiteF4WjD0ymUpf580+E7vXB+OC272z64o
xyG2rG9pp0442qaNrHlr4vAk5rn9XL1w+O6x6DFDHKQIauV/RuHw4or+Xuce
h+KUuTe/7AjHWbnLEmJP4/DPUdBzhXM4biQpi5QHxSNm+znWHZdwqM782dtJ
j4fmup4sHAsHY1GGzuJr8bAXrvx48mQ4Kh9VBCTlxSPj3hX7ex7hkJm+VOfT
GY8dEnP0bALD4VTzMmWOWQIia2enLsWEI3PBJfNY+USYT6wRmrgWDvdNx97c
XZWIGRWnxV7ccJTLHWA2bU6E+8UCpSPx4YiveRJmsSsRO9a7mBmnhiO52jfs
JT0Rs5zKiH+54TCNYS6xHkvEWWfaypCn4RCyPk5otiZhz++FO0J/hOOcQsb8
oLoUOG8JFlz2i1+f9En37R0p8AoZrMgfDYdjtgpzxUgK2PNf6X+aCAc7S1Ng
SjIVlUsjVhn/5dcz9djQ70AqNhiIL55ZEIGtE0oPTo6kQjxQuslfNQIvCPcX
KyXT8XJKztXbMQI9f1fcOH34OmZCLBcN7YtA5+mJHwmnrkNb+ELR6f0RCBbt
5jT6XEe4eP0810MRMJ8r+GU//Trs1ELzHFwjUK3m++9J/nU02vaNGXpF4Gp3
3LzRuRloTb/NEKJHYIfYqt7fhRn4vGPbnYT7EYj69EF9hXombi+UFemXioS2
w1kTnYPZUMsc01UIiIRHrl1hsE8eQO+NjH4fiQlrjZ7FffkwtIq02dwSiey5
gblnJvOxUcxwYUdrJA4V3ks5M78AarGRNM3OSPwweDYyKF8AkZuGFyt6I8Hm
2E+aWBbg7Ysot6EfkXA0+b3cML0ArsJbzSwXRYFo8Qsl9xbiYO3AnBHRKGgx
PxYpuhTCIeLq42tiUZiusfrvoUchdsh8NvokGYXEsxurhaiFWK0es8FvWRSW
6PsZjfMK8cvsi2KmehTsbPx+m0jxMChyrWOnZhQ+0MKirRV56Hu1LfG7VhRa
eiSbj6zm4b3DNZkt2lGg1IWcS97OQ+lxY9HGjVE4Ps676Hueh3taX2v99aL4
e/XK9/IQHm4PXWMobI6C+aKuDeLhPKT6fhV0M4zC87sP9WszeYgz4DwR2xKF
W2VeQhsLeYieMb5ctDUKO8LV72WU88B+8nXLAWN+/r3BlnJ1PFConMlZkyiU
q0jVJr3n4X8eW35P
                 "]]}, 
               "Charting`Private`Tag$134196#2"]}}, {}}, {
            GraphicsComplex[CompressedData["
1:eJxd2H+sV3Udx/F78Zo/+KGiXRCtJiU4wpybNI2hly+a5h+JrmmzgUNwppi4
udx15QpuYCVaRmNttIX9sKQR5Y/CaSmMCHFJolkopYTo0MQrwg3hek3P+Txe
Z/vyB+y51+ec8+Sc9+fz/ny+p1y94LJrhnV0dFz0/l8f/Ltr/7ZdUzYs6rl9
77j3Zq8ctv7CCQdmz9jW8H2Xd/9z5p6Gh99+1qWzD+sLf+UPl22eP7bhLa/e
NOPW0xs+c+z3Hl3SanjZRaun/PCKhvf3Pvmbe25o+Ir7dk9cs7Dhh7cdcc+j
yxs+6egJ4zb/umH+S558+K0Fqzrij/lj/pg/5o/5Y/6YP+aP+WP+mP/Rn/vd
ps7r3l3HH/PH/DF/zB/zx/wxf8wf88f8Mf8jD+1Z/fHb3ok/5o/5Y/6YP+aP
+WP+mD/mj/lj/h9aPXnZBXfvjz/mj/lj/pg/5o/5Y/6YP+aP+WP+XVdd33vt
L96KP+aP+WP+mD/mj/lj/pg/5o/5Y/6Hj5/5yOibX48/5o/5Y/6YP+aP+WP+
mD/mj/lj/sOWPLn48hU744/5Y/6YP+aP+WP+mD/mj/lj/pj/0DN3rjzr9n/E
H/PH/DF/zB/zx/wxf8wf88f8Mf+XFox+rn/2Y/HH/DF/zB/zx/wxf8wf88f8
MX/M/+ybKp7OH/PH/DF/zB/zx/wxf8wf88f8Mf8Tnq2+R/wxf8wf88f8MX/M
H/PH/DF/zB/zH1nPh/hj/pg/5o/5Y/6YP+aP+WP+mD/mf2y9HsUf88f8MX/M
H/PH/DF/zB/zx/xx9j91P4g/zv6ncPY/hbP/KZz9T+Hsfwpn/1M4+5/C2f8U
zv6ncPY/hfmPqPtx/DF/zB/zx/wxf8wf88f8MX/MH/MfVe+H4o/5Y/6YP+aP
+WP+mD/mj/lj/jj1X+9Hm/ovnPovnPovnPovnPovnPovnPovnPovnPovnPov
nPovzP879XmgxR/zx/wxf8wf88f8MX/MH/PH/HHb+bHVdn5stZ0fW23nx1bb
+bHVdn5stZ0fW23nx1bb+bHVdn5stZ0fW23nx1b3qOt++uhT7+/vq/ncmfMY
lg+v+t176ddYflS1nh1KjuVHVP3mf8mx/PBqPX+72Q8Xjl/1vDeb80pheVd1
v1eb80BheWc1/sXkWD5Q7Ue2JMfyjurPxnPlWD6+ut+W1DOWj6mflxzLR9W+
zXpUWD66/v8mx/k+9ftKjuUj6/fd9PvC8mPq75Ucy4+rv3dyLD+yrpfMB/za
W8tnzbinL/WU81thuXqSY7l6kmO5epJjuXrK+aVw/Eo9xa+wXD3l/FZYrp7k
WK6e5FiunuRYrp7kWK6e5FiuntI/CsvVkxzn+5R6yvcpLFdP2Z8VlqsnOZar
JzmWq6f8flFY/fk9bGjhKeff+sSino2/Wj915/hhWb/83pR84ZxP7Zvckdzv
OfLvPtTROvrGwcx/v5fIv33tuRMnLzrQrE/l9wj5khO/PuLzy/c161M578u/
Vfn0N+tfOU/Lu6rn7U7uvCrvrO63I7nzoHxw8Qfjn0nuvCV/sOI1yZ1n5B+r
vt9fMr+dF+Tdle8LzfpS9uPyUdX72JXcfld+XPW+30huP5n3X33Pvcnt1+RL
e/514rSlA836WfZD8rvu+slZJ/UebJ5f9hvy72+fc8k7c4eS6+fyiz48+qHX
J3a2evau/XTX4039PD7ywicOrWl+f5WrH6xesPrA6gH7/tj3xr4v9j2x74d9
L+z7YN8j/uX9Y+8be7+5vrxP7P1h+4t7b9644r3HFvXccfyaWdtHda7H3dtW
rHz+zKF1+IQ7ti0evOBgePS0MfM/euVA+Ng3vzCz58a94ZNbp87f0PVGeOy9
K6ccefqu8OQTzu740arnwxevnTXpvIE/h/sWXHfF3Kfvn45fWbaz5+m5z4YH
rhn4+8+P+k/4YOfXhs/ZsTs89NQ3Vt61vT/c8ZHWIzds2hceNr/ruYsfPBDu
enhj/2krB8N9fRsWH/bZjryfvlWnLts7dVjen/4o7xzz1RGHejpTb/pjfF6c
ODRm+VDqQX+UD959zc5zVh1Mrj/m/zfjZ5u+9KeBph5Lf5Qf2P/S6tu27m3q
ufRHef8l0yac99c3mvou/VG+54G1/Yv270quP8qfPePLt9w5dXty/VH+4zf/
2D1p7BPJ9Uf5hs7L3h130n2pR/1Rfm7vA5tf2Lo1uf4oH//Ff4+bNH1HU++l
P8o/se/qma+M3Z1cf0w9b3q7dWlvf3L9MfXZ/ftZZ8zb18zH0h/l4+b19o6c
eSC5/ph6v/8zy16fOphcf5Qf882h514+vpl/+qN85C+vevmZo5r5uLCut9TX
8DoPL6zrs8nr+2f9U59XLj1nXsdv+3I/7H7Y/Mfq2f3Uc+5Xnp/7ledj6wdW
/5kPa6v5Fu6u3986zzM/cn0Zn/uX8dj6hM2nzK/rq/nerGf198zzzLdcX8bn
/mU8tv5h8zPz9eRqvWnWy7q+8jzzN9eX8bl/GY+tr9h8z/yv17tmPa7rPc+z
HuT6Mj73L+Ox9RtbP7Je1OtteFw9//I864vrjcfGY/0h48t65P7/rdf78Jh6
PcjzrFeuNx4bj/UfbH1z/7/V/SZ8Wr0+5XnWP9cbj43H+hu2Xrr/J+t+19Rn
vV7medZT1xuf+izjsf6Jrb/uf0vtE95U+0z3POuz643HxmP9GVvP3b9Vv+/w
a/X7zvOs9643HhuP9X+sP6Qf1PUUPlDXU56nf7je+MyPMj7zs+wvMr70G/ef
UM+X8GA9X/I8/cj1xme9KeOz3pX9S9a70r+yXtbrQbPfqdeDPE9/y/VlfO5f
xmP7o8zH0g/TH+v1rtlPnV+td3mefpnry/jcv4zH9l9ZD0p/zXpSr+fNfu0H
1Xqe5+m/ub6Mz/3LeGx/l/Wt9Ov077pfNfvBl6p+lefp57m+jM/9y/jMv7J/
xPq/+99Z99vwYXW/bXme/YHrjcfG53llf4rtJ9rOQ+37//T39vOT81J8ynkp
/aScl7Lel/NS+ls5L2HnJey8hJ2XsPMSdl5KvZXzEnZein85L2Hnpcz/cl7K
9eW8hJ2X/g8xfgXc
             "], {{{
                EdgeForm[], 
                Directive[
                 AbsoluteThickness[1.6], 
                 GrayLevel[0.09], 
                 Opacity[0.06]], 
                GraphicsGroup[{
                  Polygon[CompressedData["
1:eJxNmAf8l9MXx+95SlP92iUVTS2l4dfUXv/SUCmRSsiIUISIElmRvbI32REK
ySrKlh0qKysr/kk4787n+3p+r1enc557z73nc+/z3M/9/L4NJ58wclqWUvrT
/yvl/hc3niu7VUnRVtqtqvwubnUspdpuu3pcpHzyqqm/jFt1+bJutdzKu1Vw
qy1f0a2G+su5NXfb3a2eW021MeY3Yanr1lhzMUcDYaLmHvLVNUdl4aqvNZC3
p/qp2VCeOnV9Hbu51fF4q+o0c2uk/lrCVKS5+rl1cuvstpfyqdnXrVh9rYWJ
mnvLU3NfrbOFWyutgbw26qdmW3nW2kFYqNNRnvH1HO/ubk08bql1NtC89fRc
rGf6e2ku5ugqTNTsJt9WuFsKVxetgbwGXqe+2z4eb3Nr79bDrbfmY0195KnZ
UzkdtEetNNefWgt9/dVHnaluE9wmsk9eZw+37h5vV53Bbgdo3xk3UGsA+xDl
UHN/edY6XJh4JyPkGT9U/WAfqfkGuA1TG2NGqY06h2o89XcIyxi3sYqpf5A8
9cfJU+cQzQuWn9w2uG3UWg9Q/Yny1ByvXOo18j1o6DZIWLpozU28rbHbaI8P
L4Flimof7HaUPPVPcJus3COFlbyj1U/NY+RZazOfu6nbJI/NYuw0t2PVD/Yj
VJO5/hUG8k5UHfpLWYyb5XayMFHzFHlqnqRccM3QGsibqX5qnirPN3KGsLCm
M+Wp2dxr7eV2nMfTNR9zzVY/dc6Sp/9seWrOFT5wnSNP/Xny1G/pc7dwO83j
XSzWNN/tfK0PXBfIg+tCeepfJE/9i+Wpf73bArdL3G6Qv1Q2V1gWyoOltddt
5Xaux2Ut6l/hdmUJLFfJg+VqebBcIw+Wa+XBcp38Ahm45gjLHOFYJExgqeh1
b3Z/v1t5i/o831ICy63yYLlNHiy3y4PlDnmw3CkPlrvk2Zu75dmbe+TBUsmi
/lK3Nh7v7XaZx4tLYHlAHiwPyoPlIXmwPCwPlkfkwfKoPFgekwfLEnmwtPea
7dzu9Xgf923dbtSe8U3xPT2pfQLX08IEluXCQf1n5Kn/ksY85bZMueQ9q35w
PScPriKLPXjB7UXtB+NXqB+877q94rbKraPnd3B73OOXVQdcb5aY41VhouZr
8s9pjqeFa7XWQN4a9VOz2Ofe1+15j9/SfKzpbXlqVrWo9YYwLdNc76ifOu+p
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
                   
                   "]], 
                  Polygon[CompressedData["
1:eJwtlHlMz3EYxz/PR0hCQqolRaWRFM3M8j+bv4z/8bfjT+U+yjEzzMyMZmZG
M3OGuXPN1ZyjmHO55mq5SfN6vH9/vPZ+P8/neD6f53vkz5w7ZU4MIUyGJOhH
kA71+N4WwkqohzRoJJfNWBY0BOVWwT5IhyZytege01qf04Aeg0xIJT6BHvc4
KPcDvkM1cTf0BlyHSuJcdA0cgAx4Ra4RvQA5UEDchn6G2X5+dDFshQAzkKVo
nWnMa3Sif6EWn4wuh50mv5HcMnSH6Sw+5x36NrFXRJfANpP3ml3pRVLU2hRy
o/Cl0BJ05ktwEcqCzrwa9kN/05wadLf3xtTzVNb2hLqgXDF+WFRvfc0K2GWq
5XOuotdMvfIaZ9DTid5ko7fgNuQlevoSfQHTgnr0CT5CFWEx+h4+mPwscm/Q
1wlfhLb6czD56f6OcLY+MJp4L/ET9KnXh6nEFYyNgTZ8JblynxvlW8m1oM2J
uUPQB/DQ5CeSe44+S9TyPb/BV6ghHo7+gt9Qksh1oH9gQ1CuL7XS4GjQGdvh
i2mt37k7Y8lQRryduAs+RvlSf4/wFuV9zxR8j6i7+pqR+JKou4wnHoDPgApT
zUz8QDgflKuCdX4H4iw4gj8MvYJy1fj1/k3gC+EK/rLJ/4Rz+LOmtT5nIX4z
dOAnwSH8Qfv/aEM7LMJsgc6gZ/4Y/8g013Mn8adM74p/k/P9OzDVKocF+E3e
Y/wEGMpdCmAcuZvEg/G5UX6s9xU/IqoXzeTuo/dMa/2MRYwVRo35HnfhTuJZ
+zuaw9igqL28Z01ex3QWP8M8/FrT3bxn+czNi/o3+T/oH5drjp8=
                   
                   "]]}]}, {}, {}, {}, {}}}], {}}}, {
          DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
           AxesOrigin -> {400., 0.}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, PlotRangeClipping -> True, 
           ImagePadding -> {{80, 15}, {30, 10}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {400., 0.}, 
           DisplayFunction :> Identity, 
           Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{"g Fish", None}, {"Time (d)", None}}, FrameStyle -> 
           Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {30, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotLabel -> "c) Fish biomass", 
           PlotRange -> {{400, 1000}, {0., 316165.64890464046`}}, 
           PlotRangeClipping -> True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], {
          Rational[931, 2], -1148}, 
         ImageScaled[{0.5, 0}], {931, 573}], 
        Inset[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
                Line[CompressedData["
1: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
mfllVQV6V0NBuMfJ5vANCj0v1NcsOxMKj2HChaYMCl86Xzu9QRAKf2fnte2+
ReFBvdzLngGhYPzrgElNJoWKDw7GuJbS4FOpRG/NolAqu50re5OGW9kln95m
Uzg9uVhTJ5GGtlN+i+zuMO316I+CUzQs9NA4+TyXwrX1x7f8DaHB1abyudld
Cqt2z6wPP0FDpdSKQyYFFMqlm0X+3EpDMWsgRfMRhaWnfgY1qtLg6NmaVlxM
YUW17L5eeRq+7a274fKEQuOmO7IzxWmQsXuaFfOMQvXk0MfZjSKwn3v6wWg5
hXrh/9XJXBfBl8fLKz9WUxhVstOoykQEI7I+UsJ+pn1361riiBAixA9Jz/9J
4TeZCbJiu4Qw7+eOSQ8GKZy9r7YhZpMQzL6YTekfpnCGoX/SdyMh0LenqbiK
c3FEU++zibQQlLdmLzeazMVLz3p1PdMEYJjYt7dFk4tU8G6V9QN8SPFe2E4s
4qIm9DXFtfFByXzbcXkdLnqlST0c/sKHny2FnBV6XKwZCrCrecmHuwaii9zl
XJwxuSxA9RIfVpfM/ThvLRdLDwRyLv/HB7NOW2vn7VysOnPtxtYcHuQUBb/t
2MHF1yck1v28zoMF0VnbOC5cxFStiMRLPJBcqXzwmisXfdZ7L5KP5EEJp5Ea
OMDFWrOd1J4jPLCeziqMOsHFb8HqN0rVebBp1TX9l2FcNNxy40tQHBeaNp5J
XhfBxW1Rbi/eRXPBz42nXBDJxanCy3Z6oVyIF+0VuxHNRe+H3nIjBBdaPs59
E36Oi3I5rQ96XbjA8TnnuSmZi4WB1ak4nwuZGaKbVQVclPnP5PO6bArMHgWo
byrkYnFjASvoBgWVFQfPvHjARdEE4Y+HVykY+W0RlP+Ii03TTA9sP0eBlbXE
xvhnXLwjPeHc50AK6r+xOne/5+LwmafmmtYUKMxz1/3exsUHxeoZUd9JGLZO
dAju4KL+W410la8kNPm+Y83o4mLmug/NmdUk5JUavbDs5eLWvq+dHeUk7PKX
OpA6yEUVv9jj+TkkZLxKSDwsycNZe4bPX6VIsA58O7VDhYfzq0o3hmmQsDxV
0oQ7l4dH4+rX9c0jQfX9yj1z1Hh4SHTvzK7ZJPRqJdyyXcDDtNCiDdYKJJyr
OGKboc1Dh3n6OseGQ+CbjiTfYyUPWdefytW8DgGqesWvHnsetl+em6QTHAKn
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
MKa4sb9GTZn5MnZIz2f8P+WKT1g=
                 "]]}, 
               "Charting`Private`Tag$134313#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                Line[CompressedData["
1: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
                 "]]}, 
               "Charting`Private`Tag$134313#2"]}}, {}}, {
            GraphicsComplex[CompressedData["
1:eJxd2H+sV3Udx/FbtpVwLyY5omtJNoOrjALjForue+elInXthhs0oxuJMpDK
Blt00T/kYpdwCjWvkOmm17QNKYgGEfC1CwvRexWUK9criCA/7r1cECgaySq7
5fmcx/u7ff0D99zrcz6f5/ec9/m8z+deecc90+76cEVFxdT///PB/3vP7++t
3dlcd+z5+14cHDzb/vXRFxrr95d4zfQRbzacKfHQZRO/1XjR0uAfbp7WOX9k
iV/t/3F907gSTxi5sthyU4kfmfr72tYZJT7/05fXtf2gxDPWDIxZv6TEW/Z/
tK24qsSXDxld3bm2xPx/Puet8+va3g1/zB/zx/wxf8wf88f8MX/MH/PH/Mdd
cv1VjfUD4Y/5Y/6YP+aP+WP+mD/mj/lj/ph/1+ZfTavq7Q1/zB/zx/wxf8wf
88f8MX/MH/PH/BfNeu/+YsvR8Mf8MX/MH/PH/DF/zB/zx/wxf8x/0vDfNfY0
HAp/zB/zx/wxf8wf88f8MX/MH/PH/Jtnz9tW29oT/pg/5o/5Y/6YP+aP+WP+
mD/mj/m/snH0yNae18If88f8MX/MH/PH/DF/zB/zx/wx/7GVLw0cr90Z/pg/
5o/5Y/6YP+aP+WP+mD/mj/lf2Drk4ZZzz4U/5o/5Y/6YP+aP+WP+mD/mj/lj
/sXEBf6YP+aP+WP+mD/mj/lj/pg/5o/5fzo9j/DH/DF/zB/zx/wxf8wf88f8
MX/Mf2d6H8If88f8MX/MH/PH/DF/zB/zx/wx/8VpPwp/zB/zx/wxf8wf88f8
MX/MH/PH/MenfhD+mD/mj/lj/pg/5o/5Y/6YP+aP+S9M/Tj8MX/MH/PH/DF/
zB/zx/wxf8wf89+TvofCH/PH/DF/zB/zx/wxf8wf88f8Mf+r0/do+GP+mD/m
j/lj/pg/5o/5Y/6YP+b/QDoPhD/mj/lj/pg/5o/5Y/6YP+aP+eOy82Oh7PxY
KDs/FsrOj4Wy82Oh7PxYKDs/FsrOj4Wy82Oh7PxYKDs/FsrOj4URw+Y9XdzT
XPfl7H0+E/0Yyw9k/e5k5Fh+f7af9UeO5Vdl/eZ45Fjeme3n70SO5W9n6x2I
HMvHZPPtixzLj2bjOyPH8oGMt0aO5RXZf+uKcix/OY2PesDyrrRe5Fg+KvlG
juXd6fdGjuW70v2KHMs/m+535Fh+X3pekWP5G+l5R47lE1O9RI5P/n3Vd+vb
lkY9qT8sV09yLFdPcixXT3IsV09yLFdPcixXT3IsV09yLFdPcixXT3IsV09y
LFdPcb7PWa6e5FiunuRYrp7kWK6e5FiunuRYrp7kWK6e5Fj9+XvYf5dcOaWp
o7mucu5lj8yvORvvr783yTd8fOGO6s5Tkft7jnz6lr1nO+afiNzfS+T//v74
K5qqeiP39wj5U0NW3lqz/kjkzvvyBzOfg5E7T8v3Zet1R+68Kr8xm29P5M6D
8tey8dsjd96Sj9j2Af86cucZ+WXZfBvj/jovyBdlvi9G7ntcviC7H12R+96V
12T3e3/kviflh7LneThy32vym//0vU0Njcci9z0kf7bqQ8vain2R+96QV9z1
9LfPVZf2L/1cPrNYf0190+nC6huunVKxvVQ/8/66e9vg+tLfX+XqB6sXrD6w
esCeP/a8seeLPU/s+WHPC3s+2PPA7j92v7H7i91P7P5h3xe/Xbjr8cH25rrJ
c27dUPvN0+348LC1h4+fHQj+2eaLh7X+si/46llzb6j/0rHgJy5d0X18zeHg
vjtuubb+9JvB4zd+bGXb+K7gfwx5qGewf1fwsO9Ufa7p7T8Gr2r/V3f1NU+F
321VH/lPx9Idwe13L7+p6v09wSPuXDalZvIbwa8M7+zveO9g8I5ZLS/UHjgS
fPmfx6xumdQbvOiSjrk9q04E751z9/U1508FT/jL0Mqm287G/dMf5UuHT/5N
wzOn43nrj3G/tj22d/CrJyPXH+W7Z18YXNffF7n+KF9YOeMLjcuPRa4/yj+5
adPMqrHvRK4/yhdvqxnR9Nj+yPVH+c7KvgU9B7si1x/lnyp+7cn5dS9Frj/K
pz/fvKFhxabI9cd4vv8c9aOeXzwa909/lH9x5jcmNo7dHrn+KH98y57Fbc/s
jlx/lDcPfW7WuRXdkeuP8klb372o9ZaDkeuP8fw3rn69+oEjkeuP8teHXvfs
/KPHI9cf5eNmH/hJse5E5PqjfPnWe6dWPXkqcv1R3n/pZ6ob3z9TXm/tZXlw
d6rP4IfT/LH/qc/bH7ruzoo/LI35sPmw9x+rZ/OpZ7n1sfWx/QOrf773pvct
eEK6f7Ge98P1xsfvycdj+xP2Ppl/VHrfg3vS84z1vG+uNx4bH78n3/+w99P8
L6T9pvR7U33Fet5f1xsfvzcfj+2v2Ptu/n1pvwuuS/Ue69kPXG88Nh7bv7H9
w/xXpP02+MH0/sV69hfXG4+Nx/oDth+Z/9W03wevTftBrGe/cr3x2His/2D7
m/lnp34TfGPan2I9+5/rjcfGY/0N2y/N35X6XXBL2i9jPfup643HxmP9M9bP
91/z/+32zKe0PyafgvXsz643HhuP9WdsPzd/b7rfwRen+x3r2e9dbzw2Huv/
WH8wf02qp+BiqqdYT/9wvfHYeOz7Aus35j+U3pfgBel9ifX0I9cbj43Hvl/i
fuf9y/ytaT8I/kTaD2I9/c31xmPjse8jrB+a//Npvwu+J+13sZ5+6XrjsfHY
9xfWX82/JO3nwR1pP4/19F/XG4+Nj9+Tf99h/dr8b6V+Vfq9qV/Fevq5642P
35uPx74fsf5v/q+kflv6vanfxnq+D1xvfPzefHxZfw/2PYHLv/edj+TOT3F/
8vNS7Df5eSnuZ35eivrMz0vxfuTnpajn/LyEnZew81K8f/l5CTsvRX/Iz0vR
n/LzUvST/LwU/Tk/L2Hnpejn+XkJOy/9D+Fovl4=
             "], {{{
                EdgeForm[], 
                Directive[
                 AbsoluteThickness[1.6], 
                 GrayLevel[0.09], 
                 Opacity[0.06]], 
                GraphicsGroup[{
                  Polygon[CompressedData["
1:eJxNmAf8l9MXx+95SlP92iUVTS2l4dfUXv/SUCmRSsiIUISIElmRvbI32REK
ySrKlh0qKysr/kk4787n+3p+r1enc557z73nc+/z3M/9/L4NJ58wclqWUvrT
/yvl/hc3niu7VUnRVtqtqvwubnUspdpuu3pcpHzyqqm/jFt1+bJutdzKu1Vw
qy1f0a2G+su5NXfb3a2eW021MeY3Yanr1lhzMUcDYaLmHvLVNUdl4aqvNZC3
p/qp2VCeOnV9Hbu51fF4q+o0c2uk/lrCVKS5+rl1cuvstpfyqdnXrVh9rYWJ
mnvLU3NfrbOFWyutgbw26qdmW3nW2kFYqNNRnvH1HO/ubk08bql1NtC89fRc
rGf6e2ku5ugqTNTsJt9WuFsKVxetgbwGXqe+2z4eb3Nr79bDrbfmY0195KnZ
UzkdtEetNNefWgt9/dVHnaluE9wmsk9eZw+37h5vV53Bbgdo3xk3UGsA+xDl
UHN/edY6XJh4JyPkGT9U/WAfqfkGuA1TG2NGqY06h2o89XcIyxi3sYqpf5A8
9cfJU+cQzQuWn9w2uG3UWg9Q/Yny1ByvXOo18j1o6DZIWLpozU28rbHbaI8P
L4Flimof7HaUPPVPcJus3COFlbyj1U/NY+RZazOfu6nbJI/NYuw0t2PVD/Yj
VJO5/hUG8k5UHfpLWYyb5XayMFHzFHlqnqRccM3QGsibqX5qnirPN3KGsLCm
M+Wp2dxr7eV2nMfTNR9zzVY/dc6Sp/9seWrOFT5wnSNP/Xny1G/pc7dwO83j
XSzWNN/tfK0PXBfIg+tCeepfJE/9i+Wpf73bArdL3G6Qv1Q2V1gWyoOltddt
5Xaux2Ut6l/hdmUJLFfJg+VqebBcIw+Wa+XBcp38Ahm45gjLHOFYJExgqeh1
b3Z/v1t5i/o831ICy63yYLlNHiy3y4PlDnmw3CkPlrvk2Zu75dmbe+TBUsmi
/lK3Nh7v7XaZx4tLYHlAHiwPyoPlIXmwPCwPlkfkwfKoPFgekwfLEnmwtPea
7dzu9Xgf923dbtSe8U3xPT2pfQLX08IEluXCQf1n5Kn/ksY85bZMueQ9q35w
PScPriKLPXjB7UXtB+NXqB+877q94rbKraPnd3B73OOXVQdcb5aY41VhouZr
8s9pjqeFa7XWQN4a9VOz2Ofe1+15j9/SfKzpbXlqVrWo9YYwLdNc76ifOu+p
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
                   
                   "]], 
                  Polygon[CompressedData["
1:eJwtlHlMz3EYxz/PR0hCQqolRaWRFM3M8j+bv4z/8bfjT+U+yjEzzMyMZmZG
M3OGuXPN1ZyjmHO55mq5SfN6vH9/vPZ+P8/neD6f53vkz5w7ZU4MIUyGJOhH
kA71+N4WwkqohzRoJJfNWBY0BOVWwT5IhyZytege01qf04Aeg0xIJT6BHvc4
KPcDvkM1cTf0BlyHSuJcdA0cgAx4Ra4RvQA5UEDchn6G2X5+dDFshQAzkKVo
nWnMa3Sif6EWn4wuh50mv5HcMnSH6Sw+5x36NrFXRJfANpP3ml3pRVLU2hRy
o/Cl0BJ05ktwEcqCzrwa9kN/05wadLf3xtTzVNb2hLqgXDF+WFRvfc0K2GWq
5XOuotdMvfIaZ9DTid5ko7fgNuQlevoSfQHTgnr0CT5CFWEx+h4+mPwscm/Q
1wlfhLb6czD56f6OcLY+MJp4L/ET9KnXh6nEFYyNgTZ8JblynxvlW8m1oM2J
uUPQB/DQ5CeSe44+S9TyPb/BV6ghHo7+gt9Qksh1oH9gQ1CuL7XS4GjQGdvh
i2mt37k7Y8lQRryduAs+RvlSf4/wFuV9zxR8j6i7+pqR+JKou4wnHoDPgApT
zUz8QDgflKuCdX4H4iw4gj8MvYJy1fj1/k3gC+EK/rLJ/4Rz+LOmtT5nIX4z
dOAnwSH8Qfv/aEM7LMJsgc6gZ/4Y/8g013Mn8adM74p/k/P9OzDVKocF+E3e
Y/wEGMpdCmAcuZvEg/G5UX6s9xU/IqoXzeTuo/dMa/2MRYwVRo35HnfhTuJZ
+zuaw9igqL28Z01ex3QWP8M8/FrT3bxn+czNi/o3+T/oH5drjp8=
                   
                   "]]}]}, {}, {}, {}, {}}}], {}}}, {
          DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
           AxesOrigin -> {400., 0.}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {{}, {
              Rational[1, 10000000]}}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, PlotRangeClipping -> True, 
           ImagePadding -> {{80, 15}, {30, 10}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {400., 0.}, 
           DisplayFunction :> Identity, 
           Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{
             "mol \!\(\*SuperscriptBox[\(L\), \(-1\)]\)", None}, {
             "Time (d)", None}}, FrameStyle -> Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {{}, {
              Rational[1, 10000000]}}, GridLinesStyle -> Directive[
             GrayLevel[0]], ImagePadding -> {{80, 15}, {30, 10}}, ImageSize -> 
           Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotLabel -> "d) Interstitial N", 
           PlotRange -> {{400, 1000}, {0., 3.555805421426351*^-7}}, 
           PlotRangeClipping -> True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], {
         1366.5, -1148}, 
         ImageScaled[{0.5, 0}], {931, 573}]}}, {}}, ImageSize -> Full, {
     PlotRangePadding -> {6, 5}}, ImageSize -> Full], 
    Placed[
     Unevaluated[
      LineLegend[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        RGBColor[0.880722, 0.611041, 0.142051]}, {
       "Fish absent", "Fish present"}, LegendMarkerSize -> 60]], {1.2, 1.3}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.843080042086513*^9, {3.843080073150445*^9, 3.843080132761991*^9}, 
   3.8430801784018583`*^9, {3.84308032335419*^9, 3.84308033221115*^9}, 
   3.8445108491725893`*^9, 3.854026936281013*^9},
 CellLabel->
  "Out[880]=",ExpressionUUID->"8d81277b-ec71-4522-97c3-5ac3950d8453"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fig. S10: Effects of prey and N on recovery time", "Section",
 CellChangeTimes->{{3.843080411622943*^9, 3.84308042171192*^9}, {
  3.845645464631237*^9, 3.8456454675998383`*^9}, {3.846192129168573*^9, 
  3.846192129914961*^9}},ExpressionUUID->"3ccce9be-50a0-4245-af92-\
8f898becb10a"],

Cell[CellGroupData[{

Cell["Vary prey at lower Nenv", "Subsection",
 CellChangeTimes->{{3.843080488809244*^9, 
  3.843080497715886*^9}},ExpressionUUID->"3e2b8414-caac-45f5-b573-\
fd0bc6977df0"],

Cell[CellGroupData[{

Cell["Run the simulations", "Subsubsection",
 CellChangeTimes->{{3.836915599006907*^9, 
  3.836915602739443*^9}},ExpressionUUID->"4942f2d2-554d-4113-aed0-\
b7a82e8b65fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh", ",", 
    "LfunH"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.831830789369714*^9, 3.8318307905412607`*^9}, {
   3.835995882215592*^9, 3.83599588299831*^9}, {3.8363089619914494`*^9, 
   3.836308970966587*^9}, {3.836309185335792*^9, 3.8363091870313787`*^9}, 
   3.8363138138722897`*^9, {3.843080603027046*^9, 3.843080603798545*^9}},
 CellLabel->
  "In[881]:=",ExpressionUUID->"649a2ede-36a4-46bf-a135-258371365444"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"environment", ":", " ", 
    RowBox[{"flushing", " ", "rate", " ", "and", " ", "N", " ", "level"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jN", "=", 
     FractionBox[
      RowBox[{"jNm", " ", "\[CapitalNu]"}], 
      RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jNi0", " ", "=", " ", 
     FractionBox[
      RowBox[{"jNm", " ", "\[CapitalNu]"}], 
      RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "1000"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"light", " ", "function", " ", "parameters"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tStartStress", "=", "600"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tHigh", "=", "30"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LHigh", "=", "35"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XRecovRuns", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"jX", "=", 
              FractionBox[
               RowBox[{"jXm", " ", "X"}], 
               RowBox[{"X", "+", "KX"}]]}], ",", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{"jN", "=", 
                FractionBox[
                 RowBox[{"jNm", " ", "\[CapitalNu]"}], 
                 RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ","}], "*)"}], 
             RowBox[{"jHT", "=", "j0HT"}], ",", 
             RowBox[{"rNS", "=", 
              RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
             RowBox[{"VH0", "=", 
              RowBox[{"kv", "*", "H0"}]}], ",", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
               RowBox[{"jNi0", " ", "=", " ", 
                FractionBox[
                 RowBox[{"jNm", " ", "\[CapitalNu]"}], 
                 RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ","}], "*)"}], 
             "states", ",", " ", "rNH", ",", " ", "S", ",", "H", ",", "VH", 
             ",", "P", ",", "Ni", ",", "jNi", ",", "\[Rho]C", ",", " ", "jCP",
              ",", " ", "jHG", ",", "\[Rho]N", ",", "jeC", ",", "jCO2", ",", 
             "A", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
             ",", "cROS1", ",", "jSG", ",", "jST", ",", "jNw", ",", "F", ",", 
             "fh", ",", "LfunH", ",", "tsolve", ",", " ", 
             "addtimetostatevars", ",", "eqs", ",", "inis", ",", "sol", ",", 
             "t", ",", "HGrowthVals", ",", " ", "PosGrowth", ",", "HSULim", 
             ",", "HNLim", ",", "SSULim", ",", "SNLim", ",", "RecoveryTime"}], 
            RowBox[{"(*", 
             RowBox[{
             "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
              "intermediate", " ", "output", " ", "values", " ", "in", " ", 
              "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"light", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"LfunH", "=", 
             RowBox[{"L", "+", " ", 
              RowBox[{"LHigh", "*", 
               RowBox[{"HeavisideTheta", "[", 
                RowBox[{"t", "-", "tStartStress"}], "]"}]}], " ", "-", "  ", 
              RowBox[{"LHigh", "*", 
               RowBox[{"HeavisideTheta", "[", 
                RowBox[{"t", "-", 
                 RowBox[{"(", 
                  RowBox[{"tStartStress", "+", "tHigh"}], ")"}]}], 
                "]"}]}]}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
              RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
             FractionBox[
              RowBox[{"A", " ", "B", " ", 
               RowBox[{"(", 
                RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
              RowBox[{
               RowBox[{
                SuperscriptBox["A", "2"], " ", "B"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox["B", "2"]}], "+", 
               RowBox[{
                SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
               RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
               RowBox[{
                SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
            RowBox[{"(*", 
             RowBox[{"same", " ", "as", " ", 
              FractionBox["1", 
               RowBox[{
                FractionBox["1", "\[Rho]"], "+", 
                FractionBox["1", "A"], "+", 
                FractionBox["1", "B"], "-", 
                FractionBox["1", 
                 RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fh", "[", 
              RowBox[{
               RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
             RowBox[{"Piecewise", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", 
                  RowBox[{"y", "<", "0"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"kv", " ", "*", "y"}], ",", 
                  RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
              "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", "Calculations", " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"jHG", "=", 
             RowBox[{
              RowBox[{"F", "[", "jHGm", "]"}], "[", 
              RowBox[{
               RowBox[{"yC", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Rho]C", " ", 
                   RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                  
                  RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                  RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                SuperscriptBox["nNH", 
                 RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"jSG", "=", 
             RowBox[{
              RowBox[{"F", "[", "jSGm", "]"}], "[", 
              RowBox[{
               RowBox[{"jCP", " ", "yC"}], ",", 
               FractionBox[
                RowBox[{"rNS", "+", 
                 FractionBox[
                  RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"\[Rho]N", "=", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
                RowBox[{"nNH", " ", "jHG"}]}], " ", 
               RowBox[{"(*", 
                SuperscriptBox["yN", 
                 RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jeC", "=", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"jX", "-", 
                FractionBox["jHG", "yC"], "+", 
                FractionBox[
                 RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], 
            ";", " ", "\[IndentingNewLine]", 
            RowBox[{"jCO2", "=", 
             RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jL", "=", 
             RowBox[{"A", " ", "astar", " ", "LfunH"}]}], " ", ";", 
            "\[IndentingNewLine]", 
            RowBox[{"rCH", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"jHT", "+", 
                FractionBox[
                 RowBox[{"jHG", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
              "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"rCS", "=", 
             RowBox[{"\[Sigma]CS", 
              RowBox[{"(", 
               RowBox[{"j0ST", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
                 SuperscriptBox["yC", 
                  RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jeL", "=", 
             RowBox[{"jL", "-", 
              FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jNPQ", "=", 
             FractionBox["1", 
              RowBox[{
               FractionBox["1", "jeL"], "+", 
               FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
            RowBox[{"cROS1", "=", 
             FractionBox[
              RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jST", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"rNH", "=", 
             RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"A", "=", 
             RowBox[{"1.256307", "+", 
              RowBox[{"1.385969", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "6.479055"}], " ", 
                 RowBox[{"S", "/", "H"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jNw", "=", " ", 
             RowBox[{
              RowBox[{"\[Rho]N", "*", 
               RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
              RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"tsolve", "=", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Rho]C", ",", 
                 RowBox[{"jCP", "-", 
                  RowBox[{"jSG", " ", 
                   SuperscriptBox["yC", 
                    RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"jCP", ",", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"F", "[", "jCPm", "]"}], "[", 
                   RowBox[{
                    RowBox[{"jL", " ", "yCL"}], ",", 
                    RowBox[{"rCS", "+", 
                    FractionBox[
                    RowBox[{"H", " ", 
                    RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
                  RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"jNi", ",", " ", 
                 FractionBox[
                  RowBox[{"jNm", " ", "*", "Ni"}], 
                  RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
              "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"states", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"tsolve", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
                "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"addtimetostatevars", "=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"#", "\[Rule]", 
                  RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", 
               "states"}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
            RowBox[{"eqs", "=", 
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
                   "\[Equal]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Lambda]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
                "tsolve"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"S", 
                    RowBox[{"(", 
                    RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"H", 
                    RowBox[{"(", 
                    RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                  RowBox[{"fh", "[", 
                   RowBox[{"t", ",", "  ", 
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"d", "*", 
                    RowBox[{"(", " ", 
                    RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                    " ", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                    ")"}], "/", 
                    RowBox[{"(", " ", 
                    RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
                  
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"P", "*", 
                    RowBox[{"(", 
                    RowBox[{"rp", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                    ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
                "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"inis", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], 
                   "\[Equal]", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
                "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"sol", "=", 
             RowBox[{
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Join", "[", 
                  RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"#", "&"}], "/@", "states"}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
                RowBox[{"Method", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<EquationSimplification\>\"", "\[Rule]", 
                   "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"host", " ", "growth", " ", "values"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "all", " ", "host", " ", "growth", " ", "values", " ", "from", 
              " ", "the", " ", "end", " ", "of", " ", "stress"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"HGrowthVals", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Evaluate", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}], "/", 
                    RowBox[{"H", "[", "t", "]"}]}], "}"}], "/.", "sol"}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", 
                  RowBox[{"tStartStress", "+", "tHigh", "+", "1"}], ",", 
                  "tmax"}], "}"}]}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"PosGrowth", "=", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{"HGrowthVals", ",", 
                 RowBox[{"_", "?", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", ">", " ", "0"}], "&"}], ")"}]}]}], "]"}], 
               "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", " ", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{
              "position", " ", "of", " ", "these", " ", "values", " ", "at", 
               " ", "which", " ", "growth", " ", "is", " ", "positive"}], ",",
               " ", 
              RowBox[{
              "which", " ", "corresponds", " ", "to", " ", "the", " ", 
               "number", " ", "of", " ", "days", " ", "after", " ", 
               RowBox[{"stress", ":", " ", 
                RowBox[{"if", " ", "1", "st", " ", "position", " ", "is", " ", 
                 RowBox[{"pos", "."}]}]}]}], ",", " ", 
              RowBox[{"then", " ", "growth", " ", "was", " ", 
               RowBox[{"pos", ".", " ", "1"}], " ", "day", " ", "after", " ", 
               "stress", " ", "ended"}], ",", " ", 
              RowBox[{"etc", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"host", " ", "biomass", " ", "SU", " ", "limitation"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"HSULim", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Evaluate", "@", 
                 RowBox[{"Flatten", "@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"jHGm", ",", 
                    RowBox[{"yC", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Rho]C", " ", 
                    RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}]}], "]"}], 
                    "/", 
                    RowBox[{"Min", "[", 
                    RowBox[{"jHGm", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                    
                    RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                    RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                    RowBox[{"nNH", "^", 
                    RowBox[{"-", "1"}]}]}]}], "]"}]}], "]"}], "/.", 
                    "addtimetostatevars"}], "/.", "sol"}], "}"}]}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", 
                  RowBox[{"tStartStress", "+", "tHigh", "+", "1"}], ",", 
                  "tmax"}], "}"}]}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"HNLim", "=", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{"HSULim", ",", 
                 RowBox[{"_", "?", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", ">", " ", "0"}], "&"}], ")"}]}]}], "]"}], 
               "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", " ", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "symbiont", " ", "biomass", " ", "SU", " ", "limitation"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"SSULim", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Evaluate", "@", 
                 RowBox[{"Flatten", "@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"jSGm", ",", 
                    RowBox[{"jCP", " ", "yC"}]}], "]"}], "/", 
                    RowBox[{"Min", "[", 
                    RowBox[{"jSGm", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"rNS", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"H", " ", "\[Rho]N"}], ")"}], "/", "S"}]}], ")"}],
                     "/", "nNS"}]}], "]"}]}], "]"}], "/.", 
                    "addtimetostatevars"}], "/.", "sol"}], "}"}]}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", 
                  RowBox[{"tStartStress", "+", "tHigh", "+", "1"}], ",", 
                  "tmax"}], "}"}]}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"SNLim", "=", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{"HSULim", ",", 
                 RowBox[{"_", "?", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", ">", " ", "0"}], "&"}], ")"}]}]}], "]"}], 
               "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", " ", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"time", " ", "to", " ", "recovery"}], "=", " ", 
               RowBox[{
                RowBox[{
                "when", " ", "H", " ", "growth", " ", "is", " ", "pos", " ", 
                 "and", " ", "both", " ", "H", " ", "and", " ", "S", " ", 
                 "SU", " ", "are", " ", "back", " ", "at", " ", "N"}], "-", 
                "lim"}]}], ",", " ", 
              RowBox[{
              "so", " ", "take", " ", "the", " ", "maximum", " ", "of", " ", 
               "the", " ", "timepoints", " ", "at", " ", "which", " ", "each",
                " ", "of", " ", "these", " ", "occur"}]}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"RecoveryTime", "=", 
             RowBox[{"Max", "[", 
              RowBox[{"PosGrowth", ",", " ", "HNLim", ",", " ", "SNLim"}], 
              "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"{", "RecoveryTime", "}"}]}]}], 
          RowBox[{"(*", 
           RowBox[{"record", " ", "time", " ", "to", " ", "recovery"}], 
           "*)"}], "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"P0", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", 
             RowBox[{"kp", "*", 
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H0"}]}], "}"}]}], 
          "}"}]}], "]"}], ",", 
       RowBox[{"(*", 
        RowBox[{"repeat", " ", "with", " ", "no", " ", "fish", " ", 
         RowBox[{"(", 
          RowBox[{"P0", "=", "0"}], ")"}], " ", "and", " ", "with", " ", 
         "fish", " ", 
         RowBox[{"(", 
          RowBox[{"P0", "=", 
           RowBox[{"kp", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H0"}]}], ")"}]}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"X", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"0.1", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"0.2", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"0.3", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"0.4", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"0.5", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"0.6", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"0.7", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"0.8", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"0.9", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1.1", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1.2", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1.3", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1.4", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1.5", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1.6", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1.7", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1.8", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1.9", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", " ", 
           RowBox[{"2", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}]}], "}"}]}], "}"}]}], 
      RowBox[{"(*", 
       RowBox[{
       "repeat", " ", "for", " ", "different", " ", "levels", " ", "of", " ", 
        "prey"}], "*)"}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836576641311953*^9, 3.836576745811816*^9}, {3.8365767807913227`*^9, 
   3.836576796666417*^9}, {3.83690984159394*^9, 3.8369098642372837`*^9}, {
   3.8369099504464817`*^9, 3.836909992597097*^9}, {3.836910066716194*^9, 
   3.836910181553328*^9}, {3.8369102578063707`*^9, 3.836910390882205*^9}, {
   3.8369104221261673`*^9, 3.8369104445293837`*^9}, {3.836910588258913*^9, 
   3.836910603839734*^9}, {3.83691170755369*^9, 3.836911723135646*^9}, 
   3.836916782182846*^9, {3.836925532408095*^9, 3.836925559814872*^9}, {
   3.836925635646242*^9, 3.836925651385313*^9}, {3.8369257592761383`*^9, 
   3.836925766396386*^9}, {3.836925803476535*^9, 3.836925803607955*^9}, {
   3.8369258387388363`*^9, 3.8369258392626963`*^9}, {3.8369275914785147`*^9, 
   3.836927592143552*^9}, {3.8369281052958*^9, 3.8369281055248833`*^9}, {
   3.836928144604047*^9, 3.836928145018083*^9}, {3.836928338450294*^9, 
   3.836928353792881*^9}, {3.837018889743607*^9, 3.837018921301309*^9}, {
   3.837018963934004*^9, 3.8370190673895197`*^9}, {3.837019103683463*^9, 
   3.837019145242859*^9}, {3.837020901834002*^9, 3.837020937828723*^9}, {
   3.837021267184713*^9, 3.837021394810358*^9}, {3.837021431354228*^9, 
   3.837021443860634*^9}, {3.83711466872926*^9, 3.8371146861974154`*^9}, {
   3.837115401754525*^9, 3.837115415698612*^9}, {3.8388214226324797`*^9, 
   3.838821424206047*^9}, {3.83882173424254*^9, 3.838821744150221*^9}, {
   3.8388217999431467`*^9, 3.8388218049905167`*^9}, {3.838821876697213*^9, 
   3.838821944678234*^9}, {3.838821990151997*^9, 3.8388221046577787`*^9}, {
   3.8388225981406307`*^9, 3.83882260585165*^9}, {3.8388226408992567`*^9, 
   3.83882275045232*^9}, {3.838822783984479*^9, 3.838822983386633*^9}, {
   3.838823085540182*^9, 3.838823086678244*^9}, {3.838823122077846*^9, 
   3.838823218017744*^9}, {3.838823535593216*^9, 3.838823614857882*^9}, {
   3.83882448743895*^9, 3.8388245849821873`*^9}, 3.843928306234542*^9, {
   3.844465643483303*^9, 3.844465779493526*^9}, {3.8540258131668997`*^9, 
   3.854025831877922*^9}},
 CellLabel->
  "In[882]:=",ExpressionUUID->"6881eb2e-1530-41d2-bb90-67668da6d8c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get the results in the correct form to plot", "Subsubsection",
 CellChangeTimes->{{3.836915635258505*^9, 
  3.836915645073258*^9}},ExpressionUUID->"92df2e4c-9a1b-4e23-bd9d-\
5776df60c870"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"getting", " ", "the", " ", "lists", " ", "to", " ", "plot", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"should", " ", "have", " ", "2", " ", "lists", " ", "total"}], 
      ",", " ", 
      RowBox[{
      "one", " ", "for", " ", "the", " ", "outputs", " ", "without", " ", 
       "fish", " ", "and", " ", "one", " ", "for", " ", "the", " ", "outputs",
        " ", "with", " ", "fish"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "transpose", " ", "this", " ", "to", " ", "change", " ", "the", " ", 
    "nested", " ", "list", " ", "from", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"P1", " ", "at", " ", "X1"}], ",", " ", 
        RowBox[{"P2", " ", "at", " ", "X1"}]}], "}"}], ",", " ", 
      RowBox[{"{", "X2", "}"}], ",", " ", 
      RowBox[{"...", 
       RowBox[{"{", "Xn", "}"}]}]}], "}"}], " ", "to", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"X1", ",", " ", "X2", ",", " ", 
        RowBox[{"...", " ", "Xn", " ", "at", " ", "P1"}]}], "}"}], ",", " ", 
      RowBox[{"{", "P2", "}"}]}], "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"RecovSeparatePX", "=", 
     RowBox[{"Transpose", "[", "XRecovRuns", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"prey", " ", "no", " ", "fish"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XRecovNoPX", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"RecovSeparatePX", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", 
    RowBox[{"with", " ", "prey", " ", "with", " ", "fish"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XRecovPX", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"RecovSeparatePX", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"list", " ", "of", " ", "X", " ", "values"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XVals3", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"0.1", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"0.2", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"0.3", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"0.4", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"0.5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"0.6", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"0.7", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"0.8", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"0.9", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"1", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"1.1", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"1.2", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"1.3", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"1.4", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"1.5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"1.6", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"1.7", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"1.8", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"1.9", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", " ", 
       RowBox[{"2", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "use", " ", "Table", " ", "to", " ", "get", " ", "the", " ", "lists", " ",
      "in", " ", "the", " ", "form", " ", "to", " ", "plot"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XRecovLists", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "PlotList", "}"}], ",", 
         RowBox[{
          RowBox[{"PlotList", "=", 
           RowBox[{"Transpose", "@", 
            RowBox[{"{", 
             RowBox[{"XVals3", ",", "list"}], "}"}]}]}], ";", " ", 
          "PlotList"}]}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"list", ",", " ", 
         RowBox[{"{", 
          RowBox[{"XRecovNoPX", ",", "XRecovPX"}], "}"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8369129531410427`*^9, 3.836913008973792*^9}, {
   3.836913091490144*^9, 3.8369130922671757`*^9}, {3.83691317151867*^9, 
   3.8369131987122173`*^9}, {3.836913230715218*^9, 3.8369133075790777`*^9}, {
   3.836913339555049*^9, 3.8369134469392967`*^9}, 3.836913583655624*^9, {
   3.8369141531939917`*^9, 3.836914213205305*^9}, {3.8369152684721603`*^9, 
   3.836915406389106*^9}, {3.8369154677176*^9, 3.8369154915523663`*^9}, {
   3.83692587158399*^9, 3.836926014594379*^9}, {3.836926060460184*^9, 
   3.836926127689941*^9}, {3.8369276861419353`*^9, 3.836927748673893*^9}, {
   3.837019181125844*^9, 3.8370191975006647`*^9}, {3.8370194166090097`*^9, 
   3.837019449918641*^9}, {3.8370195834248877`*^9, 3.837019586852767*^9}, {
   3.837019747487743*^9, 3.8370197636144876`*^9}, {3.8370199516054173`*^9, 
   3.8370199708271227`*^9}, {3.8370207765894957`*^9, 3.837020793926944*^9}, {
   3.8370214814550123`*^9, 3.83702152538756*^9}, 3.8371154239745903`*^9, 
   3.838823007907159*^9, {3.8388232757083693`*^9, 3.838823278705464*^9}, {
   3.838823695892604*^9, 3.838823751261101*^9}, {3.838823826596196*^9, 
   3.838823828555112*^9}, {3.843080696633196*^9, 3.843080712049032*^9}, {
   3.844465801639783*^9, 3.844465802853074*^9}, {3.8444658521425037`*^9, 
   3.84446592677143*^9}, {3.844508640081437*^9, 3.844508713972446*^9}},
 CellLabel->
  "In[892]:=",ExpressionUUID->"9bdd187d-8a9b-4bc9-a986-2d240c80aaca"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Vary prey at higher Nenv", "Subsection",
 CellChangeTimes->{{3.8430805080119133`*^9, 
  3.8430805170707912`*^9}},ExpressionUUID->"ccf5c3dc-8fc0-4a06-a7f5-\
b4c02a12d57f"],

Cell[CellGroupData[{

Cell["Run the simulations", "Subsubsection",
 CellChangeTimes->{{3.836915599006907*^9, 
  3.836915602739443*^9}},ExpressionUUID->"4c5a1f72-4b64-48b8-849b-\
117b9f899c14"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "X", ",", " ", "P0", ",", "jX", ",", "\[CapitalNu]", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh", ",", 
    "LfunH"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.831830789369714*^9, 3.8318307905412607`*^9}, {
   3.835995882215592*^9, 3.83599588299831*^9}, {3.8363089619914494`*^9, 
   3.836308970966587*^9}, {3.836309185335792*^9, 3.8363091870313787`*^9}, 
   3.8363138138722897`*^9, {3.8396827607901173`*^9, 3.839682761220542*^9}},
 CellLabel->
  "In[897]:=",ExpressionUUID->"511d02d2-e92d-427d-b9ae-24e841c24512"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"environment", ":", " ", 
    RowBox[{"flushing", " ", "rate", " ", "and", " ", "N", " ", "level"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"2.5", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}], " ", "*)"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jN", "=", 
     FractionBox[
      RowBox[{"jNm", " ", "\[CapitalNu]"}], 
      RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jNi0", " ", "=", " ", 
     FractionBox[
      RowBox[{"jNm", " ", "\[CapitalNu]"}], 
      RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "1100"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"light", " ", "function", " ", "values"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tStartStress", "=", "600"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tHigh", "=", "30"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LHigh", "=", "35"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XRecovRuns2", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"jX", "=", 
              FractionBox[
               RowBox[{"jXm", " ", "X"}], 
               RowBox[{"X", "+", "KX"}]]}], ",", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{"jN", "=", 
                FractionBox[
                 RowBox[{"jNm", " ", "\[CapitalNu]"}], 
                 RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ","}], "*)"}], 
             RowBox[{"jHT", "=", "j0HT"}], ",", 
             RowBox[{"rNS", "=", 
              RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
             RowBox[{"VH0", "=", 
              RowBox[{"kv", "*", "H0"}]}], ",", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
               RowBox[{"jNi0", " ", "=", " ", 
                FractionBox[
                 RowBox[{"jNm", " ", "\[CapitalNu]"}], 
                 RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ","}], "*)"}], 
             "states", ",", " ", "rNH", ",", " ", "S", ",", "H", ",", "VH", 
             ",", "P", ",", "Ni", ",", "jNi", ",", "\[Rho]C", ",", " ", "jCP",
              ",", " ", "jHG", ",", "\[Rho]N", ",", "jeC", ",", "jCO2", ",", 
             "A", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
             ",", "cROS1", ",", "jSG", ",", "jST", ",", "jNw", ",", "F", ",", 
             "fh", ",", "LfunH", ",", "tsolve", ",", " ", 
             "addtimetostatevars", ",", "eqs", ",", "inis", ",", "sol", ",", 
             "t", ",", "HGrowthVals", ",", " ", "PosGrowth", ",", "HSULim", 
             ",", "HNLim", ",", "SSULim", ",", "SNLim", ",", "RecoveryTime"}], 
            RowBox[{"(*", 
             RowBox[{
             "make", " ", "sure", " ", "to", " ", "put", " ", "any", " ", 
              "intermediate", " ", "output", " ", "values", " ", "in", " ", 
              "Module"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"light", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"LfunH", "=", 
             RowBox[{"L", "+", " ", 
              RowBox[{"LHigh", "*", 
               RowBox[{"HeavisideTheta", "[", 
                RowBox[{"t", "-", "tStartStress"}], "]"}]}], " ", "-", "  ", 
              RowBox[{"LHigh", "*", 
               RowBox[{"HeavisideTheta", "[", 
                RowBox[{"t", "-", 
                 RowBox[{"(", 
                  RowBox[{"tStartStress", "+", "tHigh"}], ")"}]}], 
                "]"}]}]}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
              RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
             FractionBox[
              RowBox[{"A", " ", "B", " ", 
               RowBox[{"(", 
                RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
              RowBox[{
               RowBox[{
                SuperscriptBox["A", "2"], " ", "B"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox["B", "2"]}], "+", 
               RowBox[{
                SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
               RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
               RowBox[{
                SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
            RowBox[{"(*", 
             RowBox[{"same", " ", "as", " ", 
              FractionBox["1", 
               RowBox[{
                FractionBox["1", "\[Rho]"], "+", 
                FractionBox["1", "A"], "+", 
                FractionBox["1", "B"], "-", 
                FractionBox["1", 
                 RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fh", "[", 
              RowBox[{
               RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
             RowBox[{"Piecewise", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", 
                  RowBox[{"y", "<", "0"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"kv", " ", "*", "y"}], ",", 
                  RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
              "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", "Calculations", " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"jHG", "=", 
             RowBox[{
              RowBox[{"F", "[", "jHGm", "]"}], "[", 
              RowBox[{
               RowBox[{"yC", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Rho]C", " ", 
                   RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                  
                  RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                  RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                SuperscriptBox["nNH", 
                 RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"jSG", "=", 
             RowBox[{
              RowBox[{"F", "[", "jSGm", "]"}], "[", 
              RowBox[{
               RowBox[{"jCP", " ", "yC"}], ",", 
               FractionBox[
                RowBox[{"rNS", "+", 
                 FractionBox[
                  RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"\[Rho]N", "=", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
                RowBox[{"nNH", " ", "jHG"}]}], " ", 
               RowBox[{"(*", 
                SuperscriptBox["yN", 
                 RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jeC", "=", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"jX", "-", 
                FractionBox["jHG", "yC"], "+", 
                FractionBox[
                 RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], 
            ";", " ", "\[IndentingNewLine]", 
            RowBox[{"jCO2", "=", 
             RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jL", "=", 
             RowBox[{"A", " ", "astar", " ", "LfunH"}]}], " ", ";", 
            "\[IndentingNewLine]", 
            RowBox[{"rCH", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"jHT", "+", 
                FractionBox[
                 RowBox[{"jHG", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
              "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"rCS", "=", 
             RowBox[{"\[Sigma]CS", 
              RowBox[{"(", 
               RowBox[{"j0ST", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
                 SuperscriptBox["yC", 
                  RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jeL", "=", 
             RowBox[{"jL", "-", 
              FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jNPQ", "=", 
             FractionBox["1", 
              RowBox[{
               FractionBox["1", "jeL"], "+", 
               FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
            RowBox[{"cROS1", "=", 
             FractionBox[
              RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jST", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"rNH", "=", 
             RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"A", "=", 
             RowBox[{"1.256307", "+", 
              RowBox[{"1.385969", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "6.479055"}], " ", 
                 RowBox[{"S", "/", "H"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jNw", "=", " ", 
             RowBox[{
              RowBox[{"\[Rho]N", "*", 
               RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
              RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"tsolve", "=", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Rho]C", ",", 
                 RowBox[{"jCP", "-", 
                  RowBox[{"jSG", " ", 
                   SuperscriptBox["yC", 
                    RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"jCP", ",", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"F", "[", "jCPm", "]"}], "[", 
                   RowBox[{
                    RowBox[{"jL", " ", "yCL"}], ",", 
                    RowBox[{"rCS", "+", 
                    FractionBox[
                    RowBox[{"H", " ", 
                    RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
                  RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"jNi", ",", " ", 
                 FractionBox[
                  RowBox[{"jNm", " ", "*", "Ni"}], 
                  RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
              "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"states", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"tsolve", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
                "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"addtimetostatevars", "=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"#", "\[Rule]", 
                  RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", 
               "states"}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
            RowBox[{"eqs", "=", 
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
                   "\[Equal]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Lambda]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
                "tsolve"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"S", 
                    RowBox[{"(", 
                    RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"H", 
                    RowBox[{"(", 
                    RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                  RowBox[{"fh", "[", 
                   RowBox[{"t", ",", "  ", 
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"d", "*", 
                    RowBox[{"(", " ", 
                    RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                    " ", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                    ")"}], "/", 
                    RowBox[{"(", " ", 
                    RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
                  
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"P", "*", 
                    RowBox[{"(", 
                    RowBox[{"rp", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                    ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
                "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"inis", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], 
                   "\[Equal]", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
                "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"sol", "=", 
             RowBox[{
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Join", "[", 
                  RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"#", "&"}], "/@", "states"}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
                RowBox[{"Method", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<EquationSimplification\>\"", "\[Rule]", 
                   "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"host", " ", "growth", " ", "values"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "all", " ", "host", " ", "growth", " ", "values", " ", "from", 
              " ", "the", " ", "end", " ", "of", " ", "stress"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"HGrowthVals", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Evaluate", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}], "/", 
                    RowBox[{"H", "[", "t", "]"}]}], "}"}], "/.", "sol"}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", 
                  RowBox[{"tStartStress", "+", "tHigh", "+", "1"}], ",", 
                  "tmax"}], "}"}]}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"PosGrowth", "=", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{"HGrowthVals", ",", 
                 RowBox[{"_", "?", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", ">", " ", "0"}], "&"}], ")"}]}]}], "]"}], 
               "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", " ", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{
              "position", " ", "of", " ", "these", " ", "values", " ", "at", 
               " ", "which", " ", "growth", " ", "is", " ", "positive"}], ",",
               " ", 
              RowBox[{
              "which", " ", "corresponds", " ", "to", " ", "the", " ", 
               "number", " ", "of", " ", "days", " ", "after", " ", 
               RowBox[{"stress", ":", " ", 
                RowBox[{"if", " ", "1", "st", " ", "position", " ", "is", " ", 
                 RowBox[{"pos", "."}]}]}]}], ",", " ", 
              RowBox[{"then", " ", "growth", " ", "was", " ", 
               RowBox[{"pos", ".", " ", "1"}], " ", "day", " ", "after", " ", 
               "stress", " ", "ended"}], ",", " ", 
              RowBox[{"etc", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"host", " ", "biomass", " ", "SU", " ", "limitation"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"HSULim", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Evaluate", "@", 
                 RowBox[{"Flatten", "@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"jHGm", ",", 
                    RowBox[{"yC", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Rho]C", " ", 
                    RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}]}], "]"}], 
                    "/", 
                    RowBox[{"Min", "[", 
                    RowBox[{"jHGm", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                    
                    RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                    RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                    RowBox[{"nNH", "^", 
                    RowBox[{"-", "1"}]}]}]}], "]"}]}], "]"}], "/.", 
                    "addtimetostatevars"}], "/.", "sol"}], "}"}]}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", 
                  RowBox[{"tStartStress", "+", "tHigh", "+", "1"}], ",", 
                  "tmax"}], "}"}]}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"HNLim", "=", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{"HSULim", ",", 
                 RowBox[{"_", "?", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", ">", " ", "0"}], "&"}], ")"}]}]}], "]"}], 
               "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", " ", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "symbiont", " ", "biomass", " ", "SU", " ", "limitation"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"SSULim", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Evaluate", "@", 
                 RowBox[{"Flatten", "@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"jSGm", ",", 
                    RowBox[{"jCP", " ", "yC"}]}], "]"}], "/", 
                    RowBox[{"Min", "[", 
                    RowBox[{"jSGm", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"rNS", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"H", " ", "\[Rho]N"}], ")"}], "/", "S"}]}], ")"}],
                     "/", "nNS"}]}], "]"}]}], "]"}], "/.", 
                    "addtimetostatevars"}], "/.", "sol"}], "}"}]}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", 
                  RowBox[{"tStartStress", "+", "tHigh", "+", "1"}], ",", 
                  "tmax"}], "}"}]}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"SNLim", "=", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{"HSULim", ",", 
                 RowBox[{"_", "?", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", ">", " ", "0"}], "&"}], ")"}]}]}], "]"}], 
               "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", " ", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"time", " ", "to", " ", "recovery"}], "=", " ", 
               RowBox[{
                RowBox[{
                "when", " ", "H", " ", "growth", " ", "is", " ", "pos", " ", 
                 "and", " ", "both", " ", "H", " ", "and", " ", "S", " ", 
                 "SU", " ", "are", " ", "back", " ", "at", " ", "N"}], "-", 
                "lim"}]}], ",", " ", 
              RowBox[{
              "so", " ", "take", " ", "the", " ", "maximum", " ", "of", " ", 
               "the", " ", "timepoints", " ", "at", " ", "which", " ", "each",
                " ", "of", " ", "these", " ", "occur"}]}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"RecoveryTime", "=", 
             RowBox[{"Max", "[", 
              RowBox[{"PosGrowth", ",", " ", "HNLim", ",", " ", "SNLim"}], 
              "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"{", "RecoveryTime", "}"}]}]}], 
          RowBox[{"(*", 
           RowBox[{"record", " ", "time", " ", "to", " ", "recovery"}], 
           "*)"}], "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"P0", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", 
             RowBox[{"kp", "*", 
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H0"}]}], "}"}]}], 
          "}"}]}], "]"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "repeat", " ", "the", " ", "above", " ", "with", " ", "no", " ", 
         "fish", " ", 
         RowBox[{"(", 
          RowBox[{"P0", "=", "0"}], ")"}], " ", "and", " ", "with", " ", 
         "fish", " ", 
         RowBox[{"(", 
          RowBox[{"P0", "=", 
           RowBox[{"kp", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H0"}]}], ")"}]}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"X", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"0.1", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"0.2", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"0.3", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"0.4", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"0.5", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"0.6", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"0.7", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"0.8", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"0.9", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1.1", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1.2", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1.3", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1.4", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1.5", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1.6", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1.7", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1.8", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", 
           RowBox[{"1.9", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}], ",", " ", 
           RowBox[{"2", "*", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}]}], "}"}]}], "}"}]}], 
      RowBox[{"(*", 
       RowBox[{
       "repeat", " ", "for", " ", "different", " ", "levels", " ", "of", " ", 
        "prey"}], "*)"}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8301768267560577`*^9, 3.830176973614676*^9}, {
   3.8301772588821583`*^9, 3.830177263759307*^9}, {3.830177425256048*^9, 
   3.830177434004829*^9}, {3.830177511224166*^9, 3.830177514056499*^9}, {
   3.830177564941614*^9, 3.830177567891292*^9}, {3.83017765436383*^9, 
   3.830177657500121*^9}, {3.8301908756589403`*^9, 3.830190879661784*^9}, {
   3.830190989908423*^9, 3.830191002871413*^9}, {3.830191633589562*^9, 
   3.830191645170515*^9}, {3.830192680473472*^9, 3.8301926835274887`*^9}, {
   3.830192912973363*^9, 3.830192916769682*^9}, {3.8301940959669847`*^9, 
   3.830194099318989*^9}, {3.8302002380166492`*^9, 3.8302002483607903`*^9}, {
   3.8302012028665333`*^9, 3.830201205426165*^9}, {3.8302076588471212`*^9, 
   3.8302076612322083`*^9}, {3.830987433134797*^9, 3.830987484249571*^9}, {
   3.830987592336878*^9, 3.8309876119258337`*^9}, {3.8309876552861843`*^9, 
   3.8309877174670877`*^9}, {3.83183074726055*^9, 3.831830763826393*^9}, {
   3.83183079430809*^9, 3.831831020927183*^9}, {3.8319252831071863`*^9, 
   3.831925300141088*^9}, {3.835994867431252*^9, 3.835994984695046*^9}, 
   3.835995016112323*^9, {3.835995068171874*^9, 3.83599510465788*^9}, {
   3.8359954498076553`*^9, 3.835995457413457*^9}, {3.835995515759007*^9, 
   3.835995591783931*^9}, {3.8359956511856813`*^9, 3.8359956773242073`*^9}, {
   3.8359957139959583`*^9, 3.835995778026327*^9}, 3.835995875073913*^9, {
   3.835997488430554*^9, 3.835997541837277*^9}, {3.835997613466648*^9, 
   3.835997631082292*^9}, {3.8363072816043243`*^9, 3.836307342345004*^9}, {
   3.8363074093268967`*^9, 3.8363074494232903`*^9}, {3.836308385594499*^9, 
   3.83630838662449*^9}, {3.836308435552044*^9, 3.836308729440123*^9}, {
   3.836308813395944*^9, 3.83630890021481*^9}, 3.836308979783184*^9, {
   3.8363091487628098`*^9, 3.836309162097884*^9}, 3.836309205364352*^9, {
   3.836309542512816*^9, 3.83630955049008*^9}, {3.8363096027934237`*^9, 
   3.836309625314981*^9}, {3.836309662837469*^9, 3.8363099146886683`*^9}, {
   3.8363099717560673`*^9, 3.83631002335854*^9}, {3.836313718041884*^9, 
   3.836313749731505*^9}, 3.836321317360592*^9, {3.836321786959525*^9, 
   3.836321798394082*^9}, {3.836573101656665*^9, 3.836573124736101*^9}, 
   3.836573169560389*^9, {3.836573203570115*^9, 3.8365732243713627`*^9}, {
   3.836576641311953*^9, 3.836576745811816*^9}, {3.8365767807913227`*^9, 
   3.836576796666417*^9}, {3.83690984159394*^9, 3.8369098642372837`*^9}, {
   3.8369099504464817`*^9, 3.836909992597097*^9}, {3.836910066716194*^9, 
   3.836910181553328*^9}, {3.8369102578063707`*^9, 3.836910390882205*^9}, {
   3.8369104221261673`*^9, 3.8369104445293837`*^9}, {3.836910588258913*^9, 
   3.836910603839734*^9}, {3.83691170755369*^9, 3.836911723135646*^9}, 
   3.836916782182846*^9, {3.836925532408095*^9, 3.836925559814872*^9}, {
   3.836925635646242*^9, 3.836925651385313*^9}, {3.8369257592761383`*^9, 
   3.836925766396386*^9}, {3.836925803476535*^9, 3.836925803607955*^9}, {
   3.8369258387388363`*^9, 3.8369258392626963`*^9}, {3.8369275914785147`*^9, 
   3.836927592143552*^9}, {3.8369281052958*^9, 3.8369281055248833`*^9}, {
   3.836928144604047*^9, 3.836928145018083*^9}, {3.836928338450294*^9, 
   3.836928353792881*^9}, {3.837018889743607*^9, 3.837018921301309*^9}, {
   3.837018963934004*^9, 3.8370190673895197`*^9}, {3.837019103683463*^9, 
   3.837019145242859*^9}, {3.837020901834002*^9, 3.837020937828723*^9}, {
   3.837021267184713*^9, 3.837021394810358*^9}, {3.837021431354228*^9, 
   3.837021443860634*^9}, {3.83711466872926*^9, 3.8371146861974154`*^9}, {
   3.837115401754525*^9, 3.837115415698612*^9}, {3.8388214226324797`*^9, 
   3.838821424206047*^9}, {3.83882173424254*^9, 3.838821744150221*^9}, {
   3.8388217999431467`*^9, 3.8388218049905167`*^9}, {3.838821876697213*^9, 
   3.838821944678234*^9}, {3.838821990151997*^9, 3.8388221046577787`*^9}, {
   3.8388225981406307`*^9, 3.83882260585165*^9}, {3.8388226408992567`*^9, 
   3.83882275045232*^9}, {3.838822783984479*^9, 3.838822983386633*^9}, {
   3.838823085540182*^9, 3.838823086678244*^9}, {3.838823122077846*^9, 
   3.838823218017744*^9}, {3.838823535593216*^9, 3.838823614857882*^9}, {
   3.83882448743895*^9, 3.8388245849821873`*^9}, {3.839682728829617*^9, 
   3.839682743862609*^9}, {3.839683050324492*^9, 3.8396830590264378`*^9}, 
   3.839683199978066*^9, 3.839683231632311*^9, 3.8430812774222937`*^9, 
   3.8439283171531487`*^9, {3.8444659468302603`*^9, 3.844465989602634*^9}, {
   3.844466034280877*^9, 3.8444660647583637`*^9}, {3.854025850417451*^9, 
   3.854025861288555*^9}},
 CellLabel->
  "In[898]:=",ExpressionUUID->"ce96ef9c-6a99-499a-b6c2-5141144cae91"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get the results in the correct form to plot", "Subsubsection",
 CellChangeTimes->{{3.836915635258505*^9, 
  3.836915645073258*^9}},ExpressionUUID->"d1cac1db-91d4-42a2-8a66-\
dc282fa574ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"getting", " ", "the", " ", "lists", " ", "to", " ", "plot", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"should", " ", "have", " ", "2", " ", "lists", " ", "total"}], 
      ",", " ", 
      RowBox[{
      "one", " ", "for", " ", "the", " ", "outputs", " ", "without", " ", 
       "fish", " ", "and", " ", "one", " ", "for", " ", "the", " ", "outputs",
        " ", "with", " ", "fish"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "transpose", " ", "this", " ", "to", " ", "change", " ", "the", " ", 
    "nested", " ", "list", " ", "from", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"P1", " ", "at", " ", "X1"}], ",", " ", 
        RowBox[{"P2", " ", "at", " ", "X1"}]}], "}"}], ",", " ", 
      RowBox[{"{", "X2", "}"}], ",", " ", 
      RowBox[{"...", 
       RowBox[{"{", "Xn", "}"}]}]}], "}"}], " ", "to", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"X1", ",", " ", "X2", ",", " ", 
        RowBox[{"...", " ", "Xn", " ", "at", " ", "P1"}]}], "}"}], ",", " ", 
      RowBox[{"{", "P2", "}"}]}], "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"RecovSeparatePX2", "=", 
     RowBox[{"Transpose", "[", "XRecovRuns2", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"prey", " ", "no", " ", "fish"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XRecovNoPX2", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"RecovSeparatePX2", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", 
    RowBox[{"with", " ", "prey", " ", "with", " ", "fish"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XRecovPX2", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"RecovSeparatePX2", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"list", " ", "of", " ", "X", " ", "values"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XVals3", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"0.1", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"0.2", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"0.3", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"0.4", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"0.5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"0.6", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"0.7", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"0.8", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"0.9", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"1", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"1.1", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"1.2", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"1.3", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"1.4", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"1.5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"1.6", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"1.7", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"1.8", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", 
       RowBox[{"1.9", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}], ",", " ", 
       RowBox[{"2", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "7"}]}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "use", " ", "Table", " ", "to", " ", "get", " ", "the", " ", "lists", " ",
      "in", " ", "the", " ", "form", " ", "to", " ", "plot"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XRecovLists2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "PlotList", "}"}], ",", 
         RowBox[{
          RowBox[{"PlotList", "=", 
           RowBox[{"Transpose", "@", 
            RowBox[{"{", 
             RowBox[{"XVals3", ",", "list"}], "}"}]}]}], ";", " ", 
          "PlotList"}]}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"list", ",", " ", 
         RowBox[{"{", 
          RowBox[{"XRecovNoPX2", ",", "XRecovPX2"}], "}"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8369129531410427`*^9, 3.836913008973792*^9}, {
   3.836913091490144*^9, 3.8369130922671757`*^9}, {3.83691317151867*^9, 
   3.8369131987122173`*^9}, {3.836913230715218*^9, 3.8369133075790777`*^9}, {
   3.836913339555049*^9, 3.8369134469392967`*^9}, 3.836913583655624*^9, {
   3.8369141531939917`*^9, 3.836914213205305*^9}, {3.8369152684721603`*^9, 
   3.836915406389106*^9}, {3.8369154677176*^9, 3.8369154915523663`*^9}, {
   3.83692587158399*^9, 3.836926014594379*^9}, {3.836926060460184*^9, 
   3.836926127689941*^9}, {3.8369276861419353`*^9, 3.836927748673893*^9}, {
   3.837019181125844*^9, 3.8370191975006647`*^9}, {3.8370194166090097`*^9, 
   3.837019449918641*^9}, {3.8370195834248877`*^9, 3.837019586852767*^9}, {
   3.837019747487743*^9, 3.8370197636144876`*^9}, {3.8370199516054173`*^9, 
   3.8370199708271227`*^9}, {3.8370207765894957`*^9, 3.837020793926944*^9}, {
   3.8370214814550123`*^9, 3.83702152538756*^9}, 3.8371154239745903`*^9, 
   3.838823007907159*^9, {3.8388232757083693`*^9, 3.838823278705464*^9}, {
   3.838823695892604*^9, 3.838823751261101*^9}, {3.838823826596196*^9, 
   3.838823828555112*^9}, {3.843080766813776*^9, 3.843080797073444*^9}, {
   3.843081322276988*^9, 3.843081341210517*^9}, {3.844466089331614*^9, 
   3.84446610650601*^9}, {3.844508800993268*^9, 3.844508890968586*^9}},
 CellLabel->
  "In[908]:=",ExpressionUUID->"ff615bf6-ee5f-42cb-833c-0e20863836d7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot the results", "Subsection",
 CellChangeTimes->{{3.843080586526458*^9, 
  3.8430805908844748`*^9}},ExpressionUUID->"35df5950-08b0-41ba-b68c-\
3f74ddd1f74f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"paddingS11", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"60", 
        RowBox[{"(*", "left", "*)"}], ",", "15"}], 
       RowBox[{"(*", "right", "*)"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"60", 
        RowBox[{"(*", "bottom", "*)"}], ",", "10"}], " ", 
       RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotS11a", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"XRecovLists", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"11", ";;", " ", "21"}], "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"XRecovLists", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"11", ";;", " ", "21"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<a) Effect of prey on recovery, \!\(\*SubscriptBox[\(N\), \(env\)]\
\)=1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Full", ",", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "350"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
      RowBox[{"ImagePadding", "\[Rule]", "paddingS11"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", " ", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
         RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
         " ", "12"}], 
        RowBox[{"(*", 
         RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
      RowBox[{"GridLines", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "100", "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"GridLinesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", " ", "Dashed"}], "]"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"True", 
           RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
          RowBox[{"(*", "right", "*)"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"True", 
           RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
          RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"(*", "True", "*)"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "0", ",", " ", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", 
               ",", "0.05"}], "}"}], ",", "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"(*", "None", "*)"}], 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"2", "*", 
                  SuperscriptBox["10", 
                   RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.2\>\""}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"4", "*", 
                  SuperscriptBox["10", 
                   RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.4\>\""}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"6", "*", 
                  SuperscriptBox["10", 
                   RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.6\>\""}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"8", "*", 
                  SuperscriptBox["10", 
                   RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.8\>\""}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"1", "*", 
                  SuperscriptBox["10", 
                   RowBox[{"-", "6"}]]}], ",", " ", "\"\<1.0\>\""}], "}"}]}], 
              "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], "*)"}], 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<Time in bleached state (d)\>\"", ",", "None"}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Prey (C-mol \!\(\*SuperscriptBox[\(L\), \(-1\)]\))\>\"", ",", 
           "None"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"FrameTicksStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "10"}], 
        RowBox[{"(*", 
         RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", " ", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "12"}], "]"}]}]}], 
     RowBox[{"(*", 
      RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotS11b", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"XRecovLists2", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"11", ";;", " ", "21"}], "]"}], "]"}], ",", " ", 
       RowBox[{
        RowBox[{"XRecovLists2", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"11", ";;", " ", "21"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<b) Effect of prey on recovery, \!\(\*SubscriptBox[\(N\), \
\(env\)]\)=2.5*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)\>\""}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Full", ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "350"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", "paddingS11"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
        RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", " ",
         "12"}], 
       RowBox[{"(*", 
        RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", "100", "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", " ", "Dashed"}], "]"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"True", 
          RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
         RowBox[{"(*", "right", "*)"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"True", 
          RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
         RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"(*", "True", "*)"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "0", ",", " ", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", 
              ",", "0.05"}], "}"}], ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"(*", "None", "*)"}], 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"2", "*", 
                 SuperscriptBox["10", 
                  RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.2\>\""}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"4", "*", 
                 SuperscriptBox["10", 
                  RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.4\>\""}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"6", "*", 
                 SuperscriptBox["10", 
                  RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.6\>\""}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"8", "*", 
                 SuperscriptBox["10", 
                  RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.8\>\""}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "*", 
                 SuperscriptBox["10", 
                  RowBox[{"-", "6"}]]}], ",", " ", "\"\<1.0\>\""}], "}"}]}], 
             "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], "*)"}], 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Prey (C-mol \!\(\*SuperscriptBox[\(L\), \(-1\)]\))\>\"", ",", 
          "None"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "10"}], 
       RowBox[{"(*", 
        RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", " ", 
     
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "12"}], "]"}]}]}], 
    RowBox[{"(*", 
     RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.84308083767894*^9, 3.843080838805765*^9}, {
  3.843080900611532*^9, 3.843080951450898*^9}, {3.843081096882553*^9, 
  3.84308121070225*^9}, {3.8430813493721933`*^9, 3.843081369685264*^9}, {
  3.84308140334802*^9, 3.843081421216404*^9}, {3.844466132601287*^9, 
  3.8444661425516167`*^9}, {3.844508933732223*^9, 3.844508959069096*^9}},
 CellLabel->
  "In[918]:=",ExpressionUUID->"c6fef136-f332-4eaf-8e32-bee30ff3b5ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"make", " ", "the", " ", "legend"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"XNRecovLeg", "=", 
     RowBox[{"LineLegend", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Fish absent\>\"", ",", "\"\<Fish present\>\""}], "}"}], 
       ",", " ", 
       RowBox[{"LegendMarkerSize", "\[Rule]", "40"}]}], 
      RowBox[{"(*", 
       RowBox[{",", " ", 
        RowBox[{"LegendLayout", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Row\>\"", ",", "1"}], "}"}]}]}], "*)"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"XNRecovFig", "=", 
    RowBox[{"Legended", "[", 
     RowBox[{
      RowBox[{"GraphicsGrid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"plotS11a", ",", " ", "plotS11b"}], "}"}], "}"}], ",", " ", 
        
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"Spacings", "\[Rule]", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", 
             RowBox[{"(*", 
              RowBox[{"left", "?"}], "*)"}], ",", 
             RowBox[{"-", "150"}]}], " ", 
            RowBox[{"(*", 
             RowBox[{"first", " ", 
              RowBox[{"(", "leftmost", ")"}], " ", "and", " ", "second", " ", 
              "col"}], "*)"}], 
            RowBox[{"(*", 
             RowBox[{"left", " ", "to", " ", "right"}], "*)"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", 
             RowBox[{"(*", "top", "*)"}], ",", "0"}], 
            RowBox[{"(*", 
             RowBox[{"first", " ", "and", " ", "second", " ", "rows"}], 
             "*)"}], 
            RowBox[{"(*", 
             RowBox[{"top", " ", "to", " ", "bottom"}], "*)"}], "}"}]}], 
          "}"}]}], ",", " ", 
        RowBox[{"Frame", "\[Rule]", "False"}], 
        RowBox[{"(*", 
         RowBox[{",", " ", 
          RowBox[{"AspectRatio", "\[Rule]", 
           RowBox[{"1", "/", "GoldenRatio"}]}]}], "*)"}], ",", " ", 
        RowBox[{"Alignment", "\[Rule]", " ", "Bottom"}]}], "]"}], ",", 
      RowBox[{"Placed", "[", 
       RowBox[{"XNRecovLeg", ",", 
        RowBox[{"(*", "Bottom", "*)"}], 
        RowBox[{"{", 
         RowBox[{"1.2", ",", " ", "0.85"}], 
         RowBox[{"(*", 
          RowBox[{"x", ",", " ", 
           RowBox[{"y", " ", "positionof", " ", "legend"}]}], "*)"}], "}"}]}],
        "]"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.842650669306046*^9, 3.842650765395186*^9}, {
  3.842651192935466*^9, 3.842651203438984*^9}, {3.8426513251878633`*^9, 
  3.842651325504154*^9}, {3.842651384605255*^9, 3.8426513983063383`*^9}, {
  3.842698514084034*^9, 3.842698545714468*^9}, {3.84269861303574*^9, 
  3.842698640484858*^9}, {3.843081457307399*^9, 3.843081599064226*^9}, {
  3.844466154624998*^9, 3.8444661660805483`*^9}},
 CellLabel->
  "In[921]:=",ExpressionUUID->"65f08fdc-e8ad-44d7-a963-e21226c5bb5c"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {InsetBox[
       GraphicsBox[{{}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{{1.*^-7, 90.}, {1.1*^-7, 12.}, {1.2*^-7, 11.}, {
            1.3*^-7, 10.}, {1.3999999999999998`*^-7, 9.}, {1.5*^-7, 9.}, {
            1.6*^-7, 8.}, {1.7*^-7, 8.}, {1.8*^-7, 7.}, {
            1.8999999999999998`*^-7, 6.}, {2.*^-7, 6.}}]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{{1.*^-7, 104.}, {1.1*^-7, 84.}, {1.2*^-7, 65.}, {
            1.3*^-7, 12.}, {1.3999999999999998`*^-7, 11.}, {1.5*^-7, 10.}, {
            1.6*^-7, 9.}, {1.7*^-7, 9.}, {1.8*^-7, 8.}, {
            1.8999999999999998`*^-7, 8.}, {2.*^-7, 7.}}]}}, {{}, {}}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{None, None},
        AxesOrigin->{9.791666688871149*^-8, 0},
        DisplayFunction->Identity,
        Frame->{{True, False}, {True, False}},
        FrameLabel->{{
           FormBox["\"Time in bleached state (d)\"", TraditionalForm], None}, {
           FormBox[
           "\"Prey (C-mol \\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\))\"", 
            TraditionalForm], None}},
        FrameStyle->Directive[
          GrayLevel[0], 12],
        FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
        FrameTicksStyle->Directive[
          GrayLevel[0], 10],
        GridLines->{{}, {100}},
        GridLinesStyle->Directive[
          GrayLevel[0], 
          Dashing[{Small, Small}]],
        ImagePadding->{{60, 15}, {60, 10}},
        ImageSize->Full,
        LabelStyle->Directive[
         FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
        Method->{
         "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}},
        PlotLabel->FormBox[
         "\"a) Effect of prey on recovery, \\!\\(\\*SubscriptBox[\\(N\\), \
\\(env\\)]\\)=1*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
          TraditionalForm],
        PlotRange->{{9.791666688871149*^-8, 2.*^-7}, {0., 350.}},
        PlotRangeClipping->True,
        PlotRangePadding->{{
           Scaled[0.02], 
           Scaled[0.02]}, {0, 0}},
        Ticks->{Automatic, Automatic}], 
       NCache[{Rational[931, 2], -619}, {465.5, -619}], 
       ImageScaled[{0.5, 0}], {931, 619}], InsetBox[
       GraphicsBox[{{}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{{1.*^-7, 222.}, {1.1*^-7, 189.}, {1.2*^-7, 158.}, {
            1.3*^-7, 129.}, {1.3999999999999998`*^-7, 102.}, {1.5*^-7, 12.}, {
            1.6*^-7, 11.}, {1.7*^-7, 10.}, {1.8*^-7, 10.}, {
            1.8999999999999998`*^-7, 9.}, {2.*^-7, 9.}}]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
            NCache[
             Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
           1.6], LineBox[{{1.*^-7, 227.}, {1.1*^-7, 196.}, {1.2*^-7, 167.}, {
            1.3*^-7, 141.}, {1.3999999999999998`*^-7, 118.}, {1.5*^-7, 96.}, {
            1.6*^-7, 12.}, {1.7*^-7, 11.}, {1.8*^-7, 11.}, {
            1.8999999999999998`*^-7, 10.}, {2.*^-7, 10.}}]}}, {{}, {}}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{None, None},
        AxesOrigin->{9.791666688871149*^-8, 0},
        DisplayFunction->Identity,
        Frame->{{True, False}, {True, False}},
        FrameLabel->{{None, None}, {
           FormBox[
           "\"Prey (C-mol \\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\))\"", 
            TraditionalForm], None}},
        FrameStyle->Directive[
          GrayLevel[0], 12],
        FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
        FrameTicksStyle->Directive[
          GrayLevel[0], 10],
        GridLines->{{}, {100}},
        GridLinesStyle->Directive[
          GrayLevel[0], 
          Dashing[{Small, Small}]],
        ImagePadding->{{60, 15}, {60, 10}},
        ImageSize->Full,
        LabelStyle->Directive[
         FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
        Method->{
         "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}},
        PlotLabel->FormBox[
         "\"b) Effect of prey on recovery, \\!\\(\\*SubscriptBox[\\(N\\), \
\\(env\\)]\\)=2.5*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-7\\)]\\)\"", 
          TraditionalForm],
        PlotRange->{{9.791666688871149*^-8, 2.*^-7}, {0., 350.}},
        PlotRangeClipping->True,
        PlotRangePadding->{{
           Scaled[0.02], 
           Scaled[0.02]}, {0, 0}},
        Ticks->{Automatic, Automatic}], {1246.5, -619}, 
       ImageScaled[{0.5, 0}], {931, 619}]}, {}}, InsetBox[
     TemplateBox[{"\"Fish absent\"", "\"Fish present\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 40}, {40, 40}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 40}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.4] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 40}, {40, 40}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 40}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.4] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               
               TemplateBox[<|
                "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                "RGBColorSwatchTemplate"], ",", 
               
               TemplateBox[<|
                "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                "RGBColorSwatchTemplate"]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "40"}]}], "]"}]& )], 
     Scaled[{1.2, 0.85}], ImageScaled[{0, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   DisplayFunction->Identity,
   ImageSize->Full,
   PlotRangePadding->{6, 5}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{
        Inset[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[7, 360]], 
               AbsoluteThickness[1.6], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
              
              Line[{{1.*^-7, 90.}, {1.1*^-7, 12.}, {1.2*^-7, 11.}, {1.3*^-7, 
               10.}, {1.3999999999999998`*^-7, 9.}, {1.5*^-7, 9.}, {1.6*^-7, 
               8.}, {1.7*^-7, 8.}, {1.8*^-7, 7.}, {1.8999999999999998`*^-7, 
               6.}, {2.*^-7, 6.}}]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[7, 360]], 
               AbsoluteThickness[1.6], 
               RGBColor[0.880722, 0.611041, 0.142051]], 
              
              Line[{{1.*^-7, 104.}, {1.1*^-7, 84.}, {1.2*^-7, 65.}, {1.3*^-7, 
               12.}, {1.3999999999999998`*^-7, 11.}, {1.5*^-7, 10.}, {1.6*^-7,
                9.}, {1.7*^-7, 9.}, {1.8*^-7, 8.}, {1.8999999999999998`*^-7, 
               8.}, {2.*^-7, 7.}}]}}}, {{}, {}}}, {
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, 
           AxesOrigin -> {9.791666688871149*^-8, 0}, DisplayFunction :> 
           Identity, Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{"Time in bleached state (d)", None}, {
             "Prey (C-mol \!\(\*SuperscriptBox[\(L\), \(-1\)]\))", None}}, 
           FrameStyle -> Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {{}, {100}}, GridLinesStyle -> 
           Directive[
             GrayLevel[0], 
             Dashing[{Small, Small}]], ImagePadding -> {{60, 15}, {60, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, PlotLabel -> 
           "a) Effect of prey on recovery, \!\(\*SubscriptBox[\(N\), \(env\)]\
\)=1*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)", 
           PlotRange -> {{9.791666688871149*^-8, 2.*^-7}, {0., 350.}}, 
           PlotRangeClipping -> True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], {
          Rational[931, 2], -619}, 
         ImageScaled[{0.5, 0}], {931, 619}], 
        Inset[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[7, 360]], 
               AbsoluteThickness[1.6], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
              
              Line[{{1.*^-7, 222.}, {1.1*^-7, 189.}, {1.2*^-7, 158.}, {
               1.3*^-7, 129.}, {1.3999999999999998`*^-7, 102.}, {1.5*^-7, 
               12.}, {1.6*^-7, 11.}, {1.7*^-7, 10.}, {1.8*^-7, 10.}, {
               1.8999999999999998`*^-7, 9.}, {2.*^-7, 9.}}]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[7, 360]], 
               AbsoluteThickness[1.6], 
               RGBColor[0.880722, 0.611041, 0.142051]], 
              
              Line[{{1.*^-7, 227.}, {1.1*^-7, 196.}, {1.2*^-7, 167.}, {
               1.3*^-7, 141.}, {1.3999999999999998`*^-7, 118.}, {1.5*^-7, 
               96.}, {1.6*^-7, 12.}, {1.7*^-7, 11.}, {1.8*^-7, 11.}, {
               1.8999999999999998`*^-7, 10.}, {2.*^-7, 10.}}]}}}, {{}, {}}}, {
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, 
           AxesOrigin -> {9.791666688871149*^-8, 0}, DisplayFunction :> 
           Identity, Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{None, None}, {
             "Prey (C-mol \!\(\*SuperscriptBox[\(L\), \(-1\)]\))", None}}, 
           FrameStyle -> Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {{}, {100}}, GridLinesStyle -> 
           Directive[
             GrayLevel[0], 
             Dashing[{Small, Small}]], ImagePadding -> {{60, 15}, {60, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, PlotLabel -> 
           "b) Effect of prey on recovery, \!\(\*SubscriptBox[\(N\), \(env\)]\
\)=2.5*\!\(\*SuperscriptBox[\(10\), \(-7\)]\)", 
           PlotRange -> {{9.791666688871149*^-8, 2.*^-7}, {0., 350.}}, 
           PlotRangeClipping -> True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], {
         1246.5, -619}, 
         ImageScaled[{0.5, 0}], {931, 619}]}}, {}}, ImageSize -> Full, {
     PlotRangePadding -> {6, 5}}, ImageSize -> Full], 
    Placed[
     Unevaluated[
      LineLegend[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        RGBColor[0.880722, 0.611041, 0.142051]}, {
       "Fish absent", "Fish present"}, LegendMarkerSize -> 40]], {1.2, 0.85}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.843081503554957*^9, 3.843081599933386*^9}, 
   3.844510964988926*^9, {3.8540270571950197`*^9, 3.854027082933267*^9}},
 CellLabel->
  "Out[922]=",ExpressionUUID->"6a542643-cfb4-45ca-8f49-a74eed78e6d0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fig. S12: Effects of \[Zeta] on bleaching", "Section",
 CellChangeTimes->{{3.843081623380891*^9, 3.8430816328807364`*^9}, {
  3.845645696969934*^9, 
  3.8456457001304817`*^9}},ExpressionUUID->"c2ae4c32-a61b-4eb4-92f1-\
c5a82b569f0d"],

Cell[CellGroupData[{

Cell["Run Simulations and format results", "Subsection",
 CellChangeTimes->{{3.83656085215167*^9, 3.836560854665854*^9}, {
  3.8430817487413473`*^9, 3.8430817496467133`*^9}, {3.843081795927115*^9, 
  3.843081799086132*^9}},ExpressionUUID->"43d35f0c-9798-4f4a-b37d-\
84bc1437dbbf"],

Cell[CellGroupData[{

Cell["Run simulations", "Subsubsection",
 CellChangeTimes->{{3.8430818092417927`*^9, 
  3.84308181220054*^9}},ExpressionUUID->"541017af-790e-4a7b-b5e0-\
7a38e1177729"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "clear", " ", "parameters", " ", "that", " ", "are", " ", "changing", " ", 
    "and", " ", "intermediate", " ", "values", " ", "from", " ", 
    "simulations"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "\[CapitalNu]", ",", "X", ",", " ", "P0", ",", "jX", ",", "jN", ",", "Ni0",
     ",", "jNi0", ",", "jHG", ",", " ", "jSG", ",", "\[Rho]N", ",", "jeC", 
    ",", "jCO2", ",", "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", 
    ",", "cROS1", ",", "jST", ",", "rNH", ",", "A", ",", "jNw", ",", " ", 
    "tsolve", ",", " ", "states", ",", " ", "eqs", ",", " ", "inis", ",", " ",
     "sol", ",", "t", ",", "tmax", ",", " ", "tHigh", ",", " ", "LHigh", ",", 
    "LfunH"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.830954228826069*^9, 3.830954232601079*^9}, {
  3.8309547598932657`*^9, 3.830954765474946*^9}, {3.8310547710049973`*^9, 
  3.831054771588109*^9}, {3.8317184493160477`*^9, 3.831718450767495*^9}, {
  3.831975427667077*^9, 3.831975438846157*^9}, {3.836403608671455*^9, 
  3.836403609374309*^9}, {3.836404554012698*^9, 3.836404554740193*^9}, {
  3.8364068918371983`*^9, 3.836406892239421*^9}, {3.8405582838987627`*^9, 
  3.84055828548647*^9}},
 CellLabel->
  "In[923]:=",ExpressionUUID->"14ab4abc-aee4-4579-9007-cecd11b4a5cf"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"with", " ", "prey"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"X", "=", 
     RowBox[{"(*", "0", "*)"}], 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jX", "=", 
     FractionBox[
      RowBox[{"jXm", " ", "X"}], 
      RowBox[{"X", "+", "KX"}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"environment", ":", " ", 
     RowBox[{"flow", " ", "and", " ", "N", " ", "level"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d", "=", "1660"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalNu]", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"jN", "=", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "these", " ", "all", " ", "need", " ", "to", " ", "be", " ", "within", 
       " ", 
       RowBox[{"Table", "[", "]"}], " ", "because", " ", "\[CapitalNu]", " ", 
       "is", " ", "changing"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"jNi0", " ", "=", " ", 
      FractionBox[
       RowBox[{"jNm", " ", "\[CapitalNu]"}], 
       RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"light", " ", "function", " ", 
     RowBox[{"parameters", ":", " ", 
      RowBox[{
      "same", " ", "light", " ", "pulse", " ", "as", " ", "in", " ", 
       "section", " ", "2"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tStartStress", "=", "600"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LHigh", "=", "30"}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tHigh", "=", "30"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "800"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"use", " ", 
     RowBox[{"Table", "[", "]"}], " ", "to", " ", "run", " ", "simulations", 
     " ", "at", " ", "different", " ", "values", " ", "of", " ", "zeta", " ", 
     "and", " ", "with", " ", "and", " ", "without", " ", "fish"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zetaRuns", "=", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "everything", " ", "that", " ", "is", " ", "evaluated", " ", "each", 
          " ", "iteration", " ", "needs", " ", "to", " ", "be", " ", 
          "included", " ", "in", " ", "Module"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"jX", "=", 
               FractionBox[
                RowBox[{"jXm", " ", "X"}], 
                RowBox[{"X", "+", "KX"}]]}], ","}], "*)"}], " ", 
            RowBox[{
             RowBox[{"jN", "=", 
              FractionBox[
               RowBox[{"jNm", " ", "\[CapitalNu]"}], 
               RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", 
             RowBox[{"jHT", "=", "j0HT"}], ",", 
             RowBox[{"rNS", "=", 
              RowBox[{"\[Sigma]NS", " ", "nNS", " ", "j0ST"}]}], ",", 
             RowBox[{"VH0", "=", 
              RowBox[{"kv", "*", "H0"}]}], ",", " ", 
             RowBox[{"Ni0", " ", "=", " ", "\[CapitalNu]"}], ",", 
             RowBox[{"jNi0", " ", "=", " ", 
              FractionBox[
               RowBox[{"jNm", " ", "\[CapitalNu]"}], 
               RowBox[{"\[CapitalNu]", "+", "KN"}]]}], ",", "states", ",", 
             " ", "rNH", ",", " ", "S", ",", "H", ",", "VH", ",", "P", ",", 
             "Ni", ",", "jNi", ",", "\[Rho]C", ",", " ", "jCP", ",", " ", 
             "jHG", ",", "\[Rho]N", ",", "jeC", ",", "jCO2", ",", "A", ",", 
             "jL", ",", "rCH", ",", "rCS", ",", "jeL", ",", "jNPQ", ",", 
             "cROS1", ",", "jSG", ",", "jST", ",", "jNw", ",", "F", ",", "fh",
              ",", "LfunH", ",", "tsolve", ",", " ", "addtimetostatevars", 
             ",", "eqs", ",", "inis", ",", "sol"}], 
            RowBox[{"(*", 
             RowBox[{
             "put", " ", "any", " ", "intermediate", " ", "output", " ", 
              "values", " ", "in", " ", "Module"}], "*)"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"light", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"LfunH", "=", 
             RowBox[{"L", "+", " ", 
              RowBox[{"LHigh", "*", 
               RowBox[{"HeavisideTheta", "[", 
                RowBox[{"t", "-", "tStartStress"}], "]"}]}], " ", "-", "  ", 
              RowBox[{"LHigh", "*", 
               RowBox[{"HeavisideTheta", "[", 
                RowBox[{"t", "-", 
                 RowBox[{"(", 
                  RowBox[{"tStartStress", "+", "tHigh"}], ")"}]}], 
                "]"}]}]}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"F", "[", "\[Rho]_", "]"}], "[", 
              RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
             FractionBox[
              RowBox[{"A", " ", "B", " ", 
               RowBox[{"(", 
                RowBox[{"A", "+", "B"}], ")"}], " ", "\[Rho]"}], 
              RowBox[{
               RowBox[{
                SuperscriptBox["A", "2"], " ", "B"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox["B", "2"]}], "+", 
               RowBox[{
                SuperscriptBox["A", "2"], " ", "\[Rho]"}], "+", 
               RowBox[{"A", " ", "B", " ", "\[Rho]"}], "+", 
               RowBox[{
                SuperscriptBox["B", "2"], " ", "\[Rho]"}]}]]}], ";", 
            RowBox[{"(*", 
             RowBox[{"same", " ", "as", " ", 
              FractionBox["1", 
               RowBox[{
                FractionBox["1", "\[Rho]"], "+", 
                FractionBox["1", "A"], "+", 
                FractionBox["1", "B"], "-", 
                FractionBox["1", 
                 RowBox[{"A", "+", "B"}]]}]]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"helper", " ", "function", " ", "for", " ", "VH"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fh", "[", 
              RowBox[{
               RowBox[{"t_", "?", "NumericQ"}], ",", "y_"}], "]"}], ":=", 
             RowBox[{"Piecewise", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", 
                  RowBox[{"y", "<", "0"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"kv", " ", "*", "y"}], ",", 
                  RowBox[{"y", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], 
              "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", "Calculations", " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"jHG", "=", 
             RowBox[{
              RowBox[{"F", "[", "jHGm", "]"}], "[", 
              RowBox[{
               RowBox[{"yC", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Rho]C", " ", 
                   RowBox[{"S", "/", "H"}]}], "+", "jX"}], ")"}]}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                  
                  RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                  RowBox[{"nNX", " ", "jX"}], "+", "rNH"}], ")"}], 
                SuperscriptBox["nNH", 
                 RowBox[{"-", "1"}]]}]}], "]"}]}], ";", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"jSG", "=", 
             RowBox[{
              RowBox[{"F", "[", "jSGm", "]"}], "[", 
              RowBox[{
               RowBox[{"jCP", " ", "yC"}], ",", 
               FractionBox[
                RowBox[{"rNS", "+", 
                 FractionBox[
                  RowBox[{"H", " ", "\[Rho]N"}], "S"]}], "nNS"]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"\[Rho]N", "=", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNi"}], "+", 
                RowBox[{"\[Alpha]", "*", "jN"}], "+", 
                RowBox[{"nNX", " ", "jX"}], "+", "rNH", "-", 
                RowBox[{"nNH", " ", "jHG"}]}], " ", 
               RowBox[{"(*", 
                SuperscriptBox["yN", 
                 RowBox[{"-", "1"}]], "*)"}], ",", "0"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jeC", "=", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"jX", "-", 
                FractionBox["jHG", "yC"], "+", 
                FractionBox[
                 RowBox[{"S", " ", "\[Rho]C"}], "H"]}], ",", "0"}], "]"}]}], 
            ";", " ", "\[IndentingNewLine]", 
            RowBox[{"jCO2", "=", 
             RowBox[{"jeC", " ", "kCO2"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jL", "=", 
             RowBox[{"A", " ", "astar", " ", "LfunH"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"rCH", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"jHT", "+", 
                FractionBox[
                 RowBox[{"jHG", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "yC"}], ")"}]}], "yC"]}], ")"}], " ", 
              "\[Sigma]CH"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"rCS", "=", 
             RowBox[{"\[Sigma]CS", 
              RowBox[{"(", 
               RowBox[{"j0ST", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "yC"}], ")"}], "jSG", " ", 
                 SuperscriptBox["yC", 
                  RowBox[{"-", "1"}]]}]}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jeL", "=", 
             RowBox[{"jL", "-", 
              FractionBox["jCP", "yCL"]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jNPQ", "=", 
             FractionBox["1", 
              RowBox[{
               FractionBox["1", "jeL"], "+", 
               FractionBox["1", "kNPQ"]}]]}], ";", "\[IndentingNewLine]", 
            RowBox[{"cROS1", "=", 
             FractionBox[
              RowBox[{"jeL", "-", "jNPQ"}], "kROS"]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"jST", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"b", " ", "cROS1"}]}], ")"}], " ", "j0ST"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"rNH", "=", 
             RowBox[{"\[Sigma]NH", " ", "nNH", " ", "jHT"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"A", "=", 
             RowBox[{"1.256307", "+", 
              RowBox[{"1.385969", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "6.479055"}], " ", 
                 RowBox[{"S", "/", "H"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"jNw", "=", " ", 
             RowBox[{
              RowBox[{"\[Rho]N", "*", 
               RowBox[{"H", "/", "S"}]}], "+", "rNS", "-", 
              RowBox[{"nNS", "*", "jSG"}]}]}], ";", " ", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"tsolve", "=", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Rho]C", ",", 
                 RowBox[{"jCP", "-", 
                  RowBox[{"jSG", " ", 
                   SuperscriptBox["yC", 
                    RowBox[{"-", "1"}]]}]}], ",", "\[Rho]C0"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"jCP", ",", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"F", "[", "jCPm", "]"}], "[", 
                   RowBox[{
                    RowBox[{"jL", " ", "yCL"}], ",", 
                    RowBox[{"rCS", "+", 
                    FractionBox[
                    RowBox[{"H", " ", 
                    RowBox[{"(", 
                    RowBox[{"jCO2", "+", "rCH"}], ")"}]}], "S"]}]}], "]"}], 
                  RowBox[{"1", "+", "cROS1"}]], ",", "jCP0"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"jNi", ",", " ", 
                 FractionBox[
                  RowBox[{"jNm", " ", "*", "Ni"}], 
                  RowBox[{"Ni", "+", "KN"}]], ",", " ", "jNi0"}], "}"}]}], 
              "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"states", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"tsolve", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"H", ",", "S", ",", "VH", ",", " ", "Ni", ",", "P"}], 
                "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"addtimetostatevars", "=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"#", "\[Rule]", 
                  RowBox[{"#", "[", "t", "]"}]}], ")"}], "&"}], "/@", 
               "states"}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
            RowBox[{"eqs", "=", 
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "'"}], "[", "t", "]"}], 
                   "\[Equal]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Lambda]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ")"}], "&"}], "/@", 
                "tsolve"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"S", 
                    RowBox[{"(", 
                    RowBox[{"jSG", "-", "jST"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"H", "'"}], "[", "t", "]"}], "\[Equal]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"H", 
                    RowBox[{"(", 
                    RowBox[{"jHG", "-", "jHT"}], ")"}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"VH", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                  RowBox[{"fh", "[", 
                   RowBox[{"t", ",", "  ", 
                    RowBox[{
                    RowBox[{"H", "'"}], "[", "t", "]"}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Ni", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"d", "*", 
                    RowBox[{"(", " ", 
                    RowBox[{"\[CapitalNu]", " ", "-", " ", "Ni"}], ")"}]}], 
                    " ", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Zeta]", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "jNw", "*", 
                    "S"}], "+", " ", 
                    RowBox[{"ep", "*", "P"}], " ", "-", 
                    RowBox[{"jNi", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H"}]}], 
                    ")"}], "/", 
                    RowBox[{"(", " ", 
                    RowBox[{"vi", "*", "VH"}], ")"}]}]}], "/.", 
                    "addtimetostatevars"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"P", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
                  
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"P", "*", 
                    RowBox[{"(", 
                    RowBox[{"rp", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], "-", 
                    RowBox[{"Bp", "*", "P"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"kp", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Alpha]"}], ")"}], "H"}], ")"}]}]}], 
                    ")"}]}], "/.", "addtimetostatevars"}], ")"}]}]}], " ", 
                "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"set", " ", "initial", " ", "conditions"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"inis", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"H", "[", "0", "]"}], "==", "H0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"S", "[", "0", "]"}], "==", "S0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"VH", "[", "0", "]"}], "\[Equal]", "VH0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Ni", "[", "0", "]"}], "\[Equal]", " ", "Ni0"}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"P", "[", "0", "]"}], "\[Equal]", "P0"}]}], "}"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", "0", "]"}], 
                   "\[Equal]", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&"}], "/@", 
                "tsolve"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "simulate", " ", "the", " ", "model", " ", "and", " ", "call", 
              " ", "the", " ", "output", " ", "sol"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"sol", "=", 
             RowBox[{
              RowBox[{"NDSolve", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Join", "[", 
                  RowBox[{"eqs", ",", "inis"}], "]"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"#", "&"}], "/@", "states"}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
                RowBox[{"Method", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<EquationSimplification\>\"", "\[Rule]", 
                   "\"\<Residual\>\""}], "}"}]}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
             "outputs", " ", "to", " ", "save", " ", "each", " ", "iteration",
               " ", "of", " ", "Table"}], " ", "*)"}], "\[IndentingNewLine]", 
            
            RowBox[{"{", "sol", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"P0", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", 
             RowBox[{"kp", "*", 
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Alpha]"}], ")"}], "*", "H0"}]}], "}"}]}], 
          "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\[Zeta]", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", " ", "0.5", ",", " ", "0.1"}], "}"}]}], "}"}]}], 
      "]"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{"values", " ", "of", " ", "zeta", " ", "tested"}], "*)"}], 
    "\[IndentingNewLine]"}]}]}]], "Input",
 CellChangeTimes->{{3.8290651384549427`*^9, 3.829065141290266*^9}, {
   3.829065199906692*^9, 3.829065200970768*^9}, {3.82906524270152*^9, 
   3.8290653307033443`*^9}, {3.829065362715103*^9, 3.829065387892151*^9}, {
   3.829065469048102*^9, 3.829065474053466*^9}, {3.829065561263007*^9, 
   3.829065581378994*^9}, {3.829065700021057*^9, 3.829065721824729*^9}, {
   3.8290658274983187`*^9, 3.82906583940606*^9}, {3.82906591687919*^9, 
   3.829065934050418*^9}, {3.829065976228746*^9, 3.829065981431758*^9}, 
   3.829066016873423*^9, {3.829066151140244*^9, 3.8290661523086243`*^9}, {
   3.829066232925233*^9, 3.8290662650102777`*^9}, {3.829066303531884*^9, 
   3.829066337748168*^9}, {3.829066402851151*^9, 3.82906640313243*^9}, {
   3.8290664415539093`*^9, 3.829066461588626*^9}, {3.8290666452782497`*^9, 
   3.829066659953229*^9}, {3.829066701544085*^9, 3.829066735876253*^9}, {
   3.829067892141498*^9, 3.8290678922885027`*^9}, {3.8290680233470497`*^9, 
   3.829068042412854*^9}, {3.829068135896552*^9, 3.8290681711631327`*^9}, {
   3.829068209782954*^9, 3.829068239864855*^9}, {3.82906831022855*^9, 
   3.8290683248241997`*^9}, {3.8290685850781116`*^9, 
   3.8290686073029003`*^9}, {3.8290687478287*^9, 3.829068764238615*^9}, {
   3.829068802963439*^9, 3.829068822258444*^9}, {3.829068881196303*^9, 
   3.82906888870758*^9}, {3.829068920676186*^9, 3.829068960193932*^9}, {
   3.8290690722320337`*^9, 3.829069157114192*^9}, 3.829069213897093*^9, {
   3.829069394794886*^9, 3.829069395952468*^9}, {3.829069764912986*^9, 
   3.8290697904226227`*^9}, {3.829086677231616*^9, 3.8290867181227694`*^9}, {
   3.829242760552538*^9, 3.829242767919444*^9}, {3.82924286647941*^9, 
   3.829242869880286*^9}, {3.829243225669464*^9, 3.82924322713387*^9}, {
   3.829243261223274*^9, 3.82924330013137*^9}, {3.829243336317762*^9, 
   3.829243373540802*^9}, {3.829243450909458*^9, 3.829243464593175*^9}, {
   3.829243496324504*^9, 3.82924351378629*^9}, {3.8292435945032578`*^9, 
   3.8292435948013906`*^9}, {3.829243680638812*^9, 3.829243726027046*^9}, {
   3.829243822579278*^9, 3.829243938940452*^9}, {3.8292439994084787`*^9, 
   3.8292441310241327`*^9}, {3.829244181172257*^9, 3.829244189615423*^9}, {
   3.82924422176071*^9, 3.829244222364028*^9}, {3.829245247323874*^9, 
   3.829245263234119*^9}, {3.829245737685348*^9, 3.8292457882111673`*^9}, {
   3.829245829821752*^9, 3.829245871825343*^9}, {3.8292459219669037`*^9, 
   3.829245945287797*^9}, {3.8292460127760553`*^9, 3.829246016744186*^9}, {
   3.829246166495802*^9, 3.8292462002584867`*^9}, {3.829246338174811*^9, 
   3.829246370520835*^9}, {3.829246427777977*^9, 3.829246427916004*^9}, {
   3.829246664671547*^9, 3.829246668394701*^9}, {3.8292467063469067`*^9, 
   3.829246744400915*^9}, {3.829246794202392*^9, 3.829246969557694*^9}, {
   3.829247012312739*^9, 3.8292470675831537`*^9}, {3.829247097883932*^9, 
   3.8292470998254004`*^9}, {3.829247133314765*^9, 3.829247148073357*^9}, {
   3.829247225455554*^9, 3.829247327459511*^9}, {3.8292473761683693`*^9, 
   3.829247376676359*^9}, {3.8293255634940147`*^9, 3.829325578499567*^9}, {
   3.829325618566457*^9, 3.829325638453786*^9}, {3.829325701751548*^9, 
   3.829325731256613*^9}, {3.829326116824033*^9, 3.829326180515881*^9}, {
   3.829326374849205*^9, 3.829326399277006*^9}, {3.829326500674828*^9, 
   3.829326512835205*^9}, {3.829326547945237*^9, 3.829326576508655*^9}, {
   3.829326741701627*^9, 3.829326817512137*^9}, {3.829326860813435*^9, 
   3.829326864237846*^9}, {3.8293268946181297`*^9, 3.829326934698412*^9}, {
   3.8293269994192867`*^9, 3.829327061101066*^9}, {3.829327125526873*^9, 
   3.8293271379248238`*^9}, {3.829327295146264*^9, 3.829327329686425*^9}, {
   3.829327419185527*^9, 3.82932749782977*^9}, {3.8293275496779203`*^9, 
   3.829327549889206*^9}, 3.829327640861885*^9, 3.8293276742771997`*^9, {
   3.829327712738627*^9, 3.829327968948557*^9}, {3.8293280023784647`*^9, 
   3.8293281303147907`*^9}, {3.829328167496684*^9, 3.829328187124*^9}, {
   3.829328234103176*^9, 3.829328362697023*^9}, {3.8293284099212303`*^9, 
   3.8293284237208223`*^9}, {3.829328488575478*^9, 3.82932849956011*^9}, {
   3.829328533054886*^9, 3.829328731962967*^9}, {3.829328765361579*^9, 
   3.8293288348437767`*^9}, {3.829328865210375*^9, 3.829328865387144*^9}, {
   3.8308007292335176`*^9, 3.830800775897285*^9}, {3.830800809113729*^9, 
   3.830800853003669*^9}, {3.830800883414535*^9, 3.830800904387066*^9}, {
   3.830800936523878*^9, 3.8308009615614*^9}, {3.830801022564989*^9, 
   3.8308010371327877`*^9}, {3.830801077575809*^9, 3.830801107265891*^9}, {
   3.8308011425687017`*^9, 3.8308011469300213`*^9}, {3.830801454463393*^9, 
   3.8308014677555733`*^9}, {3.830801509990383*^9, 3.8308015213015957`*^9}, {
   3.830801622374188*^9, 3.830801635289012*^9}, {3.8308054598477993`*^9, 
   3.830805500996613*^9}, {3.8308055847439547`*^9, 3.8308056600370607`*^9}, {
   3.830811128893573*^9, 3.830811161524096*^9}, {3.8308112086984587`*^9, 
   3.8308112373119926`*^9}, {3.830811269008563*^9, 3.8308113088881893`*^9}, {
   3.830811366213352*^9, 3.830811399843849*^9}, {3.830811468530634*^9, 
   3.830811525886977*^9}, {3.8308115730616913`*^9, 3.830811604273197*^9}, {
   3.830811648274287*^9, 3.830811711346426*^9}, {3.830811755279475*^9, 
   3.830811818010042*^9}, {3.830811944633027*^9, 3.8308119919798183`*^9}, {
   3.83081202330692*^9, 3.830812054363097*^9}, {3.830812096817198*^9, 
   3.8308120982213993`*^9}, {3.830812130343811*^9, 3.830812277836193*^9}, 
   3.830812330036991*^9, {3.830812693164405*^9, 3.8308127005127783`*^9}, {
   3.8308509982917547`*^9, 3.8308509988795958`*^9}, {3.830851397253221*^9, 
   3.830851400733315*^9}, {3.8308521659735193`*^9, 3.830852168422861*^9}, 
   3.830852219859852*^9, {3.830852350480453*^9, 3.83085235872773*^9}, 
   3.830852428314801*^9, {3.830853361931325*^9, 3.8308534763392773`*^9}, {
   3.830853533734047*^9, 3.830853600077083*^9}, {3.830853657729437*^9, 
   3.830853668479282*^9}, {3.8308550252685747`*^9, 3.830855064386866*^9}, {
   3.830855189533125*^9, 3.830855232199891*^9}, {3.83085538704207*^9, 
   3.830855401630474*^9}, 3.830855460524284*^9, {3.8308554936955223`*^9, 
   3.830855515952312*^9}, {3.830855546464566*^9, 3.83085555226985*^9}, {
   3.830855592901634*^9, 3.830855593357242*^9}, {3.830855640122274*^9, 
   3.8308556685990553`*^9}, {3.830855757996694*^9, 3.8308557587397003`*^9}, {
   3.83085582439395*^9, 3.830855848169861*^9}, {3.830855884520462*^9, 
   3.8308559393852882`*^9}, {3.830855991041316*^9, 3.830856079543563*^9}, 
   3.830856294169129*^9, {3.830856325234325*^9, 3.830856349609833*^9}, {
   3.830856383920516*^9, 3.830856422053186*^9}, {3.830856734929482*^9, 
   3.830856744852257*^9}, {3.8308569084048862`*^9, 3.830856920161364*^9}, {
   3.830857396468577*^9, 3.83085740052211*^9}, {3.830859457283578*^9, 
   3.830859463387596*^9}, 3.830954239555992*^9, {3.830954320958481*^9, 
   3.83095433982098*^9}, {3.830954406508607*^9, 3.8309544195300922`*^9}, {
   3.830954464609128*^9, 3.830954494752657*^9}, {3.830954554030888*^9, 
   3.830954644925761*^9}, {3.830954722346875*^9, 3.8309547374823008`*^9}, {
   3.8310546788181667`*^9, 3.831054744625428*^9}, {3.831718436292075*^9, 
   3.8317184602003403`*^9}, {3.8317184944794397`*^9, 
   3.8317185265273657`*^9}, {3.831718947287718*^9, 3.831719058522574*^9}, {
   3.8317190957165737`*^9, 3.8317191008705263`*^9}, {3.8317191383528748`*^9, 
   3.8317191485788527`*^9}, {3.831719207746195*^9, 3.8317192301319532`*^9}, {
   3.831719283776371*^9, 3.831719322240253*^9}, {3.831719708562855*^9, 
   3.831719744777165*^9}, {3.831719776748519*^9, 3.831719808711986*^9}, {
   3.831719861817971*^9, 3.831719897438676*^9}, {3.831719977599358*^9, 
   3.831720031458539*^9}, {3.83172021998811*^9, 3.8317202261389637`*^9}, {
   3.831720312757112*^9, 3.83172036433232*^9}, {3.831720402841826*^9, 
   3.831720406769422*^9}, {3.831720440178218*^9, 3.831720445516243*^9}, {
   3.831720853206142*^9, 3.831720860964899*^9}, {3.831720896302998*^9, 
   3.831721077469149*^9}, {3.831721302454894*^9, 3.831721451481263*^9}, {
   3.8317215344894867`*^9, 3.831721559808959*^9}, {3.8317441852219067`*^9, 
   3.831744291427845*^9}, {3.831744345129243*^9, 3.8317443772851543`*^9}, {
   3.8317444786170263`*^9, 3.831744485154187*^9}, {3.8317445209324923`*^9, 
   3.83174456045086*^9}, {3.8317445983131437`*^9, 3.831744827557279*^9}, {
   3.831744863289003*^9, 3.831744997824423*^9}, {3.831745087000999*^9, 
   3.831745091672557*^9}, {3.831745179334325*^9, 3.831745206241153*^9}, {
   3.831745350544479*^9, 3.831745382904841*^9}, {3.831745422831562*^9, 
   3.8317456527767*^9}, {3.831745755513812*^9, 3.831745839830433*^9}, {
   3.831748826990147*^9, 3.831748827469005*^9}, {3.831755241116486*^9, 
   3.8317553285473757`*^9}, {3.831755430644987*^9, 3.83175548604077*^9}, {
   3.831755838477593*^9, 3.831755842178076*^9}, {3.831922407924419*^9, 
   3.831922411665875*^9}, 3.831922467457631*^9, {3.8319225182436333`*^9, 
   3.831922524286084*^9}, 3.831923205732108*^9, {3.8319740133842707`*^9, 
   3.831974054408227*^9}, {3.831974240407846*^9, 3.8319742832615843`*^9}, {
   3.831974354363796*^9, 3.8319743632680798`*^9}, {3.831974397118923*^9, 
   3.831974439491187*^9}, {3.831974474993752*^9, 3.8319744782658167`*^9}, {
   3.831974597282137*^9, 3.8319745978926888`*^9}, {3.83197463334382*^9, 
   3.831974635439107*^9}, {3.831975449040382*^9, 3.831975475714259*^9}, {
   3.835888896793491*^9, 3.835888898230082*^9}, {3.835889295023972*^9, 
   3.835889389300849*^9}, 3.835889490154337*^9, 3.835889542189541*^9, {
   3.8358895739155293`*^9, 3.83588972935518*^9}, {3.835889778782386*^9, 
   3.835889802080616*^9}, {3.835889921112595*^9, 3.8358899663415613`*^9}, {
   3.835890002067922*^9, 3.8358900239287987`*^9}, {3.835890063345003*^9, 
   3.835890089653523*^9}, {3.8358906538434763`*^9, 3.8358906626278057`*^9}, {
   3.836403559289042*^9, 3.83640356723604*^9}, {3.836403598540799*^9, 
   3.8364036771128607`*^9}, {3.836403741849935*^9, 3.836403757577066*^9}, {
   3.836403871407771*^9, 3.836403897719777*^9}, {3.8364045374079*^9, 
   3.836404552001699*^9}, {3.836404597855197*^9, 3.8364046039789963`*^9}, {
   3.836406863797804*^9, 3.836406881577264*^9}, {3.83640691331837*^9, 
   3.836406917081099*^9}, {3.83640698407213*^9, 3.836407006661592*^9}, {
   3.836407239086944*^9, 3.83640724145117*^9}, {3.836407647188408*^9, 
   3.8364076508780117`*^9}, {3.8364081533625174`*^9, 3.836408161054968*^9}, {
   3.840558316023525*^9, 3.840558324916389*^9}, {3.8405584742482452`*^9, 
   3.840558499940484*^9}, {3.840558550078978*^9, 3.840558572238173*^9}, 
   3.843928332981757*^9, {3.844466276453207*^9, 3.844466338340901*^9}, {
   3.854025884353508*^9, 3.8540258995681763`*^9}},
 CellLabel->
  "In[924]:=",ExpressionUUID->"98a00e71-a7ef-4ccc-9bdd-64efe90cbc53"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Format results", "Subsubsection",
 CellChangeTimes->{{3.843081773886293*^9, 
  3.8430817788224173`*^9}},ExpressionUUID->"04d43385-89f9-461f-9cac-\
cce42f12e68a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "transpose", " ", "this", " ", "to", " ", "change", " ", "the", " ", 
    "nested", " ", "list", " ", "from", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"P1", " ", "at", " ", "z1"}], ",", " ", 
        RowBox[{"P2", " ", "at", " ", "z1"}]}], "}"}], ",", " ", 
      RowBox[{"{", "z2", "}"}], ",", " ", 
      RowBox[{"{", "z3", "}"}]}], "}"}], " ", "to", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"z1", ",", " ", "z2", ",", " ", 
        RowBox[{"z3", " ", "at", " ", "P1"}]}], "}"}], ",", " ", 
      RowBox[{"{", "P2", "}"}]}], "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SeparateP", "=", 
     RowBox[{"Transpose", "[", "zetaRuns", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"no", " ", "fish"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zetaRunsNoP", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"SeparateP", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", "1"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"with", " ", "fish"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zetaRunsP", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"SeparateP", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", " ", "1"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"no", " ", "fish"}], ",", " ", 
     RowBox[{"different", " ", "zetas"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zeta100", "=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"str", "[", 
       RowBox[{"zetaRunsNoP", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"zeta", "=", "1"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zeta50", "=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"str", "[", 
       RowBox[{"zetaRunsNoP", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"zeta", "=", "0.5"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zeta10", "=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"str", "[", 
       RowBox[{"zetaRunsNoP", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"zeta", "=", "0.1"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"fish", ",", " ", 
     RowBox[{"different", " ", "zetas"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zeta100P", "=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"str", "[", 
       RowBox[{"zetaRunsP", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zeta50P", "=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"str", "[", 
       RowBox[{"zetaRunsP", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zeta10P", "=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"str", "[", 
       RowBox[{"zetaRunsP", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8364039348996487`*^9, 3.836403955395543*^9}, {
   3.836403998265098*^9, 3.836404091851635*^9}, {3.8364069255296593`*^9, 
   3.836406972282916*^9}, {3.836407040292838*^9, 3.836407043259725*^9}, {
   3.840558613329928*^9, 3.840558745264958*^9}, {3.840558820514185*^9, 
   3.8405589119730463`*^9}, {3.843081786792572*^9, 3.843081787815954*^9}, 
   3.8430818255989428`*^9, {3.844466356621867*^9, 3.844466430669631*^9}},
 CellLabel->
  "In[933]:=",ExpressionUUID->"707ce429-7d8c-4b07-97fc-ca8abb4a8c29"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.843081784158259*^9},ExpressionUUID->"9f6c97b6-a59f-4955-a4ed-\
2018c2281e9c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot results", "Subsection",
 CellChangeTimes->{{3.843081846956067*^9, 
  3.843081850085943*^9}},ExpressionUUID->"9662ae6e-e066-4f3f-a8bb-\
bcfb567ea6db"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"paddingS12", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"80", 
        RowBox[{"(*", "left", "*)"}], ",", "15"}], 
       RowBox[{"(*", "right", "*)"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"30", 
        RowBox[{"(*", "bottom", "*)"}], ",", "10"}], " ", 
       RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"no", " ", "fish", " ", "case"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "plot", " ", "interstitial", " ", "nitrogen", " ", "for", " ", "the", " ", 
    "three", " ", "values", " ", "of", " ", "zeta"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotS12a", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"Ni", "[", "t", "]"}], "/.", "zeta100"}], "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"Ni", "[", "t", "]"}], "/.", "zeta50"}], "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"Ni", "[", "t", "]"}], "/.", "zeta10"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "tmax"}], "}"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<Fish absent\>\""}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Full", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", 
             RowBox[{"3.6", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "7"}]}]}]}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<a)\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"Black", ",", "16"}], "}"}]}], "]"}], ",", 
           RowBox[{"Offset", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"5", 
               RowBox[{"(*", 
                RowBox[{"right", " ", "from", " ", "top", " ", "left"}], 
                "*)"}], ",", 
               RowBox[{"-", "5"}]}], 
              RowBox[{"(*", 
               RowBox[{"down", " ", "from", " ", "top", " ", "left"}], "*)"}],
               "}"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "12"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
        RowBox[{"ImagePadding", "\[Rule]", "paddingS12"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", " ", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "12"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"500", ",", "0"}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
            RowBox[{"(*", "right", "*)"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
            RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"(*", "True", "*)"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "0", ",", " ", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", 
                 ",", "0.05"}], "}"}], ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"(*", "None", "*)"}], 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"2", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.2\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"4", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.4\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"6", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.6\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"8", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.8\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "6"}]]}], ",", " ", "\"\<1.0\>\""}], "}"}]}],
                 "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], "*)"}], 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<Interstitial N (mol \!\(\*SuperscriptBox[\(L\), \(-1\)]\))\>\
\"", ",", "None"}], "}"}], 
           RowBox[{"(*", 
            RowBox[{"\\n", " ", "makes", " ", "line", " ", "break"}], "*)"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "10"}], 
          RowBox[{"(*", 
           RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
        " ", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "12"}], "]"}]}], 
        RowBox[{"(*", 
         RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], 
            RowBox[{"(*", 
             RowBox[{",", "Dashed"}], "*)"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "}"}]}], "}"}]}]}], "]"}], ",", 
      RowBox[{"RegionPlot", "[", 
       RowBox[{
        RowBox[{"tStartStress", "<", "t", "<", 
         RowBox[{"tStartStress", "+", "tHigh"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "590", ",", "640"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", " ", 
        RowBox[{"Frame", "\[Rule]", " ", "False"}], ",", " ", 
        RowBox[{"Mesh", "->", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"GrayLevel", "[", 
          RowBox[{"0.09", ",", " ", "0.06"}], "]"}]}]}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "plot", " ", "host", " ", "growth", " ", "rate", " ", "for", " ", "the", 
    " ", "three", " ", "values", " ", "of", " ", "zeta"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotS12b", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"H", "'"}], "[", "t", "]"}], "/", 
             RowBox[{"H", "[", "t", "]"}]}], "/.", "zeta100"}], "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"H", "'"}], "[", "t", "]"}], "/", 
             RowBox[{"H", "[", "t", "]"}]}], "/.", "zeta50"}], "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"H", "'"}], "[", "t", "]"}], "/", 
             RowBox[{"H", "[", "t", "]"}]}], "/.", "zeta10"}], "]"}]}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "tmax"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Full", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.021"}], ",", " ", "0.022"}], "}"}]}], "}"}]}], 
        ",", 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<b)\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"Black", ",", "16"}], "}"}]}], "]"}], ",", 
           RowBox[{"Offset", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"5", 
               RowBox[{"(*", 
                RowBox[{"right", " ", "from", " ", "top", " ", "left"}], 
                "*)"}], ",", 
               RowBox[{"-", "5"}]}], 
              RowBox[{"(*", 
               RowBox[{"down", " ", "from", " ", "top", " ", "left"}], "*)"}],
               "}"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "12"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
        RowBox[{"ImagePadding", "\[Rule]", "paddingS12"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", " ", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "12"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"500", ",", "0"}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
            RowBox[{"(*", "right", "*)"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
            RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"(*", "True", "*)"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "0", ",", " ", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", 
                 ",", "0.05"}], "}"}], ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"(*", "None", "*)"}], 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"2", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.2\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"4", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.4\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"6", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.6\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"8", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.8\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "6"}]]}], ",", " ", "\"\<1.0\>\""}], "}"}]}],
                 "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], "*)"}], 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<Host specific growth rate \\n (C-mol H C-mol \
\!\(\*SuperscriptBox[\(H\), \(-1\)]\) \!\(\*SuperscriptBox[\(d\), \
\(-1\)]\))\>\"", ",", "None"}], "}"}], 
           RowBox[{"(*", 
            RowBox[{"\\n", " ", "makes", " ", "line", " ", "break"}], "*)"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Time (d)\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
        " ", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "10"}], 
          RowBox[{"(*", 
           RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
        " ", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "12"}], "]"}]}], 
        RowBox[{"(*", 
         RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], 
            RowBox[{"(*", 
             RowBox[{",", "Dashed"}], "*)"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "}"}]}], "}"}]}]}], "]"}], ",", 
      RowBox[{"RegionPlot", "[", 
       RowBox[{
        RowBox[{"tStartStress", "<", "t", "<", 
         RowBox[{"tStartStress", "+", "tHigh"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "590", ",", "640"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", " ", 
        RowBox[{"Frame", "\[Rule]", " ", "False"}], ",", " ", 
        RowBox[{"Mesh", "->", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"GrayLevel", "[", 
          RowBox[{"0.09", ",", " ", "0.06"}], "]"}]}]}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"with", " ", "fish", " ", "case"}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{"(*", " ", 
   RowBox[{
   "plot", " ", "interstitial", " ", "nitrogen", " ", "for", " ", "the", " ", 
    "three", " ", "values", " ", "of", " ", "zeta"}], " ", " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotS12c", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"Ni", "[", "t", "]"}], "/.", "zeta100P"}], "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"Ni", "[", "t", "]"}], "/.", "zeta50P"}], "]"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"Ni", "[", "t", "]"}], "/.", "zeta10P"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "500", ",", "tmax"}], "}"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<Fish present\>\""}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Full", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", 
             RowBox[{"3.6", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "7"}]}]}]}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<c)\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"Black", ",", "16"}], "}"}]}], "]"}], ",", 
           RowBox[{"Offset", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"5", 
               RowBox[{"(*", 
                RowBox[{"right", " ", "from", " ", "top", " ", "left"}], 
                "*)"}], ",", 
               RowBox[{"-", "5"}]}], 
              RowBox[{"(*", 
               RowBox[{"down", " ", "from", " ", "top", " ", "left"}], "*)"}],
               "}"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "12"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
        RowBox[{"ImagePadding", "\[Rule]", "paddingS12"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", " ", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
           " ", "12"}], 
          RowBox[{"(*", 
           RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"500", ",", "0"}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
            RowBox[{"(*", "right", "*)"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", 
             RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
            RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"(*", "True", "*)"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "0", ",", " ", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", 
                 ",", "0.05"}], "}"}], ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"(*", "None", "*)"}], 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"2", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.2\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"4", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.4\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"6", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.6\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"8", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.8\>\""}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "*", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "6"}]]}], ",", " ", "\"\<1.0\>\""}], "}"}]}],
                 "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], "*)"}], 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"None", ",", "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{"FrameTicksStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "10"}], 
          RowBox[{"(*", 
           RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
        " ", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "12"}], "]"}]}], 
        RowBox[{"(*", 
         RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], 
            RowBox[{"(*", 
             RowBox[{",", "Dashed"}], "*)"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "}"}]}], "}"}]}]}], "]"}], ",", 
      RowBox[{"RegionPlot", "[", 
       RowBox[{
        RowBox[{"tStartStress", "<", "t", "<", 
         RowBox[{"tStartStress", "+", "tHigh"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "590", ",", "640"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", " ", 
        RowBox[{"Frame", "\[Rule]", " ", "False"}], ",", " ", 
        RowBox[{"Mesh", "->", "None"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"GrayLevel", "[", 
          RowBox[{"0.09", ",", " ", "0.06"}], "]"}]}]}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "plot", " ", "host", " ", "growth", " ", "rate", " ", "for", " ", "the", 
    " ", "three", " ", "values", " ", "of", " ", "zeta"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotS12d", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"H", "'"}], "[", "t", "]"}], "/", 
            RowBox[{"H", "[", "t", "]"}]}], "/.", "zeta100P"}], "]"}], ",", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"H", "'"}], "[", "t", "]"}], "/", 
            RowBox[{"H", "[", "t", "]"}]}], "/.", "zeta50P"}], "]"}], ",", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"H", "'"}], "[", "t", "]"}], "/", 
            RowBox[{"H", "[", "t", "]"}]}], "/.", "zeta10P"}], "]"}]}], "}"}],
        ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "500", ",", "tmax"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Full", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.021"}], ",", " ", "0.022"}], "}"}]}], "}"}]}], 
       ",", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<d)\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"Black", ",", "16"}], "}"}]}], "]"}], ",", 
          RowBox[{"Offset", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"5", 
              RowBox[{"(*", 
               RowBox[{"right", " ", "from", " ", "top", " ", "left"}], 
               "*)"}], ",", 
              RowBox[{"-", "5"}]}], 
             RowBox[{"(*", 
              RowBox[{"down", " ", "from", " ", "top", " ", "left"}], "*)"}], 
             "}"}], ",", 
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
          RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
          " ", "12"}], 
         RowBox[{"(*", 
          RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", "paddingS12"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", " ", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"FontColor", "\[Rule]", " ", "Black"}], ",", " ", 
          RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ",", 
          " ", "12"}], 
         RowBox[{"(*", 
          RowBox[{"label", " ", "size"}], "*)"}], "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
       RowBox[{"AxesOrigin", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"500", ",", "0"}], "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", 
            RowBox[{"(*", "left", "*)"}], ",", " ", "False"}], 
           RowBox[{"(*", "right", "*)"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", 
            RowBox[{"(*", "bottom", "*)"}], ",", "False"}], 
           RowBox[{"(*", "top", "*)"}], "}"}]}], "}"}]}], ",", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"(*", "True", "*)"}], 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "0", ",", " ", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", 
                ",", "0.05"}], "}"}], ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"(*", "None", "*)"}], 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", "\"\<0\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"2", "*", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.2\>\""}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"4", "*", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.4\>\""}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"6", "*", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.6\>\""}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"8", "*", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "7"}]]}], ",", " ", "\"\<0.8\>\""}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1", "*", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "6"}]]}], ",", " ", "\"\<1.0\>\""}], "}"}]}],
                "}"}], ",", "None"}], "}"}]}], "}"}]}], ","}], "*)"}], 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"None", ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Time (d)\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
       " ", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "10"}], 
         RowBox[{"(*", 
          RowBox[{"size", " ", "of", " ", "ticks"}], "*)"}], "]"}]}], ",", 
       " ", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "12"}], "]"}]}], 
       RowBox[{"(*", 
        RowBox[{"axis", " ", "label", " ", "size"}], "*)"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], 
           RowBox[{"(*", 
            RowBox[{",", "Dashed"}], "*)"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}], "}"}]}], "}"}]}]}], "]"}], ",", 
     RowBox[{"RegionPlot", "[", 
      RowBox[{
       RowBox[{"tStartStress", "<", "t", "<", 
        RowBox[{"tStartStress", "+", "tHigh"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "590", ",", "640"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", " ", 
       RowBox[{"Frame", "\[Rule]", " ", "False"}], ",", " ", 
       RowBox[{"Mesh", "->", "None"}], ",", 
       RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"GrayLevel", "[", 
         RowBox[{"0.09", ",", " ", "0.06"}], "]"}]}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8430821092072906`*^9, 3.843082110540565*^9}, {
  3.8430823032880507`*^9, 3.843082315021481*^9}, {3.8430823514872437`*^9, 
  3.843082358073022*^9}, {3.843082393183096*^9, 3.843082394382574*^9}, {
  3.843082430181622*^9, 3.843082512914443*^9}, {3.843082559535269*^9, 
  3.843082589271825*^9}, {3.843082634663353*^9, 3.843082825078642*^9}, {
  3.843082867276149*^9, 3.84308302705468*^9}, {3.8430830941896677`*^9, 
  3.8430830949821177`*^9}, {3.8444664400385447`*^9, 3.8444665425358887`*^9}, {
  3.845645618443012*^9, 3.845645619354825*^9}},
 CellLabel->
  "In[942]:=",ExpressionUUID->"ba12b727-8869-46c0-9882-6d91e34817bf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"zetaLeg", "=", 
    RowBox[{"LineLegend", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<0.1\>\"", ",", "\"\<0.5\>\"", ",", "\"\<1.0\>\""}], "}"}],
       ",", 
      RowBox[{
      "LegendLabel", "\[Rule]", " ", 
       "\"\<Fraction of waste N \\n available to host\>\""}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", " ", 
       RowBox[{"{", "14", "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"zetaFig", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"plotS12a", ",", " ", "plotS12c"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"plotS12b", ",", " ", "plotS12d"}], "}"}]}], "}"}], ",", " ", 
      RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
      RowBox[{"Spacings", "\[Rule]", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", 
           RowBox[{"(*", 
            RowBox[{"left", "?"}], "*)"}], ",", 
           RowBox[{"-", "80"}]}], 
          RowBox[{"(*", 
           RowBox[{"labels", " ", "and", " ", "left", " ", "col"}], "*)"}], 
          RowBox[{"(*", 
           RowBox[{"left", " ", "to", " ", "right"}], "*)"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", 
           RowBox[{"(*", "top", "*)"}], ",", "0"}], 
          RowBox[{"(*", 
           RowBox[{"middle", " ", "2", " ", "rows"}], "*)"}], " ", 
          RowBox[{"(*", 
           RowBox[{"labels", " ", "and", " ", "bottom"}], "*)"}], 
          RowBox[{"(*", 
           RowBox[{"top", " ", "to", " ", "bottom"}], "*)"}], "}"}]}], 
        "}"}]}], ",", " ", 
      RowBox[{"Frame", "\[Rule]", "False"}]}], 
     RowBox[{"(*", 
      RowBox[{",", " ", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "GoldenRatio"}]}]}], "*)"}], 
     RowBox[{"(*", 
      RowBox[{",", " ", 
       RowBox[{"Alignment", "\[Rule]", " ", "Bottom"}]}], "*)"}], " ", 
     RowBox[{"(*", 
      RowBox[{
      "align", " ", "the", " ", "grid", " ", "at", " ", "the", " ", "bottom", 
       " ", "of", " ", "its", " ", "frame"}], "*)"}], "]"}], ",", 
    RowBox[{"Placed", "[", 
     RowBox[{"zetaLeg", ",", 
      RowBox[{"(*", "Bottom", "*)"}], 
      RowBox[{"{", 
       RowBox[{"1.2", 
        RowBox[{"(*", 
         RowBox[{
         "left", " ", "to", " ", "right", " ", "position", " ", "is", " ", 
          "in", " ", "the", " ", "center"}], "*)"}], ",", "1"}], 
       RowBox[{"(*", 
        RowBox[{"top", " ", "to", " ", "bottom", " ", "position"}], "*)"}], 
       "}"}]}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8423931222503767`*^9, 3.84239316496241*^9}, {
   3.842393215100142*^9, 3.842393216777321*^9}, {3.842393374652343*^9, 
   3.842393391545878*^9}, {3.8423934890524607`*^9, 3.842393497687471*^9}, {
   3.842393730079791*^9, 3.842393798313652*^9}, {3.842393943389686*^9, 
   3.842393951838909*^9}, {3.842394074587543*^9, 3.842394101523737*^9}, {
   3.842394132276989*^9, 3.842394132509925*^9}, {3.842394166205171*^9, 
   3.842394170706992*^9}, {3.842394221603158*^9, 3.842394231620736*^9}, {
   3.842394379746133*^9, 3.842394423908218*^9}, {3.842394561020013*^9, 
   3.842394619149837*^9}, {3.842394723548203*^9, 3.842394730014339*^9}, {
   3.84239493520739*^9, 3.842395012141183*^9}, {3.842395114713894*^9, 
   3.842395134539666*^9}, {3.842395264566277*^9, 3.842395317044787*^9}, {
   3.8423958755109577`*^9, 3.842395906360956*^9}, {3.84239594453514*^9, 
   3.84239598472083*^9}, {3.842396103941513*^9, 3.8423961992794323`*^9}, 
   3.8426349594828863`*^9, {3.842634996999845*^9, 3.8426350301339397`*^9}, {
   3.842635083339452*^9, 3.8426351228360977`*^9}, {3.842738228856474*^9, 
   3.842738279641489*^9}, {3.842738325164055*^9, 3.8427383885729227`*^9}, {
   3.84273848759693*^9, 3.842738586958469*^9}, {3.842819678185298*^9, 
   3.842819712829331*^9}, {3.842819757762548*^9, 3.842819862828858*^9}, {
   3.842822968728881*^9, 3.8428230472480793`*^9}, {3.8428230989109497`*^9, 
   3.842823150975244*^9}, {3.842823191719845*^9, 3.842823287502561*^9}, {
   3.8428233293729897`*^9, 3.8428233432804337`*^9}, {3.8428235140325623`*^9, 
   3.842823573879204*^9}, {3.842823633322482*^9, 3.842823723812557*^9}, {
   3.843083252366213*^9, 3.8430832995321207`*^9}, {3.843083344958817*^9, 
   3.843083365390119*^9}, {3.843083401980389*^9, 3.843083429004731*^9}, {
   3.844466549203179*^9, 3.844466552650221*^9}, {3.8445110168031387`*^9, 
   3.844511018368631*^9}, {3.845643397837644*^9, 3.8456434003960333`*^9}},
 CellLabel->
  "In[947]:=",ExpressionUUID->"c7fe0972-8223-4257-8847-1491733fbbe9"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[
             {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
               "]]},
             Annotation[#, "Charting`Private`Tag$154187#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
N2ziEf8ffqXkYw==
               "]]},
             Annotation[#, "Charting`Private`Tag$154187#2"]& ], 
            TagBox[
             {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
nz2NEo0EQ3oydG230IDRkr9KWOe8KZascaFBJ8dIxaOZfR86vp6t6UTDoHwi
59RXgi+yi3pW2tOQ+njP+N42tp+CK8b4m9Mw00lSOa+dfV/odtRfNKUh6lvC
oqgOtl/0vRVrjWkImFrurNFFcMJFldxdhjTY7zNK29RD8OmV84tKFtLwZLjs
vnovwf/2zptvokuD4ak9pW2sdYwv1Gbo0KDyJKE7vI+g+a/VLRc0aeiaJml9
d4Bd39WWjPo5NHhlJmwifwhGWEbLBqnR8BGN9q0ZJJjvK2xRVaWh0HvPiS9D
BFerevr6KtEQ97SsXlFShOKqOiM3RXb9VEJgwDgRPo3+13twIg0r5sZIG49n
x808Wnom0ODw/sjxHtbWWzeRTlkaNi8/kCqQFeGCuK1NneNpEChvLuHIiVA7
6WTINGkaLpROV9oxVYR3ghdsvDXIgwwil6Y6TYRS6YuO/h7gQZap9KI61oFz
dNVt+nnw6GKP9RZFEe6MT5re0suDyqBK742zRDhmnb6rawcPpPWiH9qpsfGa
Jb86G3kwoenw8nFzRBjl2vRZ2MAD+fiw8kLWko+rmvs+8UBFmt9oPVeElteX
9cvW8cC4bo0saIiwtARuOFXzYE/UxC1LdEVoZD00YXcpD4rbxP2zTESoMPV+
sPZ9HjxRSC58y3q/82DjwF0e2y93o4+bsvdbX/atPJsHKUyzjrS5CE0yFjwI
vM0D/+lWWzotRHj+3Kl7X6/zYC4MPHxuzeaPNL0Zc4kHB49SQT5rRHhrpsFS
7VgeLNBdL1HmKcJ4ZVMdB38elLjJpp3xEqHqvFZ5Rz8ecI4W2O/aI0L9wLqC
tb48uNb2z+m+vSLkJc0+6CLkwZIbs/XmUiJs/Dy7g+bxwOyf5i0BQhHmv7FW
K/DiwUoMuKseKsKezPvxLS482O10jusfJ0L3DUraJUt50J4s8Hn8QoT31ian
vpzAA6fqooaBAREqL69Jyq7lwtHiP9V2eoew3S49n7nFhRmNdz2Nth7CY1WS
p+EYF4Kae9wUjx/C1HUNal37uGA44dH32NxDKJV8zPSyPRdy27ZKaLYdwseT
TTZb6HNh3iMm+KpaOAZIVSQ9kOdCzVX9k6/XhOPBnNZarX4KvI9sl29lwjHz
dHBK9GcKVv+rqJV6Mxw3bat19CqhYMzKzGecz+GYlHxv6aL7FJxqf1q8YGoE
dg8b7+67SIH/Q/e9YusITN/eV8E7RYGBgOHV+EVg60rX6G8iCgqaQgbhcgR6
WTRrSPlRkHZQai5Ws9f7SbeZ7KVg5+DEG8ayYpRInnKC40YBfeHcuxIzMcba
tTTy2fP2eilZkWCvGG21ZznvZ8/jcuv74+QSxdgQ89L2MHueV8rn264sFmNn
8Yy9fwzZ8/98W43ZJWJs15d8WcV6WoSSVBvr8dP3W99iLWf/PC+mTIwJW9cF
7mMtUaEE9a/FGLdv0of3BhQ0Nzw39KsW43RpBfP7Syi4JqmintosxksvymTI
Ivb7YPdPCf8Wdr4pjb3bWV8qfFFv90WM+U7ZDUtZJx8Rnm3/KkZ/uR05vfoU
xMgXzTBvFeM6G6cX+1gHqPtMetPFzs+vbYqLHgU+Iru21J9izBirrfsPa36L
Sql/txhDTYssp7Lel1F0RLlXjHYGRfBqIQVuS1Sl9/5m/z/QrMiWtcvJ7ibz
fjE63zE/O5/1xt6ifLkBMUa4pXJHs3Z84BN2+48Yb7eqGObqUmCvtMo9YlCM
Z0d1kLOsVwarWroOiVH2gN6MQNY2n7qVFw6LUVWlodqV9TKrl3+GWffdkb9m
yvp/ltACaA==
               "]]},
             Annotation[#, "Charting`Private`Tag$154187#3"]& ]}, {}}, {
           GraphicsComplexBox[CompressedData["
1:eJxd2H1sleUZx/GuigisUEG7WhyDYoBgNJpRXVjCTjgkQ/9YCm6YvVBRxh9Q
HC5zc2WLGxpLFpY4XNFEE2e3RIcvxeESpx5jSQjYThzLllUSZhYoQ4l7sawE
X1Y2z/18rifc/AH55nflnC/3cz/Xdd9n3u1bVm9obGhoWPn/vz7+98T4kRMd
+++tDJx59ui5c/MHv7jgbFf1SMm717S82fnPkqdtX7Kq64L7gu94YfVwd2vJ
fzh5Z7Xn6pKva32g1ru85J+vfLaj75aSx7//+4H+zSXfsvudhXu2lfzikcn9
tYdKnj11Qdvw0yXzv2zu7q82nZgX/pg/5o/5Y/6YP+aP+WP+mD/mj/mfffDj
D/5M+GP+mD/mj/lj/pg/5o/5Y/6YP+Z/4MSyJzu7Zoc/5o/5Y/6YP+aP+WP+
mD/mj/lj/n2f6+jvXvSp8Mf8MX/MH/PH/DF/zB/zx/wxf8z/9h1XPdo7NjP8
MX/MH/PH/DF/zB/zx/wxf8wf819Xqy6u9jSFP+aP+WP+mD/mj/lj/pg/5o/5
Y/4f3XbtnJ6mSeGP+WP+mD/mj/lj/pg/5o/5Y/6Y/7Uzll7ZVX3/Vf6YP+aP
+WP+mD/mj/lj/pg/5o/5H/7tgta+kb+FP+aP+WP+mD/mj/lj/pg/5o/5Y/6D
ib/AH/PH/DF/zB/zx/wxf8wf88f8Mf9F6XmEP+aP+WP+mD/mj/lj/pg/5o/5
45i/6X2oxPwtOOZvwTF/C475W3DM34Jj/hYc87fgmL8Fx/wtOOZvwTF/C+b/
jdSPwh/zx/wxf8wf88f8MX/MH/PH/HH0/zQPwh9H/y84+n/B0f8Ljv5fcPT/
gqP/Fxz9v+Do/wVH/y84+n/B/B9M8zj8MX/MH/PH/DF/zB/zx/wxf8wf89+f
zkPhj/lj/pg/5o/5Y/6YP+aP+WP+mP+ZdB4Nf8wf88f8MX/MH/PH/DF/zB/z
x/wvTfeB8Mf8MX/MH/PH/DF/zB/zx/wxf5zdHyvZ/bGS3R8r2f2xkt0fK9n9
sZLdHyvZ/bGS3R8r2f2xkt0fK9n9sdIyfeMva284H7dn5+n2Qflr9Xk3N3Is
v7Xezz4dOZZfXZ83l0eO5R/W+/llkWP5UP37miPH8mvqnzclciwfrtc3RI7l
r9f533EewfKG+p/DNTmW70/1MU+x/ED6vtgvWL44+UaO5QfT/zdyLH8/rVfk
WH5VWu/IsXxtel6R4+z5V7LnH/ltab9Ejk+999Daav99sZ/Ov/+0D8rtJzmW
209yLLef5FhuP8mx3H6SY7n9JMdy+0mO5faTHMvtJzmW20/R/wuW209xvy9Y
bj/Jsdx+kmO5/STHcvtJjuX2kxxnz7+SPf/I7Sc5tv/8Hjaxbd6KnqF7Kxfv
e/fz1Z758X77vUn+rVMnf9fZNS9yv+fIn1l4oLvWOydyv5fIt26tbRjpbIvc
7xHylYf23jrW1jJ4fn+dGXlL3eeSyN2n5Qfr3zctcvdV+fr65zVG7j4on6jX
j0f/ct+Sv1nnw5G7z8ivrH/eO9G/3BfkX6v7/jdy53H5zvp6TI7n47wrH6+v
94zInSdj/evPc1bkzmvyt371wrHRjtbInYfkzav2vT3UfUXkzhvy9h9tuHuk
s+xf5rn8pa9s+mCou72y9Y0puz4xWO6f3uvObJrYU/7+Krd/sP2C7Q9sP2DP
H3ve2PPFnif2/LDnFX7F88GeR3x/sf7YemPri60ntn7Y+QJ/++5ZF+/pbI//
z8jj0++vdcwN/mHfrAv7Oq4IvunklImBc+V6tS5tODs0NCv40OX/OD60cEbw
xlePjJx7+aLgqcM/fbj78Y9ife5f/PrEwM6TwS33NK4fW/rnWJ8vffnkc51/
Hw/eceH2b451XRD+/+p65M7a8LTgp46uWVadXa7X0Z+sW7FoVUvw9Bs23dS0
vS24MvqdzrHanOAXX1v2dHdPuV43/6J6TVdfuV7mI568ZN+7o70lm4/4jrW1
jWPdJZuP+NdNWw6d6y/X13zE31u34WDb5tZg8xGveP7r+zquvzTYfMQzL1r9
cmdDyeYj3vebn20a6ZscbD7ilwY+qLWtnojnYz7i46efvLFp/FSw+Yif/8uu
R7rfHo7nZz7ix7b07Ohf8p9g8xF/dubhP7b1Ngabj/jhzcf/Ovre1GDzEd+z
/sO7RgYuCTYf8XPNk35QGy3ZfMTHXpm+rb+t3C/mY7xf3a3bezvL/WM+4vmf
3Hmgo1ruJ/MRv3Js142Luubn+20wy4OL/TmYfX70P/sT+zzs87D3H9vP2H7G
vh/n369/4Hz/L0/vW3BLWr+o935g9Tiv159w/j41p/c9eDQ9z6j3vmH1OK/X
/3D+fr6V+k3w3rS/ot77i9XjvF5/xfn7/kzqd8E/Tvs96vUDrB7n9fo3zvvH
6dRvgx9N71/U6y9YPc7rzQec96MHUr8PviH1g6jXr7B6nNebPzjvb2vSvAl+
IvWnqNf/sHqc15tvOO+X16d5F3w69cuo10+x+ljfrN78xHn//W7yCf5T8ol6
/Rmrx3m9+Yzzft6Y1jt4b1rvqNfvsfp4H7J68x/n82FD2k9lf037KerND6w+
+mNW73yB83kzlN6X4Ob0vkS9eRTvY1Ef/Sard37B+fxqSf0geHnqB1FvvsV+
KOqjn2b1zkc4n4crU78Lviv1u6g3L7F6nNc7f+F8vm5N/Tz4idTPo978xerj
/cvqne9wPq+LeRVczKuoN8+z+Rac1zs/ZvMxPn9LmrfBk9K8jXrnA6we5/XO
p9l8D87P++5H8vz+5L4U72dxX8LuS+efN8p54r6E3Zew+xJ2X8LuS9h9KfyK
+xJ2X4rvL+5L2H0p+ltxX8LuS7E/ivvS/wAYRdth
            "], {
             {GrayLevel[0.09], AbsoluteThickness[1.6], Opacity[0.06], 
              EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmAf8l9MXx+95SlP92iUVTS2l4dfUXv/SUCmRSsiIUISIElmRvbI32REK
ySrKlh0qKysr/kk4787n+3p+r1enc557z73nc+/z3M/9/L4NJ58wclqWUvrT
/yvl/hc3niu7VUnRVtqtqvwubnUspdpuu3pcpHzyqqm/jFt1+bJutdzKu1Vw
qy1f0a2G+su5NXfb3a2eW021MeY3Yanr1lhzMUcDYaLmHvLVNUdl4aqvNZC3
p/qp2VCeOnV9Hbu51fF4q+o0c2uk/lrCVKS5+rl1cuvstpfyqdnXrVh9rYWJ
mnvLU3NfrbOFWyutgbw26qdmW3nW2kFYqNNRnvH1HO/ubk08bql1NtC89fRc
rGf6e2ku5ugqTNTsJt9WuFsKVxetgbwGXqe+2z4eb3Nr79bDrbfmY0195KnZ
UzkdtEetNNefWgt9/dVHnaluE9wmsk9eZw+37h5vV53Bbgdo3xk3UGsA+xDl
UHN/edY6XJh4JyPkGT9U/WAfqfkGuA1TG2NGqY06h2o89XcIyxi3sYqpf5A8
9cfJU+cQzQuWn9w2uG3UWg9Q/Yny1ByvXOo18j1o6DZIWLpozU28rbHbaI8P
L4Flimof7HaUPPVPcJus3COFlbyj1U/NY+RZazOfu6nbJI/NYuw0t2PVD/Yj
VJO5/hUG8k5UHfpLWYyb5XayMFHzFHlqnqRccM3QGsibqX5qnirPN3KGsLCm
M+Wp2dxr7eV2nMfTNR9zzVY/dc6Sp/9seWrOFT5wnSNP/Xny1G/pc7dwO83j
XSzWNN/tfK0PXBfIg+tCeepfJE/9i+Wpf73bArdL3G6Qv1Q2V1gWyoOltddt
5Xaux2Ut6l/hdmUJLFfJg+VqebBcIw+Wa+XBcp38Ahm45gjLHOFYJExgqeh1
b3Z/v1t5i/o831ICy63yYLlNHiy3y4PlDnmw3CkPlrvk2Zu75dmbe+TBUsmi
/lK3Nh7v7XaZx4tLYHlAHiwPyoPlIXmwPCwPlkfkwfKoPFgekwfLEnmwtPea
7dzu9Xgf923dbtSe8U3xPT2pfQLX08IEluXCQf1n5Kn/ksY85bZMueQ9q35w
PScPriKLPXjB7UXtB+NXqB+877q94rbKraPnd3B73OOXVQdcb5aY41VhouZr
8s9pjqeFa7XWQN4a9VOz2Ofe1+15j9/SfKzpbXlqVrWo9YYwLdNc76ifOu+p
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
                 "]],
                 PolygonBox[CompressedData["
1:eJwtlHlMz3EYxz/PR0hCQqolRaWRFM3M8j+bv4z/8bfjT+U+yjEzzMyMZmZG
M3OGuXPN1ZyjmHO55mq5SfN6vH9/vPZ+P8/neD6f53vkz5w7ZU4MIUyGJOhH
kA71+N4WwkqohzRoJJfNWBY0BOVWwT5IhyZytege01qf04Aeg0xIJT6BHvc4
KPcDvkM1cTf0BlyHSuJcdA0cgAx4Ra4RvQA5UEDchn6G2X5+dDFshQAzkKVo
nWnMa3Sif6EWn4wuh50mv5HcMnSH6Sw+5x36NrFXRJfANpP3ml3pRVLU2hRy
o/Cl0BJ05ktwEcqCzrwa9kN/05wadLf3xtTzVNb2hLqgXDF+WFRvfc0K2GWq
5XOuotdMvfIaZ9DTid5ko7fgNuQlevoSfQHTgnr0CT5CFWEx+h4+mPwscm/Q
1wlfhLb6czD56f6OcLY+MJp4L/ET9KnXh6nEFYyNgTZ8JblynxvlW8m1oM2J
uUPQB/DQ5CeSe44+S9TyPb/BV6ghHo7+gt9Qksh1oH9gQ1CuL7XS4GjQGdvh
i2mt37k7Y8lQRryduAs+RvlSf4/wFuV9zxR8j6i7+pqR+JKou4wnHoDPgApT
zUz8QDgflKuCdX4H4iw4gj8MvYJy1fj1/k3gC+EK/rLJ/4Rz+LOmtT5nIX4z
dOAnwSH8Qfv/aEM7LMJsgc6gZ/4Y/8g013Mn8adM74p/k/P9OzDVKocF+E3e
Y/wEGMpdCmAcuZvEg/G5UX6s9xU/IqoXzeTuo/dMa/2MRYwVRo35HnfhTuJZ
+zuaw9igqL28Z01ex3QWP8M8/FrT3bxn+czNi/o3+T/oH5drjp8=
                 
                 "]]}]}, {}, {}, {}, {}}], {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{500., 0.},
         DisplayFunction->Identity,
         Epilog->InsetBox[
           FormBox[
            StyleBox["\"a)\"", {
              GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
           Offset[{5, -5}, 
            Scaled[{0, 1}]], 
           ImageScaled[{0, 
             Rational[1, 2]}]],
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{
            FormBox[
            "\"Interstitial N (mol \\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\
\\))\"", TraditionalForm], None}, {None, None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{80., 15.000000000000227`}, {30., 
          26.000000000000057`}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotLabel->FormBox["\"Fish absent\"", TraditionalForm],
         PlotRange->{{500, 800}, {0., 3.6*^-7}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}},
         Ticks->{Automatic, Automatic}], 
        NCache[{Rational[931, 2], Rational[-589, 2]}, {465.5, -294.5}], 
        ImageScaled[{0.5, 0.5}], {931, 589}], InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[
             {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
9HtoiMN8sxuGq4n/BzWf9Qo=
               "]]},
             Annotation[#, "Charting`Private`Tag$154421#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1:eJwl2Xk4VV0XAHBUEhrQQElKZGoQUmhZFSKFt0iRkjFDhpLUuYZ7z3XHEopS
kgrNaEIkQjILDVJRyZBEJIXk2/X95fk95+x9zl5r7bXPfSx0DdjqISYiIvJF
VETk798wyldcBCMwzEnfJF+agp5D89tD10WgeobePzsG1pX0r4/Abb90/3m1
hy6zzSwCZUNX/vOg9ehomVUEzn+//J/9Fgn7jztEYLj5sv+Pr7j+dl5ABF67
9v/7DeZ03zFIjsBmOc1/3mZqIL9MLBK9uxf9s9NFZu87nUjMHVP+//PyrmxO
donEqPtz/rmvwFbO/mQkftiv8s8/25lB14ojsab+F/z161/6qwd/ROK3uO3/
rsc8fcKxUWdig3Tsv+szH9cPV5kw0WxBzdq/Tsx752fhwMTvuy7jXws0tGYW
BTKRpyRm+tfUmdB8AwETHW0f/ZsvXkGw7M9FJs7QOKb115lnz10sfcBENZ+x
1X99b/jsDrl6Jg5PPhP717k7zk537WKizAGPuX+tsfTNyA1RFm77sOBDHvFZ
UcWOH3NZmOkc4Pf3ul6X8vnolSwMyApY8de1tap2Szax8N0sru5fv9D0M8l3
Y6H7JLuQv37LuaNpE8bCD22fDf+6pqhjp28CC5etU1T/60cjc/ncTBbaD5Tt
/OvSqa83ut5nYf2ZF+Z/XaV8WnxtPgu1f6qs+mvtNv/dv4jtKjv1//pYmnn2
3Ycs/FrQ8M/WmkMemo/I+Njaf87sqSloJ67OyfnnGZlpsy4WsjCBH/rPQUFh
+3cVsdD0zznJn3MpaNC1fzLnMQu/Pw0dl1eloMlcjj1QxsKaRHHRZEMK1kz5
8ubWUxYWJCb3hKwl8akq1vUuZ6Gha6vdHiT1YXugrbWChWPdQ9Z7zClo2Vm/
vqaahe0Vx8qVt1FgonjtLK+GhYdtM0KPbqcgpSVyYEMtC43iisTbd1Lg6rbi
Ul4dCyOs2zy/ulDQ7ndC9GoDCxueHiutC6DAfLnXTrdGFr4c6Px+7yAF6f1w
W+k5CxvbRCxuHqZgX0ivS/wLFoY05v6sjyD7JWJLEauJhazSAv+xGAoG4qQi
nFtYOE+/vKA/m4I/LlFZ6q0sVPh1lxH6kALJ5eMfvhO3JlR1zC6mQKVqwFTw
gYWvty5aeq6GArsJzZI5n1i4wPiefmk7BdkHrybM+MLCU6zKKVfnMqB43aLy
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
LlI=
               "]]},
             Annotation[#, "Charting`Private`Tag$154421#2"]& ], 
            TagBox[
             {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
jxBlezI8ZhFvNHw1MjoqRLW5e4VtzhT8D6O1zXg=
               "]]},
             Annotation[#, "Charting`Private`Tag$154421#3"]& ]}, {}}, {
           GraphicsComplexBox[CompressedData["
1:eJxd2H1sleUZx/GuigisUEG7WhyDYoBgNJpRXVjCTjgkQ/9YCm6YvVBRxh9Q
HC5zc2WLGxpLFpY4XNFEE2e3RIcvxeESpx5jSQjYThzLllUSZhYoQ4l7sawE
X1Y2z/18rifc/AH55nflnC/3cz/Xdd9n3u1bVm9obGhoWPn/vz7+98T4kRMd
+++tDJx59ui5c/MHv7jgbFf1SMm717S82fnPkqdtX7Kq64L7gu94YfVwd2vJ
fzh5Z7Xn6pKva32g1ru85J+vfLaj75aSx7//+4H+zSXfsvudhXu2lfzikcn9
tYdKnj11Qdvw0yXzv2zu7q82nZgX/pg/5o/5Y/6YP+aP+WP+mD/mj/mfffDj
D/5M+GP+mD/mj/lj/pg/5o/5Y/6YP+Z/4MSyJzu7Zoc/5o/5Y/6YP+aP+WP+
mD/mj/lj/n2f6+jvXvSp8Mf8MX/MH/PH/DF/zB/zx/wxf8z/9h1XPdo7NjP8
MX/MH/PH/DF/zB/zx/wxf8wf819Xqy6u9jSFP+aP+WP+mD/mj/lj/pg/5o/5
Y/4f3XbtnJ6mSeGP+WP+mD/mj/lj/pg/5o/5Y/6Y/7Uzll7ZVX3/Vf6YP+aP
+WP+mD/mj/lj/pg/5o/5H/7tgta+kb+FP+aP+WP+mD/mj/lj/pg/5o/5Y/6D
ib/AH/PH/DF/zB/zx/wxf8wf88f8Mf9F6XmEP+aP+WP+mD/mj/lj/pg/5o/5
45i/6X2oxPwtOOZvwTF/C475W3DM34Jj/hYc87fgmL8Fx/wtOOZvwTF/C+b/
jdSPwh/zx/wxf8wf88f8MX/MH/PH/HH0/zQPwh9H/y84+n/B0f8Ljv5fcPT/
gqP/Fxz9v+Do/wVH/y84+n/B/B9M8zj8MX/MH/PH/DF/zB/zx/wxf8wf89+f
zkPhj/lj/pg/5o/5Y/6YP+aP+WP+mP+ZdB4Nf8wf88f8MX/MH/PH/DF/zB/z
x/wvTfeB8Mf8MX/MH/PH/DF/zB/zx/wxf5zdHyvZ/bGS3R8r2f2xkt0fK9n9
sZLdHyvZ/bGS3R8r2f2xkt0fK9n9sdIyfeMva284H7dn5+n2Qflr9Xk3N3Is
v7Xezz4dOZZfXZ83l0eO5R/W+/llkWP5UP37miPH8mvqnzclciwfrtc3RI7l
r9f533EewfKG+p/DNTmW70/1MU+x/ED6vtgvWL44+UaO5QfT/zdyLH8/rVfk
WH5VWu/IsXxtel6R4+z5V7LnH/ltab9Ejk+999Daav99sZ/Ov/+0D8rtJzmW
209yLLef5FhuP8mx3H6SY7n9JMdy+0mO5faTHMvtJzmW20/R/wuW209xvy9Y
bj/Jsdx+kmO5/STHcvtJjuX2kxxnz7+SPf/I7Sc5tv/8Hjaxbd6KnqF7Kxfv
e/fz1Z758X77vUn+rVMnf9fZNS9yv+fIn1l4oLvWOydyv5fIt26tbRjpbIvc
7xHylYf23jrW1jJ4fn+dGXlL3eeSyN2n5Qfr3zctcvdV+fr65zVG7j4on6jX
j0f/ct+Sv1nnw5G7z8ivrH/eO9G/3BfkX6v7/jdy53H5zvp6TI7n47wrH6+v
94zInSdj/evPc1bkzmvyt371wrHRjtbInYfkzav2vT3UfUXkzhvy9h9tuHuk
s+xf5rn8pa9s+mCou72y9Y0puz4xWO6f3uvObJrYU/7+Krd/sP2C7Q9sP2DP
H3ve2PPFnif2/LDnFX7F88GeR3x/sf7YemPri60ntn7Y+QJ/++5ZF+/pbI//
z8jj0++vdcwN/mHfrAv7Oq4IvunklImBc+V6tS5tODs0NCv40OX/OD60cEbw
xlePjJx7+aLgqcM/fbj78Y9ife5f/PrEwM6TwS33NK4fW/rnWJ8vffnkc51/
Hw/eceH2b451XRD+/+p65M7a8LTgp46uWVadXa7X0Z+sW7FoVUvw9Bs23dS0
vS24MvqdzrHanOAXX1v2dHdPuV43/6J6TVdfuV7mI568ZN+7o70lm4/4jrW1
jWPdJZuP+NdNWw6d6y/X13zE31u34WDb5tZg8xGveP7r+zquvzTYfMQzL1r9
cmdDyeYj3vebn20a6ZscbD7ilwY+qLWtnojnYz7i46efvLFp/FSw+Yif/8uu
R7rfHo7nZz7ix7b07Ohf8p9g8xF/dubhP7b1Ngabj/jhzcf/Ovre1GDzEd+z
/sO7RgYuCTYf8XPNk35QGy3ZfMTHXpm+rb+t3C/mY7xf3a3bezvL/WM+4vmf
3Hmgo1ruJ/MRv3Js142Luubn+20wy4OL/TmYfX70P/sT+zzs87D3H9vP2H7G
vh/n369/4Hz/L0/vW3BLWr+o935g9Tiv159w/j41p/c9eDQ9z6j3vmH1OK/X
/3D+fr6V+k3w3rS/ot77i9XjvF5/xfn7/kzqd8E/Tvs96vUDrB7n9fo3zvvH
6dRvgx9N71/U6y9YPc7rzQec96MHUr8PviH1g6jXr7B6nNebPzjvb2vSvAl+
IvWnqNf/sHqc15tvOO+X16d5F3w69cuo10+x+ljfrN78xHn//W7yCf5T8ol6
/Rmrx3m9+Yzzft6Y1jt4b1rvqNfvsfp4H7J68x/n82FD2k9lf037KerND6w+
+mNW73yB83kzlN6X4Ob0vkS9eRTvY1Ef/Sard37B+fxqSf0geHnqB1FvvsV+
KOqjn2b1zkc4n4crU78Lviv1u6g3L7F6nNc7f+F8vm5N/Tz4idTPo978xerj
/cvqne9wPq+LeRVczKuoN8+z+Rac1zs/ZvMxPn9LmrfBk9K8jXrnA6we5/XO
p9l8D87P++5H8vz+5L4U72dxX8LuS+efN8p54r6E3Zew+xJ2X8LuS9h9KfyK
+xJ2X4rvL+5L2H0p+ltxX8LuS7E/ivvS/wAYRdth
            "], {
             {GrayLevel[0.09], AbsoluteThickness[1.6], Opacity[0.06], 
              EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmAf8l9MXx+95SlP92iUVTS2l4dfUXv/SUCmRSsiIUISIElmRvbI32REK
ySrKlh0qKysr/kk4787n+3p+r1enc557z73nc+/z3M/9/L4NJ58wclqWUvrT
/yvl/hc3niu7VUnRVtqtqvwubnUspdpuu3pcpHzyqqm/jFt1+bJutdzKu1Vw
qy1f0a2G+su5NXfb3a2eW021MeY3Yanr1lhzMUcDYaLmHvLVNUdl4aqvNZC3
p/qp2VCeOnV9Hbu51fF4q+o0c2uk/lrCVKS5+rl1cuvstpfyqdnXrVh9rYWJ
mnvLU3NfrbOFWyutgbw26qdmW3nW2kFYqNNRnvH1HO/ubk08bql1NtC89fRc
rGf6e2ku5ugqTNTsJt9WuFsKVxetgbwGXqe+2z4eb3Nr79bDrbfmY0195KnZ
UzkdtEetNNefWgt9/dVHnaluE9wmsk9eZw+37h5vV53Bbgdo3xk3UGsA+xDl
UHN/edY6XJh4JyPkGT9U/WAfqfkGuA1TG2NGqY06h2o89XcIyxi3sYqpf5A8
9cfJU+cQzQuWn9w2uG3UWg9Q/Yny1ByvXOo18j1o6DZIWLpozU28rbHbaI8P
L4Flimof7HaUPPVPcJus3COFlbyj1U/NY+RZazOfu6nbJI/NYuw0t2PVD/Yj
VJO5/hUG8k5UHfpLWYyb5XayMFHzFHlqnqRccM3QGsibqX5qnirPN3KGsLCm
M+Wp2dxr7eV2nMfTNR9zzVY/dc6Sp/9seWrOFT5wnSNP/Xny1G/pc7dwO83j
XSzWNN/tfK0PXBfIg+tCeepfJE/9i+Wpf73bArdL3G6Qv1Q2V1gWyoOltddt
5Xaux2Ut6l/hdmUJLFfJg+VqebBcIw+Wa+XBcp38Ahm45gjLHOFYJExgqeh1
b3Z/v1t5i/o831ICy63yYLlNHiy3y4PlDnmw3CkPlrvk2Zu75dmbe+TBUsmi
/lK3Nh7v7XaZx4tLYHlAHiwPyoPlIXmwPCwPlkfkwfKoPFgekwfLEnmwtPea
7dzu9Xgf923dbtSe8U3xPT2pfQLX08IEluXCQf1n5Kn/ksY85bZMueQ9q35w
PScPriKLPXjB7UXtB+NXqB+877q94rbKraPnd3B73OOXVQdcb5aY41VhouZr
8s9pjqeFa7XWQN4a9VOz2Ofe1+15j9/SfKzpbXlqVrWo9YYwLdNc76ifOu+p
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
                 "]],
                 PolygonBox[CompressedData["
1:eJwtlHlMz3EYxz/PR0hCQqolRaWRFM3M8j+bv4z/8bfjT+U+yjEzzMyMZmZG
M3OGuXPN1ZyjmHO55mq5SfN6vH9/vPZ+P8/neD6f53vkz5w7ZU4MIUyGJOhH
kA71+N4WwkqohzRoJJfNWBY0BOVWwT5IhyZytege01qf04Aeg0xIJT6BHvc4
KPcDvkM1cTf0BlyHSuJcdA0cgAx4Ra4RvQA5UEDchn6G2X5+dDFshQAzkKVo
nWnMa3Sif6EWn4wuh50mv5HcMnSH6Sw+5x36NrFXRJfANpP3ml3pRVLU2hRy
o/Cl0BJ05ktwEcqCzrwa9kN/05wadLf3xtTzVNb2hLqgXDF+WFRvfc0K2GWq
5XOuotdMvfIaZ9DTid5ko7fgNuQlevoSfQHTgnr0CT5CFWEx+h4+mPwscm/Q
1wlfhLb6czD56f6OcLY+MJp4L/ET9KnXh6nEFYyNgTZ8JblynxvlW8m1oM2J
uUPQB/DQ5CeSe44+S9TyPb/BV6ghHo7+gt9Qksh1oH9gQ1CuL7XS4GjQGdvh
i2mt37k7Y8lQRryduAs+RvlSf4/wFuV9zxR8j6i7+pqR+JKou4wnHoDPgApT
zUz8QDgflKuCdX4H4iw4gj8MvYJy1fj1/k3gC+EK/rLJ/4Rz+LOmtT5nIX4z
dOAnwSH8Qfv/aEM7LMJsgc6gZ/4Y/8g013Mn8adM74p/k/P9OzDVKocF+E3e
Y/wEGMpdCmAcuZvEg/G5UX6s9xU/IqoXzeTuo/dMa/2MRYwVRo35HnfhTuJZ
+zuaw9igqL28Z01ex3QWP8M8/FrT3bxn+czNi/o3+T/oH5drjp8=
                 
                 "]]}]}, {}, {}, {}, {}}], {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{500., 0.},
         DisplayFunction->Identity,
         Epilog->InsetBox[
           FormBox[
            StyleBox["\"c)\"", {
              GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
           Offset[{5, -5}, 
            Scaled[{0, 1}]], 
           ImageScaled[{0, 
             Rational[1, 2]}]],
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{80., 15.000000000000227`}, {30., 
          26.000000000000057`}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotLabel->FormBox["\"Fish present\"", TraditionalForm],
         PlotRange->{{500, 800}, {0., 3.6*^-7}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}},
         Ticks->{Automatic, Automatic}], 
        NCache[{1316.5, Rational[-589, 2]}, {1316.5, -294.5}], 
        ImageScaled[{0.5, 0.5}], {931, 589}]}, {InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[
             {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
UdpXbiUlkD9BQsr8//+IQNyci72SJJA/q2x5LA==
               "]]},
             Annotation[#, "Charting`Private`Tag$154304#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
DbPzyJOxQTVSyP8Dknl0lA==
               "]]},
             Annotation[#, "Charting`Private`Tag$154304#2"]& ], 
            TagBox[
             {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1:eJwk23c81d8bAHBkRWSlkp2IpDJKGp8nScU3UWYoO6RERaHu/dxl71FGRGbJ
KClbQgkNNBQa0pBIoWT0O5/z+6vX+3Wve+95nnOe85xzb0ouvgfcebi4uHT5
uLiof88HH+PnAhrozL17J+AQRYyckRs6u4MGWppz3ygfOvnk/rghDeSSdLkE
kdu8yRxvIxpcFKDLUtZ31yEHd9GAca2XoFxwZOiIw24aLB7f6kVZ+tDF7c/3
0CA9M/8i5QmzmZlWUxq03eP8o+y698ZrYh96PZjbuBC5a+eRqrtmNLi6MciX
cpn+/YBrFjTY9CT5LWUFnTNWKw/SYNuj7UuEkGPWqulmWNLA6xvPHspzar0S
S6xp4Bo7HEDZRzlyPNqGBpE2/65QfiO77Sm/HQ0GV//XQtlk6VgJ7RANpNf0
f6BcJZ4d/ceeBocfNPyhvHrRQR8/RxokFfDwCyPzc99Rd3WiQdXSYR7Kg5My
ny1daZBWotRFPf/Aj46WTjcaLHTZl0+5cfhCrrEHDcSPmvpQXje0ntlwlAZj
ojorKWe+/eCs70UD20HZR9T4RF4nQbk3De6lbnaiHNJjrKDhg+IhmzJNxevb
4z9zOcdp0Hu0KJfyobZrfSt8abDW0dkJ5+e+Q03SSRpk6t9Yg/NTL5om4k8D
vdjzfDg/dxvPck7R4N++5hEqv9K3/G3+nabB6N3TOP8TBS+kxgNpILX/0xfK
zzIMuj4E0cBBIlSa+nu4OFJmH0ID32N39CmXxGfG9pynAfd3RWfKclHmJ/bR
aLBZrjGGchSHZ18rHcXvaUIj5Rl6xRqCQYOe1ZcmKXsHewjdZdLge+JTTWq8
e04+elDEoYHJsw+XKd/xDslXDqOByK/7zymrumux08NRvJs/CVPxSz7yzlUq
Eo1f6QBBmfdQgmF0FA2m1UV9KZ+yNFLij6GB8C6VNMofzKb+XYilgaVsVgNl
i72FA7/jaBCeETGA87XzUN3JBDTfJn5N4vzo1we5JNPgvmqwEJXvkLXK+paX
aDCgcgc//k2tR7ozlQYHlEN7KR9S5kzuSqdBoMH2MsoPZfV76jNoUGr68yzl
TUuHb27KpAHXiWptyrOr3xk9zaKBqMTNHmp8TQYvXnhm00D3xW8XymH/dXhy
X0Wf747eBBUvs8NNf1NzaaCoppVGWerk3SjtfBq8FmcdpNxLlsi3F9CAY9gn
TzkzMbfMtYgG4NT/l8qnW16a4ew1GvSNrPtE+cdDjsfaEhokJp8eohw84h9x
uBytr5WSEjjf856yv2/S4MVX2Y2U+cWOlMRW0GCkIR7nu0PJClZX0uDdhGoi
5QQd067GOzQYz0tso2y7a4ebXRUNYmrjFlDjkbfZNDVejT7vyCuCclHQSpmV
9Wi+W2+vpnwianlxTQMNbr7tnaSsm7l4u+U9GnTK1WlR8fpbyvd0pAnN15zr
rjhf92ac2c2oPjV5J1LmdI//kmulgWzMvVrK/w19Zlc+oMHzl2dxfiV+9y/d
30aDZk3735RfCvYUfX6E4vVcF6/vDJlHW+gdNNDu6V5I2UWzsXPZYxp8+SDA
TXn19soj5U/QevLPGab+fnR/8fjeZzS4VhCA60mFcw7zQxcNtjjYxVEOOnVp
SXAPDVpklEwoAzumQPIFDS7J549T4+O7yNpc/BKtZ4smNuVHhUHtRr00eE+8
FqccV33Ssf81er30z+VUPK07PMbO9NFAWeGuO2XZAQdSdIAGMsI/8Hr/MHZA
suAtDXyC9RZQLuTem0e8R/Xv6PphKr8nJIlNrz7QIORKxFvKOqv02k5+RPF6
Mvae8p+Na+wXfqJBvr/ID8r1e5S+Z3+mwdRAgiD1eqxDS2kGX9F62rJBg7KJ
j4h49zANDtLS8fwTu7Dg6rERGqic5jApv4id1uUdRfkpK7xL2fnWkK3eOJo/
VgFr8XpueTPc+ZMGGp8uelMeefEsxGMCjVegv4Dy2b91Vy7+psHv3mdyVPy2
L6rQXj+N4j/EZ4nXu/y15od/abB3gweb8qN1V6ydZ9H6M6vC6y92R8qX6Tka
ZEc+6KEcrb2Dk8xFBxULAtfvg0ablmnx0EE7R5uX8sPjcS9HkH8Eh/6inr/1
4teU6wvo8NDb9gXlskZDa29eOly2L79OWWU4fYk6Hx3y2Fn+lC9JTvZ8Rt7n
tUGD8qJtZkn5/HTY9iTgGTUeukfBQXcBOmg9oB+lPBHLJakiSIecfM95Kj6e
VXZdH5Clk6MLKPd9uBmfvZAO1zZ14vVmvmiRhZMQHbLiF2lSbtZzF1MQpkOG
mDau78VhS2MzFtFBasdTnN/kN20iMqLo7+1+43ouxLey8xWyr/6+WcoXtEKi
Li6mw47dIsuov/9p89zUWowOmrVqWyh7kFrCS8Tp4KMV40b59bXQR93I+5J1
8Ho363kXniBBB8ndi1opb1RLFBSTogPcXadLje+a+ciDx8iPJryO4/UftCs0
egkdNpyuzKeccDXT+D9p9PmtxfD+zt/5m094KR2OS53G+3vQlHlLG7LC+bd4
fx9VuMYKW0aHjZUWuJ667F1gtHs5HVYatOfg9ezvsIBfhg6KL/c9wOs/43ZT
M+WSvo+4XrSIMpgr6HB3Q8hfyrpjR3cYytJhXkVbgMp/4bJ7XNxydDifxofr
vayhTGMDstyvebz+446dol2Qp8O/PrVRPP+SO7ZvU6AD60BkJ+Wz9avmZ5Bl
U/WyKI98vlBXrUgHQ9B1oewk/irknBIdvBRT8Ph6DDZs1Vemw7Ddsbt4/3OL
mJlCvr5QzZRybfRg9e2VdEgp4f1MxXf9na1Bp1XoYDfWkUQ5913yZp1VKF4t
rnj9LRca+zOOHJFcokQ5RmfP3TJVOvhrJc1T+eZxzA70VaND94NZPB8COH83
aq2mwwruLjxfhksPTo0gm72bx/XgcG/x7evqdBh96jtKuYuH/4y3Bh3u5Ujw
Uq9vrHlEV30NHdrDXuD3q7a6++szMv+yYmPKWjTxW/madHAxZvtRzin09ndf
S4dIL6tsyhEzsuMftFB+6kqEqfHaZ5Oj/RvooLP0yCjl+s1/xy5p06H1yrQy
FS/lLv/xgzp0cHwcjNc/2/vbT1FdOnA+/iIpf+Fxm2ij7OJ3Dec/vW+SpYee
z82H81OqY/Wb2EiH6puNX/B+0NH55y/yoit3ZikHuBn/vb2JDhfU5/F82Ja8
aW7NZvT5Lj/joszbuporx4AOu9ZPtVPP9zycze24BdWDLNVMyu1Tyxcs20qH
c9oGON9asQm83cjlxfuWUk5QE+aP2UYHAW5aLTW+qQamwN7tdNid3GhB2c52
VpCXoEPVHbNRKj61P04LNSCPmWlkUFYM/y4cBHTYkrb7EK7HSh4iejvokLQ6
Q43y56oB0R/I0S/lcf03OWAjdt0QrceuB7ifLxl+Iu6xkw42cXG43zuz4p5U
nxGa7zeO4/1h6383lx4wpkN9fTquB1c+aiwX2U2Hg+cfG1BecP6qzEPk671S
rrg+LJGVZe6hw8QuvzjKj24kyW3fS4eCs5/v4fwbiyhMI/seC5miHD/AVqww
QfX20EZc/20XB67U+A99Pid93O/VFoypDCHv2ZCI+yEF8FS9so8OD3z1haj4
MV69U7M3o0NUou42yp9O2qlL70fjNU/G/bXJwi6NZ8hfkr0uUr6RbaIZZU6H
kaj/9wNiBvfX7ragg/ilkjeUT3dtWcdzgA5zFjtxvTdYsFb77EE63NpfIUjl
m1tXXm/Ukg7/pd7D/Z5bR8rGIis6TOoNvMb9ndtifTdrVN/Ya25RXjMXulnB
hg5q8c3n8fkkmWvLa+TSuJbNlH+uPbc12ZYObiOmn6jxWbWObzO3o8MdgwAG
5buHvQnhQ3RIZtQvpSz7+wO0ItM6Ouuo+NFj7Q1Jezpknkk/TXlQrWfnVgc6
nD0pi+u1ceN/u34jF84bi1G+ZttifNORDr2lEr+o/PqFV+5dfYQOXZv9+ynr
Vxf8l+lEhxch4j8p7z7cpObljOJ9UXQR7jd4+nl0Xejg9OKpFmX3/N/988gb
j0rYUT5tIlHV5orm95bYcMrMUc2kJDf0efn5GnA/mLDb94g7HbgNdP5QLn0d
smrSgw57DzWcxOv7wkWuxqN06OzLvUG5Q/nmmwhPOgT9sPhK+U1rR6WVFx3i
SmPw+h/2/hyv6E2HoWEVW8rTojzHvyGfWv0ujLLgLdk9lcfo8Co7Gudjqc2m
laQPHToMZ/H+rTpjMW96HM3fgtlxykY7Qyven6DDu0tz/+/3Imu9A0/SIXtk
40/qcb91L3cZ+qHXW8R6RpnePa4o4k+HMy1e2Ti/gYtmXyL3OjY7Ub68Qu1l
zik6EE1+opSLG3bcPH4azW+GRRE1nmpXh2j9M6j+DCfi/bFNINBzQQAdDs/U
Pabi8+p6/M7HyO8Fnofg9by/WD41kA61E8xtlKd+tU67nqUDIyBwMWW+S+97
tM7RwVbs8DiVP6mts6XTyDYSX3D91mZt8IgNpkM6p+wrZfMOD9lV5+mwWDYQ
n9+PnCR/jyG3nWwxpHxCKqOr+gId9EPnfSmH3K28wabR4ar82xzKkQ7Pwszp
dPhcueo15TSuEdcVJPq8MQlS1HgKc/mJT8h/cz6bU24d2TIZzKQDc4U9Pt8+
j7N+asyio/6Xn4+Kz0ddv+vibDqIXrq5lfKvV5GcPmRxpTUnKfOcz3cu4KB6
K7AV11dxpXtb/UNR/2R6C/fbii1vlm4Lo8OTTKchXG+9pn4KhKP+yW0Jrufb
RMQfdyH7X8/F6/m/8jVFlyPoYKQ9iPN9yMqY5RlJh0Dngnnq+V7TTkd0ougw
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
ry7D9cbgJW838oV4Y7x/BB0Q9Nl/G9V7P158/o7y3tzdXkmC717Rmzj+U8/4
I+6Q0DYVi8+zmQxvgz13SfhszP0Rx190wQn+KhIuGdnh+5vStPTsZmR1y7hV
+P4r+eBSWjUJUmWf9+D9N044enMNiu/Fxfj7r0uR93kmkCP8JONxP8sJPltS
S0Jf/z88/jBSZ9SzjoT3dz7g+296yDfXlfWoPki2/8TfhwZe7e1HttvWtoiK
50l/+/2XGlA9vzuK8+Pk2W4gco+E8ZoZHH+Lw1tUGU0kVDun6OD7cbtf6Vvv
k7DoaDk+LxlaXhf/jWyvECCA+4v9rqHlzeh8d3oer09tkxVzx1pIyL7gjs8n
Gru6/VVbSXjMfnACry+I/PIOefMVLw3cr2/ZeTj9AQl5q8//wvvHxpluq4do
f1gQj38PwKN5rOFRGwkN0ddw/H8pvblGtKP5UZOLz6sjsomKf5F11FLw74U+
LjVNqehA89uJkU+5T2LBIt9O1K8N+9Tg+xSRGlL9Mdpfww7hfrBD8NTvQeTn
hAV+/+YFa45nPkH7m6Utvp+smE6zlXyG1tebanu8X0wceNyJ3LVwDZ1y7piQ
UVgXOn8JP7+6ENfXpirDbhIMLFpb8P3OUNC6OWTnUJEhylHvtPPu9JBgGV/N
RcWP9WZYxv85ikfEAL4fCnmRE6f5AtWj+5HquJ98doj/M3Jj83Ndyh4PHo3b
vyIhkUjCtq4z6H/ai+rPlseL8f3C3Z8HIl+j/WVZ4He8f9y69nDXG/R5JUwb
KG8vcdnO1YceF/Vg4f2jSKaiGtnQdxSfB7Ryu9TP9JMQn+GB7+NUsyKy1g2g
86OFC64v8mmGS4aRQx73FVOWTv4bkfsW9avpXXg/4Y/0Dlj+ngQibzXeT37T
XzvHfEDPV3fB3//+CE54uWeQBBuRqjx8/g8w2bfgI6rXCvH4+4p3fjz365Ar
msd68f22T7X+2SESVLLe4N8zPT3qX6L9Ce1f8Q6y1Od76KKh8h2ZtzYYcH2z
TVvs8gXVX6+GcHzeOzJxWPMrOq9XfMT75z93s5Ip5D9Mx27KOT6Fc43DaH3E
TeH1YnyKZ1/kN9Q/7rggQsUzml75TeE72u8up+P9pCfaO6JilAS6s8lafN+b
1Nx7YQz1i1KPZSmvSJdX3/sD5XtuM85vffbZs5LjJJSu8XxBvb5LYdeDfuRD
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
               "]]},
             Annotation[#, "Charting`Private`Tag$154304#3"]& ]}, {}}, {
           GraphicsComplexBox[CompressedData["
1:eJxd2H1sleUZx/GuigisUEG7WhyDYoBgNJpRXVjCTjgkQ/9YCm6YvVBRxh9Q
HC5zc2WLGxpLFpY4XNFEE2e3RIcvxeESpx5jSQjYThzLllUSZhYoQ4l7sawE
X1Y2z/18rifc/AH55nflnC/3cz/Xdd9n3u1bVm9obGhoWPn/vz7+98T4kRMd
+++tDJx59ui5c/MHv7jgbFf1SMm717S82fnPkqdtX7Kq64L7gu94YfVwd2vJ
fzh5Z7Xn6pKva32g1ru85J+vfLaj75aSx7//+4H+zSXfsvudhXu2lfzikcn9
tYdKnj11Qdvw0yXzv2zu7q82nZgX/pg/5o/5Y/6YP+aP+WP+mD/mj/mfffDj
D/5M+GP+mD/mj/lj/pg/5o/5Y/6YP+Z/4MSyJzu7Zoc/5o/5Y/6YP+aP+WP+
mD/mj/lj/n2f6+jvXvSp8Mf8MX/MH/PH/DF/zB/zx/wxf8z/9h1XPdo7NjP8
MX/MH/PH/DF/zB/zx/wxf8wf819Xqy6u9jSFP+aP+WP+mD/mj/lj/pg/5o/5
Y/4f3XbtnJ6mSeGP+WP+mD/mj/lj/pg/5o/5Y/6Y/7Uzll7ZVX3/Vf6YP+aP
+WP+mD/mj/lj/pg/5o/5H/7tgta+kb+FP+aP+WP+mD/mj/lj/pg/5o/5Y/6D
ib/AH/PH/DF/zB/zx/wxf8wf88f8Mf9F6XmEP+aP+WP+mD/mj/lj/pg/5o/5
45i/6X2oxPwtOOZvwTF/C475W3DM34Jj/hYc87fgmL8Fx/wtOOZvwTF/C+b/
jdSPwh/zx/wxf8wf88f8MX/MH/PH/HH0/zQPwh9H/y84+n/B0f8Ljv5fcPT/
gqP/Fxz9v+Do/wVH/y84+n/B/B9M8zj8MX/MH/PH/DF/zB/zx/wxf8wf89+f
zkPhj/lj/pg/5o/5Y/6YP+aP+WP+mP+ZdB4Nf8wf88f8MX/MH/PH/DF/zB/z
x/wvTfeB8Mf8MX/MH/PH/DF/zB/zx/wxf5zdHyvZ/bGS3R8r2f2xkt0fK9n9
sZLdHyvZ/bGS3R8r2f2xkt0fK9n9sdIyfeMva284H7dn5+n2Qflr9Xk3N3Is
v7Xezz4dOZZfXZ83l0eO5R/W+/llkWP5UP37miPH8mvqnzclciwfrtc3RI7l
r9f533EewfKG+p/DNTmW70/1MU+x/ED6vtgvWL44+UaO5QfT/zdyLH8/rVfk
WH5VWu/IsXxtel6R4+z5V7LnH/ltab9Ejk+999Daav99sZ/Ov/+0D8rtJzmW
209yLLef5FhuP8mx3H6SY7n9JMdy+0mO5faTHMvtJzmW20/R/wuW209xvy9Y
bj/Jsdx+kmO5/STHcvtJjuX2kxxnz7+SPf/I7Sc5tv/8Hjaxbd6KnqF7Kxfv
e/fz1Z758X77vUn+rVMnf9fZNS9yv+fIn1l4oLvWOydyv5fIt26tbRjpbIvc
7xHylYf23jrW1jJ4fn+dGXlL3eeSyN2n5Qfr3zctcvdV+fr65zVG7j4on6jX
j0f/ct+Sv1nnw5G7z8ivrH/eO9G/3BfkX6v7/jdy53H5zvp6TI7n47wrH6+v
94zInSdj/evPc1bkzmvyt371wrHRjtbInYfkzav2vT3UfUXkzhvy9h9tuHuk
s+xf5rn8pa9s+mCou72y9Y0puz4xWO6f3uvObJrYU/7+Krd/sP2C7Q9sP2DP
H3ve2PPFnif2/LDnFX7F88GeR3x/sf7YemPri60ntn7Y+QJ/++5ZF+/pbI//
z8jj0++vdcwN/mHfrAv7Oq4IvunklImBc+V6tS5tODs0NCv40OX/OD60cEbw
xlePjJx7+aLgqcM/fbj78Y9ife5f/PrEwM6TwS33NK4fW/rnWJ8vffnkc51/
Hw/eceH2b451XRD+/+p65M7a8LTgp46uWVadXa7X0Z+sW7FoVUvw9Bs23dS0
vS24MvqdzrHanOAXX1v2dHdPuV43/6J6TVdfuV7mI568ZN+7o70lm4/4jrW1
jWPdJZuP+NdNWw6d6y/X13zE31u34WDb5tZg8xGveP7r+zquvzTYfMQzL1r9
cmdDyeYj3vebn20a6ZscbD7ilwY+qLWtnojnYz7i46efvLFp/FSw+Yif/8uu
R7rfHo7nZz7ix7b07Ohf8p9g8xF/dubhP7b1Ngabj/jhzcf/Ovre1GDzEd+z
/sO7RgYuCTYf8XPNk35QGy3ZfMTHXpm+rb+t3C/mY7xf3a3bezvL/WM+4vmf
3Hmgo1ruJ/MRv3Js142Luubn+20wy4OL/TmYfX70P/sT+zzs87D3H9vP2H7G
vh/n369/4Hz/L0/vW3BLWr+o935g9Tiv159w/j41p/c9eDQ9z6j3vmH1OK/X
/3D+fr6V+k3w3rS/ot77i9XjvF5/xfn7/kzqd8E/Tvs96vUDrB7n9fo3zvvH
6dRvgx9N71/U6y9YPc7rzQec96MHUr8PviH1g6jXr7B6nNebPzjvb2vSvAl+
IvWnqNf/sHqc15tvOO+X16d5F3w69cuo10+x+ljfrN78xHn//W7yCf5T8ol6
/Rmrx3m9+Yzzft6Y1jt4b1rvqNfvsfp4H7J68x/n82FD2k9lf037KerND6w+
+mNW73yB83kzlN6X4Ob0vkS9eRTvY1Ef/Sard37B+fxqSf0geHnqB1FvvsV+
KOqjn2b1zkc4n4crU78Lviv1u6g3L7F6nNc7f+F8vm5N/Tz4idTPo978xerj
/cvqne9wPq+LeRVczKuoN8+z+Rac1zs/ZvMxPn9LmrfBk9K8jXrnA6we5/XO
p9l8D87P++5H8vz+5L4U72dxX8LuS+efN8p54r6E3Zew+xJ2X8LuS9h9KfyK
+xJ2X4rvL+5L2H0p+ltxX8LuS7E/ivvS/wAYRdth
            "], {
             {GrayLevel[0.09], AbsoluteThickness[1.6], Opacity[0.06], 
              EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmAf8l9MXx+95SlP92iUVTS2l4dfUXv/SUCmRSsiIUISIElmRvbI32REK
ySrKlh0qKysr/kk4787n+3p+r1enc557z73nc+/z3M/9/L4NJ58wclqWUvrT
/yvl/hc3niu7VUnRVtqtqvwubnUspdpuu3pcpHzyqqm/jFt1+bJutdzKu1Vw
qy1f0a2G+su5NXfb3a2eW021MeY3Yanr1lhzMUcDYaLmHvLVNUdl4aqvNZC3
p/qp2VCeOnV9Hbu51fF4q+o0c2uk/lrCVKS5+rl1cuvstpfyqdnXrVh9rYWJ
mnvLU3NfrbOFWyutgbw26qdmW3nW2kFYqNNRnvH1HO/ubk08bql1NtC89fRc
rGf6e2ku5ugqTNTsJt9WuFsKVxetgbwGXqe+2z4eb3Nr79bDrbfmY0195KnZ
UzkdtEetNNefWgt9/dVHnaluE9wmsk9eZw+37h5vV53Bbgdo3xk3UGsA+xDl
UHN/edY6XJh4JyPkGT9U/WAfqfkGuA1TG2NGqY06h2o89XcIyxi3sYqpf5A8
9cfJU+cQzQuWn9w2uG3UWg9Q/Yny1ByvXOo18j1o6DZIWLpozU28rbHbaI8P
L4Flimof7HaUPPVPcJus3COFlbyj1U/NY+RZazOfu6nbJI/NYuw0t2PVD/Yj
VJO5/hUG8k5UHfpLWYyb5XayMFHzFHlqnqRccM3QGsibqX5qnirPN3KGsLCm
M+Wp2dxr7eV2nMfTNR9zzVY/dc6Sp/9seWrOFT5wnSNP/Xny1G/pc7dwO83j
XSzWNN/tfK0PXBfIg+tCeepfJE/9i+Wpf73bArdL3G6Qv1Q2V1gWyoOltddt
5Xaux2Ut6l/hdmUJLFfJg+VqebBcIw+Wa+XBcp38Ahm45gjLHOFYJExgqeh1
b3Z/v1t5i/o831ICy63yYLlNHiy3y4PlDnmw3CkPlrvk2Zu75dmbe+TBUsmi
/lK3Nh7v7XaZx4tLYHlAHiwPyoPlIXmwPCwPlkfkwfKoPFgekwfLEnmwtPea
7dzu9Xgf923dbtSe8U3xPT2pfQLX08IEluXCQf1n5Kn/ksY85bZMueQ9q35w
PScPriKLPXjB7UXtB+NXqB+877q94rbKraPnd3B73OOXVQdcb5aY41VhouZr
8s9pjqeFa7XWQN4a9VOz2Ofe1+15j9/SfKzpbXlqVrWo9YYwLdNc76ifOu+p
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
                 "]],
                 PolygonBox[CompressedData["
1:eJwtlHlMz3EYxz/PR0hCQqolRaWRFM3M8j+bv4z/8bfjT+U+yjEzzMyMZmZG
M3OGuXPN1ZyjmHO55mq5SfN6vH9/vPZ+P8/neD6f53vkz5w7ZU4MIUyGJOhH
kA71+N4WwkqohzRoJJfNWBY0BOVWwT5IhyZytege01qf04Aeg0xIJT6BHvc4
KPcDvkM1cTf0BlyHSuJcdA0cgAx4Ra4RvQA5UEDchn6G2X5+dDFshQAzkKVo
nWnMa3Sif6EWn4wuh50mv5HcMnSH6Sw+5x36NrFXRJfANpP3ml3pRVLU2hRy
o/Cl0BJ05ktwEcqCzrwa9kN/05wadLf3xtTzVNb2hLqgXDF+WFRvfc0K2GWq
5XOuotdMvfIaZ9DTid5ko7fgNuQlevoSfQHTgnr0CT5CFWEx+h4+mPwscm/Q
1wlfhLb6czD56f6OcLY+MJp4L/ET9KnXh6nEFYyNgTZ8JblynxvlW8m1oM2J
uUPQB/DQ5CeSe44+S9TyPb/BV6ghHo7+gt9Qksh1oH9gQ1CuL7XS4GjQGdvh
i2mt37k7Y8lQRryduAs+RvlSf4/wFuV9zxR8j6i7+pqR+JKou4wnHoDPgApT
zUz8QDgflKuCdX4H4iw4gj8MvYJy1fj1/k3gC+EK/rLJ/4Rz+LOmtT5nIX4z
dOAnwSH8Qfv/aEM7LMJsgc6gZ/4Y/8g013Mn8adM74p/k/P9OzDVKocF+E3e
Y/wEGMpdCmAcuZvEg/G5UX6s9xU/IqoXzeTuo/dMa/2MRYwVRo35HnfhTuJZ
+zuaw9igqL28Z01ex3QWP8M8/FrT3bxn+czNi/o3+T/oH5drjp8=
                 
                 "]]}]}, {}, {}, {}, {}}], {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{500., 0.},
         DisplayFunction->Identity,
         Epilog->InsetBox[
           FormBox[
            StyleBox["\"b)\"", {
              GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
           Offset[{5, -5}, 
            Scaled[{0, 1}]], 
           ImageScaled[{0, 
             Rational[1, 2]}]],
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{
            FormBox[
            "\"Host specific growth rate \\n (C-mol H C-mol \
\\!\\(\\*SuperscriptBox[\\(H\\), \\(-1\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(d\\), \\(-1\\)]\\))\"", TraditionalForm], None}, {
            FormBox["\"Time (d)\"", TraditionalForm], None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{80., 15.000000000000227`}, {30., 
          26.000000000000057`}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotRange->{{500, 800}, {-0.021, 0.022}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}},
         Ticks->{Automatic, Automatic}], 
        NCache[{Rational[931, 2], -883.4999999999999}, {
         465.5, -883.4999999999999}], ImageScaled[{0.5, 0.5}], {931, 573}], 
       InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[
             {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
ZJI/W9mWvQ==
               "]]},
             Annotation[#, "Charting`Private`Tag$154538#1"]& ], 
            TagBox[
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1:eJwkmnk8VG0UxyVJSqlESdlKZUuWEtUcCqG02VUkJFQIydLMnRljX2YsZUkk
REKSLHGRlC1lKQlFSYtsCUn1PvO8f/l8P2Pu3Oc85/zO7zz3SttfOOrIy8PD
o7qAh4f7N9DflZ8HqJCVr/4vp4RNGfZeN+irQ4XjnEuzXLZ2b308rkuFhbob
vnO5wYW46bKPCq6/RF9xWdNRjfigR4U/r5WKuZxtO2h73IAKgwbRoVwWtb66
p3M/FdQP6TtzOcjUcJ2JERWMOlWOcnnS5PfvemMq9M0I6nO5ba9tWakJFRZn
h2Au1Hzsk3uECsnEM1suS6p5m8keo4LoqxRPLkcpbVJPMaXCibgfwVx2kwkf
j7SgQkzU0Qdcfiux+wW/FRUkXkw2ctlIbDSfak2FGvrBPi6XLU+PnLGhwocg
5REub15yzM3jBBWUsl1/cZl/3sMtp+2o4CZ67A+XP/wUHzI9TYWrMc/ec/no
WPOTFgcq5Npeeczl6q9Xbuk7UcGc3pTE5a2DKgzyDBX4KUFeXE59N3BK8ywV
3r2YseJyQIe+pLwbFdpS5nRxvBtye9ZeoIKBbYMxjvfj4xVx7ijeOf8scbyr
liYJeaL1Z3i44HiXVvuyLlKhIf7TFRzv+54W/7xQ/Oo2xeN4392w3dcH3f8Z
njwc7+xXIuOXqBCUv7uWy/Y3Q36cvUyFmfJ8vJ8vU7TaBvyo4Hdjw2cu57NT
ozsCqTDy0Q2vP4LFe7CeRoW61CczXP5NK1ag0KmgRXn9hcsu/k6CpQyUD9S5
F1x+4736i0oQimfHyrtc3u/e+DSHRQU1z090Lj90CciSCaFC9JXs01yWc1QO
Sg5Fn8edPsTleNv3p0XCqfBM4fU+LvNZc3QjI6jwtaYax+ui6T5p/igqbO18
b8DlAZOpf1eiqbD84y+cX0cMb/dNx1Bh0uWFPd6fvdaV7hwUvwF5H7w/e5ak
fImlQlzFy3C8P5pVfvbxVDh7Kvoml4XU3K3eJlDBSU2lDO+Xkoym6TUq7Ami
P+fyt00doi2JKJ4p5v14/2RYP/WSqVCcf2WMy88kNDuqUqiw7d1zXE87xL4W
7Uilgs3udbje5ja/3/fiBhVyDLN/c7lW69Ur53QquNgfwvkYcqDZeV4Gigc1
vZPLJidrZxNvof1QUyzksoh7aYRqFhVO/47E8XxD5K9vyqaCZcfBU3g9sbcK
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
/KN5u5ZxA/kApm1tdQ==
               "]]},
             Annotation[#, "Charting`Private`Tag$154538#2"]& ], 
            TagBox[
             {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
              Opacity[1.], LineBox[CompressedData["
1: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
hMUsQDY1ezQ1i/x2bOasEPL/AJgIM1c=
               "]]},
             Annotation[#, "Charting`Private`Tag$154538#3"]& ]}, {}}, {
           GraphicsComplexBox[CompressedData["
1:eJxd2H1sleUZx/GuigisUEG7WhyDYoBgNJpRXVjCTjgkQ/9YCm6YvVBRxh9Q
HC5zc2WLGxpLFpY4XNFEE2e3RIcvxeESpx5jSQjYThzLllUSZhYoQ4l7sawE
X1Y2z/18rifc/AH55nflnC/3cz/Xdd9n3u1bVm9obGhoWPn/vz7+98T4kRMd
+++tDJx59ui5c/MHv7jgbFf1SMm717S82fnPkqdtX7Kq64L7gu94YfVwd2vJ
fzh5Z7Xn6pKva32g1ru85J+vfLaj75aSx7//+4H+zSXfsvudhXu2lfzikcn9
tYdKnj11Qdvw0yXzv2zu7q82nZgX/pg/5o/5Y/6YP+aP+WP+mD/mj/mfffDj
D/5M+GP+mD/mj/lj/pg/5o/5Y/6YP+Z/4MSyJzu7Zoc/5o/5Y/6YP+aP+WP+
mD/mj/lj/n2f6+jvXvSp8Mf8MX/MH/PH/DF/zB/zx/wxf8z/9h1XPdo7NjP8
MX/MH/PH/DF/zB/zx/wxf8wf819Xqy6u9jSFP+aP+WP+mD/mj/lj/pg/5o/5
Y/4f3XbtnJ6mSeGP+WP+mD/mj/lj/pg/5o/5Y/6Y/7Uzll7ZVX3/Vf6YP+aP
+WP+mD/mj/lj/pg/5o/5H/7tgta+kb+FP+aP+WP+mD/mj/lj/pg/5o/5Y/6D
ib/AH/PH/DF/zB/zx/wxf8wf88f8Mf9F6XmEP+aP+WP+mD/mj/lj/pg/5o/5
45i/6X2oxPwtOOZvwTF/C475W3DM34Jj/hYc87fgmL8Fx/wtOOZvwTF/C+b/
jdSPwh/zx/wxf8wf88f8MX/MH/PH/HH0/zQPwh9H/y84+n/B0f8Ljv5fcPT/
gqP/Fxz9v+Do/wVH/y84+n/B/B9M8zj8MX/MH/PH/DF/zB/zx/wxf8wf89+f
zkPhj/lj/pg/5o/5Y/6YP+aP+WP+mP+ZdB4Nf8wf88f8MX/MH/PH/DF/zB/z
x/wvTfeB8Mf8MX/MH/PH/DF/zB/zx/wxf5zdHyvZ/bGS3R8r2f2xkt0fK9n9
sZLdHyvZ/bGS3R8r2f2xkt0fK9n9sdIyfeMva284H7dn5+n2Qflr9Xk3N3Is
v7Xezz4dOZZfXZ83l0eO5R/W+/llkWP5UP37miPH8mvqnzclciwfrtc3RI7l
r9f533EewfKG+p/DNTmW70/1MU+x/ED6vtgvWL44+UaO5QfT/zdyLH8/rVfk
WH5VWu/IsXxtel6R4+z5V7LnH/ltab9Ejk+999Daav99sZ/Ov/+0D8rtJzmW
209yLLef5FhuP8mx3H6SY7n9JMdy+0mO5faTHMvtJzmW20/R/wuW209xvy9Y
bj/Jsdx+kmO5/STHcvtJjuX2kxxnz7+SPf/I7Sc5tv/8Hjaxbd6KnqF7Kxfv
e/fz1Z758X77vUn+rVMnf9fZNS9yv+fIn1l4oLvWOydyv5fIt26tbRjpbIvc
7xHylYf23jrW1jJ4fn+dGXlL3eeSyN2n5Qfr3zctcvdV+fr65zVG7j4on6jX
j0f/ct+Sv1nnw5G7z8ivrH/eO9G/3BfkX6v7/jdy53H5zvp6TI7n47wrH6+v
94zInSdj/evPc1bkzmvyt371wrHRjtbInYfkzav2vT3UfUXkzhvy9h9tuHuk
s+xf5rn8pa9s+mCou72y9Y0puz4xWO6f3uvObJrYU/7+Krd/sP2C7Q9sP2DP
H3ve2PPFnif2/LDnFX7F88GeR3x/sf7YemPri60ntn7Y+QJ/++5ZF+/pbI//
z8jj0++vdcwN/mHfrAv7Oq4IvunklImBc+V6tS5tODs0NCv40OX/OD60cEbw
xlePjJx7+aLgqcM/fbj78Y9ife5f/PrEwM6TwS33NK4fW/rnWJ8vffnkc51/
Hw/eceH2b451XRD+/+p65M7a8LTgp46uWVadXa7X0Z+sW7FoVUvw9Bs23dS0
vS24MvqdzrHanOAXX1v2dHdPuV43/6J6TVdfuV7mI568ZN+7o70lm4/4jrW1
jWPdJZuP+NdNWw6d6y/X13zE31u34WDb5tZg8xGveP7r+zquvzTYfMQzL1r9
cmdDyeYj3vebn20a6ZscbD7ilwY+qLWtnojnYz7i46efvLFp/FSw+Yif/8uu
R7rfHo7nZz7ix7b07Ohf8p9g8xF/dubhP7b1Ngabj/jhzcf/Ovre1GDzEd+z
/sO7RgYuCTYf8XPNk35QGy3ZfMTHXpm+rb+t3C/mY7xf3a3bezvL/WM+4vmf
3Hmgo1ruJ/MRv3Js142Luubn+20wy4OL/TmYfX70P/sT+zzs87D3H9vP2H7G
vh/n369/4Hz/L0/vW3BLWr+o935g9Tiv159w/j41p/c9eDQ9z6j3vmH1OK/X
/3D+fr6V+k3w3rS/ot77i9XjvF5/xfn7/kzqd8E/Tvs96vUDrB7n9fo3zvvH
6dRvgx9N71/U6y9YPc7rzQec96MHUr8PviH1g6jXr7B6nNebPzjvb2vSvAl+
IvWnqNf/sHqc15tvOO+X16d5F3w69cuo10+x+ljfrN78xHn//W7yCf5T8ol6
/Rmrx3m9+Yzzft6Y1jt4b1rvqNfvsfp4H7J68x/n82FD2k9lf037KerND6w+
+mNW73yB83kzlN6X4Ob0vkS9eRTvY1Ef/Sard37B+fxqSf0geHnqB1FvvsV+
KOqjn2b1zkc4n4crU78Lviv1u6g3L7F6nNc7f+F8vm5N/Tz4idTPo978xerj
/cvqne9wPq+LeRVczKuoN8+z+Rac1zs/ZvMxPn9LmrfBk9K8jXrnA6we5/XO
p9l8D87P++5H8vz+5L4U72dxX8LuS+efN8p54r6E3Zew+xJ2X8LuS9h9KfyK
+xJ2X4rvL+5L2H0p+ltxX8LuS7E/ivvS/wAYRdth
            "], {
             {GrayLevel[0.09], AbsoluteThickness[1.6], Opacity[0.06], 
              EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmAf8l9MXx+95SlP92iUVTS2l4dfUXv/SUCmRSsiIUISIElmRvbI32REK
ySrKlh0qKysr/kk4787n+3p+r1enc557z73nc+/z3M/9/L4NJ58wclqWUvrT
/yvl/hc3niu7VUnRVtqtqvwubnUspdpuu3pcpHzyqqm/jFt1+bJutdzKu1Vw
qy1f0a2G+su5NXfb3a2eW021MeY3Yanr1lhzMUcDYaLmHvLVNUdl4aqvNZC3
p/qp2VCeOnV9Hbu51fF4q+o0c2uk/lrCVKS5+rl1cuvstpfyqdnXrVh9rYWJ
mnvLU3NfrbOFWyutgbw26qdmW3nW2kFYqNNRnvH1HO/ubk08bql1NtC89fRc
rGf6e2ku5ugqTNTsJt9WuFsKVxetgbwGXqe+2z4eb3Nr79bDrbfmY0195KnZ
UzkdtEetNNefWgt9/dVHnaluE9wmsk9eZw+37h5vV53Bbgdo3xk3UGsA+xDl
UHN/edY6XJh4JyPkGT9U/WAfqfkGuA1TG2NGqY06h2o89XcIyxi3sYqpf5A8
9cfJU+cQzQuWn9w2uG3UWg9Q/Yny1ByvXOo18j1o6DZIWLpozU28rbHbaI8P
L4Flimof7HaUPPVPcJus3COFlbyj1U/NY+RZazOfu6nbJI/NYuw0t2PVD/Yj
VJO5/hUG8k5UHfpLWYyb5XayMFHzFHlqnqRccM3QGsibqX5qnirPN3KGsLCm
M+Wp2dxr7eV2nMfTNR9zzVY/dc6Sp/9seWrOFT5wnSNP/Xny1G/pc7dwO83j
XSzWNN/tfK0PXBfIg+tCeepfJE/9i+Wpf73bArdL3G6Qv1Q2V1gWyoOltddt
5Xaux2Ut6l/hdmUJLFfJg+VqebBcIw+Wa+XBcp38Ahm45gjLHOFYJExgqeh1
b3Z/v1t5i/o831ICy63yYLlNHiy3y4PlDnmw3CkPlrvk2Zu75dmbe+TBUsmi
/lK3Nh7v7XaZx4tLYHlAHiwPyoPlIXmwPCwPlkfkwfKoPFgekwfLEnmwtPea
7dzu9Xgf923dbtSe8U3xPT2pfQLX08IEluXCQf1n5Kn/ksY85bZMueQ9q35w
PScPriKLPXjB7UXtB+NXqB+877q94rbKraPnd3B73OOXVQdcb5aY41VhouZr
8s9pjqeFa7XWQN4a9VOz2Ofe1+15j9/SfKzpbXlqVrWo9YYwLdNc76ifOu+p
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
                 "]],
                 PolygonBox[CompressedData["
1:eJwtlHlMz3EYxz/PR0hCQqolRaWRFM3M8j+bv4z/8bfjT+U+yjEzzMyMZmZG
M3OGuXPN1ZyjmHO55mq5SfN6vH9/vPZ+P8/neD6f53vkz5w7ZU4MIUyGJOhH
kA71+N4WwkqohzRoJJfNWBY0BOVWwT5IhyZytege01qf04Aeg0xIJT6BHvc4
KPcDvkM1cTf0BlyHSuJcdA0cgAx4Ra4RvQA5UEDchn6G2X5+dDFshQAzkKVo
nWnMa3Sif6EWn4wuh50mv5HcMnSH6Sw+5x36NrFXRJfANpP3ml3pRVLU2hRy
o/Cl0BJ05ktwEcqCzrwa9kN/05wadLf3xtTzVNb2hLqgXDF+WFRvfc0K2GWq
5XOuotdMvfIaZ9DTid5ko7fgNuQlevoSfQHTgnr0CT5CFWEx+h4+mPwscm/Q
1wlfhLb6czD56f6OcLY+MJp4L/ET9KnXh6nEFYyNgTZ8JblynxvlW8m1oM2J
uUPQB/DQ5CeSe44+S9TyPb/BV6ghHo7+gt9Qksh1oH9gQ1CuL7XS4GjQGdvh
i2mt37k7Y8lQRryduAs+RvlSf4/wFuV9zxR8j6i7+pqR+JKou4wnHoDPgApT
zUz8QDgflKuCdX4H4iw4gj8MvYJy1fj1/k3gC+EK/rLJ/4Rz+LOmtT5nIX4z
dOAnwSH8Qfv/aEM7LMJsgc6gZ/4Y/8g013Mn8adM74p/k/P9OzDVKocF+E3e
Y/wEGMpdCmAcuZvEg/G5UX6s9xU/IqoXzeTuo/dMa/2MRYwVRo35HnfhTuJZ
+zuaw9igqL28Z01ex3QWP8M8/FrT3bxn+czNi/o3+T/oH5drjp8=
                 
                 "]]}]}, {}, {}, {}, {}}], {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{500., 0.},
         DisplayFunction->Identity,
         Epilog->InsetBox[
           FormBox[
            StyleBox["\"d)\"", {
              GrayLevel[0], 16}, StripOnInput -> False], TraditionalForm], 
           Offset[{5, -5}, 
            Scaled[{0, 1}]], 
           ImageScaled[{0, 
             Rational[1, 2]}]],
         Frame->{{True, False}, {True, False}},
         FrameLabel->{{None, None}, {
            FormBox["\"Time (d)\"", TraditionalForm], None}},
         FrameStyle->Directive[
           GrayLevel[0], 12],
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         FrameTicksStyle->Directive[
           GrayLevel[0], 10],
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{80., 15.000000000000227`}, {30., 
          26.000000000000057`}},
         ImageSize->Full,
         LabelStyle->Directive[
          FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotRange->{{500, 800}, {-0.021, 0.022}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}},
         Ticks->{Automatic, Automatic}], {1316.5, -883.4999999999999}, 
        ImageScaled[{0.5, 0.5}], {931, 573}]}}, {}}, InsetBox[
     TemplateBox[{"\"0.1\"", "\"0.5\"", "\"1.0\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"Fraction of waste N \\n available to host\"", {
                FontSize -> 14, FontFamily -> "Arial"}, Background -> 
                Automatic, StripOnInput -> False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 14, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               
               TemplateBox[<|
                "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                "RGBColorSwatchTemplate"], ",", 
               
               TemplateBox[<|
                "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                "RGBColorSwatchTemplate"], ",", 
               
               TemplateBox[<|
                "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                "RGBColorSwatchTemplate"]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{
            "LegendLabel", "\[Rule]", 
             "\"Fraction of waste N \\n available to host\""}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "14", "}"}]}]}], "]"}]& )], Scaled[{1.2, 1}], 
     ImageScaled[{0, 0}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   DisplayFunction->Identity,
   ImageSize->Full,
   PlotRangePadding->{6, 5}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{
        Inset[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
                Line[CompressedData["
1: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
                 "]]}, 
               "Charting`Private`Tag$154187#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                Line[CompressedData["
1:eJwl13k4VV0XAHD5yqsUhWZUlMqUikisFpqkKIkipaIo3dE833NO3ISK9GZI
GuilpCSKpEyZRSllKlFIptAg+nb66z6/Z+9z995r7XHRIbaFo6iIiIjlBBGR
P79+PsfFRDAAoxT9Vl+QYkG3m3y7p2EAyur8tQ2nuqDfKACnbPtrXcfVgg8b
A9DG468HzUZGik0DkP/ir10UT/eHWQfg5wT/v9+XpjTOZwdg/enAcevM7krX
iQ9AnjMz7l0bdOZoiAaiaL5w3LZXBD1NKwPR6Vz43/ayb2yLtw/EtsPR4+7N
3SGzOzIQF7l7j/tbu4CbnB+I1hlx437zXVt3cCgQ2bMctf5Y651fyyIpAZ59
7zNefvZZUZD5MgE6yDuu/GPZpzU/ytcLcOb+yzp/HJ3d5LLFWoAL9JvG64cs
V5V9whGg/3TU/mOfi545OiECnP/AUP+Po+aGaIxdEWCA8I3KH6fFxF4pfCjA
IcZpzR9n/IjZI1MjQMG2FePtPdgTI3WoQ4CLh8rHy5erN/y8OYFCifyLGn8c
M0Hu49A8Cl9/7lk73v+OhZfCV1FYZvFgvH5V1RLLpVspRDg73r/bEwK/fiXe
K/c3XuFabyOemFJoInF63OYx4TV7t1O4cSk97ueO38xCd1AYuYE/7tpfJSb9
VhRm+oSMu07FZX3OYQp97ueOuzEoXcXcj8JU6yvjfvxz3qngNAqXf/+b7wW5
A++M7lB4mf/XgQFlumPE/xj9teFE7w7XdAqnDv914bQ3mw/dpzD4zN/8ly/8
V8wgh8LFHxPHrfaBtf87sYVd0rhDEzdl3ntE4Q/B33IzlWFHlccUir7525+0
7srcduKpkgnjnp6WOPNKHoUtQ/Hj5nL9Tux7QmFuhnWA21Iy3tW7i2Y/pVDd
lw1FOixYPawm/4KYimDmuOmz4PyDiW7h+RTePhktXIIs2G2QsXhSIYXLYmQW
CzezoH6TDDNQTGHjDCp9rTUL1k7+3JD6jMK3jhL2NrYkf+X5q51LSH5q94ed
PUDm8w7eh5ZSEu8lYufAiQXNe2uMKiso9M+X3p/szYL1cskxwkoKT3spqPoH
sCChOXDAuIrCUeuakmMMCw4d1ryaXU3h09VxMaHhLGh3OTPhv1oKg9pKvH5e
Y8GmFUf3Hn5BYd+HFXejklmQ1A93FV5SWLX628DWNBY4uffYR9VReLI4KWli
DlnfAdufUPUkPl0XRR+9YMFAhESAXTOFH+0LNDhT2DBmf/LOshYS3xv9k45J
s2HKit/vv/7xPZ1XQfPYoFQ+sCHkPYWQEWyqosoGy/+9nZLVRmHea38VBTM2
ZPL/uzD9M5mvpwO+N8awId9QsaSBeL/sJ+X5iWyokor7kdRN4eYZs2n/NDZ8
unlmn0EPhbYT1zVkFLJhTpu74rF+CvWW+yq962ODl+XG2wXfKBSraR+WXsaB
IMW8lvDvFDrLDETv1eBARJ/uDJsfFCa2FWxL1+JASqiaa99PCscmtQZFG3Lg
baGMnvwYhe9r49P193FAX7u1yH0ijaYdm+Jyz3NAZFZA0/IZNPbE7mVVz+BC
/ETrk5+IR4fMhBFzubDuq4Z6ojSNv+93bz60iAvuz5t9F8rSGFOZ7bZ0JRe6
Q0Bu9mwaD7RfdNm8kwv1v0dtJsrTmNfIGnwbSer31InmE69+n5znGMcFmabU
lAAFGuUXf9o6ep0LZtl2P38uoHHKlPD5uzK5UOiaG92vSGPu10UfLr3hwp1O
3/rmZTSe+HyI067IA7N6y8C45TQGs5trd6vx4HOx2jIbFRqPW21Oea3NA+Xr
jR51qjRKn2etkjbhQdx+/dkVGjQKE8SUPTg80Nsum3dqBY0tujsEwd48eL2u
+8hmTRqTe5eK32F4ID03LjN/JY3bQ89HmUXzQPhiZPdDLRrt3VYIugvI/+e/
GHXXpvHpyoxDHVU8KLhzM1FrDY3qAd/uTnnLg7Ew26E0HRKPWbOiKvt44Lol
53ySHo1G556H3V3IB2mdSH2HdTT+m3Ug31idD2lLjrct0qdR43H87AV6fOgS
na91yYBGUPb48tySD8L+gQYboHG3tptL9iE+LHlXRs9ZT/qjVz4iw+WDfa73
i0ikMXpq98CuM3xIzhq0PGhIY2LKrWNPEvgwcJf1SsOIxnUPrdql7vFh3a0O
61/E/wqaI1yK+cAkHXpTakzj1sK+91Mb+FCZ0Gjz7wYaM3kiybr9fJgVa9Xo
sJHGu+0dsTsmu8L+qOd2qzbReFD0ZdFbJVe4cWZry2/i39PELl0wdIW+U4X2
lZtprLFcbp1w2BV0GWiN2ULiPcGQe/e0Kwj8Hxx2MqGx7Obwo8uPXKHMc1W7
9lYaQ68eP+My4goy/FtH/mdKY+TyS5vLdrrBvhPKHc+Jww5mN06sc4PEownO
8dtIfkvu8Z4+coeeg/M+H99Oo77zPyvqH3uCzr7zLmvNaFRK42YeVPOHQCvJ
HjFzGn22yUc6G1BQukPIfkk8p9TtUtgTCqRNRfuv7KCRHbh37+lnFNhu9OWx
d9L46P1qJ5liCq6vH/6qb0Gj9WfzE1KFFGhrdQ2/3kWjVrzIpuE8Cvw1HDwT
LWlcHhFs2JVLQfGy5h+83TTuV7V+05xDwR752l/TrGnU3Lf4XWkWBb5i2aIb
bGgMONh0+EYaBUUiWswMWxp3iJ/fk5BKgeRI6qQW4vpfsX3RNylI6L0i7m1H
xrMoQPLMDQoK6k9J3rGnsdciYr7gMgVTbu6dJ3eUrJelU7adPENBtPmPlYN8
0r6PqaUsh4LaBxFDua40Tt82m1JjkfqKag+D3Whc8+qC00YXCrwH9+N8Dxon
BIce8nKiwCa60MzIm8aHjqnyXfYUyH04c/xsII3dN1O29u4k/XFXTlQLo/HD
nKtpoVoU1LfkOQ0TL6y0UM9dRcF0k71qT8JpPFrT5tajSYFgfui9XWeJdww5
7VKn4NCT/qfekTR2BvHeKytTsHhKbnNJNI0DVccdBmdTsI9vdTUihuTb7Evm
ylkUnG/sddwXS+O1IZd6tiwFk9IUv/TG0Vh3rVDYM52Cj7uEI7MSSPyimBtD
kym4cWnXHMckGmNXGX9R+SUAzlJTi0U3aLw03eN8xE8B6N01Cm0ilqi93/vz
uwAqC1eKWCWT/WFy49PKIQFcMFuuJ51C46KaOj3dQQHY1y90rfpj3yrnawMC
+PpZqmPTLRoL+LGdPr0CeOT2j+L/UmlsiJXT6/wigKDfY7Z5xHXmogbW3QLY
cWo4yuc2Wa/i1/qLugQwV6anWieN7K/tB/dodwqgNa598iCx2uSr3MRPAril
3GR85w6N4YvkAk5OF4D7nZd+LndpzMjEL+9uBMJ6vYqsZek0rpiQFDp4OBDE
Cwv624hfqZ61vKMRCLXbc1Sv3KOx4h9jTtNYAMS9Tne0yyD7+/vaO7lXA8Dx
YMrlufdpXMyLPpNiGAAan6+8qSOuOLFa3fqlP3x3jZaJyCTzefJEh+0W/pA/
dna7WRaN9ynTU613/eC0UBg85QEpz1Ho2/fZFyylA58WE1tE3Jd6JOoLCnEe
I9RDGtPt/BQKZHygYwlbe302jd9lToQu2eINd9OOsEeI59b7frW87wXea/cn
Z+WQ/bykLzPTwgs2FOz+wH9Eo0rw684n07xAcvt2ec1cEm8JL6Wi157w+tUG
627izIe5ojXJnpBgr3/uv8c03nvf6TXk7wnHulaXO+SR/eX2TDxg5Qmjo4rr
m56Q/cd7WZmquCcoLZmwtKqAxlSW0ZHHbh7Qffu7fUghjX6aDq0fLTwgU7cv
ZlMRjW/6UkZzND3AZFuLZF4xjdctKlbv73EHNj93OK2U9OdYxnVNrjvojmZo
upTRWLprppHzLncQDb51bFk5jSYKyV66a9whKia2OaGCxmnBJWoRo26Q89Sr
+Fw1jcO6DfY/ItyAMeWKmD2nsdbo3MRULzcwq3PSm1JD47y3ByQ/2bvB+w7r
21QtjVczL3p+1HSDf6avucCvI/vxBUm7hleu4JtYnbz+FY1bxJ43FeaR/VfP
OVfiNY1iwSd81ia7wlvHuLZr9TRecczLeujnCrdzRFe/bCDnaXXnrUo1V1Da
GbcpoZGMxzIr4tlcV7j4UdvGpYnGqJyYtzr/uAI1w1kwsYVGfx3ZDdwPfLA6
Wl2t1UrjtqdR2iJX+FD+y+mDyAcav5VnvnY8xweMEP1WQXwiFR6pU3xQydVW
cGwn8/u82IO3DnwYlY5zieqgUYGzduSoBh94/2kHHuyk8XnVfJX4RXz4aFAd
qd5F5udVW5PFM/nw3Ek0p+gzjae+90rNGeXB9cdOk4d7yPkqVbvG8TkP5lqK
yuf30jgys9SjtYgH4Z2xmuF9NNoa+vZfzuGBp2y1tfIAOR8ujjEvb/DA9Jh2
ktUQjTxpK+lhigdPflc9VBwm7ReUz99E7gNaUU6VPcQSYXNSS7k8UHgSOxj0
ncT3+5L7Dgd5MDBT1DhrhJzPC1qvFRnx4OjNWCv6F1nvtVdqTq3jQSNqHzMf
pVH37cpJHlo8KD7udO7TGI0yTkrnninzIPppVctsUQZFlxscVZzGAzwR6+sp
zqD2u32hnS1c2KQUKaYzmcFlLw1F5jVwYdubkLNDxOLT04wPvuLC3o3e13kS
DF7/du3tykou8OT3VrhIMlh6CQ0qcrjg+WKHlaoUg0tSfYqvZXHB/9SWd53E
67LiesPucSFkSGfwyAwGT8eOGl+8yYVrlbPkDsoyeG7e9f95kftZCi2ZtGAm
g0GFTjZvLpL711oxzWbizIiQkS1RXHiUOGRsO5tBc9HSW5bhXHjp9/L47nkM
JjUprZIVcEFMIyLHZCGDw0rN8T1OXJjadmqj+CIGbx3plpY/wgXpGEF1MXGZ
hba41WEuKIhxPxgrMXjvdt7Fj3Zc0Gk2lwBlBpV/Bczy3cUFp/BptqvUGKwY
Od9milxgbZjU3kdcaCx4Nhm44PrzFytNncTTQWtW9TouCI50U2orGNx8Le4o
W4cLMVCeoryKwce7hipEV3ChvEf4c54ugz+LFdOtFnDhiUxCcR1xcIPuDkae
S9Z/VsTZtQweabggnTWfC1eodhWxdQym12wcVJ3DBY9ZRrb9Bgya5M/LNif3
ZSUYyXlmzOA36UFFl4lcmHNYWkhtYNCgeI16qygXJIXLLQ02MqgvdXvWvglc
+FFj3Z2+icGrjvVgO8aBascMuXgTBkeTwsVPfueAT9gJP1dzBuX33z/j9YUD
nHTGZMUOBv1MDy1R7ubAkdexM7uIzTREU+u6OLBzUVnqAQsy/v6YgwYdHFh6
X7l5624GJWbiKo0PHHjR2AKLbEn+NLXfnH7DAVU1C5GqIwx6xr+bNfyMAxX7
JJIuHmUwW3eh7utiDriEFZoedmKwZTrbJ7uIA7d71vz73Znkb1hha3ABB1bd
na+hdILBuMCwFWvzOKC3pt3Wk8+ghY/IhW+ZHNiCnlmKgQxeMzyxP/0GBzo5
K+2+EH8+EX2uLIkDIVe6RB8IGMxjuPJtiaR9UTuz7TSDN+LiNedf54B5kWG7
RxCDB7tctKITOGC1VUKmMpTkc6LLWHU0Bxws41ke0QzKHYj2lArjwIXE+yFa
MQyOXA16vCeUAyXDFUn9xA4PTry9epoD6tEjzcfjSD77vF3WhnBguGmPuf1l
Buu/mkVzgjkQfFRG0ySR/H9Cf9X/KPJ+8hb2z7vLoEK9jl2yBwd6E3iuj0sY
HFsRMTXVgfR3VPXY6VIGu6yU5s0gTrFpP7CnjKynjuX+bodJfmT3mA6UM/hK
POoYHuJAY7CBonI1g5+Oexs3HyD9Y4k/D6sj89FTdkjDlgNX9eNV7VoZPFPE
01ex4IBlfWnryAiDVtmirrvJ+y2s/Fe9icZJ/C/OxWbCYg7M+ZB1RNvuJG70
UTkwZSoH/NqH9s0+exJXnfod/qyTDVpTH3VdyDuJAZ/OlXTmsyGvx05kac9J
zDY65rgxgQ2LH1H+qQuD8LTdsfVT/dnQkLrifI15EDZ4XW3utGfD8ZAD0t1U
EKY+SqmX2MCG7adnL7ueHoSmM2uGDpP37sQtN4tc3gdhW/DPOtWZbIjqfVqu
KhuMX9yXO0v9ZoFHjr2z0DgYO9rdyhZ2s2A1j2I3uAejln5dr9kbFhS2BYxC
cjAOZGQYHCkh73WfSUpYH4wi78Z2djwk7/3RaXd1JISoxd4e6XWTBZxr8a8q
9IQYHfj+3bzLLLCYJMHwnIWY5P519EskCyQtfkZLxglR/OaRshIhC+QKuJu3
lAtRUtzvnF4AC+Ys2aw8v0KI/tGG/80gnhksN6mHuOOsW0WHP/ne9Fl+ZJUQ
tdNO4r/EIi/koKVGiGaTlrYO+rGgvfWZlnu9EJ/6bGtL92XBbVEFxevtQvSS
1H611psFKQ5fRTw+CtFNMTVPmvhGcUmLySchclydsz57sSAhhH+pt0OIVkej
ay4RR0qXzlnXLUSJog13RIk9FV2lageEWPAlTLragwWujEnP9a9CdNzZ1vQf
MfejQqXHoBCXxatlUcTHUkpD5IeFODIWELmGeN+qBWLOP4Q4d2XqQLw7C/ac
H2xb91OIMisl1b2Idw+XFkiOkPor17ntIjbLdhVk/BKij9FHDXFiU7mt9sGj
QpxUb5PQ6saCLf4L1tuMCdGEL1yQS7zh3aC8+m8h9pXsv/UvsaFR2a/fxJfv
N2ziEf8ffqXkYw==
                 "]]}, "Charting`Private`Tag$154187#2"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.560181, 0.691569, 0.194885]], 
                Line[CompressedData["
1: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
nz2NEo0EQ3oydG230IDRkr9KWOe8KZascaFBJ8dIxaOZfR86vp6t6UTDoHwi
59RXgi+yi3pW2tOQ+njP+N42tp+CK8b4m9Mw00lSOa+dfV/odtRfNKUh6lvC
oqgOtl/0vRVrjWkImFrurNFFcMJFldxdhjTY7zNK29RD8OmV84tKFtLwZLjs
vnovwf/2zptvokuD4ak9pW2sdYwv1Gbo0KDyJKE7vI+g+a/VLRc0aeiaJml9
d4Bd39WWjPo5NHhlJmwifwhGWEbLBqnR8BGN9q0ZJJjvK2xRVaWh0HvPiS9D
BFerevr6KtEQ97SsXlFShOKqOiM3RXb9VEJgwDgRPo3+13twIg0r5sZIG49n
x808Wnom0ODw/sjxHtbWWzeRTlkaNi8/kCqQFeGCuK1NneNpEChvLuHIiVA7
6WTINGkaLpROV9oxVYR3ghdsvDXIgwwil6Y6TYRS6YuO/h7gQZap9KI61oFz
dNVt+nnw6GKP9RZFEe6MT5re0suDyqBK742zRDhmnb6rawcPpPWiH9qpsfGa
Jb86G3kwoenw8nFzRBjl2vRZ2MAD+fiw8kLWko+rmvs+8UBFmt9oPVeElteX
9cvW8cC4bo0saIiwtARuOFXzYE/UxC1LdEVoZD00YXcpD4rbxP2zTESoMPV+
sPZ9HjxRSC58y3q/82DjwF0e2y93o4+bsvdbX/atPJsHKUyzjrS5CE0yFjwI
vM0D/+lWWzotRHj+3Kl7X6/zYC4MPHxuzeaPNL0Zc4kHB49SQT5rRHhrpsFS
7VgeLNBdL1HmKcJ4ZVMdB38elLjJpp3xEqHqvFZ5Rz8ecI4W2O/aI0L9wLqC
tb48uNb2z+m+vSLkJc0+6CLkwZIbs/XmUiJs/Dy7g+bxwOyf5i0BQhHmv7FW
K/DiwUoMuKseKsKezPvxLS482O10jusfJ0L3DUraJUt50J4s8Hn8QoT31ian
vpzAA6fqooaBAREqL69Jyq7lwtHiP9V2eoew3S49n7nFhRmNdz2Nth7CY1WS
p+EYF4Kae9wUjx/C1HUNal37uGA44dH32NxDKJV8zPSyPRdy27ZKaLYdwseT
TTZb6HNh3iMm+KpaOAZIVSQ9kOdCzVX9k6/XhOPBnNZarX4KvI9sl29lwjHz
dHBK9GcKVv+rqJV6Mxw3bat19CqhYMzKzGecz+GYlHxv6aL7FJxqf1q8YGoE
dg8b7+67SIH/Q/e9YusITN/eV8E7RYGBgOHV+EVg60rX6G8iCgqaQgbhcgR6
WTRrSPlRkHZQai5Ws9f7SbeZ7KVg5+DEG8ayYpRInnKC40YBfeHcuxIzMcba
tTTy2fP2eilZkWCvGG21ZznvZ8/jcuv74+QSxdgQ89L2MHueV8rn264sFmNn
8Yy9fwzZ8/98W43ZJWJs15d8WcV6WoSSVBvr8dP3W99iLWf/PC+mTIwJW9cF
7mMtUaEE9a/FGLdv0of3BhQ0Nzw39KsW43RpBfP7Syi4JqmintosxksvymTI
Ivb7YPdPCf8Wdr4pjb3bWV8qfFFv90WM+U7ZDUtZJx8Rnm3/KkZ/uR05vfoU
xMgXzTBvFeM6G6cX+1gHqPtMetPFzs+vbYqLHgU+Iru21J9izBirrfsPa36L
Sql/txhDTYssp7Lel1F0RLlXjHYGRfBqIQVuS1Sl9/5m/z/QrMiWtcvJ7ibz
fjE63zE/O5/1xt6ifLkBMUa4pXJHs3Z84BN2+48Yb7eqGObqUmCvtMo9YlCM
Z0d1kLOsVwarWroOiVH2gN6MQNY2n7qVFw6LUVWlodqV9TKrl3+GWffdkb9m
yvp/ltACaA==
                 "]]}, "Charting`Private`Tag$154187#3"]}}, {}}, {
           
            GraphicsComplex[CompressedData["
1:eJxd2H1sleUZx/GuigisUEG7WhyDYoBgNJpRXVjCTjgkQ/9YCm6YvVBRxh9Q
HC5zc2WLGxpLFpY4XNFEE2e3RIcvxeESpx5jSQjYThzLllUSZhYoQ4l7sawE
X1Y2z/18rifc/AH55nflnC/3cz/Xdd9n3u1bVm9obGhoWPn/vz7+98T4kRMd
+++tDJx59ui5c/MHv7jgbFf1SMm717S82fnPkqdtX7Kq64L7gu94YfVwd2vJ
fzh5Z7Xn6pKva32g1ru85J+vfLaj75aSx7//+4H+zSXfsvudhXu2lfzikcn9
tYdKnj11Qdvw0yXzv2zu7q82nZgX/pg/5o/5Y/6YP+aP+WP+mD/mj/mfffDj
D/5M+GP+mD/mj/lj/pg/5o/5Y/6YP+Z/4MSyJzu7Zoc/5o/5Y/6YP+aP+WP+
mD/mj/lj/n2f6+jvXvSp8Mf8MX/MH/PH/DF/zB/zx/wxf8z/9h1XPdo7NjP8
MX/MH/PH/DF/zB/zx/wxf8wf819Xqy6u9jSFP+aP+WP+mD/mj/lj/pg/5o/5
Y/4f3XbtnJ6mSeGP+WP+mD/mj/lj/pg/5o/5Y/6Y/7Uzll7ZVX3/Vf6YP+aP
+WP+mD/mj/lj/pg/5o/5H/7tgta+kb+FP+aP+WP+mD/mj/lj/pg/5o/5Y/6D
ib/AH/PH/DF/zB/zx/wxf8wf88f8Mf9F6XmEP+aP+WP+mD/mj/lj/pg/5o/5
45i/6X2oxPwtOOZvwTF/C475W3DM34Jj/hYc87fgmL8Fx/wtOOZvwTF/C+b/
jdSPwh/zx/wxf8wf88f8MX/MH/PH/HH0/zQPwh9H/y84+n/B0f8Ljv5fcPT/
gqP/Fxz9v+Do/wVH/y84+n/B/B9M8zj8MX/MH/PH/DF/zB/zx/wxf8wf89+f
zkPhj/lj/pg/5o/5Y/6YP+aP+WP+mP+ZdB4Nf8wf88f8MX/MH/PH/DF/zB/z
x/wvTfeB8Mf8MX/MH/PH/DF/zB/zx/wxf5zdHyvZ/bGS3R8r2f2xkt0fK9n9
sZLdHyvZ/bGS3R8r2f2xkt0fK9n9sdIyfeMva284H7dn5+n2Qflr9Xk3N3Is
v7Xezz4dOZZfXZ83l0eO5R/W+/llkWP5UP37miPH8mvqnzclciwfrtc3RI7l
r9f533EewfKG+p/DNTmW70/1MU+x/ED6vtgvWL44+UaO5QfT/zdyLH8/rVfk
WH5VWu/IsXxtel6R4+z5V7LnH/ltab9Ejk+999Daav99sZ/Ov/+0D8rtJzmW
209yLLef5FhuP8mx3H6SY7n9JMdy+0mO5faTHMvtJzmW20/R/wuW209xvy9Y
bj/Jsdx+kmO5/STHcvtJjuX2kxxnz7+SPf/I7Sc5tv/8Hjaxbd6KnqF7Kxfv
e/fz1Z758X77vUn+rVMnf9fZNS9yv+fIn1l4oLvWOydyv5fIt26tbRjpbIvc
7xHylYf23jrW1jJ4fn+dGXlL3eeSyN2n5Qfr3zctcvdV+fr65zVG7j4on6jX
j0f/ct+Sv1nnw5G7z8ivrH/eO9G/3BfkX6v7/jdy53H5zvp6TI7n47wrH6+v
94zInSdj/evPc1bkzmvyt371wrHRjtbInYfkzav2vT3UfUXkzhvy9h9tuHuk
s+xf5rn8pa9s+mCou72y9Y0puz4xWO6f3uvObJrYU/7+Krd/sP2C7Q9sP2DP
H3ve2PPFnif2/LDnFX7F88GeR3x/sf7YemPri60ntn7Y+QJ/++5ZF+/pbI//
z8jj0++vdcwN/mHfrAv7Oq4IvunklImBc+V6tS5tODs0NCv40OX/OD60cEbw
xlePjJx7+aLgqcM/fbj78Y9ife5f/PrEwM6TwS33NK4fW/rnWJ8vffnkc51/
Hw/eceH2b451XRD+/+p65M7a8LTgp46uWVadXa7X0Z+sW7FoVUvw9Bs23dS0
vS24MvqdzrHanOAXX1v2dHdPuV43/6J6TVdfuV7mI568ZN+7o70lm4/4jrW1
jWPdJZuP+NdNWw6d6y/X13zE31u34WDb5tZg8xGveP7r+zquvzTYfMQzL1r9
cmdDyeYj3vebn20a6ZscbD7ilwY+qLWtnojnYz7i46efvLFp/FSw+Yif/8uu
R7rfHo7nZz7ix7b07Ohf8p9g8xF/dubhP7b1Ngabj/jhzcf/Ovre1GDzEd+z
/sO7RgYuCTYf8XPNk35QGy3ZfMTHXpm+rb+t3C/mY7xf3a3bezvL/WM+4vmf
3Hmgo1ruJ/MRv3Js142Luubn+20wy4OL/TmYfX70P/sT+zzs87D3H9vP2H7G
vh/n369/4Hz/L0/vW3BLWr+o935g9Tiv159w/j41p/c9eDQ9z6j3vmH1OK/X
/3D+fr6V+k3w3rS/ot77i9XjvF5/xfn7/kzqd8E/Tvs96vUDrB7n9fo3zvvH
6dRvgx9N71/U6y9YPc7rzQec96MHUr8PviH1g6jXr7B6nNebPzjvb2vSvAl+
IvWnqNf/sHqc15tvOO+X16d5F3w69cuo10+x+ljfrN78xHn//W7yCf5T8ol6
/Rmrx3m9+Yzzft6Y1jt4b1rvqNfvsfp4H7J68x/n82FD2k9lf037KerND6w+
+mNW73yB83kzlN6X4Ob0vkS9eRTvY1Ef/Sard37B+fxqSf0geHnqB1FvvsV+
KOqjn2b1zkc4n4crU78Lviv1u6g3L7F6nNc7f+F8vm5N/Tz4idTPo978xerj
/cvqne9wPq+LeRVczKuoN8+z+Rac1zs/ZvMxPn9LmrfBk9K8jXrnA6we5/XO
p9l8D87P++5H8vz+5L4U72dxX8LuS+efN8p54r6E3Zew+xJ2X8LuS9h9KfyK
+xJ2X4rvL+5L2H0p+ltxX8LuS7E/ivvS/wAYRdth
             "], {{{
                EdgeForm[], 
                Directive[
                 AbsoluteThickness[1.6], 
                 GrayLevel[0.09], 
                 Opacity[0.06]], 
                GraphicsGroup[{
                  Polygon[CompressedData["
1:eJxNmAf8l9MXx+95SlP92iUVTS2l4dfUXv/SUCmRSsiIUISIElmRvbI32REK
ySrKlh0qKysr/kk4787n+3p+r1enc557z73nc+/z3M/9/L4NJ58wclqWUvrT
/yvl/hc3niu7VUnRVtqtqvwubnUspdpuu3pcpHzyqqm/jFt1+bJutdzKu1Vw
qy1f0a2G+su5NXfb3a2eW021MeY3Yanr1lhzMUcDYaLmHvLVNUdl4aqvNZC3
p/qp2VCeOnV9Hbu51fF4q+o0c2uk/lrCVKS5+rl1cuvstpfyqdnXrVh9rYWJ
mnvLU3NfrbOFWyutgbw26qdmW3nW2kFYqNNRnvH1HO/ubk08bql1NtC89fRc
rGf6e2ku5ugqTNTsJt9WuFsKVxetgbwGXqe+2z4eb3Nr79bDrbfmY0195KnZ
UzkdtEetNNefWgt9/dVHnaluE9wmsk9eZw+37h5vV53Bbgdo3xk3UGsA+xDl
UHN/edY6XJh4JyPkGT9U/WAfqfkGuA1TG2NGqY06h2o89XcIyxi3sYqpf5A8
9cfJU+cQzQuWn9w2uG3UWg9Q/Yny1ByvXOo18j1o6DZIWLpozU28rbHbaI8P
L4Flimof7HaUPPVPcJus3COFlbyj1U/NY+RZazOfu6nbJI/NYuw0t2PVD/Yj
VJO5/hUG8k5UHfpLWYyb5XayMFHzFHlqnqRccM3QGsibqX5qnirPN3KGsLCm
M+Wp2dxr7eV2nMfTNR9zzVY/dc6Sp/9seWrOFT5wnSNP/Xny1G/pc7dwO83j
XSzWNN/tfK0PXBfIg+tCeepfJE/9i+Wpf73bArdL3G6Qv1Q2V1gWyoOltddt
5Xaux2Ut6l/hdmUJLFfJg+VqebBcIw+Wa+XBcp38Ahm45gjLHOFYJExgqeh1
b3Z/v1t5i/o831ICy63yYLlNHiy3y4PlDnmw3CkPlrvk2Zu75dmbe+TBUsmi
/lK3Nh7v7XaZx4tLYHlAHiwPyoPlIXmwPCwPlkfkwfKoPFgekwfLEnmwtPea
7dzu9Xgf923dbtSe8U3xPT2pfQLX08IEluXCQf1n5Kn/ksY85bZMueQ9q35w
PScPriKLPXjB7UXtB+NXqB+877q94rbKraPnd3B73OOXVQdcb5aY41VhouZr
8s9pjqeFa7XWQN4a9VOz2Ofe1+15j9/SfKzpbXlqVrWo9YYwLdNc76ifOu+p
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
                   
                   "]], 
                  Polygon[CompressedData["
1:eJwtlHlMz3EYxz/PR0hCQqolRaWRFM3M8j+bv4z/8bfjT+U+yjEzzMyMZmZG
M3OGuXPN1ZyjmHO55mq5SfN6vH9/vPZ+P8/neD6f53vkz5w7ZU4MIUyGJOhH
kA71+N4WwkqohzRoJJfNWBY0BOVWwT5IhyZytege01qf04Aeg0xIJT6BHvc4
KPcDvkM1cTf0BlyHSuJcdA0cgAx4Ra4RvQA5UEDchn6G2X5+dDFshQAzkKVo
nWnMa3Sif6EWn4wuh50mv5HcMnSH6Sw+5x36NrFXRJfANpP3ml3pRVLU2hRy
o/Cl0BJ05ktwEcqCzrwa9kN/05wadLf3xtTzVNb2hLqgXDF+WFRvfc0K2GWq
5XOuotdMvfIaZ9DTid5ko7fgNuQlevoSfQHTgnr0CT5CFWEx+h4+mPwscm/Q
1wlfhLb6czD56f6OcLY+MJp4L/ET9KnXh6nEFYyNgTZ8JblynxvlW8m1oM2J
uUPQB/DQ5CeSe44+S9TyPb/BV6ghHo7+gt9Qksh1oH9gQ1CuL7XS4GjQGdvh
i2mt37k7Y8lQRryduAs+RvlSf4/wFuV9zxR8j6i7+pqR+JKou4wnHoDPgApT
zUz8QDgflKuCdX4H4iw4gj8MvYJy1fj1/k3gC+EK/rLJ/4Rz+LOmtT5nIX4z
dOAnwSH8Qfv/aEM7LMJsgc6gZ/4Y/8g013Mn8adM74p/k/P9OzDVKocF+E3e
Y/wEGMpdCmAcuZvEg/G5UX6s9xU/IqoXzeTuo/dMa/2MRYwVRo35HnfhTuJZ
+zuaw9igqL28Z01ex3QWP8M8/FrT3bxn+czNi/o3+T/oH5drjp8=
                   
                   "]]}]}, {}, {}, {}, {}}}], {}}}, {
          DisplayFunction -> Identity, 
           ImagePadding -> {{80., 15.000000000000227`}, {30., 
            26.000000000000057`}}, DisplayFunction -> Identity, 
           Ticks -> {Automatic, Automatic}, AxesOrigin -> {500., 0.}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, 
           ImagePadding -> {{80, 15}, {30, 10}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {500., 0.}, 
           DisplayFunction :> Identity, Epilog -> Text[
             Style["a)", {
               GrayLevel[0], 16}], 
             Offset[{5, -5}, 
              Scaled[{0, 1}]], {-1, 0}], 
           Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{
             "Interstitial N (mol \!\(\*SuperscriptBox[\(L\), \(-1\)]\))", 
              None}, {None, None}}, FrameStyle -> Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {30, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotLabel -> "Fish absent", 
           PlotRange -> {{500, 800}, {0., 3.6*^-7}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {Automatic, Automatic}}, 
           Ticks -> {Automatic, Automatic}}], {
          Rational[931, 2], 
          Rational[-589, 2]}, 
         ImageScaled[{0.5, 0.5}], {931, 589}], 
        Inset[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
                Line[CompressedData["
1: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
9HtoiMN8sxuGq4n/BzWf9Qo=
                 "]]}, 
               "Charting`Private`Tag$154421#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                Line[CompressedData["
1:eJwl2Xk4VV0XAHBUEhrQQElKZGoQUmhZFSKFt0iRkjFDhpLUuYZ7z3XHEopS
kgrNaEIkQjILDVJRyZBEJIXk2/X95fk95+x9zl5r7bXPfSx0DdjqISYiIvJF
VETk798wyldcBCMwzEnfJF+agp5D89tD10WgeobePzsG1pX0r4/Abb90/3m1
hy6zzSwCZUNX/vOg9ehomVUEzn+//J/9Fgn7jztEYLj5sv+Pr7j+dl5ABF67
9v/7DeZ03zFIjsBmOc1/3mZqIL9MLBK9uxf9s9NFZu87nUjMHVP+//PyrmxO
donEqPtz/rmvwFbO/mQkftiv8s8/25lB14ojsab+F/z161/6qwd/ROK3uO3/
rsc8fcKxUWdig3Tsv+szH9cPV5kw0WxBzdq/Tsx752fhwMTvuy7jXws0tGYW
BTKRpyRm+tfUmdB8AwETHW0f/ZsvXkGw7M9FJs7QOKb115lnz10sfcBENZ+x
1X99b/jsDrl6Jg5PPhP717k7zk537WKizAGPuX+tsfTNyA1RFm77sOBDHvFZ
UcWOH3NZmOkc4Pf3ul6X8vnolSwMyApY8de1tap2Szax8N0sru5fv9D0M8l3
Y6H7JLuQv37LuaNpE8bCD22fDf+6pqhjp28CC5etU1T/60cjc/ncTBbaD5Tt
/OvSqa83ut5nYf2ZF+Z/XaV8WnxtPgu1f6qs+mvtNv/dv4jtKjv1//pYmnn2
3Ycs/FrQ8M/WmkMemo/I+Njaf87sqSloJ67OyfnnGZlpsy4WsjCBH/rPQUFh
+3cVsdD0zznJn3MpaNC1fzLnMQu/Pw0dl1eloMlcjj1QxsKaRHHRZEMK1kz5
8ubWUxYWJCb3hKwl8akq1vUuZ6Gha6vdHiT1YXugrbWChWPdQ9Z7zClo2Vm/
vqaahe0Vx8qVt1FgonjtLK+GhYdtM0KPbqcgpSVyYEMtC43iisTbd1Lg6rbi
Ul4dCyOs2zy/ulDQ7ndC9GoDCxueHiutC6DAfLnXTrdGFr4c6Px+7yAF6f1w
W+k5CxvbRCxuHqZgX0ivS/wLFoY05v6sjyD7JWJLEauJhazSAv+xGAoG4qQi
nFtYOE+/vKA/m4I/LlFZ6q0sVPh1lxH6kALJ5eMfvhO3JlR1zC6mQKVqwFTw
gYWvty5aeq6GArsJzZI5n1i4wPiefmk7BdkHrybM+MLCU6zKKVfnMqB43aLy
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
LlI=
                 "]]}, "Charting`Private`Tag$154421#2"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.560181, 0.691569, 0.194885]], 
                Line[CompressedData["
1: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
jxBlezI8ZhFvNHw1MjoqRLW5e4VtzhT8D6O1zXg=
                 "]]}, 
               "Charting`Private`Tag$154421#3"]}}, {}}, {
            GraphicsComplex[CompressedData["
1:eJxd2H1sleUZx/GuigisUEG7WhyDYoBgNJpRXVjCTjgkQ/9YCm6YvVBRxh9Q
HC5zc2WLGxpLFpY4XNFEE2e3RIcvxeESpx5jSQjYThzLllUSZhYoQ4l7sawE
X1Y2z/18rifc/AH55nflnC/3cz/Xdd9n3u1bVm9obGhoWPn/vz7+98T4kRMd
+++tDJx59ui5c/MHv7jgbFf1SMm717S82fnPkqdtX7Kq64L7gu94YfVwd2vJ
fzh5Z7Xn6pKva32g1ru85J+vfLaj75aSx7//+4H+zSXfsvudhXu2lfzikcn9
tYdKnj11Qdvw0yXzv2zu7q82nZgX/pg/5o/5Y/6YP+aP+WP+mD/mj/mfffDj
D/5M+GP+mD/mj/lj/pg/5o/5Y/6YP+Z/4MSyJzu7Zoc/5o/5Y/6YP+aP+WP+
mD/mj/lj/n2f6+jvXvSp8Mf8MX/MH/PH/DF/zB/zx/wxf8z/9h1XPdo7NjP8
MX/MH/PH/DF/zB/zx/wxf8wf819Xqy6u9jSFP+aP+WP+mD/mj/lj/pg/5o/5
Y/4f3XbtnJ6mSeGP+WP+mD/mj/lj/pg/5o/5Y/6Y/7Uzll7ZVX3/Vf6YP+aP
+WP+mD/mj/lj/pg/5o/5H/7tgta+kb+FP+aP+WP+mD/mj/lj/pg/5o/5Y/6D
ib/AH/PH/DF/zB/zx/wxf8wf88f8Mf9F6XmEP+aP+WP+mD/mj/lj/pg/5o/5
45i/6X2oxPwtOOZvwTF/C475W3DM34Jj/hYc87fgmL8Fx/wtOOZvwTF/C+b/
jdSPwh/zx/wxf8wf88f8MX/MH/PH/HH0/zQPwh9H/y84+n/B0f8Ljv5fcPT/
gqP/Fxz9v+Do/wVH/y84+n/B/B9M8zj8MX/MH/PH/DF/zB/zx/wxf8wf89+f
zkPhj/lj/pg/5o/5Y/6YP+aP+WP+mP+ZdB4Nf8wf88f8MX/MH/PH/DF/zB/z
x/wvTfeB8Mf8MX/MH/PH/DF/zB/zx/wxf5zdHyvZ/bGS3R8r2f2xkt0fK9n9
sZLdHyvZ/bGS3R8r2f2xkt0fK9n9sdIyfeMva284H7dn5+n2Qflr9Xk3N3Is
v7Xezz4dOZZfXZ83l0eO5R/W+/llkWP5UP37miPH8mvqnzclciwfrtc3RI7l
r9f533EewfKG+p/DNTmW70/1MU+x/ED6vtgvWL44+UaO5QfT/zdyLH8/rVfk
WH5VWu/IsXxtel6R4+z5V7LnH/ltab9Ejk+999Daav99sZ/Ov/+0D8rtJzmW
209yLLef5FhuP8mx3H6SY7n9JMdy+0mO5faTHMvtJzmW20/R/wuW209xvy9Y
bj/Jsdx+kmO5/STHcvtJjuX2kxxnz7+SPf/I7Sc5tv/8Hjaxbd6KnqF7Kxfv
e/fz1Z758X77vUn+rVMnf9fZNS9yv+fIn1l4oLvWOydyv5fIt26tbRjpbIvc
7xHylYf23jrW1jJ4fn+dGXlL3eeSyN2n5Qfr3zctcvdV+fr65zVG7j4on6jX
j0f/ct+Sv1nnw5G7z8ivrH/eO9G/3BfkX6v7/jdy53H5zvp6TI7n47wrH6+v
94zInSdj/evPc1bkzmvyt371wrHRjtbInYfkzav2vT3UfUXkzhvy9h9tuHuk
s+xf5rn8pa9s+mCou72y9Y0puz4xWO6f3uvObJrYU/7+Krd/sP2C7Q9sP2DP
H3ve2PPFnif2/LDnFX7F88GeR3x/sf7YemPri60ntn7Y+QJ/++5ZF+/pbI//
z8jj0++vdcwN/mHfrAv7Oq4IvunklImBc+V6tS5tODs0NCv40OX/OD60cEbw
xlePjJx7+aLgqcM/fbj78Y9ife5f/PrEwM6TwS33NK4fW/rnWJ8vffnkc51/
Hw/eceH2b451XRD+/+p65M7a8LTgp46uWVadXa7X0Z+sW7FoVUvw9Bs23dS0
vS24MvqdzrHanOAXX1v2dHdPuV43/6J6TVdfuV7mI568ZN+7o70lm4/4jrW1
jWPdJZuP+NdNWw6d6y/X13zE31u34WDb5tZg8xGveP7r+zquvzTYfMQzL1r9
cmdDyeYj3vebn20a6ZscbD7ilwY+qLWtnojnYz7i46efvLFp/FSw+Yif/8uu
R7rfHo7nZz7ix7b07Ohf8p9g8xF/dubhP7b1Ngabj/jhzcf/Ovre1GDzEd+z
/sO7RgYuCTYf8XPNk35QGy3ZfMTHXpm+rb+t3C/mY7xf3a3bezvL/WM+4vmf
3Hmgo1ruJ/MRv3Js142Luubn+20wy4OL/TmYfX70P/sT+zzs87D3H9vP2H7G
vh/n369/4Hz/L0/vW3BLWr+o935g9Tiv159w/j41p/c9eDQ9z6j3vmH1OK/X
/3D+fr6V+k3w3rS/ot77i9XjvF5/xfn7/kzqd8E/Tvs96vUDrB7n9fo3zvvH
6dRvgx9N71/U6y9YPc7rzQec96MHUr8PviH1g6jXr7B6nNebPzjvb2vSvAl+
IvWnqNf/sHqc15tvOO+X16d5F3w69cuo10+x+ljfrN78xHn//W7yCf5T8ol6
/Rmrx3m9+Yzzft6Y1jt4b1rvqNfvsfp4H7J68x/n82FD2k9lf037KerND6w+
+mNW73yB83kzlN6X4Ob0vkS9eRTvY1Ef/Sard37B+fxqSf0geHnqB1FvvsV+
KOqjn2b1zkc4n4crU78Lviv1u6g3L7F6nNc7f+F8vm5N/Tz4idTPo978xerj
/cvqne9wPq+LeRVczKuoN8+z+Rac1zs/ZvMxPn9LmrfBk9K8jXrnA6we5/XO
p9l8D87P++5H8vz+5L4U72dxX8LuS+efN8p54r6E3Zew+xJ2X8LuS9h9KfyK
+xJ2X4rvL+5L2H0p+ltxX8LuS7E/ivvS/wAYRdth
             "], {{{
                EdgeForm[], 
                Directive[
                 AbsoluteThickness[1.6], 
                 GrayLevel[0.09], 
                 Opacity[0.06]], 
                GraphicsGroup[{
                  Polygon[CompressedData["
1:eJxNmAf8l9MXx+95SlP92iUVTS2l4dfUXv/SUCmRSsiIUISIElmRvbI32REK
ySrKlh0qKysr/kk4787n+3p+r1enc557z73nc+/z3M/9/L4NJ58wclqWUvrT
/yvl/hc3niu7VUnRVtqtqvwubnUspdpuu3pcpHzyqqm/jFt1+bJutdzKu1Vw
qy1f0a2G+su5NXfb3a2eW021MeY3Yanr1lhzMUcDYaLmHvLVNUdl4aqvNZC3
p/qp2VCeOnV9Hbu51fF4q+o0c2uk/lrCVKS5+rl1cuvstpfyqdnXrVh9rYWJ
mnvLU3NfrbOFWyutgbw26qdmW3nW2kFYqNNRnvH1HO/ubk08bql1NtC89fRc
rGf6e2ku5ugqTNTsJt9WuFsKVxetgbwGXqe+2z4eb3Nr79bDrbfmY0195KnZ
UzkdtEetNNefWgt9/dVHnaluE9wmsk9eZw+37h5vV53Bbgdo3xk3UGsA+xDl
UHN/edY6XJh4JyPkGT9U/WAfqfkGuA1TG2NGqY06h2o89XcIyxi3sYqpf5A8
9cfJU+cQzQuWn9w2uG3UWg9Q/Yny1ByvXOo18j1o6DZIWLpozU28rbHbaI8P
L4Flimof7HaUPPVPcJus3COFlbyj1U/NY+RZazOfu6nbJI/NYuw0t2PVD/Yj
VJO5/hUG8k5UHfpLWYyb5XayMFHzFHlqnqRccM3QGsibqX5qnirPN3KGsLCm
M+Wp2dxr7eV2nMfTNR9zzVY/dc6Sp/9seWrOFT5wnSNP/Xny1G/pc7dwO83j
XSzWNN/tfK0PXBfIg+tCeepfJE/9i+Wpf73bArdL3G6Qv1Q2V1gWyoOltddt
5Xaux2Ut6l/hdmUJLFfJg+VqebBcIw+Wa+XBcp38Ahm45gjLHOFYJExgqeh1
b3Z/v1t5i/o831ICy63yYLlNHiy3y4PlDnmw3CkPlrvk2Zu75dmbe+TBUsmi
/lK3Nh7v7XaZx4tLYHlAHiwPyoPlIXmwPCwPlkfkwfKoPFgekwfLEnmwtPea
7dzu9Xgf923dbtSe8U3xPT2pfQLX08IEluXCQf1n5Kn/ksY85bZMueQ9q35w
PScPriKLPXjB7UXtB+NXqB+877q94rbKraPnd3B73OOXVQdcb5aY41VhouZr
8s9pjqeFa7XWQN4a9VOz2Ofe1+15j9/SfKzpbXlqVrWo9YYwLdNc76ifOu+p
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
                   
                   "]], 
                  Polygon[CompressedData["
1:eJwtlHlMz3EYxz/PR0hCQqolRaWRFM3M8j+bv4z/8bfjT+U+yjEzzMyMZmZG
M3OGuXPN1ZyjmHO55mq5SfN6vH9/vPZ+P8/neD6f53vkz5w7ZU4MIUyGJOhH
kA71+N4WwkqohzRoJJfNWBY0BOVWwT5IhyZytege01qf04Aeg0xIJT6BHvc4
KPcDvkM1cTf0BlyHSuJcdA0cgAx4Ra4RvQA5UEDchn6G2X5+dDFshQAzkKVo
nWnMa3Sif6EWn4wuh50mv5HcMnSH6Sw+5x36NrFXRJfANpP3ml3pRVLU2hRy
o/Cl0BJ05ktwEcqCzrwa9kN/05wadLf3xtTzVNb2hLqgXDF+WFRvfc0K2GWq
5XOuotdMvfIaZ9DTid5ko7fgNuQlevoSfQHTgnr0CT5CFWEx+h4+mPwscm/Q
1wlfhLb6czD56f6OcLY+MJp4L/ET9KnXh6nEFYyNgTZ8JblynxvlW8m1oM2J
uUPQB/DQ5CeSe44+S9TyPb/BV6ghHo7+gt9Qksh1oH9gQ1CuL7XS4GjQGdvh
i2mt37k7Y8lQRryduAs+RvlSf4/wFuV9zxR8j6i7+pqR+JKou4wnHoDPgApT
zUz8QDgflKuCdX4H4iw4gj8MvYJy1fj1/k3gC+EK/rLJ/4Rz+LOmtT5nIX4z
dOAnwSH8Qfv/aEM7LMJsgc6gZ/4Y/8g013Mn8adM74p/k/P9OzDVKocF+E3e
Y/wEGMpdCmAcuZvEg/G5UX6s9xU/IqoXzeTuo/dMa/2MRYwVRo35HnfhTuJZ
+zuaw9igqL28Z01ex3QWP8M8/FrT3bxn+czNi/o3+T/oH5drjp8=
                   
                   "]]}]}, {}, {}, {}, {}}}], {}}}, {
          DisplayFunction -> Identity, 
           ImagePadding -> {{80., 15.000000000000227`}, {30., 
            26.000000000000057`}}, DisplayFunction -> Identity, 
           Ticks -> {Automatic, Automatic}, AxesOrigin -> {500., 0.}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, 
           ImagePadding -> {{80, 15}, {30, 10}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {500., 0.}, 
           DisplayFunction :> Identity, Epilog -> Text[
             Style["c)", {
               GrayLevel[0], 16}], 
             Offset[{5, -5}, 
              Scaled[{0, 1}]], {-1, 0}], 
           Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {30, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotLabel -> "Fish present", 
           PlotRange -> {{500, 800}, {0., 3.6*^-7}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {Automatic, Automatic}}, 
           Ticks -> {Automatic, Automatic}}], {1316.5, 
          Rational[-589, 2]}, 
         ImageScaled[{0.5, 0.5}], {931, 589}]}, {
        Inset[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
                Line[CompressedData["
1:eJwkm3k4VV0bxpFUKm8hGjSQEBrRRM6TBiGkZCaEZCjJlKFz9pnMwzmmQjJF
hqSSUGyJNCgZKgmVklKZChnSt/b6/nqv3+V0zt73etb93M/a+5V1PHPEWUhA
QODIbAEB6r8hQe4iAkCHI690S0Y2RtN++K7sDdhDBy3NrFyKrbyaHg7r0KGE
XBlP8RM3IsttHx2Kv1z3oXiHsxrxaT8dlmbr6lOcd7z3uI0uHYKOfRSnWMoq
WfvVQTpEL017N4yYY6q30kifDu3vO29S/NtoauqRAR14cwMSKG7Ze7yi3IgO
+5SkAiku2fHQr8CEDqLi21kUr1bzPbb2KB0Wu2vyKY7ZoKieZkqHk6W3cyn+
q/hWfIkZHaxaLpAUe8hFDkeb0+HM+hD8++9kdr8UsaSD9OW4CYr1pQeL6VZ0
oMekLaWut2JxZvQfazrsecfZTrHSgqMeZ23psLFz6zGKk0VmG/Tb0UHMKdKL
YhHBu+tP2NPBrjogjGKfKde5nQ50kCvuTaX40+jyPtMTdEj2qM6nuKb/Qs4B
FzokMN2x3unvexx2nKLDn/YZrO/CjgS46UaHJc3TvhQHtx1YrexBB2M7sUMU
f3/x52+WJx24reuX4PV5UtC54gwdbred6KLu58lDm3sJXnRQ2KZ0m+Id1WIp
C73p8HHTkUSK88prArjn6HAv6C6TYqnb3ub/fOjgaL0J6/0777XksD8dPILv
4b83p+1q6Qmkg8TCpqsUQ/KPEutgOmT2+FZTXMxLj20LocPD21YdFEdxhQwf
MegwvvykNHV9U4xSFRqTDvtbzbZR7BbkIlrOosPyJ5KmFL/1XfptMwfVz4Ow
MxQf9HrakM9F3/8nNZRiBeeNnNRwOnh5HcL6CVvxdaKj6GBkE431O2e6T1Yk
hg4OySl5FPcYjf27EIvqdV1XAsUmete6x+PokHvmoD/Wf69VlRefDlcPNRtS
vEl7Qdq3eDq8FTyNrzd9R3WgYyId1upteU/dz0I1L8t3SXQw+B1QSnHwBrkd
phfp8MhjSxLFVnLc0f2p6POTh7B+26X7b21Pp4NZ5l6s37TSh30vr6B/P2SC
67V21+vXrpl02PWy/hrFYYcaXQWz6bB6amMdxUZ2tZOXcuhA7F79iWJJr/Ko
rbl0uOijLIz1IopXPcujg0vUl3X4euNzSk7k06E75PsBip2upuhMF9BhtmGr
M8XKd+PaEoroIDNnF0Hx0GOuy4ZiOtTUVCVTXNYR/Kf+Bh0WJsxg/YJ+eEfY
3aRDZ3o61hdmXGXGb9GhUUAHs8ii48WxpXSIeRtzleJG2WOgVEaHmQMbYinm
qxm01Nylg8mJBneKLfbvcbKsQHrsnbeL4lXm28eGK9H3b3w/Sd3fZ9cNYRH3
6ZDxPKWe4vzAtcvXVtPBRjnuCsXq6f9pmz6gQ1vmtiCKax5MOXDqkP9UCWN9
ua3Dv1Y+osNU+C8exYd6+zhlDejzB42wvuLjXdLGT+gwrzDnIcVv5rbl9z1F
nz8X1kNx2vKnmoxGOpD+0bOo63NUrXm+9AUddC7pYX2VtMuO32yig+djU6zv
gHHRsF4zHbQF9LC+pQ5ZrJ4WtH/31TIoDjx3cUlQGx0gyw7rC5yYPInXaP3X
V2N9Zyezdxa9ocOcQSbW8+m1wGf73qJ6EDXBHFfpZdvVgdaH9wLra9boMujb
SYfslGysr0y3DSHWTYfj2wI9cL0PHpHIe0+HSa8ZrO81Qb2rtI90sHbpm6Lu
77QEbXt7Dx226ds8olhtncYTr890+MpdnEFx9UHZn5l9dHA+ZYD11fdYuLi1
nw6c748IihddmJXt/gN9/+IkrO/r2Al14QF0/TFv8rB+mYOP0gbpcHDOCqyv
w+1eC41hOvzaPvKRYoX6d/3PR+gw6/uQEO4vr5uDXX7TQW+ySJ7iW18bxP6N
0uHyoer9FAdMVmUkjyM9W6udKNZeULp18wQd0iL1sb7CqwrqHk/SYaffvySs
36YMM4dpOkilhWB9Y/ckfZ34S4ct805iPU2PRgXy/9Eh5NlxzNFb93ATBRgw
MbQQ9zcvTa0mB0EGfOIsi6P46L7tSzcKMWCAr+pJ8WPPuDc/ED/dVEyjWCv5
W1LhLAbsyzKcTXFJjY6ZmzADvNbGvqTuV74/dcn62QzwyHfKp3jBbqOEXBEG
KKj/uoD9NVZAQn4uA6S2WwRT7Fph2dKDuKD1H5fizp5bvMx5DPi9Z8FFig8v
WGBiL8qA/6IPF1Ncp+G8aPV8BniaZj7G/n68uqkL8fmnbb0UF4VJx6YtYID2
7VrsF4nvnixcLsYA/yr1vRSLzl77vB2xqZqXPcUXNgZHJf/HAInatkCKR8xf
GZgtYoDSyB4exS7ExvlLFjPgzquLWRQbtX0I54szoPBa7E2KtynGz10kyYAV
th/SKS44/KPhBWJfgw1cvN8D94dGL2FAkO1TB+wP2ekHDkkxQHB/9mbsJ8/H
Z8+XZsAmMdVR6voDxw7XP0E8VH8U++HA6gJ22FIGtI+V43p11Ju1T3cZA2rC
1oXj/extM0tkOQNY/5ywnjX1YkzWCgasvcHHel9b+kBAcCUDymWrL1Mso7O8
hkQ89wHcoTjO/Rz9wioG7OkKxusnnNiovXs1Wo+legMUB1Svm5lC3JQbshDX
b9+Fqso1DNhi8FuVYvvF7cHnZRnQbx5mQHHbri1aO+QYcKpIyhX3M6eIqTHE
0qUh2H8339UK9JFnQL62Oa6/ZaKDf4bXMeDlIkWsZ4zawfISBQYcKJxTQLGQ
bab/GUUGPLghfYliP+7kto1KDPi7A0Io7r9xdOwH4v2f3HE+sXtbdKdwPQM2
P+OuobhFSMTXTRnpdXb9F+p+DqgeV1+vwoCAfasrKK48Vv6rD7Gd/DSut6xr
bt7OGxhALk7C/SxiSma4ZyMDjI/YYj+YkfcrydzEgLI35bEUexs1nbHfzIDQ
6OZsir/4K21avQVd3/Gg+xRbZxIDXYg/vYhsx36zc3Lw4la0Hsu0xyiWa/Ee
PqrGgEfegjjPcNy+j4ipM+DMaI0axV+FnH4/QSy84ZQJxYdSO0fZGgzIlPiK
/e+G2rFx2jYGjC3awKFYvPH5n0nE4hNK/9fL6cDkne0M2DH/BfaH3Ynb/6rs
ZEDqvU/YD4QfKQlk7WKAvbHMRYpd7TIFbTUZIKntHUzxs7Fls5ZqMYBvrYX1
3RjLF25FnFjqJ4vrWXG+SMxuBqgbCHyl7meMZM3R02bA993a9yi2tJieK0xj
wJTHrxSK7w/5iJKIc8enOBSvCf85PxAYEH5eA/tvX0W32NAeBszbUUHH+aq/
abHLXlTfYuG4H4qzDkrI7kPrt7GvjGLfFQ8kOxF3dzxqprj99k6p5P0MaPj1
3yDFWoduSR85gPzkWSGu34zPyssW6jIgVpGD63dWSPbyx4hFNcNwfndZIiPD
OsiAzvwsF+yv1xNWausxwIbzkE4xr5uzplSfAe963+Xg/v6f/1rlQ2g/GLvg
+r2fNyjfi3jwX0chxavBVSHDkAE/94tdppjZ/kHR2ogBtuITLIq/eFmulzJG
+7sy8TjF+vNalJsR6/x5v5Hi65n6qlGH0b93Yv3G/WjXww26Jgw4+job+4NP
i+YmoSMMMKplZFK8a9aGrQFHGSCf+gH7gaD6Ko0BUwbM/sYPodipMWlb/jEG
pJ+Vwf7x2Om/HU5mDJildwWvj8rf0J2rzRnwZ6EAnk9iEgU0OxBntsk/o3hk
w3mtRAsGaK0b7aP42KPh3YctGTA5aSmC+/N4DzyyYsByqyjst4xYax3CmgG3
F6phv/2k2LZXy4YBnItrsN8eqDm0fxyxu9x+3H8KLOoP3LJF10PjZ1J8NrxM
T+k4A3j8c1jfHZV5h9LtkZ+e9sR/17WrVTzlwAC2jx+eP8yEuoTUHVG9JNo7
UuycO941g/iB8/sNeD7RF694coIBbX7j2N9YA6oJCU4MCFm6oopiPl/3zHFn
9H0vJy9RnLHNUV/ZhQFx8+XYFN/oCF43ivjjvlXYHxrlbr2LcEV+3/UKz2f9
bn28NW6ofo6UFVI8ISbk+R0xW9OzgeK5t2UOlrkjf2rxwX6kMGUyY+CJ9n/t
FyXq+jSueLyVOo3uzz9Gj+J9e0NLPyLeHSWI/fRoX2Zs0Rm0f3M+MXFei7zv
5u+F+rlNB96/jNbhNQu9GfBi6Cre35dXKL7JOof6m0U5rtcics8tTx8G6H4S
i6G48oRN9A5fBoiQbDeKn8zxd53lh9Z/7fMdFLcX8va+QNx+5B+eF/uMi1Zd
8meAm9QunFfHfj2aOBGA+lmeH96fsy9+bNt4ngEdYhCK87vW9I0JxPIn1+L9
vZW9xSU2CK1ntB/208ONLjLrQlC/fSKI89RxL2J8ELFP+8gDnN8k01oqLzDg
po7/B4ojbZrDDjNQ/Trmy1HXlyLw48QKggG1pfG43q7liNC+IJZOjsDrf/eg
7PKbTAa8MtpygeJHPzRHg1gMsFq+IZHiz+pnCxdz0P1U1N7A/SYk1yGPi/p5
ahr2y8WyD7S8QxlwY7YGnk/X1L+T3h2G8s0cFW/sh6fGRuaEo/4ZsgX//u6F
i1+0IL6gnoLz0aGbKvmXIxjwRuz9czwvHTvAdo1kwE66O54nT03YH1eLYoDT
hqcRuN9eDto1g9jxZSjev0m9JUPxMQyIFrfFfli64Uvu+jgGmPefz6L4YbMA
8zdijdyLuN+0+K6wJXkMNN9G43l0sOqwxLF4BjRuOimD8zXziZN4AtpvKdaa
uB/r6pQ1IX64ud+C4pfz782JTmSA6uzxczgfvlSz1E9iwLX8k5E471mum65L
ZkCCrDj2t6EeqSu0S2g/DKth/eLyYoemEd86TMP1ttljrk5lCvL/lZtwfn+5
mYj3T0X1f+DXafz9oxOf1dOQ/iohOhQvqvTeNoL4RvGiefj3LnwPvXGZAZ8f
ka24XvY6vfVIZ8DdDb14fw3P6VJWvsKAxYomcbi+eC+e52QwQOjm/vO4Py+v
8VqdhfrhLW3cb8Tf76jtRFwq5ofPA25l35RIyUb9bPdYAcVHXJWdzXNQfrRM
wf46oppdJnkV9ZtZNJzn+cMr5rYgHjlR+w//XlmCZWwuA/4pCK/GeSNwYeGh
PAYcDu7dTbE3jTs97xryvyV61rg/C/8zbEBcv07CD+f/x/5X2PkMuG63Ppri
I9FDQ3sKGPBlyPsKxb9MTun8Q9wf3o71Vn9n1Xu+iAEzg5nF2M+cDoX9vs6A
Lt7XKIol19e/vVmM1n97CZ4/S3/uVjlzA/WPIQVtPA/cKgtWLUH1M3cOzse/
/Ta9+IY4/vCnJup+EjSvrc67ifrJMRmc39UFZM863UJ5PZgZQ3Fb3aVa2dsM
yKvsw/nSJ1xc8j3i9MTVWO9SceG7lndQfhy1wXl+NHXUsq0M5c2K0SJcz/an
C3l3GeCS0IvnsW3r+qaNyhlgkFyF532/4vYrTyrQ+ldk4Hwhdc5kmFuJ5o0x
D6C4bPtTnX330P3zsm2x30/rJAjeZ8D990oBFI/V3OutRvzqZg/2t23618N2
VjNgYRa/COeh1nSVUpIBFpX/ruPvvygdcrYGXX+4O+4nZTZxLzY+QH41ER2B
v1923pofiDXVzbH/jvcSZ/Nr0effle+kWKcsLc3vIQNUGvXwPB/Dvduwt44B
x7z6cf10mLWMLKpnQOujnnTs94o/V3YjZk+UYH2qGuR8AhoYUGXbgvUzdbV4
Kv4E/X6nGz4vydhxbvQ9YtOfS/B6fJ8bs+b6UwYwG8vx9297e80g8BnKJzEf
sH7M/Id+uo0ozznIYP95cb47U/I56g+RfxVw3tafaPyIOMFN+iDFTssl/xS/
QPvJ8x/OOyX9G9cGNyH/W2qI+4tupNN5qWYGHKkirlHcrZLSVNLCAHpCCt7v
ytOlkyGtDHBYtxDvd9/GpnUGbSg/My/jeqxJ6z+89BUDULc8SfECz9nBvYih
s0Qd56fda/JuvUbz1AFRPP9kL9Rsob9hgKvjAuz/A13H/h5qR37+cV8azjfF
XkrL3zJAWWYr3s/NRrkXSjsYIDO4Efdj18F3bUadqJ/Hr8HnqaXk2L8VXYib
dbFf/ItdrPINMf3NAdyP9e1Vzcq6kR5fC3A/TtqsS7DeM+Ccw6y51PX1CDgW
Hf7AgOSyj+sp3tAc/GblR7S/vd/ivBiQmSz0HXHPVsYpiuvO3tpQ3oP85Jon
m2Jr8a+sI5/RfPCQg8/vRm6t7PjRi/K/y1ysnzZrx+zKLwzYUMzE82X40aOb
Q/uQf3VPh+N5au1pa9Ov6O9DMvg8YM3vMK7sN/TvP0ZsotijLvvmAMVV/Tjv
3k2o7rzXj/KvlwHOM0LOb+eEf0d5S/MBzjNGGr+3mv1A/pL7FOeV3lfrw4d+
MuDSvstYv2C/4+8jBhmwJKgH++PjA4GiFkOofmRZ1ymWkE7UWDfMgPcx755Q
bNd3w34EsYba+W8UF9x9GkmOMGDg0ndRvB9De8uifjEg0rkO520dC4Eey98M
2GuUjM8fY5RWLFQcRfl7zST2q7d/NHb8RkyWs/H8bORfIB46jupnliSeB+tG
V/1cNoH6p/MA9r9/6pZWnxD7Kvx/Pt/lE99QNMmAZeG38P71vf1c3W8KzZdS
Y/i8qmRkThZtmgEt21fi+er7Fp3/5v1F851hOM7XCmeDg1sQj18KxPVnX1L2
LXUG7efDy/D8nDo4ZOb8jwFm/n9w/S067bzljwABn7e8wPuX++Pt/EghAlo+
3cPnRQ9UJM+bziIg0aMG55tpN6MvK4UJMDHNrKV4e0HY0T7E10P+4Xzj/a22
pmQ2AWvJEEGc/5X+bggUIUD5Yw3OO19Pbk/dO4eAmLQzOG/I5Z2du3AuAekX
t+K8Y/ul0Pc14vBTpXg+bnFac/iUKAHmXtfwedrBTwnK0/MJOMJ7hPMhS64p
uX4BAbqy+/D+rnaYNzt2IQHLFlzD58cTGXu9LcQIyN9UgJ93qH8IeS/7HwFC
esK6FJ9ZXX7oO+LJ7jy83gV2IxWliwj45DuD57Hey6qKFxYTKB9y8Hnkmi6X
BF1xArweNEXh/Wb97nSHBAHk0L8Aiud3GOt5LiFggYdeJJ7Xl0WUbZMi4ETC
LpwvGRZ1awWkCbh1hFtO8b3kmbgniPe9bnyF8+jrHTP8pQRU65RgP9kidc7d
ZhkBAcVtUni/HLvevm45AbfXfMDPN/IS+vYPIu6KDTTH+71V9nb5CgLa3hvi
+7U4khRtsJIApv7hDOynL0Vdu1chfZ7Z4Hlk3qL9r/JWEyD1hoX7yz5jus7Z
NQSIaszB896FmIobu2QJ6JZKx+cfFc9/yQjLEbAtRtAS998FGyOeI34U8QP3
u42HXMeT1hIwrez7GefDyCwne3kC3g7dwec1OU87m9evI8DPSgvvz+V6JkX3
FQiwDXTD9RfXUM81ViJAiVaK69NG0c5t/npUf16C+LxeKXTMsAHxyPvz2A9/
f4nZwlIm4JvuP9xPag4oLqGpEFDW7YPzTlQu+WcS8VNTEucdCxGLzjJVAq62
1q2irlfeZYj03oDqcdoD553h+rDsjRsJcOjLsML1tE42tB+xqawBfp4Twalw
y91EQE2hOe4PZr0mRo6bCeibvI3Pz+T2929ZtYWA8t9GOO9UCq+YSNxKgO/N
Wdgvj9QZ1CxUR9dXPw/nyVXyn7OfIN5V/x9+ftLPCg7laKD6/jQf74+yT5Lu
e7YRkHJJDdcnc+91o7+It4qOtmE/zN6/tWI7AWPqgtjfls/qXuK7gwDauk14
/35x9JvYvJOAJ27mDIpv14p1/UB8eqkp1vsQk5bjpElAGH0Xng8/7/Fy79Qi
QFWgGdd7SeZc44u7CShxGcR+EiyYudVUm4D3squ68Xz0oHniGY0AGwVYQV3f
hzVuXaGA9OsVwOfZRQyhB3v3ELCoxwPXZ8CHlJx/iM/ST+P5Yx+ohd3TIeBl
wjDuF53/Thir7SPgYe1W7Je+ZIJU4X4CghcWYf10Vm+YdDlAQN61SuwHYvT6
LjldpNfCIXze2dFt+6AbcfUqHZz/c7XHclIOEvBa+RrOC97pMWFmeshPHq1Y
jPvXjIKHuD4B4KOH5w1RO9L4BWLZmE8lFL+uMleLMCDA4FdNPJ7nQsImBQ0J
WH/rGtZvzu6KB+eNCDAefIWfZ7SlmVzVMCZA5VUT1j9j+lvYMGKjUQ38fNPD
hulx/TDyg9Jv+PnbjvvLD58yIaB95Dn+fWGZ22rrjqD7m9/wh+KXQQbSHxFL
t1bi51tp7z5Nph1F+zkxDj+Pc9UM7rYwJWCl1Bb8PE49VbJW8hgBVdFcXE8C
U0VXXyK+kh+Mn8c1Wu0PjzJD9RMhgJ9vXqrs8jhojvbnAwHc38N4R/reWxDA
brDCege4Njj4WxGg9WsurvehVsHVe60JuBzogfPQSZpWp5gNAT8y3XEe6i7w
u9SBeGL/JuxfZlI3zXJtCdg87Y3r5wXxXcLbDv3et0qch/b/XNe8+zgBLxyi
8X6/b2EfM8+egMEX3rifq9elGLxCrHdrFOtdtOnV3EwHpH9mFtZ7bep/jzwc
0frsnYvXJ0VEn7XjBAHfD9/FeVPcmw3CTgT8idPB835EV/XfJsQb32hjfxLU
m6hMdUbrL7QX582AUrWAky7o8xN9OG8OrT6toXaSgHPXH+N+4Rp5bWQGsepi
Js6b78d6bjx1JWD/ytvYH80cV3omnUJ6P5vGz49ePDdXdnQjYImUEO5PVTmN
ORPuBMRav8L6FgXtWc3zJCDLzwPnffm+oE6b0wQ8G/qJzzNSj5RdUjqDOEgB
53Xx6iGz34hjrsjgvB6xXkWyxgv5c80SfH9Cic7NkWeRviJbcb85L5ARY+5N
AP3iOM7rQ+4dBmvPETBTOvD/vPlGct4g4rc3M7G+H3SMH1X6IP/+k4bPN8yL
w1lcX9QPRc7gen6xrA6O+KF+53oN54EDnJm/K/2Rf1S+w3mgemjHvW+Id1y9
jP1Xw+ZcwJ0AAjo72fj5UVHDdQ3iPAGNq5Tx8yN5ta8jhwLR+m9Sws+P0tLl
SpYGofrsWIHzooSorednxGI/svH5ZYRvsnJJMAHuGg74+ZHQx+a+oBACHLlj
+Dx++O4BRwk6Adt9tXE++BBzr7OAQUDqWAU+n7OYHL3kRxAwT94cz+9NzpvN
dZgob7x+hP3/QLObpBgL9R9vBdwvqrWuNr9F/NO3BT+v2XbtfcxVNqrn2Bp8
XnldYvmhsxwCxCv8wiiWp5vO280lYPGcEHxelNYf82huKPKTbFusr6TZE1Yb
4ifPcrAfRz2YtScjDNVPywd8Hi+8QXvGPZyAgqVZ+Hwl6GLAve0R6HoXBdVQ
zJZfPDiKWG/tp07870vy5UojCYjzssDPCxO1dMy8owg4b1e2nLqf9Mcd4Zuj
Uf/pfovrJ8/0XNUA4nPumdiPSz7MHy6KQfU39yf24wqPHHn3WAJWQDrOn7V/
tCzWxyH9ZC/iPNC26DR5lUfAf2UTWN9epSsKcvEE8FkH8fw0ULrd6gPiPTGb
cX8bg5fR6Qkofxm3Yr3/Nbo+sEkkYLb1KnxeMtdScHR5EqrHJbZ4Xlnce0np
LeKnX/+04H52dqtNcjIBqxsUcL+X+/s09thFAg6X3cJ6qYSfeChxiQDiqBs+
X9LKTFCOSyHAcCoF629UUc9bkIb6zeH9OD+Y77erf4qY9X05nuftm8f+hF0m
YNWC//A8f8o2VlU3HfXbw5M9/8+zivazrxBw4XMZzrNBvjXxDxGr0NfgvMMW
tGwgMtD9O0ri+T4qeniSlonqxfIsnu8Tl0VsnEHsUC6N5/vcLfcSA7NRXk1+
gvNYud6P6bEcAngiBjiPPXjF3nznKgF/WZV4vn/qsNLpXC4Be3e9wp9v/Xkn
eUse8q9F3P/3y/NGzwYRK7lVYD/qnd03c/0aAZLrbXE+HODRt3rkIz1y9KZx
vly51EW5AOWfoDo8//zLL7n0FbGuET8HzwO1HwWciwhY+MESn7fLdYi7frxO
gMBWKcwqLoWpV4pRXu5JxfWuPrK3yfYGAb2nzPD5u9aFTiGZEqTfxRX4/H2/
qO+2DsRBL2vx+btR0kK3izcJUBRch+ctM7ncy2a3CFiTJ4PX33XXG+HW2wTU
/92Nn9effXRmB68U1ZON/AmKA4/M9TC+g/w0fBmeD1jdGVcWlhHw4Po/Ptbf
bWfrM8SdAZXZuP6ZbrsOlhNwyWgf1vdGSmpmXQUBZqUjaRRfSzwqTa9E+yPl
L36ekRE3P3rnPQJOvm3EzzMuRj4U+o14nacdnlfjuEEBxfcJiChYj/tbGKE2
4FqF9Fffhv2XEfz9xNpqAoQ9h7E/BPhnv+1CrJqxE5+PenlbG18kCfgVN4DP
R+1dn+1a+ICAe6LrsL4mdpoKzFoC7FRL8Lyrb/krVeshyrfH225QrGNauHgc
sRS9Fq/fLuMToTfr0Od9nfD8v1V/xV/3egIG0q7i8zHl/a3eCo8IcKvyXovz
KUR+/YD4oWjlHoqXa+61S21A+1ne3Q73l21Trcceozwl7o/rVUjVnXz6BPlj
mhuuv1+y7wpoz9D+XbAT6/lDJn7NJOKcNms8z36WNkgqbUTzgPRlPM92is9a
cOY5AfbZ4zg/tC28R6x/gfw89yR+/tc499z4J8QD1/vx8/m6WSqe6U0oD775
g5/H3J/p6bF4SUCDzUvsB6UTKRYSzWh+yLqJ/SBnUHRfWAu6Xi1R7KcJvYGb
/rYSoP1TCO//qA9br95tQ/X1bAvOt+x3/cu9X6Hvs7+N80Lw66w41dcE9O87
jfOub7OVSB/ifLr+/8/vG8WDM9+g/Ru+Bb+f5dLwdNi6HeVRPTHst3a1zJNS
bwnQXPJ8Ge7/Vbu6XiKOL7bGzx+MykeORHYQMKSTj58/Hrhd8Hj/O9Qf3HLx
+2faxY7aAp2of8vvx89/tuUvL61EvKUzAOczhSsRVzZ1o3nh8znst1KJkxE5
79G8XGWEz/fF4m4JHP9AwDvP93jeFYl081v2Ec0Dr17j96VmOHI/WhHPkdpq
TPE4o8MhpoeAD0WD+HqHgvhvDn5CeVLtFu7XX/30DWd9Rv4oehk/n/xwVuhh
FeLg7U+TKW73qNwR0IvmR/5SrOdjR2X5n1/Q/bFTcX8rt0j5z/Er2i99O/F5
q83x33aq39DvNerj58v/nI2KxxBPRrPw+U6Wx7W/Nf1IXzEGfr/vwDkhw8jv
aL7b2I317T9vk3bsB+pPz3avpK43mlH2ffVP1B8qAJ8Hbw5dpNmP2ORRBPbb
tmi3iNIBdD23H5yneEXqqvV6QwS0/EvCfuB4raWha5gAz5wluH5FbqhKXxtB
eZzRh/Nv/h2ui/cvNI8n3sT57dD9D3e0fqN+s0ERf99Q7a7Zc0YJSA78i9/n
S3iSYNqM+CTvO54ntr8cyE4dQ/OH8Z431PV3vD74y3kc5SO/xbjfXOjK0tn8
B/V7vW9Yn/p+s491E2he3zyIzw8W/BFlWE4RMPykFz/fLJlxalo7jfL8fG98
fnN0NrlqALGaLAOvz9j8ZafL/xLQ6lmIny+kiJ+rYs6gfniE94ti7WXPFxj+
Q/Wj0ixJXV/PakUbaQEmVBovwPMDV4Eo/Ii4dcEXXJ/rN7ybLBRkAi9vFp6f
GtU09P2EmDBjsQDvX69dsZdgFhO6DuXj833JPd++igoz4esVDj4/KNfdu+MV
4qV2RlhfG6PLoVdmM6GNcQv//Z/p+OtTIkw4+NMR54ksaxMF9TlMSPUWx+e1
BxwLfWcQ73zsi88X+l1n1z+eywSJqL34/Cj6zHHJ+HlMuP6DwPl9s1/FCVtR
JvwXHIvPF9qCJW4rzmfC/U5BfL6wIqLB5P4CJuTtPYLr0zE5aOiwGBM8Xwri
PCyS/oq24j8maN8ewfWdn7MpthfxCSaJ/fZQYXj3jUVMeLdmViPOzzc/bQhc
zITzZ6y+Y78p3x2yTxz9voHTArz+ZHKjmAQTKiIe4Oe1HfXDK94iXjgjaUTx
hUYD92xJdP/us7D/ybVerfRcwoT0aDV8Xlj/9t+8HVJM8JIwwvvf9YOlpZA0
E9hpf3F9Lui7fa0RsX75APaDkp8L/yQtZcKqz03Yf4/+PqnrsAx9PtwE++/Y
5IMkleVM8J5eh/NciqDMl1HEkecF8Xlik1Jb4a0VTHh1kKVBsfDhqLNnZJhw
uK4Wzxc7/PdtV13JhAMVAzj/eqZPT39FzPmojvPC6x8eYY6rUf1Y2eH+BZpd
Ep1rmCjvfMf9zdcx8e1FWSaMX1DHeaEg3PDKMTkmHPkvC/e39yWzncXXMuHU
u0V43pZsr1JuQvy53e4pxXr/fIci5Znwke6On9dfUNhYdnAdE/KfSOP+0OeT
vqdWgQlz8jvweYlMmtkcuiKq78JK/Lz+8EOx55pKTBhQeo6f13P6H/H/IP4V
NYnngcrFdIs765lQXaWK9ZK3H/y0UQXVh9//6zem+PiZa6pMaGlLx/X+8JW0
hvMGtD5PX+J5+s9006TsRiZo5GbieUVVPqymG7E8fTbW08EAuKmbmDA6po31
TPL+Y2CxGa1XWgTW8+mlksVLtjDhQuXP//tjjeubZsS8JE18fqj+dc3lmK1M
2Cqgh/VN38ZTmquO6svjL9Z3DkewlNBgQtyWl1hPraKK89rbmDANelhPr9az
tCnEkp/TsZ5XJ9fPLt/OBI+kEqxnh2zPU58dTHhmehzr+Z9eStyWnUzoSI3G
70/u8zpiNoC4z2X1PorPJ4vKFO5iQs7GSaxvcXXtx5OaTOjvEw6ieOlCNc+P
WujvJw2xnoR19h8rbSbsXfR/PcuY1tXSNCZEBAnjfNufL8FuQ1x84RzWd3Xz
Mz0eMKHmcBTW1/QP6z+jPWj/pO7B+oav1nolqsOEH/6h+Lyh+sDvlAbE1Yx7
+Pn+L88ie/ZeJnQ2KWB9lRKdFPbsY4JSdy7Wl/+p7WblfvTvP6lhPae27N+t
rssE9aP/Yd5s+VdoGLG1gj+uVyfGncfXDzKh+fwM1vdSnmeMmx4TYh8RWN8X
L9aZKuozYc+891jfYkHGr1+IJwpC+imOUe/g1xig37PrmU9d7+mT6lujDzFB
92Em9gfjlJhmS0MmbOIewf6w+flXLwUjJnw6EY39YZHA3kW/ELfI/8T+MLT1
8g3SGF1PqhjOry+dx42iDqN6y4nD52Vxzwqj1x1hgsWoJvYDky32jdVHmQBm
YljPrU6V7pGmTLAtm4vXTzxZcr7FMSaclNJVpnjkyekCeTMmDM1ejP2tZfqx
3jDiw3s78Ptmtzat/VZlzoSjwRzsl3zHkLAICyYc90vA5zHeiW8UzS2Z8EE6
Evvt0cdbGtZaMcHFZfD/5zlTkS5DiEvYevi8R3Ljl9lV1kxoLFmLv++3PVwN
t2HCeh1R7L9t8Sn7zGyZcDMvEs8PpY9+f5KzY8J75x3/998JI9Yg4h7JbOy/
Pqr5cvePM6Hczh6/f2R6fFZtmD0T9v0VwflHnW/rcMyBCfTyTfj9UMn6uwJy
jkwId/LF+vweX5wxgPjlex+s7ytlD9q9E0zYvvg51jcpbs0FU2fUj0wWYn3N
xtru/3RBv191DK/PtvWbbCpPMuFs4T+cp6Vswqe4rkhfof+/HzMW8ynl6Ckm
rNV4huef1w9271rjxgR+zk/8PKDsd/LbH4g9md/wvJqkOBJQ4c4EWgZgff2s
Di3lejDhypAf1tc8OvfuEU8mbOaI47y7o0bAfPVpJtRFpWJ9l/6yGvuO2NUk
Dev7Z92dxPIzTGBty8T6tlv8p8HxYsLPsh24v5VHnmozOcsEkRO/sL4Xqx+e
W+XNhBfdJ/D7ZwHDKyW+I17yYRWehyzlA27dPccEQvUe1neXeYsJ2wft3+Rm
rO/yCNXhw75MuCT4F+s7eZ8bt9KPCetMO7C+HYMfNvUjfkfMxeflKccST7MC
UB4w78L+YH1P77pMIBOYAan4/UCtgexD3xALPP6N856M7Mz3O0Ho8/1MRYqn
j1pEMoPR+jFD8ft8ndxbysYhaH/+EsL6FimpLlh6gQkxOs+xvkFPr/78gFjo
tC/WV99jdVM+nQmvu+KxvsvFLpV4M5hAjtTi+u2/Ic7XJND1C1/B+bfCJOqc
MBPVt90jnDfCfs0+9hyxzJ63OO9ZJNK3JbGYYNN1/v9+tH1C+jibCVNHD2H/
HW/3nlDkIL+6PTaHuv5HgT86hhCr/FmDn9cmybjcr+Ay4baIL36fyqX6/WVm
KBNWFqfj81cNe0u6QRiqjxwDnJ+EhVrtJcOZ4MZWwe9TtWUf0ulCXP58EM8L
5/pos89EIn8XGMXnj+Iqao8FotH6PliA+2FPY1H+E8Q6Owfx+t08rRDJj2GC
mbMIztuMRRke1rFMWOxkLID7661lRvJx6O+MY9j/1pjGb/qJeERsN/bbwdEF
i8t4TIjPTcV5tjqZO3KBz4Qv7XNx/4rZKdCmG8+ER5tXYb3t3p2/sygB5YvN
/vg8Z2PIr6S3iNcfvhlN8cwqz4CsRCYUTbnj94ee13yxdE9C/YV3EL8/lOZo
r6mezITs4/1vKfYQ7pD5m0zpM4b7g1bu0Zn6i0xIC5fEzysWHHz+PuYSE8LW
/cTvE3V+O/DAPIUJfv4q+H2XwsiarDWpKE+6BON5KnDDLvY3xD01Mfh8S7/p
tvOtNLR/tkvgfvdNPE9pXzoT1G5q434XZpby/dUV5DfT+SkUW/yReJ6ewYSs
nbPx+1yKKdHFJzOZ0LB6FT6/H9OcE7c5C/n12Vv4+h51Mc5OIA7uPYb/f5Yk
+uSR2myUd3yW3aLYWdZHPTKHCbXxP/H7FuoPfy4xvYryyT9XPA8LO58cl8ll
whN3eaxv9jWryuI8JlwcasD5V+eHYQjko36xoB73M/GYBrt5BUwIqRvHfvBx
0x5oQZzVrvgDzyPNlbKphah/ZU1hv2WcU5/lVMSE2SdXYL89vKT4s+p1Jtwx
24L72eq7io9GEfeHf8PPxwcsMvOqi5mwQGAE7+fqyeXhoTfQ9V2exPow6E93
zJQw4e2IDc63e4QDv/rcYoLzz1O4frMemcDm20zYcXgMz7tC4esvfkdc1fkS
r88JA8Gh3FImjP0bwb9ft/CtruMdJuhFmeN596D0jjzjclS/rKN4vny2Jllk
9z3kp/aT+O9RVw+U3b6P8smFw9ivjZTHnJWrkX9mM3B/vPHjeVUv4s1aDvj8
etGNq0sySZT/yubh///s7NkQT5saJmhumd3Bb4qitagdq5d+wATD8CnRi/5R
NLUx1ZWtiDt+y/fV2Ueh+UHYN6aWCQoy2gkZh6NovwM7G/UeMmH/dpX3fyGK
dmx3qfzsOiaYSjFWwpYoWvsBCfbIIyb4q2nvjxuKpO2c9/3d9Qbkr5efb/j1
PpKW8qxW7dRjVH+mxWylpkia9WHvT++fMME8MFdN9HokrduyWed5I7p+cduk
bJdIWq9HrOC1FqTf4qHty5sjaCP8+XTbbpRHC9Lmz2GF02bsOSVK75Fflg1U
3HULp4lu+vfxF2KPb6+YakfCaWufjeyL+IjqzZllEr0mnGY6q0P07me0vp8u
f2itDKOVnbuWtOg7E+Zm25r/6w2lnTfdX/xwnAniIq0C48u4NK4c+T7mD9qP
0m8etE5xaPyhHYutJpCfHjzZHN7FoRVEqfoMTSI/OjfnDTuDQ+uok9i1cgbl
szaGTrU8h6al0VPvJ8wCtXkr4q4osGkCUvSu9YtZkGqwWrNzMZOWLmzO6UN8
dHZkwKNhgqb5a+OGq+IsMFwgJx7fTND8XnYHr5FkwfhHVvzLOIL2I0JbRlqa
BTnKd2VeLCRo7f/+WgmvZEHZA/YCMUEGzW/glVAtYgexCbHAKjpNout6AX0V
C37ZZQWcD6DTjCptJydXsyDxdGaTyc8LtDqfqkvDcizYqHh+4k1zCK3kW3B7
txILPK9J+mozgmhG7aaMtPUs2B76X13T1iDa90eqSlbKLIip0N1K/xxIU8jp
9H+lwgLNzb17v+0LpKXZaUk3bmSBo2vrp7DxANouQ0kyfBMLgueurk7ICKC9
0fzhoruZBZevBBt81Q2giS9LK6vdwgImM2//1Th/Wljr1LEKdRZon8wvNJnl
R1Oobf3rp8ECl7LXsxjJvrSHJYVX1bexQOrVPL09ir40+ysswxHEAfnBY103
fWgz0dajN7az4Anzs6X3Nh9aWrDaZc8dLChK1bF+e/scbaf7/P0qO1mw6HaA
fLLSOdpry08/viKe/9DN4S7fm+Zz8F5C7i4WkPJnn18aPEsT3x6v5aTJgvU5
+kS85lnajXXun2W1WNB1TFvS8awX7ZDk3qj3iA2/bKg4LH6G1i+0Qv3ybha8
FG4o3PPTgxY2PPLOSpsFu3/xIz7qu9HWfXjKWkpjQWWQk11ojwut9kWWymvE
6ddHC5TWOdLsqwJb4wGtX0ajc1P2MVr+3d+mDntYcGmlvKOSGWrzN0+/3qjD
ghfnLWIXdPiQmkVfzacRL9uwe/L8+1iSnev49sleFqiLaVzV1Esgn2d0WiXv
Q+vrtLd9IjGBlEo163Taj+pn/wH/B5cSSLvEl7ZbD7BAfJ/1t07EebH67/8h
5u4Or2hAPBReZ/9clwUKFlm+xYh3sLV7Ug6yoERHWzMe8dOArb0a+izYc1rY
wxyxxLkil1kGLDhz+3XbNsQ2ngpfXyKu6CTOSiIecFj+3d2QBfFn6wyfXkwg
t9skeOw0YsGsnodRWYgZZmIDIsYsOO+bJngesbiB0HDmYRbwYzVj1yC23h/s
fcaEBav65+UNJyeQObSxX1pHWBDq1zRRg1hDvX/szVEWbNm6U9cK8YWNTgFX
TVmwIn1onzziR0rdE97HWLBhU9KFH0kJpMXKlumF5iwoTBfN8UccLFIptM+K
BVl5YZ8DkF71AursxdYsiP55vV0dsdjU9dnvEZckPF00mJBAZgxmzg20Rf++
76O5HeKH7eFiJfYsMGonTijFJ5ALWmfFhTiw4EvO7euv+Qmk6fOQxQaOLPAp
ouuzEH95cFbyywkWVOkGsN/wEkjRQsvlMidZ4B69/aBHXAJ59Gpr6jfE7ZFd
HgsRp10xXHnXlQV5Pel/imITyI0Je9YccWPBriG3o30xCeSRkPUKYZ5o/a8c
steLTiAvGU9s+X2OBSlnf76qD08gW8r5o1U+6O/yj1abIBaVU60I9UXf5+gh
9S4sgQz8bQcr/Flg1dIq8T00gbS6VGekE4j0PyrYPsVJIGU+xbrHMVC9KS+W
+Eyg+/dTuKoazYJG7bGi4YAEsv096TqGmDix1dwa8SI9S9WaGLQeyh/21/kn
kMSKqNtH41hg7dezLMEvgXSsGX4QGM8Cvfo3qqo+CaS8aFX340ss0Eo/JrT3
DKqfc2ZZ/BQWTJ0P/p59OoFM6Bx0tklFv6fJCBZGPPuG3M/BNKSn4JJbdR5I
z6NhU1IZLOhZt35gjxuq58tHlzrnsiDNZFmnunMC6aVocEQ2jwXs7iWfLzsl
kLtu6kR1IU40OtIsgvh53RYBs3wWFG/g9rQ7JpBJRut3iRew4PDZ2dN7ENu3
r/F5gXiWkdKWQocE8tf3/74eKEL+kF3cF2KfQN73nSM36zoLJsZeefcdTyC5
/2asScRx74JVTBAfDh9LDCpmwQn/wUX37BLIZRIDTdtvsEDQV37DOsQ9ab3z
fiMeK53wjrVNIIsUuvaWlLCgwctVVCWTT/qVtIV43ET+XLj+U0Azj6Ttaryr
dIsFNwzPBDXQeeTcuofDnxEPTrxYXmfDI1sM76lk3mZBvwKPxjHkkWlvbjnb
lqL9kzV0X1GXRzo7FFxZdocFpybleX37eOTG75lvXyG2fyb97BLiPz6XJPhl
LFjeG6a4ez+PrJ2JMzS6ywK/SNNVlgd4ZGRYWKhoObq/0D9Zpej7TMUZDx4h
ti3uyFHX45Gr0vynmBXIH7UnpBv1eeTNGy5npiqRv7etmqtixCPfvN5n/qMK
XW+RyYzvMR6ZYa/Fu1bNgqEvJcMO5jzSrV/tmROJ6uVyzDpzSx75968crasG
+VeGYoe1LY9cu05Q8cVD9H23Ra7XOfPIM+eqxm48YcHAiUOBDf48cs6ibUnn
XqF6sn7YbZfOI4OvNuXTXrMgyFWmUySTRw7tOlU1/w3qz0Vcq+JsHtnhnPY5
ux3tjzX1hVPXeGTxPSG1tncs0NdZXBJ6m0eanWxqUu9B6/Fy672dj3nks2nX
TwKfkB+ct9B6+JRHAl9ovBGx1HYrV73nPFK5SmOVcy8L2p4p6Bu0oOsXT/NI
/MoCk73D1XKdPDKn2nXe2ADab+bFlxcO8shlpkIrawdRvW6fPmU+zCNjvqVu
jhliwdeaHffTfvHIAMkmc4URFty523d72R8eaeCmkWs2ita3pdWjU4BPjiwR
2nt3igXNKo/HiMV8EjxTgwPmsmH9xm3tJpv45IG18SLb57Ghf9l04PfNfPLQ
24i4UcSdQ10HiK180nJ/YI73fDZkXngQk6nBJ71XWjZ6iLFh3KFL5I4mn8x+
LiXjIMkGP6VrVht0+WQBSyx39RI2rOuvCIw6yCdLdops7ka82cxG+asen7x/
dXSvtTQbJi8dh8RDfLItpM392HI2zLnIFmsw4ZMiG/n39NawQV/s2P0Yaz65
4HP4/rmybBDelRBbYcMnxVOIpkeItwnbG3+05ZOrRM5+2rsWfb7gZIWiPZ/c
3m08X1uBDYkKG0finPika8xC662qbLhv3tnw1oNPPhsIm1y+gw2v3j1x8Qzi
kzUSGY9eIb40SLPcHcwny3bc5cftRN9/X2vR/BA+mcnsVRbRZMPBdXNar1zg
k/5SOtbDu9mwIaLkfjHBJ9dqT91r2MuGhY84CS6hfHLpCfEw5j42JAzYGEuG
8UmxsPWmu/ezIaDF9r8axBPN5j9uHWCDuPCBhMURfLLJuVQmXY8Ndm2SRpej
+GRQtGeIjzFaD5ZnuBWPT3rdYuttOsyG1/GWs/oRu7xJXdKPOHenQYk/n0+a
yD69fvwIG6RDqz9Ex/NJxTsK3frH2EAkejCuJvLJ1s732rLWaL2TZHLZl/jk
Y8Fx0U7E2wsj9CYQVyuIvUmyYcOdqX2WHil8Mt9L68wCOza8PZFYaZjKJ+nC
l66M27PBOCZj6Uwan1RRPSLwwoUNR7e1m0ln8MlGm/m5F0+yoSD166MgxB7R
dQYnXNkwX9A8phtx8cC25D+n2MDZ5KxyBfnV1psrNq71ZIPVaqOpBdno+j62
tf5EfC5jtb8TYh/xmPPlp9ngabDHrhJx2TmBekMvNhgY6no65PDJXdt6rQPO
scFy2PDA5at88p1LuuBeHzYU8hLPf0UcnGyet9CXDfKVV2BrLrq/P09GsvzY
8LBGTesB4j33isOfn2cDc/6268/z+GTP95ObLgayQUP5rPnCa3ySKSP7yjGI
DaFwItoAcV1I/Jo/wWyoWHEi7CHigxBwV47BhhnFScXsfD75zWuL7U/ET4UU
ct8gjsjsFyon2OBwwuSaaAHSR8jWyJDFBpXxXklPxJ5qUr+l2WzoshtVSEMs
5tR0qQdxcI3N+BPExvV7ev25bGh+87xKtpBPDo1ORuiEsqF+zbdsA8RxCqWb
F4axYVb8ZgsfxC2hCsFZ4Wg/fp/5/gCxmf58iedRbFh827PFsIhPjgfWlSdH
s6E226/aE/HFwhA7xxg28KwlvKIQdywYyh+PZYPJ02eqjxAH7c43ro1jg6ul
qs5HxDKnHUejeKj+VlvKTyG2bWoDuXg2KJ0kN6tc55Mz/6K//EB8x/i5zx7E
6Zt1o+4msGH6omKiGWKag8BWZiIbZHUNI9wQf+BVvDmUxIaPPVyTEMRErXeI
dDIbrmbPn4pBLPdLZW0PYiuT65wriJ1M00/7X2ID/VjxoirESVfvRKinsOHR
1g8WTxA/HmvMHUbsViqT2oZ4UvdzbXEqG/amiL/pRrzh0lS3exob9DbQ1L4i
tu8Xn1K6jPSeDkgdQszXVJb+gtg2+uH0OOK6qD1q2elsYO/9az2DeKzLwtj+
CtKLUfd2VjGfVNrk5b4ygw2V2wMs5yK2YoSGdiBWPNHZMR9xVHN6dnImG658
jbkghrharow0zUJ+52G7cxHioXPP3y3OZkMSb+UoxXL1n8dfIN5t+buUYlOp
aYmoHLSfRDoL/0McelJis95VNgiq6BcsRFxZrnxIJJcNOvckSkQR/5in4/oQ
8asU15ciiFdZW7IZeWxQNikTE0J8uMgrY/c15H8v5llPo/th/g29P4m42FX3
zijiUqMr7XfzkV9ttKMNIP5ypey3TwEbAn1M3/ciXjr8fNHWQsS99xI6Eevr
9KoOIl7nZ+rSgjg4fvpgUREblifct2lAXPxZwvnUdTb8FXL0vof4o4YKoVCM
6rHZMK8YsWSozuVPiOeWOH3LQHyg3bIi4wYbSNuthnzEBYFhw8tvsgEe6Yd5
I+58dmVhO2LJiiUeDojFVt5dn3gL+XVY3VljxN5kr8N/pai+dQ69VkKcs+hv
SCNi97trtSQRv3aQTAm/w4Y1H1xfzKD61RTe2zLrLhssNs093Yz49DGrgRrE
BR7MgArEGblnRS+UI//ccaEwA7GwXobOnwo2hMS9S/RA3Bj999aP+2ygHfYP
nkT7baZbsim/Cl1fYWHfO8SbN6t+d6lmg8tFQ+Z9xIktVms/kuj+XfYaByG2
ky6Pf1XLhou3/uwZRPs9zrXpBv8hG3YeUlZ7iri24ssz4zo2rLLpPp6DWMFm
ifDTeuR/uQdPmSEezPD2qX7Mht/NAj9KkN80/lVxi3zCBrnzD74RiAuseo9b
PEV+vTpu2gSxi6SFwcgzNqSK2JwZRP7VGbpbTqGJDYuULmSvRvz49NyX0a/Y
oG43v90U+WPuswf1Vq8R/6wLlUbMUgq6p/iGDTUzeUffIn/V7vmZ+6CdDeUm
u/dYIb5zrDVk9B0bbIL2vTBB/pylla5i28OGBts+rnQWn2RcMpdV/oTuN6Lz
RCPyf9uxRdLjiF/Pb3ZhIF5awhLi9aJ6Ul/6uxf1i5i1p97WfWVDR/LKz7lX
kB+JqoeqDqJ+3GFyUeAy2h/tT3qmppDfd9coL0nmk7I5Wcvrp9kwKsO1uJnE
JwfOBB2J+Yv8ZsGuu4cQh83ZULvmHxvyxk5vIlA/vLctLnO/EAfCh33efED9
Ui7RzD52LgeiWd1GgXFof5p86pJbwgFHqWaJpeF8smrl/SU/EH/5SDNPRf07
4luC4R0pDrRlDrasRCxPHKjSXcqBvUnqZ9eg/m9ekp/msYIDoWq9x2U4aP+L
eVmXyXJgV9DmzgEGn4x+Nt2ut5EDJ4VmXf/rj/bvXbXQ2Zs4IPXhsqA3Yv0c
N40HiBtmcXN6/VAeCmnn7djCAYGe5Panvnw0v5bqK6pzYE5o/uLocygf8Nzv
C+/iQLqTxrqh03zyiHnHFXI/Bx59+96zyRnlr72LjYIOoPu9eLElGuUhsc0H
p7fpcqCdLi76/QTKQ3PLLIoPcuDj8h9Hsx355L5K3uLLBhzg5Kxzn4/ylMZK
PVagCQeMVlnHl1uh9fp010XDlgM37QxUOcZIv3dxAwJ2HBitFW+7Z4TyQesp
v0bEVbHXLw8bonp5uIJ7wp4D6yfFU61Q3nPKpl/lnUDslqYuh/LgzRO6n3+e
QvoVrzNg66D7//zaIdePAz1N35YlqqP17rzx7aw/Bwy3FH26robqpy3s7O4A
Dshsu3K7HuVTr7pdRNt5DtiKBLuNoPyanJOeIRTCAUGB80dhA5/87OTy3o7F
geyuVT8L1/HJkN5RG+k4DuhmaWdXLkH3M6Nq/Qqx/Xj5yENJPnlLyskynseB
+PHvBxsl+ORX3ZZj/8VzwK0vZ0EHys+mBcVGc5I4oHp4ak7/Qj6pfOYkjKdy
QGunfuq72Xyy/U/72jd5HKiUzJce/80jzy1eJJd4jQPGfPnm9yiviynrrjma
z4FAQ6ETDSM8cp/1HZmmAg5U3NITjx/ikTeqeEsarnOAUKGVyPzgkVym/py7
tznQLHYwcKKHR6ovuN+fRHJA2vHts2dNPLI6XlzFpIYDL8R14xJe8MiDK065
z3/AAd+fFWtt0Lxhqyz1g17Lgf6lK+72oXmEe9Drp2s9B05XKH8fqEfzFlt+
aNczDow4SIfdv8cjA/9GjXa/5sCZOb2+hrk8UpjzSePSGw5ECjBefctB88eC
XX5H2zlg0ki7xUbzUdaKvrGGtxyYEBj7dCcDzT879/wp6eSAvvaelSKpPFLG
b3SS2cOBp/aHBc1ieSQ5YCugOMCBx713bLP9eORvwmz5MOLLb+lfPvug+WiJ
sfq9QQ4IX/pPXv4cj0zSBFfjYQ5c/Tl1L/UMj/QIk3vp/5sDUaVfFpx25ZFL
5fquPJ7kwN+/WnsS0TzofcyL5jaHCwMS+Ydrd/LIa19dLdXncmHTPkHVgu08
sivI4dwM4ojaPH6MBtIr60geX5QL36YlJw9tQfPpoPp/9xZyYXeXdMsVJXQ/
YRPd8yW5cKf3ck2kFI+Uv8+8cH0NF/odQEJ0MI78fuatmJssFzJcNzXH/4gj
b63dfEVBjguMxFfNS/vjSIjsIq+s5cJd58id4r1xpLXVDkG+AheejDPTH3bE
kfw/P1l+qlzoeDPxVbQ+jrQs2ieptgF9Xr6H3FYbR66xT80ZRKxQv+meNRlH
FjccrHfdxAXR7qu3YyriyCdJ2SLWW7lQpPkt4OL1OFJAwzKctoML8eIFn2Yn
xJENX28sm0a8X2p3cG5cHBmTJlJQvpMLJhNLzbSi40gZ4dKnWzS5kMYLmT7A
jSO3t4otkNdG34fie51/HDnDdU77gDggKY0U8okj63bdV71M44L3wcYzW7zi
yCNZpwyl9nAh2URhnoNrHHn6bF3M3H1cqIu/lvrbPI7UWLdidT3iwLnBIYVH
48jp9rM3iP1caN566tkh4zgyHFa/nDyArmdwi4rhgTgy57/AxT/1uHB2UtlA
Xi2OdH/4MjNfnwuav/2TxTfGkVv9Fbe6GHDhnktZ9QelOLKmu+3I+0NcqOZp
lS9ZFUe+u74podmYC7uSfQTiReJII0+lmcuH0d9T1kQe+xdL1qjKurqZcEEj
5lv31FAsmVMorjXrKBeu/zq/lt0SS0q5z89tQtwSsMNZvTaWDFMWXpRmygUy
tHeNzM1Y0jN/9JO6GRdkt9HcBaNiyQ+uA4aC5lyItDmtcM8/ljyi1Hf3OWJB
jbDk/xxjybq+97IpFlzoqbk6VK0fS27La490sUR6zoiOBm+JJa+5NI9utUJ6
MbR8epbEkssVnh7/h5hb3VPsPB5DRvXWPnlmzYXw/hOv9F/FkP9y7qldtOGC
tcPPIxHFMaS3U+llJ1v0e28HPIqIGPLz2utztthxQfkusf7UoRjS7NPVs38R
52kUimyYH0M+zkp/9+Q4F5yVZnya70aTuxyT9yfZc2HFx7Xj3QeiySLZuBuO
Dlz4JTF6YWdGFLnqY9iyTY6IG8y3veZGkrwMgjWFeJtmVd4JxXBS2D7wZ8MJ
pHfCzvnzY+mk3+pz5glOXKC3/Za/JsOnfe12f2DvzIVy87ACy2d8mlW6k8oG
F6T/nccNGc/5tEZb28QJxCNSPmm/G/k07ZVm/+pPcoHvfufEdsRr03Rb7U5x
QYL55ey9p3xakjXsVnHjghSZK/H3CZ82d8XOvHHESlM3vLUR/7ikHBTnwYVj
1udP1TTwaXeSF66tPYPq9e/iHQ/q+DTd+FbvdX5caPSv8iir5tPcI46L/2By
waG7rP7MLT7ttFvZSAGLC2YByxzLbvL/F3ECjv0/ckoN02mEhkBVZfDG/LCS
P3oKu5PnhYZAqoZ66Iivkj+IihYV44iGQM3ztICerJI/pIrNF9qOhkCK7uB5
v6aSP9yKOx3ImoZAf7+Uz9iakj9NixcopLKGQPBx4hlvgpI/BEirxWzhhkCm
YfCBaVCSP5XvwcsrFIdAhhu7QH8Xkj93u2BpiEOHQK+XAz2r4JE/M3KCb9t2
h0BPNHXvbqSRP8Tkf/0+qYdAOVYuXJppkT+mewUjQNiHQORr3Y4CNJE/Yv0N
sTcLiEBrU0PqR/yQP3CjntbMOohAPZkCCzPLkD9SBQuEcmmIQF1cTMxMnpA/
DlL6mQ6ciED4y5CQcHGQPxzDcUdIy4hAVnLhmjlLkD8YJUcmG8yIQLrb7uCW
SpA/FYccBe7MiECBJ/pq9EmQPw5Lx8KTzohAPAIHR7BIkD8A0xw+39GIQFAz
OgMrRpA/5eLHNHbYiEBB5EL+LEGQP64CHiKk5YhA8dF4RGM3kD+qZPMAd+aI
QB0qHdzINpA/p8bI30nniEC3VGyyLjaQP6CKc53v6IhAsIEeF/s0kD+TEskY
O+yIQE0bqd2WMpA/eCJ0D9LyiEAy8w3z2i2QP3SESe6k84hAGg8YkEQtkD9x
5h7Nd/SIQD+LmWiuLJA/aqrJih32iECof+POgiuQP1wyHwZp+YhAqUS90C4p
kD9YlPTkO/qIQLRL2XWaKJA/VfbJww77iEAv78taBiiQP066dIG0/IhAMS43
4N4mkD9LHEpgh/2IQGbBtH5LJpA/SH4fP1r+iEDF3BJZuCWQP0Tg9B0t/4hA
UdpXbiUlkD9BQsr8//+IQNyci72SJJA/q2x5LA==
                 "]]}, 
               "Charting`Private`Tag$154304#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                Line[CompressedData["
1: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
DbPzyJOxQTVSyP8Dknl0lA==
                 "]]}, 
               "Charting`Private`Tag$154304#2"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.560181, 0.691569, 0.194885]], 
                Line[CompressedData["
1:eJwk23c81d8bAHBkRWSlkp2IpDJKGp8nScU3UWYoO6RERaHu/dxl71FGRGbJ
KClbQgkNNBQa0pBIoWT0O5/z+6vX+3Wve+95nnOe85xzb0ouvgfcebi4uHT5
uLiof88HH+PnAhrozL17J+AQRYyckRs6u4MGWppz3ygfOvnk/rghDeSSdLkE
kdu8yRxvIxpcFKDLUtZ31yEHd9GAca2XoFxwZOiIw24aLB7f6kVZ+tDF7c/3
0CA9M/8i5QmzmZlWUxq03eP8o+y698ZrYh96PZjbuBC5a+eRqrtmNLi6MciX
cpn+/YBrFjTY9CT5LWUFnTNWKw/SYNuj7UuEkGPWqulmWNLA6xvPHspzar0S
S6xp4Bo7HEDZRzlyPNqGBpE2/65QfiO77Sm/HQ0GV//XQtlk6VgJ7RANpNf0
f6BcJZ4d/ceeBocfNPyhvHrRQR8/RxokFfDwCyPzc99Rd3WiQdXSYR7Kg5My
ny1daZBWotRFPf/Aj46WTjcaLHTZl0+5cfhCrrEHDcSPmvpQXje0ntlwlAZj
ojorKWe+/eCs70UD20HZR9T4RF4nQbk3De6lbnaiHNJjrKDhg+IhmzJNxevb
4z9zOcdp0Hu0KJfyobZrfSt8abDW0dkJ5+e+Q03SSRpk6t9Yg/NTL5om4k8D
vdjzfDg/dxvPck7R4N++5hEqv9K3/G3+nabB6N3TOP8TBS+kxgNpILX/0xfK
zzIMuj4E0cBBIlSa+nu4OFJmH0ID32N39CmXxGfG9pynAfd3RWfKclHmJ/bR
aLBZrjGGchSHZ18rHcXvaUIj5Rl6xRqCQYOe1ZcmKXsHewjdZdLge+JTTWq8
e04+elDEoYHJsw+XKd/xDslXDqOByK/7zymrumux08NRvJs/CVPxSz7yzlUq
Eo1f6QBBmfdQgmF0FA2m1UV9KZ+yNFLij6GB8C6VNMofzKb+XYilgaVsVgNl
i72FA7/jaBCeETGA87XzUN3JBDTfJn5N4vzo1we5JNPgvmqwEJXvkLXK+paX
aDCgcgc//k2tR7ozlQYHlEN7KR9S5kzuSqdBoMH2MsoPZfV76jNoUGr68yzl
TUuHb27KpAHXiWptyrOr3xk9zaKBqMTNHmp8TQYvXnhm00D3xW8XymH/dXhy
X0Wf747eBBUvs8NNf1NzaaCoppVGWerk3SjtfBq8FmcdpNxLlsi3F9CAY9gn
TzkzMbfMtYgG4NT/l8qnW16a4ew1GvSNrPtE+cdDjsfaEhokJp8eohw84h9x
uBytr5WSEjjf856yv2/S4MVX2Y2U+cWOlMRW0GCkIR7nu0PJClZX0uDdhGoi
5QQd067GOzQYz0tso2y7a4ebXRUNYmrjFlDjkbfZNDVejT7vyCuCclHQSpmV
9Wi+W2+vpnwianlxTQMNbr7tnaSsm7l4u+U9GnTK1WlR8fpbyvd0pAnN15zr
rjhf92ac2c2oPjV5J1LmdI//kmulgWzMvVrK/w19Zlc+oMHzl2dxfiV+9y/d
30aDZk3735RfCvYUfX6E4vVcF6/vDJlHW+gdNNDu6V5I2UWzsXPZYxp8+SDA
TXn19soj5U/QevLPGab+fnR/8fjeZzS4VhCA60mFcw7zQxcNtjjYxVEOOnVp
SXAPDVpklEwoAzumQPIFDS7J549T4+O7yNpc/BKtZ4smNuVHhUHtRr00eE+8
FqccV33Ssf81er30z+VUPK07PMbO9NFAWeGuO2XZAQdSdIAGMsI/8Hr/MHZA
suAtDXyC9RZQLuTem0e8R/Xv6PphKr8nJIlNrz7QIORKxFvKOqv02k5+RPF6
Mvae8p+Na+wXfqJBvr/ID8r1e5S+Z3+mwdRAgiD1eqxDS2kGX9F62rJBg7KJ
j4h49zANDtLS8fwTu7Dg6rERGqic5jApv4id1uUdRfkpK7xL2fnWkK3eOJo/
VgFr8XpueTPc+ZMGGp8uelMeefEsxGMCjVegv4Dy2b91Vy7+psHv3mdyVPy2
L6rQXj+N4j/EZ4nXu/y15od/abB3gweb8qN1V6ydZ9H6M6vC6y92R8qX6Tka
ZEc+6KEcrb2Dk8xFBxULAtfvg0ablmnx0EE7R5uX8sPjcS9HkH8Eh/6inr/1
4teU6wvo8NDb9gXlskZDa29eOly2L79OWWU4fYk6Hx3y2Fn+lC9JTvZ8Rt7n
tUGD8qJtZkn5/HTY9iTgGTUeukfBQXcBOmg9oB+lPBHLJakiSIecfM95Kj6e
VXZdH5Clk6MLKPd9uBmfvZAO1zZ14vVmvmiRhZMQHbLiF2lSbtZzF1MQpkOG
mDau78VhS2MzFtFBasdTnN/kN20iMqLo7+1+43ouxLey8xWyr/6+WcoXtEKi
Li6mw47dIsuov/9p89zUWowOmrVqWyh7kFrCS8Tp4KMV40b59bXQR93I+5J1
8Ho363kXniBBB8ndi1opb1RLFBSTogPcXadLje+a+ciDx8iPJryO4/UftCs0
egkdNpyuzKeccDXT+D9p9PmtxfD+zt/5m094KR2OS53G+3vQlHlLG7LC+bd4
fx9VuMYKW0aHjZUWuJ667F1gtHs5HVYatOfg9ezvsIBfhg6KL/c9wOs/43ZT
M+WSvo+4XrSIMpgr6HB3Q8hfyrpjR3cYytJhXkVbgMp/4bJ7XNxydDifxofr
vayhTGMDstyvebz+446dol2Qp8O/PrVRPP+SO7ZvU6AD60BkJ+Wz9avmZ5Bl
U/WyKI98vlBXrUgHQ9B1oewk/irknBIdvBRT8Ph6DDZs1Vemw7Ddsbt4/3OL
mJlCvr5QzZRybfRg9e2VdEgp4f1MxXf9na1Bp1XoYDfWkUQ5913yZp1VKF4t
rnj9LRca+zOOHJFcokQ5RmfP3TJVOvhrJc1T+eZxzA70VaND94NZPB8COH83
aq2mwwruLjxfhksPTo0gm72bx/XgcG/x7evqdBh96jtKuYuH/4y3Bh3u5Ujw
Uq9vrHlEV30NHdrDXuD3q7a6++szMv+yYmPKWjTxW/madHAxZvtRzin09ndf
S4dIL6tsyhEzsuMftFB+6kqEqfHaZ5Oj/RvooLP0yCjl+s1/xy5p06H1yrQy
FS/lLv/xgzp0cHwcjNc/2/vbT1FdOnA+/iIpf+Fxm2ij7OJ3Dec/vW+SpYee
z82H81OqY/Wb2EiH6puNX/B+0NH55y/yoit3ZikHuBn/vb2JDhfU5/F82Ja8
aW7NZvT5Lj/joszbuporx4AOu9ZPtVPP9zycze24BdWDLNVMyu1Tyxcs20qH
c9oGON9asQm83cjlxfuWUk5QE+aP2UYHAW5aLTW+qQamwN7tdNid3GhB2c52
VpCXoEPVHbNRKj61P04LNSCPmWlkUFYM/y4cBHTYkrb7EK7HSh4iejvokLQ6
Q43y56oB0R/I0S/lcf03OWAjdt0QrceuB7ifLxl+Iu6xkw42cXG43zuz4p5U
nxGa7zeO4/1h6383lx4wpkN9fTquB1c+aiwX2U2Hg+cfG1BecP6qzEPk671S
rrg+LJGVZe6hw8QuvzjKj24kyW3fS4eCs5/v4fwbiyhMI/seC5miHD/AVqww
QfX20EZc/20XB67U+A99Pid93O/VFoypDCHv2ZCI+yEF8FS9so8OD3z1haj4
MV69U7M3o0NUou42yp9O2qlL70fjNU/G/bXJwi6NZ8hfkr0uUr6RbaIZZU6H
kaj/9wNiBvfX7ragg/ilkjeUT3dtWcdzgA5zFjtxvTdYsFb77EE63NpfIUjl
m1tXXm/Ukg7/pd7D/Z5bR8rGIis6TOoNvMb9ndtifTdrVN/Ya25RXjMXulnB
hg5q8c3n8fkkmWvLa+TSuJbNlH+uPbc12ZYObiOmn6jxWbWObzO3o8MdgwAG
5buHvQnhQ3RIZtQvpSz7+wO0ItM6Ouuo+NFj7Q1Jezpknkk/TXlQrWfnVgc6
nD0pi+u1ceN/u34jF84bi1G+ZttifNORDr2lEr+o/PqFV+5dfYQOXZv9+ynr
Vxf8l+lEhxch4j8p7z7cpObljOJ9UXQR7jd4+nl0Xejg9OKpFmX3/N/988gb
j0rYUT5tIlHV5orm95bYcMrMUc2kJDf0efn5GnA/mLDb94g7HbgNdP5QLn0d
smrSgw57DzWcxOv7wkWuxqN06OzLvUG5Q/nmmwhPOgT9sPhK+U1rR6WVFx3i
SmPw+h/2/hyv6E2HoWEVW8rTojzHvyGfWv0ujLLgLdk9lcfo8Co7Gudjqc2m
laQPHToMZ/H+rTpjMW96HM3fgtlxykY7Qyven6DDu0tz/+/3Imu9A0/SIXtk
40/qcb91L3cZ+qHXW8R6RpnePa4o4k+HMy1e2Ti/gYtmXyL3OjY7Ub68Qu1l
zik6EE1+opSLG3bcPH4azW+GRRE1nmpXh2j9M6j+DCfi/bFNINBzQQAdDs/U
Pabi8+p6/M7HyO8Fnofg9by/WD41kA61E8xtlKd+tU67nqUDIyBwMWW+S+97
tM7RwVbs8DiVP6mts6XTyDYSX3D91mZt8IgNpkM6p+wrZfMOD9lV5+mwWDYQ
n9+PnCR/jyG3nWwxpHxCKqOr+gId9EPnfSmH3K28wabR4ar82xzKkQ7Pwszp
dPhcueo15TSuEdcVJPq8MQlS1HgKc/mJT8h/cz6bU24d2TIZzKQDc4U9Pt8+
j7N+asyio/6Xn4+Kz0ddv+vibDqIXrq5lfKvV5GcPmRxpTUnKfOcz3cu4KB6
K7AV11dxpXtb/UNR/2R6C/fbii1vlm4Lo8OTTKchXG+9pn4KhKP+yW0Jrufb
RMQfdyH7X8/F6/m/8jVFlyPoYKQ9iPN9yMqY5RlJh0Dngnnq+V7TTkd0ougw
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
ry7D9cbgJW838oV4Y7x/BB0Q9Nl/G9V7P158/o7y3tzdXkmC717Rmzj+U8/4
I+6Q0DYVi8+zmQxvgz13SfhszP0Rx190wQn+KhIuGdnh+5vStPTsZmR1y7hV
+P4r+eBSWjUJUmWf9+D9N044enMNiu/Fxfj7r0uR93kmkCP8JONxP8sJPltS
S0Jf/z88/jBSZ9SzjoT3dz7g+296yDfXlfWoPki2/8TfhwZe7e1HttvWtoiK
50l/+/2XGlA9vzuK8+Pk2W4gco+E8ZoZHH+Lw1tUGU0kVDun6OD7cbtf6Vvv
k7DoaDk+LxlaXhf/jWyvECCA+4v9rqHlzeh8d3oer09tkxVzx1pIyL7gjs8n
Gru6/VVbSXjMfnACry+I/PIOefMVLw3cr2/ZeTj9AQl5q8//wvvHxpluq4do
f1gQj38PwKN5rOFRGwkN0ddw/H8pvblGtKP5UZOLz6sjsomKf5F11FLw74U+
LjVNqehA89uJkU+5T2LBIt9O1K8N+9Tg+xSRGlL9Mdpfww7hfrBD8NTvQeTn
hAV+/+YFa45nPkH7m6Utvp+smE6zlXyG1tebanu8X0wceNyJ3LVwDZ1y7piQ
UVgXOn8JP7+6ENfXpirDbhIMLFpb8P3OUNC6OWTnUJEhylHvtPPu9JBgGV/N
RcWP9WZYxv85ikfEAL4fCnmRE6f5AtWj+5HquJ98doj/M3Jj83Ndyh4PHo3b
vyIhkUjCtq4z6H/ai+rPlseL8f3C3Z8HIl+j/WVZ4He8f9y69nDXG/R5JUwb
KG8vcdnO1YceF/Vg4f2jSKaiGtnQdxSfB7Ryu9TP9JMQn+GB7+NUsyKy1g2g
86OFC64v8mmGS4aRQx73FVOWTv4bkfsW9avpXXg/4Y/0Dlj+ngQibzXeT37T
XzvHfEDPV3fB3//+CE54uWeQBBuRqjx8/g8w2bfgI6rXCvH4+4p3fjz365Ar
msd68f22T7X+2SESVLLe4N8zPT3qX6L9Ce1f8Q6y1Od76KKh8h2ZtzYYcH2z
TVvs8gXVX6+GcHzeOzJxWPMrOq9XfMT75z93s5Ip5D9Mx27KOT6Fc43DaH3E
TeH1YnyKZ1/kN9Q/7rggQsUzml75TeE72u8up+P9pCfaO6JilAS6s8lafN+b
1Nx7YQz1i1KPZSmvSJdX3/sD5XtuM85vffbZs5LjJJSu8XxBvb5LYdeDfuRD
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
                 "]]}, 
               "Charting`Private`Tag$154304#3"]}}, {}}, {
            GraphicsComplex[CompressedData["
1:eJxd2H1sleUZx/GuigisUEG7WhyDYoBgNJpRXVjCTjgkQ/9YCm6YvVBRxh9Q
HC5zc2WLGxpLFpY4XNFEE2e3RIcvxeESpx5jSQjYThzLllUSZhYoQ4l7sawE
X1Y2z/18rifc/AH55nflnC/3cz/Xdd9n3u1bVm9obGhoWPn/vz7+98T4kRMd
+++tDJx59ui5c/MHv7jgbFf1SMm717S82fnPkqdtX7Kq64L7gu94YfVwd2vJ
fzh5Z7Xn6pKva32g1ru85J+vfLaj75aSx7//+4H+zSXfsvudhXu2lfzikcn9
tYdKnj11Qdvw0yXzv2zu7q82nZgX/pg/5o/5Y/6YP+aP+WP+mD/mj/mfffDj
D/5M+GP+mD/mj/lj/pg/5o/5Y/6YP+Z/4MSyJzu7Zoc/5o/5Y/6YP+aP+WP+
mD/mj/lj/n2f6+jvXvSp8Mf8MX/MH/PH/DF/zB/zx/wxf8z/9h1XPdo7NjP8
MX/MH/PH/DF/zB/zx/wxf8wf819Xqy6u9jSFP+aP+WP+mD/mj/lj/pg/5o/5
Y/4f3XbtnJ6mSeGP+WP+mD/mj/lj/pg/5o/5Y/6Y/7Uzll7ZVX3/Vf6YP+aP
+WP+mD/mj/lj/pg/5o/5H/7tgta+kb+FP+aP+WP+mD/mj/lj/pg/5o/5Y/6D
ib/AH/PH/DF/zB/zx/wxf8wf88f8Mf9F6XmEP+aP+WP+mD/mj/lj/pg/5o/5
45i/6X2oxPwtOOZvwTF/C475W3DM34Jj/hYc87fgmL8Fx/wtOOZvwTF/C+b/
jdSPwh/zx/wxf8wf88f8MX/MH/PH/HH0/zQPwh9H/y84+n/B0f8Ljv5fcPT/
gqP/Fxz9v+Do/wVH/y84+n/B/B9M8zj8MX/MH/PH/DF/zB/zx/wxf8wf89+f
zkPhj/lj/pg/5o/5Y/6YP+aP+WP+mP+ZdB4Nf8wf88f8MX/MH/PH/DF/zB/z
x/wvTfeB8Mf8MX/MH/PH/DF/zB/zx/wxf5zdHyvZ/bGS3R8r2f2xkt0fK9n9
sZLdHyvZ/bGS3R8r2f2xkt0fK9n9sdIyfeMva284H7dn5+n2Qflr9Xk3N3Is
v7Xezz4dOZZfXZ83l0eO5R/W+/llkWP5UP37miPH8mvqnzclciwfrtc3RI7l
r9f533EewfKG+p/DNTmW70/1MU+x/ED6vtgvWL44+UaO5QfT/zdyLH8/rVfk
WH5VWu/IsXxtel6R4+z5V7LnH/ltab9Ejk+999Daav99sZ/Ov/+0D8rtJzmW
209yLLef5FhuP8mx3H6SY7n9JMdy+0mO5faTHMvtJzmW20/R/wuW209xvy9Y
bj/Jsdx+kmO5/STHcvtJjuX2kxxnz7+SPf/I7Sc5tv/8Hjaxbd6KnqF7Kxfv
e/fz1Z758X77vUn+rVMnf9fZNS9yv+fIn1l4oLvWOydyv5fIt26tbRjpbIvc
7xHylYf23jrW1jJ4fn+dGXlL3eeSyN2n5Qfr3zctcvdV+fr65zVG7j4on6jX
j0f/ct+Sv1nnw5G7z8ivrH/eO9G/3BfkX6v7/jdy53H5zvp6TI7n47wrH6+v
94zInSdj/evPc1bkzmvyt371wrHRjtbInYfkzav2vT3UfUXkzhvy9h9tuHuk
s+xf5rn8pa9s+mCou72y9Y0puz4xWO6f3uvObJrYU/7+Krd/sP2C7Q9sP2DP
H3ve2PPFnif2/LDnFX7F88GeR3x/sf7YemPri60ntn7Y+QJ/++5ZF+/pbI//
z8jj0++vdcwN/mHfrAv7Oq4IvunklImBc+V6tS5tODs0NCv40OX/OD60cEbw
xlePjJx7+aLgqcM/fbj78Y9ife5f/PrEwM6TwS33NK4fW/rnWJ8vffnkc51/
Hw/eceH2b451XRD+/+p65M7a8LTgp46uWVadXa7X0Z+sW7FoVUvw9Bs23dS0
vS24MvqdzrHanOAXX1v2dHdPuV43/6J6TVdfuV7mI568ZN+7o70lm4/4jrW1
jWPdJZuP+NdNWw6d6y/X13zE31u34WDb5tZg8xGveP7r+zquvzTYfMQzL1r9
cmdDyeYj3vebn20a6ZscbD7ilwY+qLWtnojnYz7i46efvLFp/FSw+Yif/8uu
R7rfHo7nZz7ix7b07Ohf8p9g8xF/dubhP7b1Ngabj/jhzcf/Ovre1GDzEd+z
/sO7RgYuCTYf8XPNk35QGy3ZfMTHXpm+rb+t3C/mY7xf3a3bezvL/WM+4vmf
3Hmgo1ruJ/MRv3Js142Luubn+20wy4OL/TmYfX70P/sT+zzs87D3H9vP2H7G
vh/n369/4Hz/L0/vW3BLWr+o935g9Tiv159w/j41p/c9eDQ9z6j3vmH1OK/X
/3D+fr6V+k3w3rS/ot77i9XjvF5/xfn7/kzqd8E/Tvs96vUDrB7n9fo3zvvH
6dRvgx9N71/U6y9YPc7rzQec96MHUr8PviH1g6jXr7B6nNebPzjvb2vSvAl+
IvWnqNf/sHqc15tvOO+X16d5F3w69cuo10+x+ljfrN78xHn//W7yCf5T8ol6
/Rmrx3m9+Yzzft6Y1jt4b1rvqNfvsfp4H7J68x/n82FD2k9lf037KerND6w+
+mNW73yB83kzlN6X4Ob0vkS9eRTvY1Ef/Sard37B+fxqSf0geHnqB1FvvsV+
KOqjn2b1zkc4n4crU78Lviv1u6g3L7F6nNc7f+F8vm5N/Tz4idTPo978xerj
/cvqne9wPq+LeRVczKuoN8+z+Rac1zs/ZvMxPn9LmrfBk9K8jXrnA6we5/XO
p9l8D87P++5H8vz+5L4U72dxX8LuS+efN8p54r6E3Zew+xJ2X8LuS9h9KfyK
+xJ2X4rvL+5L2H0p+ltxX8LuS7E/ivvS/wAYRdth
             "], {{{
                EdgeForm[], 
                Directive[
                 AbsoluteThickness[1.6], 
                 GrayLevel[0.09], 
                 Opacity[0.06]], 
                GraphicsGroup[{
                  Polygon[CompressedData["
1:eJxNmAf8l9MXx+95SlP92iUVTS2l4dfUXv/SUCmRSsiIUISIElmRvbI32REK
ySrKlh0qKysr/kk4787n+3p+r1enc557z73nc+/z3M/9/L4NJ58wclqWUvrT
/yvl/hc3niu7VUnRVtqtqvwubnUspdpuu3pcpHzyqqm/jFt1+bJutdzKu1Vw
qy1f0a2G+su5NXfb3a2eW021MeY3Yanr1lhzMUcDYaLmHvLVNUdl4aqvNZC3
p/qp2VCeOnV9Hbu51fF4q+o0c2uk/lrCVKS5+rl1cuvstpfyqdnXrVh9rYWJ
mnvLU3NfrbOFWyutgbw26qdmW3nW2kFYqNNRnvH1HO/ubk08bql1NtC89fRc
rGf6e2ku5ugqTNTsJt9WuFsKVxetgbwGXqe+2z4eb3Nr79bDrbfmY0195KnZ
UzkdtEetNNefWgt9/dVHnaluE9wmsk9eZw+37h5vV53Bbgdo3xk3UGsA+xDl
UHN/edY6XJh4JyPkGT9U/WAfqfkGuA1TG2NGqY06h2o89XcIyxi3sYqpf5A8
9cfJU+cQzQuWn9w2uG3UWg9Q/Yny1ByvXOo18j1o6DZIWLpozU28rbHbaI8P
L4Flimof7HaUPPVPcJus3COFlbyj1U/NY+RZazOfu6nbJI/NYuw0t2PVD/Yj
VJO5/hUG8k5UHfpLWYyb5XayMFHzFHlqnqRccM3QGsibqX5qnirPN3KGsLCm
M+Wp2dxr7eV2nMfTNR9zzVY/dc6Sp/9seWrOFT5wnSNP/Xny1G/pc7dwO83j
XSzWNN/tfK0PXBfIg+tCeepfJE/9i+Wpf73bArdL3G6Qv1Q2V1gWyoOltddt
5Xaux2Ut6l/hdmUJLFfJg+VqebBcIw+Wa+XBcp38Ahm45gjLHOFYJExgqeh1
b3Z/v1t5i/o831ICy63yYLlNHiy3y4PlDnmw3CkPlrvk2Zu75dmbe+TBUsmi
/lK3Nh7v7XaZx4tLYHlAHiwPyoPlIXmwPCwPlkfkwfKoPFgekwfLEnmwtPea
7dzu9Xgf923dbtSe8U3xPT2pfQLX08IEluXCQf1n5Kn/ksY85bZMueQ9q35w
PScPriKLPXjB7UXtB+NXqB+877q94rbKraPnd3B73OOXVQdcb5aY41VhouZr
8s9pjqeFa7XWQN4a9VOz2Ofe1+15j9/SfKzpbXlqVrWo9YYwLdNc76ifOu+p
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
                   
                   "]], 
                  Polygon[CompressedData["
1:eJwtlHlMz3EYxz/PR0hCQqolRaWRFM3M8j+bv4z/8bfjT+U+yjEzzMyMZmZG
M3OGuXPN1ZyjmHO55mq5SfN6vH9/vPZ+P8/neD6f53vkz5w7ZU4MIUyGJOhH
kA71+N4WwkqohzRoJJfNWBY0BOVWwT5IhyZytege01qf04Aeg0xIJT6BHvc4
KPcDvkM1cTf0BlyHSuJcdA0cgAx4Ra4RvQA5UEDchn6G2X5+dDFshQAzkKVo
nWnMa3Sif6EWn4wuh50mv5HcMnSH6Sw+5x36NrFXRJfANpP3ml3pRVLU2hRy
o/Cl0BJ05ktwEcqCzrwa9kN/05wadLf3xtTzVNb2hLqgXDF+WFRvfc0K2GWq
5XOuotdMvfIaZ9DTid5ko7fgNuQlevoSfQHTgnr0CT5CFWEx+h4+mPwscm/Q
1wlfhLb6czD56f6OcLY+MJp4L/ET9KnXh6nEFYyNgTZ8JblynxvlW8m1oM2J
uUPQB/DQ5CeSe44+S9TyPb/BV6ghHo7+gt9Qksh1oH9gQ1CuL7XS4GjQGdvh
i2mt37k7Y8lQRryduAs+RvlSf4/wFuV9zxR8j6i7+pqR+JKou4wnHoDPgApT
zUz8QDgflKuCdX4H4iw4gj8MvYJy1fj1/k3gC+EK/rLJ/4Rz+LOmtT5nIX4z
dOAnwSH8Qfv/aEM7LMJsgc6gZ/4Y/8g013Mn8adM74p/k/P9OzDVKocF+E3e
Y/wEGMpdCmAcuZvEg/G5UX6s9xU/IqoXzeTuo/dMa/2MRYwVRo35HnfhTuJZ
+zuaw9igqL28Z01ex3QWP8M8/FrT3bxn+czNi/o3+T/oH5drjp8=
                   
                   "]]}]}, {}, {}, {}, {}}}], {}}}, {
          DisplayFunction -> Identity, 
           ImagePadding -> {{80., 15.000000000000227`}, {30., 
            26.000000000000057`}}, DisplayFunction -> Identity, 
           Ticks -> {Automatic, Automatic}, AxesOrigin -> {500., 0.}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, 
           ImagePadding -> {{80, 15}, {30, 10}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {500., 0.}, 
           DisplayFunction :> Identity, Epilog -> Text[
             Style["b)", {
               GrayLevel[0], 16}], 
             Offset[{5, -5}, 
              Scaled[{0, 1}]], {-1, 0}], 
           Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{
             "Host specific growth rate \n (C-mol H C-mol \
\!\(\*SuperscriptBox[\(H\), \(-1\)]\) \!\(\*SuperscriptBox[\(d\), \(-1\)]\))",
               None}, {"Time (d)", None}}, FrameStyle -> Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {30, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, 
           PlotRange -> {{500, 800}, {-0.021, 0.022}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {Automatic, Automatic}}, 
           Ticks -> {Automatic, Automatic}}], {
          Rational[931, 2], -883.4999999999999}, 
         ImageScaled[{0.5, 0.5}], {931, 573}], 
        Inset[
         Graphics[{{{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
                Line[CompressedData["
1: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
ZJI/W9mWvQ==
                 "]]}, "Charting`Private`Tag$154538#1"], 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                Line[CompressedData["
1:eJwkmnk8VG0UxyVJSqlESdlKZUuWEtUcCqG02VUkJFQIydLMnRljX2YsZUkk
REKSLHGRlC1lKQlFSYtsCUn1PvO8f/l8P2Pu3Oc85/zO7zz3SttfOOrIy8PD
o7qAh4f7N9DflZ8HqJCVr/4vp4RNGfZeN+irQ4XjnEuzXLZ2b308rkuFhbob
vnO5wYW46bKPCq6/RF9xWdNRjfigR4U/r5WKuZxtO2h73IAKgwbRoVwWtb66
p3M/FdQP6TtzOcjUcJ2JERWMOlWOcnnS5PfvemMq9M0I6nO5ba9tWakJFRZn
h2Au1Hzsk3uECsnEM1suS6p5m8keo4LoqxRPLkcpbVJPMaXCibgfwVx2kwkf
j7SgQkzU0Qdcfiux+wW/FRUkXkw2ctlIbDSfak2FGvrBPi6XLU+PnLGhwocg
5REub15yzM3jBBWUsl1/cZl/3sMtp+2o4CZ67A+XP/wUHzI9TYWrMc/ec/no
WPOTFgcq5Npeeczl6q9Xbuk7UcGc3pTE5a2DKgzyDBX4KUFeXE59N3BK8ywV
3r2YseJyQIe+pLwbFdpS5nRxvBtye9ZeoIKBbYMxjvfj4xVx7ijeOf8scbyr
liYJeaL1Z3i44HiXVvuyLlKhIf7TFRzv+54W/7xQ/Oo2xeN4392w3dcH3f8Z
njwc7+xXIuOXqBCUv7uWy/Y3Q36cvUyFmfJ8vJ8vU7TaBvyo4Hdjw2cu57NT
ozsCqTDy0Q2vP4LFe7CeRoW61CczXP5NK1ag0KmgRXn9hcsu/k6CpQyUD9S5
F1x+4736i0oQimfHyrtc3u/e+DSHRQU1z090Lj90CciSCaFC9JXs01yWc1QO
Sg5Fn8edPsTleNv3p0XCqfBM4fU+LvNZc3QjI6jwtaYax+ui6T5p/igqbO18
b8DlAZOpf1eiqbD84y+cX0cMb/dNx1Bh0uWFPd6fvdaV7hwUvwF5H7w/e5ak
fImlQlzFy3C8P5pVfvbxVDh7Kvoml4XU3K3eJlDBSU2lDO+Xkoym6TUq7Ami
P+fyt00doi2JKJ4p5v14/2RYP/WSqVCcf2WMy88kNDuqUqiw7d1zXE87xL4W
7Uilgs3udbje5ja/3/fiBhVyDLN/c7lW69Ur53QquNgfwvkYcqDZeV4Gigc1
vZPLJidrZxNvof1QUyzksoh7aYRqFhVO/47E8XxD5K9vyqaCZcfBU3g9sbcK
T+dQ4YJf2wEuO2Qm6c7lov1aTNvLZfmHMR1xeahe3Coxjz1jOSnlU8HfcBLn
X0l3wMyTAiooL2Nbc9l/2DPs5D0q8H7lPc9l+OssMV1EhfO1FUxcL8K2+dHF
VJivpXKdy83SZrC5hAoXb7/G9chRM26rfkiF+NWKLVy21NNxsCqjgp1eLo7f
eosdU+Pl6PtXX45z+aOzUkjYIyp8ltwwx+UcP1lx2Soq1CbK4fidj1iTV0FS
4bq9Ha5X9dRle0xrqPDrsg3Ox9mCBS+Ga6nQGXgL/151ze9TQXVUaMluvMVl
Vvv4j3X1VNCeWHmZywcGh4JKnqL4VsnacHnFdK/YoQYqyPexDbn8WqAjZ6iR
Cpz1j3H+pYg3atOaUb2KSurhelKsbln9nAr9ksI4fzfvKbG914r01GI+1q+R
Q3njhi+pIH7V+SKXi0/dZAy0UaHHqyiMy34Xr63y70D1tcc8A8c3KCp75Ssq
HJlpquDygqvMnXmvqeBsEdXG5cbbfk373lDBqkb8E5djyt1P9HajeBmMT3LZ
vNlp1LuHCiez4nD9SvQdJ5b2USFqT9hfXC+jR1dmv6PCxCrrKS7fnmeYSemn
QlFb1Acc35WUHV0DVHha+qCOy2obNRrcPyJ9T0y7xuWZ7Qo2iz6heDmbu3O5
ar/09/QhKmg6pptxmWktRtX6QoW7+z5iPTdyE1re/hXtbzATx0/4yvwM12Eq
FHh+xZ+/iv6lzjeC9HA5ges3JX20PmUU7c/WEqwPp+4PWmqMU8Hi2Kwv1osn
b7+2TKDfq6mOwf3r1csAp0mUzxepOVwu+vx06b+f6PprCmq47DtbmXZ1Gn0u
0vSay3uWFKuq/KLC24tHvmJ9WZ9b92yWCj8naqdxfLemmZ+aQ3r28yaOV7RO
wudff6gwzbqE42l6LMKP8w/1k6MNE1yOVNVhxfPQQDtLtpfL7tq7Wk/No4Gp
qwjev2P7dqxW5qXBr07TSKwP52JeDyM+uZuN9XzX1S8Jd+bTIDzw9DHc/6p1
zV34aDB+2R/HZ8PX5FVbFtDARD0cx+/ayp8dQ4gZjfr48yW7TeKy+Gng7uVw
mMs0p+xjjgtpUE2k4PybjOZZuUGABp0WObh/OpdZtQ0gTrhgEMLlnoEidvoi
Gpgd07jB5cNLlhyxE6RBbopaCZfrNByFJRfTwHKCrxn3I9uq1l7EKvzn33E5
L0QsOmUJDWY4GqNclipyN7ERosEB6w1Y/+LfNgiJL0Xrk1mA61dwgWxLF+Ka
4lu4vq8oB0RcXUaDuO7/63/CotPYXJgGSsdP4Hg6EcqLVy2ngfLfNVVc7s4N
bmxHrDJXFIv1seN9KGcFDeq/L7mA9fTPTsMjK2lww1XFnMvbN8UKCIvQoHtB
C+4X6/30giNX0eC3kxauX/6W6QWLxWgw2fr7OK7HqcNPGhBzTELx9UYkc5kh
q2kgRn+D9e615/H5/OI0uDP3qAjrR8qD2jrEiz+0PcN682QpnbGWBo9KC3uw
Po2e0dGVoEHjZwnsp26vruGZt44GLoPvcD+Ncb1IvbKeBrc2JOD88q3a+Pe3
JA309lOwPg4PXaksl6LBipNl2G/YLe8KuCxNgw95wdhvdGht26UpQwPjeRNY
X/Y7hP2eQtxZY4X9hsrDXX5eG2gQc+09zp81gqMz4xvRfgYU4P4Qpba/tFCO
Bqu3XcZ6z3si/dKFTTSotPd347IPa3a78mYa6A95EFz+WnBsahjx0yxxrAcn
3+Q9uLOFBrqJGgVcbuPl93aRp0FoHfMJl/UVbdW3KNBASqv5DZfLzUp/DCGW
W9WG6+/mbRdPRyUaHA3XxvUW9ltifEAZ7a+7ONanvxt8CtO30kArqfwjlz1N
Wi/YqdCgUOozjvenS5u3Sm6jgcemS+lctkknRnoRzzr9wnpRtXN29JoqDewd
V53gskyb5/gxNRqcuncH97sgl28TS9URX/u/P37mdZhsQNxoY435QHLPT6YG
DQS3zjPicoGa2TRlOw0yNSg4v1Y0t8zMItYk3jvheDnozz7YQYOkZff9cL7O
Vf1216TB22csrFe743f8UdiJ6j9QKZvLaUqFfz8hHv3gV4n1qH4zz00tGnRc
3Yf13vlk+rwT2jQYErXH62+aWjN/9S4a5JF5WH+Uozl87YjdWv9hP8HZtJg/
ajcNjtlp4nqbIhkLDffQIPiMBv7cynJOgI9Cg4P3X2O/8WjMS5BEvPnLPLw/
UqHfF/sBDX4wrpViPZd2EtLQoUGFgVMUl4fK+paOIZ7/4YMr1vejFsJ3dGnw
vo1jyuX8r63LnfbSwGHvdlxv3mtrRHr2IT1c74HrbdeBIrGj+jSIfN2B6y3t
o/waIQMarLkxgf3F/MAM8WeIG+urGViP78at22OI6ulXEfY/yvpCkr8Qn9l0
pZ7L7L4gqWIjGmyfMujGeufzV/qCMar/gs84vyyXXZKVP0CDkQAtrO+S4CyX
dhDp5YHTON8+uVttET2E9vNjKe6nRova5F8i/nc1FOvd3XQjxYjDNGAaHcL7
Jaz1WMngCA2OuO/B/turTXsr71Gk7zoZdlzWmq+k6nuMBvOub8P+dZ76eo0R
UxrUnYzfz2WH5oTtOWaoHncvwfF65rBM08GcBmuvrHLgssKf4J2SFjR43Xbl
Eq7PeB7tbsTVXWK4f0woXd4Vb4nyfVUR9gtm9eO7D1uh/PspVc7l0pMulMXW
NNjUsLMV9//pAahHvPVJO9aTD5s69u46ToM9zuNYn3Mtn+gXnUDrHbHEerx0
fPf+cydpML3bHOuxR2iJ4WZbGlxbvxDrcYf0VuMPiN89PoT1WLM8+0CqHdKP
rPo4LhucrN109hQNciYHz3HZnLeXV92eBg+uG+H1OmZN9/5FzNxkh/uXl9GK
sobTSO+fx2F9YowoxsU50OAuzQrnD4djcMHWkQZfeqVxf0zbbm8k74T0Z5sD
jldBd8DGn4gNPBOxn6u6cpWn+gzqb7t2s7ncLFP0NsyZBhvbWrA/eFvfXGJ2
lgYtq5qxP/jqMsSWckHXD6nA/uDXUt5z3xAH7pfB+SNwX2J/iSuqJ8FQnD9i
FjtkCTekX+L+OH/kfh/5a3yOBi/MWVi/NW64vRE9j/R9q/YPLu/bG1zcj5iV
pojnz2ND6dF5F2hgsW3sEZftwx+5XHKnQYHivWgc762v9XQ9aGB75jj2B7T2
cSkhT9SfYqWwP4q6tGTuNeJG5llcT9fXbnp98yKqz5pMHL88UqfonBfql0H6
ON/KTx+P1PSmwYYyEse/YeEl5/k+SG8ng7Fedd1h732OWPHS6gBc34fy1ide
osGCLd9xf536Uf/rtC9abzwTz5MLrvV3KF+mwfCQLfaHIrvmCn4h/vyNF9ef
7HvR8Do/pA8LJ79xWZW5zSnanwZXdzzC/U5n8wEd6wDUP5cP4fgdbnaS2BiI
9PURL46frTsxPYr44vcbOP/Oi6S0lV+hQduXI2+5HFBacjeISgNHaj7Wp/Dj
L0MO05C+Va3G81wSz/DptQQN1PIoZ3C/vcVP+YRY1/kY9kcP90uL36Oj/iZc
jeuzflj7pz+DBl2+kzh+nTHmL/SZqH7l7LH//6jucWd5EA0mDgRivf/RFc7q
QVzz/BE+3+ANzDqVzUL1opGE9WC5dM0uz2Ckz/fZCVhPn7wV2x1Cg0QJGdwf
lc9OTSwMpQHlUzPWr91Cy5+3IebZIIr9grWZPtM5nAbXD6bj+cb3ur/W3wjE
61bj+gzWSVjVEInyJYaN/VbCYOFYbBQNeGEG529maFPTyWgaXIGB+1wuVvqU
tSWGBr3KJiwuP37JQ59EbMv6hf11m/faEyQb7YexowmX36/ZrhnGoUH75z+4
/41WHl5pFkuD5gBVzDH0BocVcTQo51Tj+KgY6Ja0Im5/I4zj82JxxcLIeKTH
jR9wfrm/ULMySqABX/9v3A+F4/NyF15F+Ze6DtdnodXGuTrE4oxlt3E+rE89
SL9GA9VlSVhfxgZEb1AS0f6Rwe3497Ojx+YQPxLMHMS/7yagW56E+uWpalxv
L1SI2EvJqH4VcnG83H/++qieQgOnx/+fdwmXe26fQDxzSR3rX+GVb8EF15H/
DaEO49/f6/DGLRX1Z5mRDi6PL+yVl79Bg3t21tjvcZrNAoYQ6zVew+dPquzn
LbfSaFBc1IDX22ZmIGmfToO9l7Yf4bKneLW75E2kv7UJuF6LMu6tTMpA+fNa
HOvbhGJGiUgmis+OXXh+54yvFWhDPL/CGZ8fqZbEWUVn0UDhxjw8L7b5Cd05
kM3V3+Y0fH0Ka27RbZQ/izgPubyC79/Bp4gHjNfi+bfo2aUbzBwaGDqq/39+
FTk2ppNLA5tNd3D+/DhyVvcf4ps2h3A81N9aD17OowG56CyOn5fDgZDJuzRY
+FgO67/Ilidv7uWjfq8vifen+PtuhQsFyJ+KL8f6b1pUEqBYiPzKduaF//vx
1udfEM9QknB+qPNIezgUoXzRisT15hW6QuTdfaSvXeUH8fVNwh1TimnQ096P
5/HiFXwPrR6geSJSBPsD09cBAmIlaH91RbE/+Jn806oDsY9aXiKuB7vzd9gP
aWCXdh37he0bh+ZMSmlAPL2P6+3VF1uTJWXI73wow3rlk991owFx4aZArFcl
Oxp191WgfG+7jPVpqrpisOoRDcKytbAfTQhS3xFQidh1Fvux7UZ3Q3ZW0cD8
1oUGfP2lct1TiHdu8MbnST7tqQrFJNLf4Pk4/0WviQV6VKP7mQjDfrTkeMxz
5RpUD0fbsR81l14kNYw4flU8rrfpQcIjpxbpYWkYZt2SlBSfx8h/LDPG/x/F
evh0bx2q37Jr2O93m7dNCD+hgTetF/t3uU3f1/UhFv0ZhOPlOb3Q8E490s/z
81K4XPlUxsv3KfIjC2rxea7Atd039J7RQCR2F/Y/ps6WjSsa0PXvfMb5800g
SupuI+ovbjXYT9JzHvsYNKP+u5WC9er55b50kRakNzf24vOYNUa/mvsRu7yn
4nx0EBeZyX+O6tviCj6PKfyqLBvQivyNVSb263PlhiaGL9A86HgPzyMG4Q6X
RV+i+vqkhvWGY0O99QHxTYsInD99CkmthW3o+/zrcH3JzxXPBrbTQHalMT6P
8W5u3Wjcgfrv2St4Hq5O+Xp4dSfqdzXSuL6WnFsQMIj4+bWbuH9Y7pbKLnqF
+omaB76/DCHtNuprGjTF82B/PtJr9udAF/LP9HqsR1r57pvF39Bg0SXtIS6/
NMm6UtyN9GyhDM4f59G3HSY9KB6n83/ifCan/q3tpYFvzhz2Y/+ilyt8QeyV
ugCfzxrZKZqX9KF5iz0fn+cmqBgQjHeovqpJ7KcGeOzzDr9H8+h8QdzPlV4G
vF7XTwP+MQr2U77pV3m/Ib4yUYPjU+dRpFQ6gPr1/h9Yb4R1WyyDPtDgwjwt
/H2bFZ8ZRz+i+E39deRy1gBvgeQguv+Wu/5Yn4rWdQ8jVhgtxn5gD0NzQfkn
ND+HBWE/EHrsmErwEA0Go2KxH+iQPW9j+hnN+1lmuL6kJkNY0l+QX9uhh/X1
YVxVT8VXVD+jN3B8TDQmVc2HUT79u4X1KGnBspOy32kQEf4D97PBzi2hY4iX
xdJwP1PJ2ldcOYLqId03iMsBPrbvwkZRPR0UwP1spVi8xsZx5BfCwnG95D5s
DCcnUHytVuN6mQoeLIn4gfxT5BVcL7qWPANWkzSQOfsW10vU5rVCm36ifh2Y
jOvlzYyG5iTichllXC8imu6ZlVM0sFaNxfVicil3RfA0mncD6ppwPEo+Ug/P
0GBfogmul7qf67+v+YX06HY1Ph/W8op9mjeLrnc/E/ejwomFNylz6Pdersfn
A9+26S5b9Afl74F2nF9yHgEBbYiXzP+Hz9PtCku+JP+lQeouNTyPJ4+OmTv+
o0H/i494/hA+77hthocAvdQXeP2s4TeLw3kJkCkYwOuvURC5bDqfAJcvQri+
5lxMPq3jIyD82C+8/h25IceGEPupb/pfL77UVhcuIGCXk0Qyl+9u/qPkx0/A
qmN2eD8+n9mRvHchAbUTAfh5i0y2h4CQAAH3n/7FfvfEpzverxDv7fHC+9vm
IHX4rCABfUwW3v/9H+Lk5xYTcMv7OM4Phkzr1SdLCFi28whef9WpRQuihQhQ
W9iA1/8rba+n5VICkmxHabifvA98J72MAMec83j9uScnyoqFCWD4rMHrl+p1
ijNYQcDkhTV4/TYS6fOWryRAcf5BvP8JNm/PdyNu2nsAr/9F0qqeDBECHjsk
4vP1xd2HDM+tIkBasQyft+ivCSvZLkqA8ZgqXj/Nsk6WR4yAHfExeP0VV//G
NCC+GXoSn49NvdL8y1lNgGGdAt5/N7O7XRvF0fqvLOHJ5dZzu/T90rUEPC/q
wfP4upXHpegSBIgmncTPZyyPJkQaryOgfv35e1yOZb+YFVlPQArnAD6Pev5C
0LkPsU6GMM7/fYeouh5SBAi9P4f9bVnLDwk+GQIOq5nj9U8uUQ5rQewysRyv
X/mA83SCLAHe8Vl4nj8bftPBbgMBnzUTcH7daux5uWUjAZ4Rjri/vlskRvmB
WP1FMr4fccMjeY/kCBh/WYvPY8xCwtewNhFw8KsT9gsxT5+wDm0mYMms6P/P
24KnDj7dQoDVt3Ls96v1N62iKBBQ4XkO+/2ILHJmFvHevh/4+5b8lj0liijf
HohVc3mD0xjpqURAQDvfVS6PPwnJUFYmYPGnZA+cLxulg78irklsseByWFCZ
S9ZWAt5LWOJ5yHzwiIm9CgGvU37r4HzV+7pt/TYCtuzzw/kycou+qhsxVfMa
jlc539pf8aoEpF1bi+PFcrjfc0SNAA+/ZjyfHa0zrhZSJ2DusxeVy+s3fMxo
QOw98B7r91dGQHCQBgFg3of1suSDiKvOdvT/MrvxeR59712TP4iDRVqx3plk
6KmW7SBAeOAM7p/i8/tWeWty868X+49P9j6/VHYSUODHj/Xjfu3S3mHEW7Qr
cT7RZLKrb2sREFbVg/3cATrlloM2Ae47dHF9rR54HSy1iwCl0mZcXx913F17
EL9VOYH9UmG6wKFruwmoC1uK54WAeemqpnsIWCl/BPvb/ad2igpTCMh9xcL+
VqTm5a8mxBYN53H/yaPx1uzVISDK8jiO9z5QC6nQJaD0mDZ+Hiec1uR6aS+q
9wurvbnc8+/0IbV9qB5LD2B/603Gid7RQ/nyZAyfP+tKKs066aP6sObBfmQp
9UmvjAEB6x9lYX3p7jtR04f40I1SrJ9Ze6ZuJe1H+ZKxBM+be/7Kua0wIkBz
wTvsT15VWqiFGRPg8GAG96eb68ZE9Q8QsGLQDc/j5wNDZucdJEDs2mcO1ute
qb5KxMaFNth/LtxdVnPZBMV/yBI/70ib+xIyfoiAv+3DwGXNR+KHzx4hQCs4
H+cPn8R9tY1HkV455OH8eeFvLNaPePztU1xvKW8/zKYcQ/FY3oT1zFk7oM/S
lAC5dXSc3+rJIrUiZgTwL6zI5zLP77zMF4iH6/Xw+WqztV5ohDkBhTqT+Pwu
sbzXbb8Fqi+DJOxnQ9hHh95ZEjArPzSPmx++zk9PXbIm4LhqMY7PWPs8yb02
BOjPy8F+9gxlV8/S4wSoHDuD+3lfrk9iN2JK7lF8P+ai98yzThDwRcAVP/95
Tnxb6XmSgIzMZuzv9b5vfLnbloCPn3rx/j+ytItaZEfAt8mF2J+p1yUZdyK+
V1KC/Vze1k6B9FME8LT+H0/Z5GX1bvYonxJtcb4l8RsxNE+jfrCJgv3ICk8m
8DkQsG/Xebw/Yb1Vf1oRTx9wyuXyPMNf5cmOSA/8Mv5//lOs5nvGiYCTUbew
no5JntdQO4Py/fdX7NfeTQ0UNDqjfH1r/b9/bbGQt3ch4Iy+Gj7/0d/JGVJy
JSBzcz0+j6281XzrF2JXqT68H+rCC+2fuKF8ldqP9TLPX0eSfQ7FS20p9pvJ
R0sSN18gIO9CHwXf7xYFkWp3AqRuPsF+jDfe8WW4BwGj9zxx/C7zpEVZeBIQ
bauK9WXMtdtY9iLSU8PL+PrOr0UWjSLOJqtwP3qve6i+3Av1v9oA7Ecs8kMZ
LG/UH/5sxX77+Zo6OOpDAFlvgZ/v6Qf9/bPuEgEP1vhgP6px/KLvA18C7P3v
LOTmxwa1zxMH/FD/iRPB+ZGSKlO42p8Ar8N/cD9bKXji3EfE2XRJ/HwrzPuq
fGEAAXseD0Xg9fS/HPIPJOB6uxO+//GH+vYrqQTc3teM9/t9VEVPLg31s4KN
2J9bzv5M9CEIePRPEp8HtzqqWOjSkZ4V/n9+qP/SRWQpg4Cqvm+4H1ftynz5
BnGndS7uR9tvv4vKZCK9vpmM9evuSvEDHkEofu924XlvA9V00W4WAfkfhXB9
pHyNqhcIRv1Pno33P6Jmvk5aCAEzQU9w//G/5luxIwz9/h4Z/P/MDctHfyI+
T/PE825EYY5McTgBIdQA/PwjfpeuuWcEAT5bQ/C8m/qsO1QlEvWHnkX/P897
v3g8Lwrd37UVWlyundlluSUG1YeTMu43TczO8CHEreWHsJ52CJ8nM9lofcYy
+HyzJ4X/x2kO0puPp/H8OLj5hpxMLNKP4x04/0eKd1i/R/wjQQP3lyl4EZka
R0B5oDHWh3/NzjXH4wno5+3B50sCVvN+iicgfyRRgNcr7qF6/OpVAp6O6i/l
7r9C6OnHKxMJGLrvt5zL6qvmpl4ijlO8xs/lXelx8jFJBDh/+f95nZ6S0kmT
ZAJs6v+8xP2r7Al7SQoBXaPrs3A+6p180oh4y6PrWN/sXk7NhFxH+2kbhuv7
7IloRYNUAnLqr+L89/yyyW7BDbQfk344P/y9q2MfIw7l+4aZOc/qKZFGwIRM
Ov7/iMjxWUo6AWbRlri/xK8JU/6L+NC159gPpGbK2D+6ifp9Yi32s1nbKuL9
MgjY8PsnPp8rqDzWoHmLgHhFRawfpYbDc1OIEzPlcT+o6WSqPMhE/X+gFPv7
xlPrHC5mEcB7Og336/bvD65uyybga1Ye7kc9l02aRhFbKN3B9TK4YOjv3dto
PR6uOJ9G2FRVtxwCtn2rwn5xat1qJ/lcAvgELuPzpX85hYmfEYsoX8DnwQLb
DVuy7qD47TTE+SBc28/jmIfy7Yox7rdrTPzUZe8S8C/+hxqXZbpXOPcjPiAw
qcBlBac7yTfyUX36zFPCejWxt/VEAQG/E9o0uLzrSg+vRCEBlRpSWJ/1BL23
dyOu2pqJ+5VJgpDLtXuoP3qux8+PzWWyrpsXofqaNsLPI5y1XvO13ycgcvQx
rjeP+gua7GIC0kOvDXDZ76iA26EHBHTcU8HnSYy+tBtCJQScCjFbwc2nCJed
7U2IS5XbZLmcSnfR2l+K/KbLInUuFyQlp9eVIX+rbYE/vx1/TIxajtZ32WgJ
l9NiFkfurED+5OcV7JeuhT/mnURc9Hw1fn8nhuXvm/8I1UP8EXw+FUKojThX
onz3H8HPC2gB307LVhFw+WYJPs/1vZTxphdx5JqLWL/dPW0OXSMJGOwZwfpk
59ykJVRDwO4GK3y+fOSkthy9loB37t74/NfI6kfyrsfIb+zoxOcJuqZ3lk8j
3rmxD+uF1qHTwffqUD/yccbnC6pGa/+4PkH9aq8Jnm9kIPzz+3rk36eu43xY
sf13u9kz5C/mavHzecFt9w2FG1B+HPPDfolX0ZVsRLzo/AvsJ2blZDWCGpH+
78rD8/8P6be5lCYCWMO+a7j8Ucw4obiZALsLAv9uc/VGqILY8hz5ndTvi7Gf
ELg4/QGxqOWq9Vyum69wLrUV9eeIC9txP/87MGD5goD9nxuwvhX/SrJc+RLV
I+8kPk/Jmzz6vAXxHQsSr/fWqOC+kDYCevT+Vf6vv7Vluu0ENC8Nxf0obtBv
6x/EZe1qAjgf3qtmPuxA+hbbJc9l5tuv4p6d6PryR424HPDqZoziKwJiTQId
uez90pp/CLFopKY/l52eNo7bdKF6qx1gc9m8Uqv3xRvkZ/rPBnHZpHTiaHg3
qt8VcIHL+vdzn+m9RfVk3qPH5T359nt4elD9O8nJcHl7jnhxOeKv1zTx/YnG
z4bdekfApcrl2B9M07pPRQ2g/EgzwZ9/9jE6OP8j0mvLRFEud7mVa/oOEmC6
bOlqLr8445mv+omArSHSWF+f2ctv+I5YXCt5PperTwwkZg+heTL8BJ6XSi2T
ltl/JuBY8QH8fl1HpEtY8Qjy910sXF9jtVoLFv4kQL6tD58/xjXEmb5ErKmv
hPNlx4uRjOQpAt48icHPd7pf7f/hOI3mQVdTrCdXem/qqswQ0P35Gz4PevLV
vL/uF9Jzqid+3r1kRpBm9RvNU2un8fOTYwvI9SNzqD7MfXA9JK24WEn/i+J5
URSfX+9Z07Lk4D90/2vk8fnmgOSm42I8dDjBtwnnC0uOuNOPOCriOp6/tii9
nb0zjw4FsVKbcP6paRj58NIh8geDF9efVnQizKdDyJ26z9x8FdH58lmQjw7n
K0q6uVxqsFezE/G8K02vuHzc5HrwjQV0uP7L5y2X/5lOvzrLT4fDvVuHuHzT
5oic+kI6TARemOGyvv0d77+IjdrvCXF/76vzgifPBOig5O29kcuRF2xFYhfR
If2a9h4uq/iUnT4hSAd+oRDcfzoCVt7ftJgOu3b24/MDX8Y53gnEratf4Hlw
bdjTI4+W0JF+v8d6WRUjnc4SosOjkht4PrS/6j92eCkdtLX+Z/7UTsraZXRo
/OmB/VTOra3Rg4j5ToVjP3XgTmhfgTAdKBfNsV8Yu/dByW85HdZ9/IvrfQd5
tXnpSjqoVj3A88iVZmPXDBE6jGg54XlYpj2z/NwqdL0bh7HePXnzb5GmKB16
v4xhf+H83sqKV4wOU6UN+H6XDN2/3Yz4mq4dzqdjk2cMTq2hQ6LhZ/z8LWme
xKef4nS4r/EJ+8HWzR13itai/Si2wvrFdzjC44IEHX79ccXf17y0b4fiOjqc
kTuPn/+cS52b+4z40NEtWC9fDbuF2Eui/fvQjN+XAO3elT1SKF7iF7Cf8LaP
f3NNmg57lqlgv5sbevCGmQwd1u7bj89P3xUucFwhS4f2+wz8/Fukq1K+FfGy
Q4V43rsip1yyfyMdwiLX4+f9Q16pOrVydFDx2oKfL0qkmC+kbqLDx/WncH8+
/Hhpi/ZmOgxZs7C/DPpaz5lBfNjbH/uv8uVUywdb6HDnHh8+j9lgN/pBWYEO
A5uvBXI5Kt/2wm1FOpx89Q7v5+NOMQ1HJTqUd7Gxf52Za52VVqZDRuI8/PxL
cUNIdR/izqYZPP+eMgZW8lY6sMT3Yj/XmFi4fNU2OqSFLML3q/5Z6nqUKh00
bN5gv3F22Rt7YzU62Nyd6sL+Zzt7s4A6HfyXm+P1tJ0wHKlDbF7/Au/PwqB5
xYQGHYx/6OD92JVXdnnPdjrQLwjg9w/c2z0ovxHnLXDGfi1zdsuC0h10EItY
eRLrifRAo5cmHb5LNWI9WGaYFLNtJx0SBg9gPdjnftR8BHHu3Emcv5evCkrc
0aLD1+An+H3c/Kra/jPa6P6zDPB57odBv+wNu+gQ6pGP+/VqIbVz/Yhn5urw
+w4H1L+ppu5G8T5qic+fCJuMGes9dHjnsQP7ta85K5kdFDpseroex8t0hrHM
RAfl04s1+H3UUMldnYK6dDBs7MLPz6r0J5OeIla7boT94Y9zeXbMvXQwEBnH
9bw53kFOZx/az7Mk9gOcDx33yvXoEJfTjJ9P/d6mt1vdgA6y7r54XlGx+sM7
jtje3RTPqw60B8/u7qfDzu7PuF8nZp+LcjGkw+SZf3h+e/58o+kmIzqYNZ/G
/rNT3o1ScZoOqQUh+H57WEXyhwLRfjW/ILns35j5/f0VOtR5u2O/Lb40sdCT
RoeN/Z3Yn34tWMHRJuhApbfieJQdibjIR6fDdrdnOH4hPxaYtSD2qgOcj5bx
1O0JDDooH+jGejXd5flrUxCqt2RrPG8mSDg9KmPRodT9Cz7/dap6d50eTIcF
Nf/Pvxp2VlTjELRfE1n4PIuPt91OJBTp95lmnH8dGQd0exF3CPTg86dbevWy
WWF0+KTriM9/Lw5RFlwIp4P1/NnF3P6nG1r2aUcEHVaXKItweYWC2jOeSKS/
ukmr8Hlpc15OA+Izi17heeXeeblwThQdhPoD8fVowmluNtF0uPXnLPbjh4vW
mGyIoYOMCxOfB0iZxm79jphvvAf7rdGfS5aXsFF9GY7j98eqrrImrnDoIErq
4PP+qJ08HQaxqB6Uj+D1Kwf+SHgTRwdC/Qn+/5bqT1auCXTIVL+K3y9x4+uW
+HOVDjXnduL3hZbsb3kXlUiHL4r62M/3fNGvsUhC+RFfgOvrTnj1TalkOtz1
oeJ+4qekxfyCWO14NfbzRq33HYtSUL+CK3Jc/rIie/O+VDqMPr2MOcQ86Vvn
DTo8danH5wuWMytbUtOQXpuq4fdFNiVF5p9JR9f3YOD6ndJeGKNyE/VbAR2c
n/W9NI9fiD98msHvdyVQZ4/WZtDB84QWrg9HaS/18Fvo+3uu4nipP/6+yjST
DsfeZuD85HM8My2Rherj3xTWqw7+/q5BxJ3jW7BeZty2Ls/PpoPguS6s/55G
HcmXbtMBdslivdQdPhgIOSj/FHfh8+v+rTrQlou+HzQfz8e0i+rzHfLooB9z
Ec8nh1flf1S8S4eby77geVDy4ab6n4h/VYRjPRqxTM+uyqdD0bd+PI9XzYqH
BhcgvaJ54fMDycqJ97qFSJ9Yyfh5Fo3aqPkXcdwZR1wf73VuxpTdQ/28MRvf
vw6f32evIjoIa2nh96t4Q7dc+3afDs/elGA/Wyf0xsD+AR38zin+/345J2S6
q4QO2ygCuJ/tF9PMPlSK6ueLO+acN8v+CZYh/2OoivuHYMqQeT3isy8f4vxy
OUnmE+V0aKa/wP2uSeoq/+4KOhw1Ooj1OiJTv+T+IzoMWlVjfTORn3KUr6KD
xOUqfD5aMNxSOYi4dXMhPo8XLshclU6i/TVfic8vPDwCzx2vRv3A+HS/EQ31
AzWzJ2I1dGCnxyZvOMCmqE0prmtHbL39/XbjPchPlvJ5R9Wi/et5uThYnU2Z
9OtpNnxMhzHfp3dFFdgUs93FGxbUIf1zfdB4VRr5Xf2VzIl6dL+/Q22uz8ZQ
di769vbuU9SvW+cdvD4WQ0lqqlU7+4wOgRu3ijI+xVBsDnt+eNdAh/i9Pkb/
XsZQ+qxe6rY008Fn4YBdeXYMZdAtet7tNjrIKz1uUzeJoUxwFlNP9KH78avx
mLcsmvLXLqhw8zsU76FDPTsnoiiCW//1/0BMjbaI0eyMosg2TewL60f50Rnr
FpYURTGd3y348CMd7tUbKETJRFFKLt5OEP5Gh612NRPszZGUy6Z6+Y+n6SA+
f8lloeXhFJYM+S5qBtXv9zRftZEwCmdMc7n1Lzr09STVqTWFUXIjFL3GZlE9
2tqrPWWGUbrrVmqt+0sHxWUdJYZToZRdGgNPfPgY4P9sr5leewiFR5Tau2U5
Ayok9mso+LIoqXwWQUOIlUZt+xVNWRTtH8pKmSsYMH1zX6iYCovi86IvQEqE
AbY3lA5mDQVRhsP2SIiJMcBDQ+t2mlkQpevfH2u+dQwQlWqxCFNkUnxGOnlr
EX/4e2FfHz+TsrL3bi51PQM+ud7bINzPoJiUn5idlWRA4onQIwvjGZQ6r8rE
cRkGCH/Q3bjqN51S+CWgq28zA5SDwtfnVxIUky5TWsoWBtT++qDdH0dQvtUr
braWZ8D+iE889a4ERe5Wz6VOBQaoC/dnc1YTlJSTu8SalRkg4n96hnmORtE6
KEKGbmVAyLZnmdd1aJTX2sNOBioMeCFy3Ut5FY2yYk1KSe029Hu3yIE13lRK
SPtvszJ1Bpy1D5I8/iuQIlfb/sdHgwHN4aPH/8UHUh4X3slU386Av36hd2kq
gZS/kTY/C3YwoGcqyEPmZAAlJUDt+jlNBiTlVlndHfOn7HRdrKewkwHnvRo3
fKT6U7z2V8RlaTGAd2SF5GWOH2XFjthdDtoMOEINd8oR8aMUbHT9KL2LAbri
VpLr2JcpB0T2RrxDLHRpNf9r/suUr7xr1a/vZsCbTYF6CV6+lJDxibfWexjg
uXSs8WnXJcrG942M1RQGSCw0oR3cdolS+/ymwivEB3U0N57096HYVfq1xwID
xhNjlm+4703JeThpekqHAYudeU5uI70oE/fOv1LWRff/+nMHT+ZFinbeZ4s5
xM+6bC/JmHpSmFn2bxr2MiAiq1vzXqE7pSWtx/rqPgaoML9fKFh6jiKabN7j
oMcAyZvttNpeJ8rJ+BcnVPUZsOWcIJlSYkXJjjZ69w9xosWvutVBRuRYaJ1d
iwED9kQzbuqc9ic1mXsGkvYzIKXhoMd6azZJXCk97WzIgIJpSUa2dRzZ6Ks6
qGHEgJndJ6/lRMWRKy/mOc03ZkBc1stXV9hx5PFzcp9fIDa4xKN2HXHmmbSz
qQdQfislR8YiHjkl/s31IAMeStrJsxDvOB7nttOEAQqZC974IKaZLx3hP8QA
p23OxY6IGw6HXOhA3NWZWH0U8Qpj3vH0wyh+c4zfuxHb6AV4XjjCALvCPudN
iG9Rpn7sOsqA/Db9BcsQa6h/nXp9jAFXipe2dcXEkVeUHXwzTRmw7kgHbwXi
+s19vzzNGJB++5VDMmLLdW1zQhYMIJouPjZHnC524MpbxMaGG2u2If66vP7f
bUsGZH7fPyGIOIC/nHefNQPubNw78zA6jnzCo85cboPqxeFlczjipb/vLniH
+M6vyrcnEKeNpgv4nWBA9pudWXMofo+7QpcW2jHAwW3vmo2Il7TPjwk8xYB9
HbdffY2MI01bApcb2zOgnrbvVT7iTzUeIp9OMyDWPP32NsSCd6zEJc6g+n7t
UCMTEUcey2xP/oI4bdne5u7wODLlxsF1D50Z0JHku5mNWDlOR+qoCwPke1Z9
mgmLI48GbpELOceA3/ybsotD48jEQ7+2TV5kQIys/IN3rDiyrZTzs9KLAXtb
E79TEQvKKJYFe6P61ggoWo/Yb/IkrL3EAP2sxdMWQXGkdWKdia4fAyq/pJaX
MeJIiQ/RrjE0Bvyp0KDupqH1+8hlKkaiev+pNO+0bxzZ9Y50nkJMCJZd77kU
RwobWilWRzFAK2LHETPExNqI+8diGDC67JjgPp840r56vMYvlgFr8qWvi3nF
kRsEK/ueJTJgOPnBkuQLKP8umt/kJDFAjXd9hQDiuJ5Rx+PJqH5kBAu8z8eR
Cwpkvo+moP37sm2NyTkUz2Mhv0XTGGC+M2BqxiWOzL5+bLVjFgPEu3vfajvF
ke6bjI9KZyO9Kzc4cNcxjtS6pxvRi3h+MyVgPeKWum085jkMWOL57BSPQxyZ
YLJFa0UuqkfZH5Iep+NIuy4pr+eIv+kJ3eu3jyN/fFv2WT+PAZobdoTVnooj
H3kvlJl/lwFV3++1qiJm/ftrQyJe/u7Iogy7OPJw6FS8fz4Dbtemu61EvGbl
SOuOAlRfravvM2zjyIGUwUWTiDPjs2Z+nIwj8+R69xYWovuJPvNgRQKH9Cns
CHS7x4DiB972NcVskqLV/HBzEQOmFjw2qDFjkwJ1j8c/Ira5ulj31RY22Xaw
QiH9PgOialrWq65ikymvixxPFKP+k/L27NhiNul4KvfGmgcMIH9knvYWYJPK
39LfdCJeVnE24tdCNjnjlbiSU8KAhMa1B1csYpO1f2MOmjxkwLvmxTv50PfD
Q0KCBUsZ8MNT+/o5ITZpuoJWU4+4NOr86rXCbHJ9yqXf9DIGMINC7MdXsMl7
BU4Xfpcz4OTjgWcfV7PJ16/2WQxXIr2cr7rJcSObTLPbxb5dhfRr6daSpM1s
0uWrWpMDyQDFl0FqrxXY5J8/MpTeaqQ3i5evtldlk7Ib5216/hj1X6eS4QIK
m7xwsXKqoIEBqnJ1ExVI7xYKb0+42MkAr4inZ/qi2WRAZmsO5RUDXvEOnzeP
ZZNjWmcrF79mwCK+yUfPEthkt2PKx4wuVF/6x68nX2eT+RW8ah1vGfDR9trS
qVw2aX6mtVV9gAET0YsuOtaxyaY55w88H9D/t1RdvPiUTQKHd7oZcZSYuLZf
I5uUr9RY7zjIgBG7azyeL9D9r0hxi//MgN57QdKCPWzyVpXzoqkRpHdtjiZ9
42xyjSnvutpR1M+SO9N9J9lk1Jdklagx1I80ZvoWT7NJX5FWC7kJVK8LvP3X
zbFJYxeNLPOfDLjMu/779wUccmIV796Hv1G81AxbTFZzyDN3ks0Zcyi+3qNT
geIcsgc0XA79YcB7r6g3WRIcst7VmT30lwFZFSfWf5LikIk1z9+J8TJh/yix
TGILh4RzyQG+AkzYWqt7zVOTQ+rLxvLvWMSE7AqN2o1aHPLAm7CYn4hlbRwN
OrQ5pJWe3y3PxUy4/ffzZVkKh/RcZ9XstpQJL7K8+8P1OGRGi6jEKREmLPBd
ox91hEPmMpZmSa5iwnNFhcVzRzlk4U5+lT7EZ9+pvXI05ZCPMn/utRFjgmNL
R7qSBYfsCOxwNRNnwvaEQano4xySX5lTYSjFhMKCtfo3nTjkko+hegLSTAh/
f62/4wyHXJFEtNYj3jreJsV3lkOu5/f4sFeWCTFg4WvpyiF39B1avEeOCZSX
1fO6L3BI5yghG1VFJqzfrSNo4Mshz+9bMDiGeOrljh0Glzmk1+zc+QIlJsgt
mju3z49DEk7DdMWtTPihwTbfHsAhk/Y05cqpMmG10Sxthsohm0ZCZsU1mWCi
sMZijsUhq1em1Xci7jq8fU1LMIcs0XzIidnJBHPrfp/kEA6ZTh+U59dmQmqD
hPi2MA55SVTXZnw3E9qMJCMhkkPK7vld8XQvEzQd56omORxy9ekVIfR9TChb
E5eZHsshl4ZsMd2tx4RPEnMXD8RxyF8vLYaL9NH1vpCfkuM5ZKtjsUSqIRO8
B6tvy1zjkP6R5wK9DjHh15cPyu0pHNK9iGm49TATLhQ0ddtd55BOr5NXfUVc
x8PzYBjxEenGu7ZHmbDrwLuZv6kcctMDuT4jMxRPq2zbpekcsr3n3R5pGyb8
MdwX+PYWh3w2b1qwBzHn+q0nBzM5ZJXc0tcJx5lwsHyDVxXiHPddF5acZMID
vstzSVkcksqXeGPajgkZZUwjndscUkHxKM9zJyZMe94u1LvDIZuPL866doYJ
M4ELtbMRu0XWGZ92ZoJrkbrQwjwOmT+y/erMWSZYvP7wogax6r21yrLnmGD/
prlVNh/dX39H+3fEeasP7/dF7LUi6nLpeSaUC2zb3oS45CLPk4PuTOg13uTm
VsAhtbYP2vheRPm57bduSiGHfOuUOm+vFxP4tf/6fkQccNUiW8ibCWcmI1QV
7qH1zTRM3PRhAlG3X6EYsU5FfmjLZZT/C/nKios45MC3M1uv+THB7cy44Thi
uoR0p70/E6RK2l0U73PIusBYqZkAJgiGGTJSEe8H34cyNCZ03pA09izmkF/c
t534jngtg96agTgs/StvKcGExiYbvg7EzbwnTA4y0P7UalNVHnDIc2qik2JM
lF8JmY+PI17q0Jo4gPhLzcGSYMSHnugMXmKh+Gf3lLxBPPZzNkw3mAmvlPTb
eEo4ZIxcsYpQCBNuDcjkyiFuC5YLuBmKrl9EjziP2Nxo8cqWCCYcTThjM4p4
2q+u9GokE949ekgsecghr90JPGkfxYSK3KrzmxF3LxnLmY5mQjz/RPZxxP67
cw7VxqD84Cv854VY4rz9zwg2qvdcty0RiE+0doBMLMpfv7XjJYj//ov8NIz4
8k/TqEbEqSoGEQ/jmFArxBHoRUw5xaNKj2fCztcFtiOI37PLXh9IYML3w5ax
fxETtZ6BYleZIGO6PUOolEPK/FCQHUC8N+Fn1FrEj2UHn+VdY0J9rq75ZsQO
pqnnLyUyoWagYE4NcULmgzD1JCZom93v3Y342VRz1jhiuY2UBn3EswYfa/OT
0X6mypImiJUSf/e5pjBh/vNtpBliu68rfm++zoRTLO0GG8QcbXmxT4h956b7
7BDXReioZaQyYcdgGb8j4qley0N2N5B+7RAEZ8Sbt7q7rktjwsPXTWEuiK1p
wcHdiJVZA59cEUe8TM24ms6EK72qpm6Iq2RKSNObTLhqdrON+/nYxZa3yzOY
8NqA7cj9vsyTj9PPEZcF8C/nXt9UdG5lxC2k5ybfOhwQB59ZqWKYyQSRdo17
3PsrL5U/wJ/FBKtVvZnc+x9epOv8GPHqlW+KuOtbb2PFpGWjepKJfsNd/+E8
97Tdt5lAyq2VMkBM/xP8aBax+xmboD2Ii01udD3MYcLm9+aLNBB/ulEy6ZWL
7j9uVZ484tXjLcKqd5gwwk47J4nYSHdQcRSx7/g8k5WIA2Ln9uflMeFRhukh
fsT9GgqEXD4TnuokVH9B+y0SrHv9A+JGvmqVbsT6XVZlaQVMOPRoeX0D4ly/
kHHxe6g+20rtshD3NN0Q6kKsGqR5Nhbx0nUPt8QXMeFcqX0yFbEnOXhqWTET
CuqOBJohviX8J7AZcYX8GSUK4lenRJJCH6D8CuwX4Oa7Nt/etvkPUfweWxyc
RvVx3sx6pBpxNlPqQS/itCwPwSulTPipEGX8GDGfYZruTBkTcphtfBGImyP/
FA0/YsKb7NfPViL+2yfSmlPJhOO/asp+oHpVUVH85lSF8rdLtr8NcXybtWw/
yYTDoRe7ohCfFCuN7axlgn7jW6s/SB9G0zy9qp6h/JzdKfUA6UvzHwWX8AbU
r9MsvzIR51oP2lo2ov1qFn5xDLGTiKXxRBPK99aT30eQXvUE75aRa0XXs39w
Rxzxs/MCLyI7mZB/0+D6fqSHWU01T6xfMeH6Vy9/QcSMzf4Vm14zIUnzb2AT
0tM9A9+zarpQvI7dmzBC/MCsPfDnWyboufbzANLfm7tSFU4MMKFflP5vHtJv
WqKFtPwHJqgbikWWIL0/MSUsNo1YtsdAzwXx6kIGL3uQCRpyqpTWXA4ZJXv2
Td1n1N90SSI6B+mLoHqw4igTjHes0PqC+otpV8PA799IL4ZJST7Ur6Rv3RR/
MseEa3Kuk2lpHHLkgv/RqD9MSEnbLLwbcchCpVqpf0zY0tQgcPEGh6zYHpOu
xxsEJWu+fO5E/VAm3twuWiAIlCJcX1xKQvV15EOvzKogeBFbTSqifly57tGq
YcSNF2Yr76F+HfYl7uADUfR9Izfe7Yg3EPqVBquDQKrb22YXm0NaFOakuK0N
ArWID1shGtXvUnebEukgGLodvGJDOIeMbJrrMlQOAh9DlYgTdFR/D9WCF2wN
gkv7hos7CFQft1w0ahDb6vjoGCPmD+xia24LAtHDSnu20zhoXi422qQeBM/O
XmHxXUH9nu36iE8rCPwc6zMI5G+OWnTfIPWCIMOhb/cf5IcK9y438dcPgt2r
qvVtES9V2T+33SAIbvh1lFafR/5GoMQyf38QnBMYu0ic45D7ytnLrxsHwXm9
yqFZFw6psc6Q4XckCFQV09a1OKL9+vDQSeNEEDw36l773RrF723MCM/JIGj6
aTe5BbFC+1mfZsRi+5r/OlqhfHm8lnXaLghErAXPvUX+zyGDmsk+HQR2a6gH
HiF/eO+0wcfvZ4Pgs3pVrpkJWv/HV6eyfILgpXJxZz+g/e4p+OJxKQhC7/gI
z0d8oiPEY7cviofQAReuP3Wv0yI6LqN4NBcdP7WbQ169lZrGGxgEE/Hfrdt2
csiPDk7vTjKCoLZLeX2IKocMHPx5XCwmCOyX5ZzdLYvW81fRphNxp0i8/hEZ
Dlkk6mAVy0b3w/A2cJDmkJ8N2syWxaLfs3lfGiyJ7ic332RhQhAs/canXLeW
Q8pfOAPTyUHwZY//6HIRDtk10yX7OjsI4n5YN/6ezyEvLheWib8dBEJ5KqYT
vCj+8gZSx3KCYElSxoeheSjeNg8kWnODQCL4wVzrPzZZUMle9fRuEKTJDKnF
/WaTLLrRwof3g8BGUUp5eIJNqi959DWBDAJ97UV1L9+zyarYFQpHqoNgWb9a
Zt47Nrl/7VnXxTVBoGz7xInVxyZPyIsOU2uDQLMvJHI7mldY+92/Oz8JgnT6
hF/oazS/MTeMaTUFgfp0JmW2hU36/Yn42fcqCJhKkzZTZWySL+iDRuLrIDCW
jIm+U4rmmSVaPse60Pfv/nK1fcgmb64dmnr6JgiSpsukHqN5tmmnzkxhD9pv
5QmmXwGblPD5OUsfQPmecNY45xabJEdO8GwaCYKYW2TGWCSbnCTMxccRl1iU
z1pEoHlr1SH1itEg2Hi3wK4yjE0maIPzofEgiK2us6IHs0m3EJkXlyaDgEcg
n/cnjU2ulhm68WwW1d8SX0v/i2zS08yd4rKQBVu/nkvuN2eTtz87W6kLsECN
4CmZj+brXv9TF/8ijmlPN5M9huJ182g2R5AFvI0N0jaH0Lw7qr6sQogF6+5t
0skzQOsJ+dW3WIQFXXu3CT3bwSY3PKJfuSvFgl/HnR4UoXn824U3S12kWaB+
WLQmaSWbLJJVuSEnw4LO5P1M6nI0T4b3kjdkWcDOeriFguZrG2vNeRw5FnwR
pj1K4GOTnJnvDB9FFrCKh92vTcSQVnn7RNSUWPA3+NA5g7EYUsou+dYo4rLB
fVET32PI/Kf7nzhvZYHA65ULd32JIRsSMvhtVFkQH31wR9K7GJJHwyqUosmC
4W8qMr5NMeTTzwVr5hDf5dFf0/sshoxK4c8t3cmChrTyD7vqY0gJvuLGbdro
+3W7i4arY8gd7UuXbNjDgvPv84UWlMSQ5z3qogT2ofXtTDXlvxFDamxcK/kE
ccyU0CR/Sgw51+VRQOix4CPTwpYnMYYMBckXs/osyBT6yN/DiSFvLfNb/t2Q
BW5zvf1KrBjy7d2tcS8PsWBDnDBniWsMaXJu89/rh1mQZ8y3Tv5MDFmtKO3s
coQFrweDK3eeRt+/s2LX/GNovbXvLinbxJDncn5+UDdnwbd5vqSpUQz53nnk
4DwLFoxKBsyM68WQRzcPPWxB3KpgFuuvE0Nuz+4Kd7JigdHsb/5jmjHkv1sV
ateOs0BS76TwyIYY0tOh+LrDCRaUNq952y4ZQ36Uvbtw20kWEBrSctfFY8hn
N1PfNtiyYHDtv82dy2JILfuregl2LPB67p2yWzCGzJOOKbA/xQKVDxHCDL4Y
kp1GMH7bs6Bv7dN1iuPRJJ+d3/enp1lgJ9GZWfkxmvSRvGgR58ACg8dLJIdf
R5PWqQ4KSk4sGPd/57moMpqUTTFoP3mWBWMSzx+JEdFkgg3sVnBhwYHlV0pp
7tGkwNqd2dOIo4ZtxWRso0m/7m3L61xZcD3z6Nr3B6LJ4UR5/xg3FuyofzyZ
tDOaPGklO3j8HAtmt5xyUd0YTb5YLXFoy3n0eXlltO+yaPLBVSHZ2gssyJF2
7lr/LorcbMEfGeXOgg+sROWBx1Fkkui/KWsPFsg2XgxdkBVFLnk1bbfJkwVO
FrQ1w8wo8kr8WOMPxMUaTOkq2yhyzPSLevVFFtyMWEjV0Ygi7UUGUiO8UPwn
y4ZK5keRHe3dAlbeLJAx6Vpl/yySNIht99zowwL/vpCIpiuRZPnR5p5xxBrW
QxlKkpGk4oon+lWXWLCluPayW1IEmfqysjDMlwXO2xrf/3seTgqzS8QtLrNg
Wru009AujKQfLmDK+qH9/8dr3N7GIieX3R4ZRfzj0ifhfc9VSafWNMtH/ixo
Xnd/IIEaR3kTlVgbEoDiM+Ftsi0rjnLAhKNoFoj2t8k2xCgzjlIlFJ4gfYUF
qa/0tcMy4igqLQyeEcTF/LVrn6XHUW5GBLiUU1kg+vJYlUBaHMU1zHbFMJ0F
mis3/JBLjKOcdymZyGWwwOOvUTf7ahzF00io/SyTBQ53j/P/i4+j+AlWxA4F
seAI23Hxe04cJSRMdNWHEJTPQm+HKyLiKLfCWsS6o1iw9+2AVwctjtITpr3u
WRILjhfIHrR2iaMcDBfbfKuIBcdqjz6O04mjQHekke19VK93FHeegTiK6ha+
c+LFqN6KP6VqUeIoq5+O3Yt5wILPfc+VP+6Ko3zkbdQOLEWcumW1ria6H7+A
Q+ZVqD5eWdTJbY2j3D7b7yPQyAKXjOmFjHVxFL79d5649aP12FNHxediKfGj
NU0KIsGgN9ZFeJXFUi5V2J0N2RsMZ/8NUe5TYylqnvQLb32C4cyNdZb2+2Ip
dR+pf/bkBMNVp9pwVaFYSpb/AlnoCgaPOZGxph4Oxf6P0L0di0Pghf+NL0fy
OBT3jNRXzVoh0N92aecZBodydMFipufZEDA7WdhUacuhLD06m7g0JQROX9Ds
Ut3DobRtLaQ1IS4+5VxB7uZQEoSczoRcD4GTyw8NHEAs2fBSnfdGCGzmefb3
zC4ORQVyWn+mo8/vyrxL10LXV7Zc0JsdAm+FffRkd3Ao8YIl7nfuh4DGU77D
x1U4FInHHgb7m0JgREOiLEOWQ1m90UBubXMIdCi4rt2BeFWwxIIRxLfPmz1v
lEH3Z/y0NvZ5CNh9qzH+Ic2h8LRL7Hn38r91ODAXzij3UJhk//TRcZOyGx0O
//hfhzDJTrJfxySntORph4Myz85nW8Qm2a9K+cxQ/gzoXy+zE0FA/vJjJ+57
Pu9wcFxV/+WD6CT7BV3Fc9+/6HBYY5ZtqAfkTxY6KWH9psPha33qjjXCk+wr
lEr4L33qcFDsblq5Q2CSfUmL57slnzscfk237I0G8gufyZ0t/9LhcKnpzZF/
/JPss1ad7JL91uFQ0Fas4QbkxxjJs2X+7HCYYcXYdYN3kn3ElC9PrH91OPyP
rLpeC+SHfjt5mO83MDyrJYuVgXy/XSWNW/50OGyddG1pPs8ke28Zr4T2vx0O
fVatpmJAvkedvH3Uvw6HqvcNgnu5J9m7PPgiq/u/w2HfjPvmKUC+o9OpP/+B
/KN5u5ZxA/kApm1tdQ==
                 "]]}, "Charting`Private`Tag$154538#2"], 
              
              Annotation[{
                Directive[
                 Opacity[1.], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0.560181, 0.691569, 0.194885]], 
                Line[CompressedData["
1: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
hMUsQDY1ezQ1i/x2bOasEPL/AJgIM1c=
                 "]]}, 
               "Charting`Private`Tag$154538#3"]}}, {}}, {
            GraphicsComplex[CompressedData["
1:eJxd2H1sleUZx/GuigisUEG7WhyDYoBgNJpRXVjCTjgkQ/9YCm6YvVBRxh9Q
HC5zc2WLGxpLFpY4XNFEE2e3RIcvxeESpx5jSQjYThzLllUSZhYoQ4l7sawE
X1Y2z/18rifc/AH55nflnC/3cz/Xdd9n3u1bVm9obGhoWPn/vz7+98T4kRMd
+++tDJx59ui5c/MHv7jgbFf1SMm717S82fnPkqdtX7Kq64L7gu94YfVwd2vJ
fzh5Z7Xn6pKva32g1ru85J+vfLaj75aSx7//+4H+zSXfsvudhXu2lfzikcn9
tYdKnj11Qdvw0yXzv2zu7q82nZgX/pg/5o/5Y/6YP+aP+WP+mD/mj/mfffDj
D/5M+GP+mD/mj/lj/pg/5o/5Y/6YP+Z/4MSyJzu7Zoc/5o/5Y/6YP+aP+WP+
mD/mj/lj/n2f6+jvXvSp8Mf8MX/MH/PH/DF/zB/zx/wxf8z/9h1XPdo7NjP8
MX/MH/PH/DF/zB/zx/wxf8wf819Xqy6u9jSFP+aP+WP+mD/mj/lj/pg/5o/5
Y/4f3XbtnJ6mSeGP+WP+mD/mj/lj/pg/5o/5Y/6Y/7Uzll7ZVX3/Vf6YP+aP
+WP+mD/mj/lj/pg/5o/5H/7tgta+kb+FP+aP+WP+mD/mj/lj/pg/5o/5Y/6D
ib/AH/PH/DF/zB/zx/wxf8wf88f8Mf9F6XmEP+aP+WP+mD/mj/lj/pg/5o/5
45i/6X2oxPwtOOZvwTF/C475W3DM34Jj/hYc87fgmL8Fx/wtOOZvwTF/C+b/
jdSPwh/zx/wxf8wf88f8MX/MH/PH/HH0/zQPwh9H/y84+n/B0f8Ljv5fcPT/
gqP/Fxz9v+Do/wVH/y84+n/B/B9M8zj8MX/MH/PH/DF/zB/zx/wxf8wf89+f
zkPhj/lj/pg/5o/5Y/6YP+aP+WP+mP+ZdB4Nf8wf88f8MX/MH/PH/DF/zB/z
x/wvTfeB8Mf8MX/MH/PH/DF/zB/zx/wxf5zdHyvZ/bGS3R8r2f2xkt0fK9n9
sZLdHyvZ/bGS3R8r2f2xkt0fK9n9sdIyfeMva284H7dn5+n2Qflr9Xk3N3Is
v7Xezz4dOZZfXZ83l0eO5R/W+/llkWP5UP37miPH8mvqnzclciwfrtc3RI7l
r9f533EewfKG+p/DNTmW70/1MU+x/ED6vtgvWL44+UaO5QfT/zdyLH8/rVfk
WH5VWu/IsXxtel6R4+z5V7LnH/ltab9Ejk+999Daav99sZ/Ov/+0D8rtJzmW
209yLLef5FhuP8mx3H6SY7n9JMdy+0mO5faTHMvtJzmW20/R/wuW209xvy9Y
bj/Jsdx+kmO5/STHcvtJjuX2kxxnz7+SPf/I7Sc5tv/8Hjaxbd6KnqF7Kxfv
e/fz1Z758X77vUn+rVMnf9fZNS9yv+fIn1l4oLvWOydyv5fIt26tbRjpbIvc
7xHylYf23jrW1jJ4fn+dGXlL3eeSyN2n5Qfr3zctcvdV+fr65zVG7j4on6jX
j0f/ct+Sv1nnw5G7z8ivrH/eO9G/3BfkX6v7/jdy53H5zvp6TI7n47wrH6+v
94zInSdj/evPc1bkzmvyt371wrHRjtbInYfkzav2vT3UfUXkzhvy9h9tuHuk
s+xf5rn8pa9s+mCou72y9Y0puz4xWO6f3uvObJrYU/7+Krd/sP2C7Q9sP2DP
H3ve2PPFnif2/LDnFX7F88GeR3x/sf7YemPri60ntn7Y+QJ/++5ZF+/pbI//
z8jj0++vdcwN/mHfrAv7Oq4IvunklImBc+V6tS5tODs0NCv40OX/OD60cEbw
xlePjJx7+aLgqcM/fbj78Y9ife5f/PrEwM6TwS33NK4fW/rnWJ8vffnkc51/
Hw/eceH2b451XRD+/+p65M7a8LTgp46uWVadXa7X0Z+sW7FoVUvw9Bs23dS0
vS24MvqdzrHanOAXX1v2dHdPuV43/6J6TVdfuV7mI568ZN+7o70lm4/4jrW1
jWPdJZuP+NdNWw6d6y/X13zE31u34WDb5tZg8xGveP7r+zquvzTYfMQzL1r9
cmdDyeYj3vebn20a6ZscbD7ilwY+qLWtnojnYz7i46efvLFp/FSw+Yif/8uu
R7rfHo7nZz7ix7b07Ohf8p9g8xF/dubhP7b1Ngabj/jhzcf/Ovre1GDzEd+z
/sO7RgYuCTYf8XPNk35QGy3ZfMTHXpm+rb+t3C/mY7xf3a3bezvL/WM+4vmf
3Hmgo1ruJ/MRv3Js142Luubn+20wy4OL/TmYfX70P/sT+zzs87D3H9vP2H7G
vh/n369/4Hz/L0/vW3BLWr+o935g9Tiv159w/j41p/c9eDQ9z6j3vmH1OK/X
/3D+fr6V+k3w3rS/ot77i9XjvF5/xfn7/kzqd8E/Tvs96vUDrB7n9fo3zvvH
6dRvgx9N71/U6y9YPc7rzQec96MHUr8PviH1g6jXr7B6nNebPzjvb2vSvAl+
IvWnqNf/sHqc15tvOO+X16d5F3w69cuo10+x+ljfrN78xHn//W7yCf5T8ol6
/Rmrx3m9+Yzzft6Y1jt4b1rvqNfvsfp4H7J68x/n82FD2k9lf037KerND6w+
+mNW73yB83kzlN6X4Ob0vkS9eRTvY1Ef/Sard37B+fxqSf0geHnqB1FvvsV+
KOqjn2b1zkc4n4crU78Lviv1u6g3L7F6nNc7f+F8vm5N/Tz4idTPo978xerj
/cvqne9wPq+LeRVczKuoN8+z+Rac1zs/ZvMxPn9LmrfBk9K8jXrnA6we5/XO
p9l8D87P++5H8vz+5L4U72dxX8LuS+efN8p54r6E3Zew+xJ2X8LuS9h9KfyK
+xJ2X4rvL+5L2H0p+ltxX8LuS7E/ivvS/wAYRdth
             "], {{{
                EdgeForm[], 
                Directive[
                 AbsoluteThickness[1.6], 
                 GrayLevel[0.09], 
                 Opacity[0.06]], 
                GraphicsGroup[{
                  Polygon[CompressedData["
1:eJxNmAf8l9MXx+95SlP92iUVTS2l4dfUXv/SUCmRSsiIUISIElmRvbI32REK
ySrKlh0qKysr/kk4787n+3p+r1enc557z73nc+/z3M/9/L4NJ58wclqWUvrT
/yvl/hc3niu7VUnRVtqtqvwubnUspdpuu3pcpHzyqqm/jFt1+bJutdzKu1Vw
qy1f0a2G+su5NXfb3a2eW021MeY3Yanr1lhzMUcDYaLmHvLVNUdl4aqvNZC3
p/qp2VCeOnV9Hbu51fF4q+o0c2uk/lrCVKS5+rl1cuvstpfyqdnXrVh9rYWJ
mnvLU3NfrbOFWyutgbw26qdmW3nW2kFYqNNRnvH1HO/ubk08bql1NtC89fRc
rGf6e2ku5ugqTNTsJt9WuFsKVxetgbwGXqe+2z4eb3Nr79bDrbfmY0195KnZ
UzkdtEetNNefWgt9/dVHnaluE9wmsk9eZw+37h5vV53Bbgdo3xk3UGsA+xDl
UHN/edY6XJh4JyPkGT9U/WAfqfkGuA1TG2NGqY06h2o89XcIyxi3sYqpf5A8
9cfJU+cQzQuWn9w2uG3UWg9Q/Yny1ByvXOo18j1o6DZIWLpozU28rbHbaI8P
L4Flimof7HaUPPVPcJus3COFlbyj1U/NY+RZazOfu6nbJI/NYuw0t2PVD/Yj
VJO5/hUG8k5UHfpLWYyb5XayMFHzFHlqnqRccM3QGsibqX5qnirPN3KGsLCm
M+Wp2dxr7eV2nMfTNR9zzVY/dc6Sp/9seWrOFT5wnSNP/Xny1G/pc7dwO83j
XSzWNN/tfK0PXBfIg+tCeepfJE/9i+Wpf73bArdL3G6Qv1Q2V1gWyoOltddt
5Xaux2Ut6l/hdmUJLFfJg+VqebBcIw+Wa+XBcp38Ahm45gjLHOFYJExgqeh1
b3Z/v1t5i/o831ICy63yYLlNHiy3y4PlDnmw3CkPlrvk2Zu75dmbe+TBUsmi
/lK3Nh7v7XaZx4tLYHlAHiwPyoPlIXmwPCwPlkfkwfKoPFgekwfLEnmwtPea
7dzu9Xgf923dbtSe8U3xPT2pfQLX08IEluXCQf1n5Kn/ksY85bZMueQ9q35w
PScPriKLPXjB7UXtB+NXqB+877q94rbKraPnd3B73OOXVQdcb5aY41VhouZr
8s9pjqeFa7XWQN4a9VOz2Ofe1+15j9/SfKzpbXlqVrWo9YYwLdNc76ifOu+p
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
                   
                   "]], 
                  Polygon[CompressedData["
1:eJwtlHlMz3EYxz/PR0hCQqolRaWRFM3M8j+bv4z/8bfjT+U+yjEzzMyMZmZG
M3OGuXPN1ZyjmHO55mq5SfN6vH9/vPZ+P8/neD6f53vkz5w7ZU4MIUyGJOhH
kA71+N4WwkqohzRoJJfNWBY0BOVWwT5IhyZytege01qf04Aeg0xIJT6BHvc4
KPcDvkM1cTf0BlyHSuJcdA0cgAx4Ra4RvQA5UEDchn6G2X5+dDFshQAzkKVo
nWnMa3Sif6EWn4wuh50mv5HcMnSH6Sw+5x36NrFXRJfANpP3ml3pRVLU2hRy
o/Cl0BJ05ktwEcqCzrwa9kN/05wadLf3xtTzVNb2hLqgXDF+WFRvfc0K2GWq
5XOuotdMvfIaZ9DTid5ko7fgNuQlevoSfQHTgnr0CT5CFWEx+h4+mPwscm/Q
1wlfhLb6czD56f6OcLY+MJp4L/ET9KnXh6nEFYyNgTZ8JblynxvlW8m1oM2J
uUPQB/DQ5CeSe44+S9TyPb/BV6ghHo7+gt9Qksh1oH9gQ1CuL7XS4GjQGdvh
i2mt37k7Y8lQRryduAs+RvlSf4/wFuV9zxR8j6i7+pqR+JKou4wnHoDPgApT
zUz8QDgflKuCdX4H4iw4gj8MvYJy1fj1/k3gC+EK/rLJ/4Rz+LOmtT5nIX4z
dOAnwSH8Qfv/aEM7LMJsgc6gZ/4Y/8g013Mn8adM74p/k/P9OzDVKocF+E3e
Y/wEGMpdCmAcuZvEg/G5UX6s9xU/IqoXzeTuo/dMa/2MRYwVRo35HnfhTuJZ
+zuaw9igqL28Z01ex3QWP8M8/FrT3bxn+czNi/o3+T/oH5drjp8=
                   
                   "]]}]}, {}, {}, {}, {}}}], {}}}, {
          DisplayFunction -> Identity, 
           ImagePadding -> {{80., 15.000000000000227`}, {30., 
            26.000000000000057`}}, DisplayFunction -> Identity, 
           Ticks -> {Automatic, Automatic}, AxesOrigin -> {500., 0.}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, DisplayFunction -> Identity, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, 
           ImagePadding -> {{80, 15}, {30, 10}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {500., 0.}, 
           DisplayFunction :> Identity, Epilog -> Text[
             Style["d)", {
               GrayLevel[0], 16}], 
             Offset[{5, -5}, 
              Scaled[{0, 1}]], {-1, 0}], 
           Frame -> {{True, False}, {True, False}}, 
           FrameLabel -> {{None, None}, {"Time (d)", None}}, FrameStyle -> 
           Directive[
             GrayLevel[0], 12], 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           FrameTicksStyle -> Directive[
             GrayLevel[0], 10], GridLines -> {None, None}, GridLinesStyle -> 
           Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 15}, {30, 10}}, 
           ImageSize -> Full, LabelStyle -> 
           Directive[
            FontColor -> GrayLevel[0], FontFamily -> "Helvetica", 12], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, 
           PlotRange -> {{500, 800}, {-0.021, 0.022}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {Automatic, Automatic}}, 
           Ticks -> {Automatic, Automatic}}], {1316.5, -883.4999999999999}, 
         ImageScaled[{0.5, 0.5}], {931, 573}]}}, {}}, ImageSize -> Full, {
     PlotRangePadding -> {6, 5}}, ImageSize -> Full], 
    Placed[
     Unevaluated[
      LineLegend[{
        RGBColor[0.560181, 0.691569, 0.194885], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        RGBColor[0.368417, 0.506779, 0.709798]}, {"0.1", "0.5", "1.0"}, 
       LegendLabel -> "Fraction of waste N \n available to host", 
       LabelStyle -> {14}]], {1.2, 1}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.843083302877222*^9, {3.8430833468308907`*^9, 3.843083447839357*^9}, 
   3.844511026473814*^9, 3.845643404554179*^9, 3.845645628309167*^9, 
   3.845645663181283*^9, 3.854027131683515*^9},
 CellLabel->
  "Out[948]=",ExpressionUUID->"4c78d88a-62b5-491d-a205-7934926f8a75"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{946, 743},
WindowMargins->{{217, Automatic}, {Automatic, 26}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"13.0 for Mac OS X x86 (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"94cc29df-bc88-4525-bfb1-3caf9f93ffd4"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1066, 19, 127, "Text",ExpressionUUID->"6c32be59-30d3-4a59-be01-4b2f9822d692"],
Cell[CellGroupData[{
Cell[1649, 43, 437, 6, 67, "Section",ExpressionUUID->"2764d1fa-bce8-464b-a525-a75c0552fb59"],
Cell[2089, 51, 17857, 449, 1594, "Input",ExpressionUUID->"6171eb7e-af10-4d0b-b81d-74296c8745b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19983, 505, 346, 7, 105, "Section",ExpressionUUID->"07cb2725-2f59-4803-82ef-475a240717da"],
Cell[CellGroupData[{
Cell[20354, 516, 282, 4, 54, "Subsection",ExpressionUUID->"819e8f45-687e-4c2d-9647-50240e06fa7f"],
Cell[CellGroupData[{
Cell[20661, 524, 337, 5, 45, "Subsubsection",ExpressionUUID->"0ff9fa4c-0698-4e41-9c2d-9b4494fbdbe6"],
Cell[21001, 531, 1131, 21, 73, "Input",ExpressionUUID->"1fa86d39-1d50-4434-8d0d-2f1f3a4461c3"],
Cell[22135, 554, 29247, 658, 2366, "Input",ExpressionUUID->"c2f3158f-62d9-49f0-a8a4-3b35ce92c83f"],
Cell[CellGroupData[{
Cell[51407, 1216, 780, 19, 30, "Input",ExpressionUUID->"d33c1776-b4f5-4c6e-abf3-50ce664208d2"],
Cell[52190, 1237, 241, 5, 34, "Output",ExpressionUUID->"ca8e961d-af60-44cd-93aa-99d372bb7959"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[52480, 1248, 170, 3, 37, "Subsubsection",ExpressionUUID->"8a2bd38b-8fe2-4633-bd56-fa87b0d8a2ba"],
Cell[52653, 1253, 1129, 21, 73, "Input",ExpressionUUID->"0340add1-053f-4abb-b9b2-71e0464697e9"],
Cell[53785, 1276, 29029, 649, 2471, "Input",ExpressionUUID->"494281f2-c0bd-41bc-b8c6-8acc1e54142f"],
Cell[82817, 1927, 693, 14, 52, "Input",ExpressionUUID->"f0e797d5-583f-4eb4-9a6e-42f7890553e4"],
Cell[83513, 1943, 713, 17, 52, "Input",ExpressionUUID->"a74eb60a-ca06-41be-9357-91090a7f15fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84263, 1965, 194, 3, 37, "Subsubsection",ExpressionUUID->"ba8c7a5b-ea99-4a20-ae9c-97018a226f45"],
Cell[84460, 1970, 13778, 355, 1245, "Input",ExpressionUUID->"7f99454f-9a65-4a03-b97c-e48951f6bab4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[98287, 2331, 164, 3, 54, "Subsection",ExpressionUUID->"baa768b3-d7f2-458f-b071-3a19f74701c7"],
Cell[98454, 2336, 26427, 665, 1417, "Input",ExpressionUUID->"c0f9f592-787c-4db0-99a8-54b87ec32912"],
Cell[CellGroupData[{
Cell[124906, 3005, 7206, 165, 377, "Input",ExpressionUUID->"b97f52cc-2deb-4ed7-ac9d-1116817bb29d"],
Cell[132115, 3172, 51592, 1082, 572, "Output",ExpressionUUID->"05e40cf0-8b1c-4bef-897c-53eb0042c254"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[183768, 4261, 246, 4, 53, "Section",ExpressionUUID->"1e36d3d1-d745-482b-86fd-c359e6dfb1d0"],
Cell[CellGroupData[{
Cell[184039, 4269, 231, 4, 54, "Subsection",ExpressionUUID->"cca91fce-096f-4e6b-91c1-82146bdb4223"],
Cell[CellGroupData[{
Cell[184295, 4277, 293, 4, 45, "Subsubsection",ExpressionUUID->"87c06244-1b30-4cb2-9bb5-0eca90b7b647"],
Cell[184591, 4283, 1090, 21, 73, "Input",ExpressionUUID->"e8d92b18-1915-46ba-a010-4bcd8f60079c"],
Cell[185684, 4306, 31181, 691, 2431, "Input",ExpressionUUID->"f2b28e77-5488-461e-add4-17d235466052"],
Cell[CellGroupData[{
Cell[216890, 5001, 2350, 61, 115, "Input",ExpressionUUID->"ee57551a-d511-4f8b-82fa-bf6e1137d4e9"],
Cell[219243, 5064, 822, 16, 56, "Output",ExpressionUUID->"4ddbb397-861f-47ee-a654-58b9a0018a06"],
Cell[220068, 5082, 824, 16, 56, "Output",ExpressionUUID->"d7bc8f7c-9a97-41d7-b687-5c6380376af7"],
Cell[220895, 5100, 389, 8, 34, "Output",ExpressionUUID->"bcd5de48-092b-472b-bd2c-d77a4e79513a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221321, 5113, 3409, 86, 325, "Input",ExpressionUUID->"c7d30d6d-9861-471f-89ff-9c6def78a0c6"],
Cell[224733, 5201, 820, 22, 34, "Output",ExpressionUUID->"84cab9a4-f2ca-4a2f-8c45-b9427da881c9"],
Cell[225556, 5225, 820, 22, 34, "Output",ExpressionUUID->"cc49729c-ec10-41b3-94c0-2118f5c80def"]
}, Open  ]],
Cell[226391, 5250, 1723, 35, 127, "Text",ExpressionUUID->"27564d5a-1081-405a-9142-84656d82f51e"],
Cell[228117, 5287, 579, 14, 35, "Text",ExpressionUUID->"f1a1eb4a-ccac-4c08-bb8e-5ea9dbcf5dd7"],
Cell[228699, 5303, 1201, 22, 73, "Input",ExpressionUUID->"aedab591-395a-42af-877b-0988f0f3b1b1"],
Cell[229903, 5327, 27837, 643, 2347, "Input",ExpressionUUID->"ac2dd14d-0691-48b8-81c9-e1a65fc69009"],
Cell[CellGroupData[{
Cell[257765, 5974, 951, 21, 30, "Input",ExpressionUUID->"1c582f71-de51-4288-b583-b50b3eb49acb"],
Cell[258719, 5997, 217, 5, 34, "Output",ExpressionUUID->"e313334e-852b-47dc-8bf0-ea9c26a5e17d"]
}, Open  ]],
Cell[258951, 6005, 411, 12, 35, "Text",ExpressionUUID->"813862d6-d7fe-4ac0-bf6c-84b9a8e5fa8b"],
Cell[259365, 6019, 1155, 22, 73, "Input",ExpressionUUID->"04a677ee-8ccd-45e4-a57c-7c5d5fa551ce"],
Cell[260523, 6043, 27259, 629, 2284, "Input",ExpressionUUID->"018a8c4e-26cc-44f1-a1f3-bb8dfdaeac9b"],
Cell[CellGroupData[{
Cell[287807, 6676, 977, 22, 30, "Input",ExpressionUUID->"27d80e75-d787-4033-a2e7-d85ae2e49d63"],
Cell[288787, 6700, 244, 5, 34, "Output",ExpressionUUID->"00884648-64d8-44e7-b983-c4b736e5f9c8"]
}, Open  ]],
Cell[289046, 6708, 405, 12, 35, "Text",ExpressionUUID->"2845ad29-9f80-4eb7-85b2-1ac957c0a722"],
Cell[289454, 6722, 1155, 22, 73, "Input",ExpressionUUID->"068eecc1-53ac-4633-800f-d3c56a05ff72"],
Cell[290612, 6746, 27172, 628, 2263, "Input",ExpressionUUID->"4a98a527-9a7e-4441-a63b-e8dc08ea9245"],
Cell[CellGroupData[{
Cell[317809, 7378, 951, 21, 30, "Input",ExpressionUUID->"985da0f0-b645-47fc-9243-38a37aee5d4b"],
Cell[318763, 7401, 218, 5, 34, "Output",ExpressionUUID->"a072abf5-3fde-4dfc-851c-fe82e2ff07a3"]
}, Open  ]],
Cell[318996, 7409, 590, 19, 35, "Text",ExpressionUUID->"777c07b8-0c9b-43ea-9f27-b77e60800e6e"],
Cell[319589, 7430, 1155, 22, 73, "Input",ExpressionUUID->"751942f8-cf14-443d-b048-ba11556a2336"],
Cell[320747, 7454, 27424, 636, 2263, "Input",ExpressionUUID->"64b6823d-76c4-4afa-9b27-d2f27e8bc049"],
Cell[CellGroupData[{
Cell[348196, 8094, 981, 22, 30, "Input",ExpressionUUID->"4b8ff15f-245e-4e87-9771-2352f03cf0fb"],
Cell[349180, 8118, 217, 5, 34, "Output",ExpressionUUID->"2cb9a029-675f-40e2-8b7b-49393cc6b7a7"]
}, Open  ]],
Cell[349412, 8126, 638, 19, 35, "Text",ExpressionUUID->"4d4a8f96-47eb-494e-b7e0-e9ed15d4dc25"],
Cell[350053, 8147, 1155, 22, 73, "Input",ExpressionUUID->"28c75d1e-9dfe-4819-b410-7b2d58a0e5d2"],
Cell[351211, 8171, 27383, 635, 2263, "Input",ExpressionUUID->"9e08ada2-0a0a-4404-b7ec-a9e9e76941a5"],
Cell[CellGroupData[{
Cell[378619, 8810, 1030, 22, 30, "Input",ExpressionUUID->"f96b76a1-a4b9-4635-bff5-2895a3d03087"],
Cell[379652, 8834, 219, 5, 34, "Output",ExpressionUUID->"e82534b2-e395-4faf-9d8d-46ba0b5413c4"]
}, Open  ]],
Cell[379886, 8842, 589, 19, 35, "Text",ExpressionUUID->"5d8753af-1ddf-437a-b8f6-9912e86a480c"],
Cell[380478, 8863, 1155, 22, 73, "Input",ExpressionUUID->"f1619759-409b-4108-96dc-0fdc37d186c0"],
Cell[381636, 8887, 27309, 632, 2263, "Input",ExpressionUUID->"e927dee1-75b5-4e32-bf62-abb5127ce85f"],
Cell[CellGroupData[{
Cell[408970, 9523, 984, 22, 30, "Input",ExpressionUUID->"e08ad796-11bb-4cf2-9a18-ebccc70e386f"],
Cell[409957, 9547, 244, 5, 57, "Output",ExpressionUUID->"bde130a9-870d-4770-9364-eaa2df13b978"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[410250, 9558, 275, 4, 37, "Subsubsection",ExpressionUUID->"50ebd006-43ff-4d3b-8cf3-54bb32160ba4"],
Cell[410528, 9564, 1090, 21, 73, "Input",ExpressionUUID->"c3283197-6b6f-4dfb-b100-784d51b8081a"],
Cell[411621, 9587, 28282, 621, 2326, "Input",ExpressionUUID->"7a923940-6572-4a7b-9238-f4afcf7d81cc"],
Cell[439906, 10210, 786, 16, 73, "Input",ExpressionUUID->"b30aeff7-f482-4997-81aa-af09132f0f10"],
Cell[440695, 10228, 533, 12, 52, "Input",ExpressionUUID->"08185b33-3fc6-4eec-be77-88f191346db3"],
Cell[441231, 10242, 511, 13, 58, "Text",ExpressionUUID->"aa4234b0-0312-4d2a-96e0-65609c0c0d70"],
Cell[441745, 10257, 1201, 22, 73, "Input",ExpressionUUID->"d6b9d2a1-4a94-4db9-968e-4ae57a62f3cf"],
Cell[442949, 10281, 23409, 535, 2074, "Input",ExpressionUUID->"9960b40e-7ac1-455c-912e-07f84e08de56"],
Cell[466361, 10818, 413, 12, 35, "Text",ExpressionUUID->"f0f087b4-bd42-4480-8340-9bed458b30dc"],
Cell[466777, 10832, 1155, 22, 73, "Input",ExpressionUUID->"a5226f94-0e29-40ed-af1f-f830c841c2ba"],
Cell[467935, 10856, 23511, 537, 2074, "Input",ExpressionUUID->"787aa3f0-12e6-4e5f-8114-205792a632a4"],
Cell[491449, 11395, 407, 12, 35, "Text",ExpressionUUID->"ef7aebec-360d-4378-8ed6-7c0322e4b247"],
Cell[491859, 11409, 1155, 22, 73, "Input",ExpressionUUID->"680fdb46-6cf9-4f0b-b329-f27caeaf9fcc"],
Cell[493017, 11433, 23504, 537, 2074, "Input",ExpressionUUID->"c6aa1fa3-8d3d-4715-be1f-46393cc0cc9e"],
Cell[516524, 11972, 590, 19, 35, "Text",ExpressionUUID->"2607bd97-db4c-42d3-a60b-73fe344fcc2d"],
Cell[517117, 11993, 1155, 22, 73, "Input",ExpressionUUID->"a2e1268e-7e25-4e2f-a6bc-26df3319b3ad"],
Cell[518275, 12017, 23625, 540, 2095, "Input",ExpressionUUID->"1f59c6c2-d2ff-4c1e-abbf-29b40dc242e0"],
Cell[541903, 12559, 590, 19, 35, "Text",ExpressionUUID->"a7b80b81-788a-43cd-81fe-ed1f90d94cfb"],
Cell[542496, 12580, 1155, 22, 73, "Input",ExpressionUUID->"33ea58a4-568f-43d4-86ee-e9d2054b66b2"],
Cell[543654, 12604, 23598, 538, 2095, "Input",ExpressionUUID->"13c158ec-8810-47d8-82ca-d72d66bb7ad2"],
Cell[567255, 13144, 591, 19, 35, "Text",ExpressionUUID->"f681edd0-290b-480a-9c7c-b11beaf6c5b1"],
Cell[567849, 13165, 1155, 22, 73, "Input",ExpressionUUID->"dfddad52-2196-4d28-9b92-556ca0e6b48e"],
Cell[569007, 13189, 23610, 540, 2129, "Input",ExpressionUUID->"592fda28-5545-4909-a3d4-44744ae5163d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[592654, 13734, 319, 6, 37, "Subsubsection",ExpressionUUID->"f940348f-5dfd-4df4-b88f-06ed4b014ac8"],
Cell[592976, 13742, 939, 25, 157, "Input",ExpressionUUID->"6cd5acde-774c-4ba9-bef2-9116d5f6930a"],
Cell[593918, 13769, 13438, 338, 1031, "Input",ExpressionUUID->"6efaf84c-477d-4feb-a663-66f12685825a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[607393, 14112, 329, 6, 37, "Subsubsection",ExpressionUUID->"15735ed0-ba64-48f8-8bd5-07b7b591c4bf"],
Cell[607725, 14120, 1090, 21, 73, "Input",ExpressionUUID->"622208c3-8692-43ec-8f98-bd2e6c09a4b5"],
Cell[608818, 14143, 29082, 638, 2368, "Input",ExpressionUUID->"11334485-586f-4ccc-ba99-536f3fe32f8e"],
Cell[CellGroupData[{
Cell[637925, 14785, 1035, 24, 30, "Input",ExpressionUUID->"e8e34c6c-98e2-4bdf-8692-d17d07b27505"],
Cell[638963, 14811, 219, 5, 57, "Output",ExpressionUUID->"bfdfa375-4469-4dbf-94ad-81eb8a47fd36"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[639231, 14822, 254, 4, 37, "Subsubsection",ExpressionUUID->"7c3eb843-a8a3-452c-9aae-0a8a38b92607"],
Cell[639488, 14828, 1089, 20, 73, "Input",ExpressionUUID->"5227dd74-bea7-4ffa-a79e-9ffc8de402b6"],
Cell[640580, 14850, 26323, 568, 2305, "Input",ExpressionUUID->"fa247435-e8ac-4610-9bd2-4852b72b720d"],
Cell[666906, 15420, 737, 14, 52, "Input",ExpressionUUID->"c30e39f6-0f6c-4aeb-a4e9-234dfcc63db7"],
Cell[667646, 15436, 582, 12, 107, "Input",ExpressionUUID->"7fdfd805-f174-4494-a6ab-2c95d2574e6a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[668265, 15453, 275, 6, 37, "Subsubsection",ExpressionUUID->"df2bee65-4a8c-4d11-b456-c62a5f91bda1"],
Cell[668543, 15461, 5116, 133, 464, "Input",ExpressionUUID->"6874b50f-d81d-45ac-82e0-855d9b657009"],
Cell[673662, 15596, 565, 8, 52, "Input",ExpressionUUID->"67662155-cdbc-4e0f-bdfe-2340f5724d0e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[674276, 15610, 160, 3, 54, "Subsection",ExpressionUUID->"92da41d3-b62f-4824-a867-4310726e2a0a"],
Cell[674439, 15615, 13591, 333, 704, "Input",ExpressionUUID->"2bcc66f4-db6c-4799-920b-8ac6a710cc4e"],
Cell[CellGroupData[{
Cell[688055, 15952, 3598, 89, 247, "Input",ExpressionUUID->"22c3af70-d234-477f-9985-e80589d79f1d"],
Cell[691656, 16043, 54627, 1030, 389, "Output",ExpressionUUID->"a1aa53d5-57a0-4545-8676-817eaeed8fbd"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[746344, 17080, 254, 4, 53, "Section",ExpressionUUID->"677b1ddd-a248-454f-847a-6bbca111f75c"],
Cell[CellGroupData[{
Cell[746623, 17088, 283, 4, 54, "Subsection",ExpressionUUID->"ee1dbd80-d7f7-4ca7-847a-75e78deb7b73"],
Cell[CellGroupData[{
Cell[746931, 17096, 166, 3, 45, "Subsubsection",ExpressionUUID->"aea14744-c22e-4fd3-ab01-6958ba0eb59a"],
Cell[747100, 17101, 1140, 22, 73, "Input",ExpressionUUID->"6cb4a485-df97-46c0-8546-a7be07c658ba"],
Cell[748243, 17125, 29196, 655, 2312, "Input",ExpressionUUID->"ae4f95e1-92f3-4be5-879f-6fce85e7bcc9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[777476, 17785, 261, 5, 37, "Subsubsection",ExpressionUUID->"c2b038ee-9a35-498c-8172-1b8f52e11602"],
Cell[777740, 17792, 6456, 162, 559, "Input",ExpressionUUID->"1b1441b7-d6cf-4eea-9360-c849d906e491"],
Cell[784199, 17956, 476, 11, 73, "Input",ExpressionUUID->"cc7cc833-298c-4f68-b44c-51f2f30ffece"],
Cell[784678, 17969, 409, 9, 73, "Input",ExpressionUUID->"0f61b7f5-c295-4aaf-848e-e5262ab7abfc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[785124, 17983, 163, 3, 37, "Subsubsection",ExpressionUUID->"76cb288d-6d5f-4c1c-94e8-960cc62b82dc"],
Cell[CellGroupData[{
Cell[785312, 17990, 6494, 162, 429, "Input",ExpressionUUID->"ce9b7b6c-9c20-4f78-a302-fa58e38336ff"],
Cell[791809, 18154, 24407, 550, 594, "Output",ExpressionUUID->"1ada4fcc-a1e4-4def-8516-fce97762800b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[816289, 18712, 267, 6, 53, "Section",ExpressionUUID->"cc455533-5951-4f09-bb80-20ec97efb3c5"],
Cell[CellGroupData[{
Cell[816581, 18722, 283, 4, 54, "Subsection",ExpressionUUID->"7d4f932c-91ea-458e-8eaa-0432d2f8e562"],
Cell[CellGroupData[{
Cell[816889, 18730, 170, 3, 45, "Subsubsection",ExpressionUUID->"7f22f667-1850-425d-9a42-d05db29824f7"],
Cell[817062, 18735, 1129, 21, 73, "Input",ExpressionUUID->"3b1aabf7-0155-4d3b-baf0-4aa8d404d745"],
Cell[818194, 18758, 34250, 763, 2942, "Input",ExpressionUUID->"95807a0b-02bf-4a7d-8d15-eef67eb443ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[852481, 19526, 194, 3, 37, "Subsubsection",ExpressionUUID->"ddeea8d2-ae4a-42a6-8ed2-91a68d4d6162"],
Cell[852678, 19531, 8905, 242, 766, "Input",ExpressionUUID->"44c546b5-bbdf-4d67-8f7c-a4f6596d611a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[861632, 19779, 164, 3, 54, "Subsection",ExpressionUUID->"5c3470c4-9f55-4d33-b583-937becca98b1"],
Cell[861799, 19784, 16569, 407, 1021, "Input",ExpressionUUID->"5506503d-f4ad-41fe-9441-a25f0f92f6ab"],
Cell[CellGroupData[{
Cell[878393, 20195, 5068, 111, 274, "Input",ExpressionUUID->"12067359-056f-439a-9393-8e4c9bbaf194"],
Cell[883464, 20308, 33977, 748, 605, "Output",ExpressionUUID->"af108325-6941-47e6-a32b-dd7b3b2fd391"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[917502, 21063, 269, 6, 53, "Section",ExpressionUUID->"c764bffa-4c19-4f87-b39f-8fa67ccba2ec"],
Cell[CellGroupData[{
Cell[917796, 21073, 283, 4, 54, "Subsection",ExpressionUUID->"cd6e334c-b704-401f-83a4-15536cdc3a6f"],
Cell[CellGroupData[{
Cell[918104, 21081, 170, 3, 45, "Subsubsection",ExpressionUUID->"78b096b0-f921-484d-abaf-b6f7c5df7767"],
Cell[918277, 21086, 1129, 21, 73, "Input",ExpressionUUID->"7f988426-1d2d-49bb-9f30-d9c2664599b3"],
Cell[919409, 21109, 35435, 793, 2942, "Input",ExpressionUUID->"2539fe80-be59-4ef8-a6ce-137bfddf4d46"]
}, Open  ]],
Cell[CellGroupData[{
Cell[954881, 21907, 194, 3, 37, "Subsubsection",ExpressionUUID->"3d4c854b-db4e-4231-b396-b9263dcec9c5"],
Cell[955078, 21912, 8896, 241, 745, "Input",ExpressionUUID->"ce19eb42-0bfc-4773-80b0-985169aae2a3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[964023, 22159, 168, 3, 54, "Subsection",ExpressionUUID->"fff04eae-95dd-4c35-85b9-6268e780eea1"],
Cell[964194, 22164, 16048, 396, 1063, "Input",ExpressionUUID->"c06e1dc5-00b7-4fc2-96e7-c01a3b7a330d"],
Cell[CellGroupData[{
Cell[980267, 22564, 5246, 114, 276, "Input",ExpressionUUID->"07f60ac7-b575-4735-9310-f624693263c3"],
Cell[985516, 22680, 33712, 746, 605, "Output",ExpressionUUID->"e35b2fa8-6366-47f2-9e52-ffd85f04d98c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1019289, 23433, 363, 7, 53, "Section",ExpressionUUID->"a5ff8b1b-dca4-42a0-a529-bcd7e74e9f7e"],
Cell[CellGroupData[{
Cell[1019677, 23444, 558, 8, 54, "Subsection",ExpressionUUID->"e4479897-40ac-48a7-8537-311593f0454c"],
Cell[1020238, 23454, 27489, 631, 2423, "Input",ExpressionUUID->"32a90642-cd31-4568-833c-8d574f75af6c"],
Cell[1047730, 24087, 1801, 29, 73, "Input",ExpressionUUID->"02d977f0-b5ca-4203-9bcf-1f2976d766ad"],
Cell[1049534, 24118, 685, 14, 30, "Input",ExpressionUUID->"8bc2e9be-c0a6-4296-8458-13f9a871fee8"],
Cell[1050222, 24134, 597, 14, 30, "Input",ExpressionUUID->"74c0805e-51e1-4829-8100-89fe9ddd4ee5"],
Cell[1050822, 24150, 571, 14, 30, "Input",ExpressionUUID->"da97969f-3cd4-4b6f-a960-48c11f1fe34b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1051430, 24169, 159, 3, 38, "Subsection",ExpressionUUID->"36fa7a82-9264-4fd0-b78a-1c844dc82a42"],
Cell[1051592, 24174, 19109, 464, 1113, "Input",ExpressionUUID->"e3a6036d-b6d3-4300-a744-4aff9f19e318"],
Cell[CellGroupData[{
Cell[1070726, 24642, 3680, 92, 276, "Input",ExpressionUUID->"c0a15320-5a9b-4889-af4f-b1d9ae761800"],
Cell[1074409, 24736, 341187, 5797, 599, 275879, 4726, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"e6f89225-18dc-425b-a4fe-961206a4c848"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1415657, 30540, 322, 6, 53, "Section",ExpressionUUID->"9e9990be-590f-4938-a31a-ffdcd626af7c"],
Cell[1415982, 30548, 184, 3, 54, "Subsection",ExpressionUUID->"80541c09-bf96-4603-bbc2-587a86568fbd"],
Cell[CellGroupData[{
Cell[1416191, 30555, 274, 5, 37, "Subsection",ExpressionUUID->"d120667f-68bd-475c-984f-b1e470966287"],
Cell[1416468, 30562, 1148, 22, 73, "Input",ExpressionUUID->"48cea61b-f6a8-43ec-8c9f-c9ec6ead44ce"],
Cell[1417619, 30586, 39040, 841, 3080, "Input",ExpressionUUID->"a993aa59-e0f6-44d3-9531-c02c3d4f1b8f"],
Cell[1456662, 31429, 438, 10, 82, "Input",ExpressionUUID->"40ae94f6-88f0-402a-95fb-b573643979d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1457137, 31444, 276, 5, 37, "Subsection",ExpressionUUID->"3976df7c-7618-403a-b6ec-ba1313710de9"],
Cell[1457416, 31451, 3163, 83, 115, "Input",ExpressionUUID->"766b2a79-da83-4e39-9161-d3f0523f3743"],
Cell[1460582, 31536, 30999, 724, 2912, "Input",ExpressionUUID->"daa11fc8-1ac0-4835-91ff-38c332626f5f"],
Cell[1491584, 32262, 659, 14, 82, "Input",ExpressionUUID->"e251465f-25cc-4f6c-a0da-c3f887c713c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1492280, 32281, 277, 5, 37, "Subsection",ExpressionUUID->"b4ca0cfc-d4b5-49c9-89a4-c9d2d7e9e0df"],
Cell[1492560, 32288, 1151, 21, 94, "Input",ExpressionUUID->"422eb948-2c62-4d54-8932-6faa60d81342"],
Cell[1493714, 32311, 38537, 831, 3017, "Input",ExpressionUUID->"bdf78c03-ca88-48e8-9423-b46e87c03187"],
Cell[1532254, 33144, 328, 7, 60, "Input",ExpressionUUID->"ecb12596-2f9d-4f35-a308-22324047b738"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1532619, 33156, 277, 5, 37, "Subsection",ExpressionUUID->"d5a01e2e-45e5-43c5-a833-a5ec0348badb"],
Cell[1532899, 33163, 3163, 83, 115, "Input",ExpressionUUID->"14857592-ab30-4b92-8568-5bb4b2b490e5"],
Cell[1536065, 33248, 31143, 725, 2912, "Input",ExpressionUUID->"16411036-096e-459c-b778-9edecd8362ca"],
Cell[1567211, 33975, 627, 12, 82, "Input",ExpressionUUID->"55f94681-a84d-494f-a953-5b431319f740"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1567875, 33992, 224, 3, 37, "Subsection",ExpressionUUID->"d1f7ed48-d05b-4214-918f-c53850b7d971"],
Cell[1568102, 33997, 1098, 25, 115, "Input",ExpressionUUID->"3b81099f-29b9-4b99-8c9f-e468d00a0509"],
Cell[1569203, 34024, 9975, 229, 779, "Input",ExpressionUUID->"e45bdd39-642a-4b96-910a-2321dba48a3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1579215, 34258, 162, 3, 38, "Subsection",ExpressionUUID->"98fec004-205b-4e46-8f39-2f1696e29f45"],
Cell[1579380, 34263, 13545, 336, 803, "Input",ExpressionUUID->"57d64b52-bfb1-4b59-b37b-cd839b4f5bf0"],
Cell[1592928, 34601, 1319, 30, 115, "Input",ExpressionUUID->"e6e7b8aa-4d62-4d5d-9c30-5fb9dccbcdac"],
Cell[CellGroupData[{
Cell[1594272, 34635, 2648, 64, 188, "Input",ExpressionUUID->"14db7a86-18d0-41bb-ba77-7a2228511f1d"],
Cell[1596923, 34701, 21484, 425, 861, "Output",ExpressionUUID->"66f280f2-500d-4d47-902f-28c26d471552"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1618444, 35131, 338, 8, 30, "Input",ExpressionUUID->"3d136fa1-53d4-481d-9905-2e3ca9de8c11"],
Cell[1618785, 35141, 228, 3, 34, "Output",ExpressionUUID->"cc255ffe-350a-461a-aaa5-ce0e4371f00a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1619074, 35151, 333, 7, 91, "Section",ExpressionUUID->"852b1c09-a002-43ac-bfbc-b2b0f7e73e0a"],
Cell[CellGroupData[{
Cell[1619432, 35162, 355, 6, 54, "Subsection",ExpressionUUID->"e53f3936-0c54-40a8-8284-3c6afceab94f"],
Cell[CellGroupData[{
Cell[1619812, 35172, 158, 3, 45, "Subsubsection",ExpressionUUID->"a02df39a-fe7c-471a-b551-28eb4cfb8a0d"],
Cell[1619973, 35177, 1129, 21, 73, "Input",ExpressionUUID->"14f5dc0e-490b-4939-a989-4c1436e85a27"],
Cell[1621105, 35200, 18269, 489, 1932, "Input",ExpressionUUID->"098e6716-0968-4ce4-9bb5-8917faabf4d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1639411, 35694, 211, 4, 37, "Subsubsection",ExpressionUUID->"5af3c812-f427-4aeb-bd2b-36498e22a024"],
Cell[1639625, 35700, 1129, 21, 73, "Input",ExpressionUUID->"02ba2fff-9f89-459a-a527-e55b7b467add"],
Cell[1640757, 35723, 18425, 493, 1953, "Input",ExpressionUUID->"59a55bcf-d963-4a0e-b5d7-cd410c693113"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1659219, 36221, 211, 4, 37, "Subsubsection",ExpressionUUID->"2ac27891-7593-45db-a1df-7d489f693713"],
Cell[1659433, 36227, 1129, 21, 73, "Input",ExpressionUUID->"8a63db7d-2b8d-4795-b870-0e8374812bd0"],
Cell[1660565, 36250, 18937, 502, 2016, "Input",ExpressionUUID->"691ef095-4da3-4c18-8b2a-16c5cc4dea18"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1679551, 36758, 332, 7, 38, "Subsection",ExpressionUUID->"abeffc88-68d8-4a64-9e86-bee6006470a5"],
Cell[1679886, 36767, 51951, 1300, 2874, "Input",ExpressionUUID->"7d58e060-0b4b-44ae-8ad9-ffaebc99a49c"],
Cell[CellGroupData[{
Cell[1731862, 38071, 2457, 61, 163, "Input",ExpressionUUID->"d91f9993-998b-4b05-b5db-b91fe2cbf1c5"],
Cell[1734322, 38134, 598430, 10184, 1188, 474216, 8146, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"d89e334e-3da2-44ef-9000-7c14399a553b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2332801, 48324, 363, 7, 38, "Subsection",ExpressionUUID->"cfa310d7-edfb-41a0-937e-6f4f08fa2eb7"],
Cell[2333167, 48333, 60341, 1533, 2987, "Input",ExpressionUUID->"e00baa5b-4fc9-4bf3-9ece-d58838893891"],
Cell[CellGroupData[{
Cell[2393533, 49870, 3800, 96, 247, "Input",ExpressionUUID->"bf36dddb-d2c6-46a4-87eb-84295b7d35b7"],
Cell[2397336, 49968, 610277, 10446, 1122, 496039, 8572, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"d86fc605-dd2c-4052-87d6-e006497c98c0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3007674, 60421, 291, 4, 53, "Section",ExpressionUUID->"4c4bfcf2-ea3b-49db-9b8d-fb0788e9f59a"],
Cell[CellGroupData[{
Cell[3007990, 60429, 216, 4, 54, "Subsection",ExpressionUUID->"1a3fa8f8-ff42-42cf-8a07-f1d16c525401"],
Cell[3008209, 60435, 1129, 21, 73, "Input",ExpressionUUID->"7e30e19f-5b57-4a81-bab9-56966e00218c"],
Cell[3009341, 60458, 23352, 543, 2149, "Input",ExpressionUUID->"62661c2a-0fef-4bf6-94ff-b632c4d46b4e"],
Cell[3032696, 61003, 1086, 28, 73, "Input",ExpressionUUID->"eaa87126-d966-402f-81bc-ef8d153a32d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3033819, 61036, 160, 3, 38, "Subsection",ExpressionUUID->"664b4812-2cd3-4559-a947-0a2a0772d77b"],
Cell[3033982, 61041, 25502, 639, 1339, "Input",ExpressionUUID->"4deaa5c5-bd8f-47b7-b6bc-5247f70465b9"],
Cell[CellGroupData[{
Cell[3059509, 61684, 3123, 81, 184, "Input",ExpressionUUID->"3017b337-766c-49c3-a60c-11c64cad6b93"],
Cell[3062635, 61767, 286845, 4931, 519, "Output",ExpressionUUID->"8d81277b-ec71-4522-97c3-5ac3950d8453"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3349541, 66705, 289, 4, 53, "Section",ExpressionUUID->"3ccce9be-50a0-4245-af92-8f898becb10a"],
Cell[CellGroupData[{
Cell[3349855, 66713, 171, 3, 54, "Subsection",ExpressionUUID->"3e2b8414-caac-45f5-b573-fd0bc6977df0"],
Cell[CellGroupData[{
Cell[3350051, 66720, 170, 3, 45, "Subsubsection",ExpressionUUID->"4942f2d2-554d-4113-aed0-b7a82e8b65fe"],
Cell[3350224, 66725, 1129, 21, 73, "Input",ExpressionUUID->"649a2ede-36a4-46bf-a135-258371365444"],
Cell[3351356, 66748, 35365, 794, 2912, "Input",ExpressionUUID->"6881eb2e-1530-41d2-bb90-67668da6d8c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3386758, 67547, 194, 3, 37, "Subsubsection",ExpressionUUID->"92df2e4c-9a1b-4e23-bd9d-5776df60c870"],
Cell[3386955, 67552, 6465, 164, 472, "Input",ExpressionUUID->"9bdd187d-8a9b-4bc9-a986-2d240c80aaca"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3393469, 67722, 176, 3, 54, "Subsection",ExpressionUUID->"ccf5c3dc-8fc0-4a06-a7f5-b4c02a12d57f"],
Cell[CellGroupData[{
Cell[3393670, 67729, 170, 3, 45, "Subsubsection",ExpressionUUID->"4c5a1f72-4b64-48b8-849b-117b9f899c14"],
Cell[3393843, 67734, 1131, 21, 73, "Input",ExpressionUUID->"511d02d2-e92d-427d-b9ae-24e841c24512"],
Cell[3394977, 67757, 35633, 799, 2933, "Input",ExpressionUUID->"ce96ef9c-6a99-499a-b6c2-5141144cae91"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3430647, 68561, 194, 3, 37, "Subsubsection",ExpressionUUID->"d1cac1db-91d4-42a2-8a66-dc282fa574ed"],
Cell[3430844, 68566, 6455, 165, 451, "Input",ExpressionUUID->"ff615bf6-ee5f-42cb-833c-0e20863836d7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3437348, 68737, 166, 3, 38, "Subsection",ExpressionUUID->"35df5950-08b0-41ba-b68c-3f74ddd1f74f"],
Cell[3437517, 68742, 11115, 292, 618, "Input",ExpressionUUID->"c6fef136-f332-4eaf-8e32-bee30ff3b5ca"],
Cell[CellGroupData[{
Cell[3448657, 69038, 3400, 84, 247, "Input",ExpressionUUID->"65f08fdc-e8ad-44d7-a963-e21226c5bb5c"],
Cell[3452060, 69124, 16249, 356, 637, "Output",ExpressionUUID->"6a542643-cfb4-45ca-8f49-a74eed78e6d0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3468370, 69487, 239, 4, 53, "Section",ExpressionUUID->"c2ae4c32-a61b-4eb4-92f1-c5a82b569f0d"],
Cell[CellGroupData[{
Cell[3468634, 69495, 280, 4, 54, "Subsection",ExpressionUUID->"43d35f0c-9798-4f4a-b37d-84bc1437dbbf"],
Cell[CellGroupData[{
Cell[3468939, 69503, 167, 3, 45, "Subsubsection",ExpressionUUID->"541017af-790e-4a7b-b5e0-7a38e1177729"],
Cell[3469109, 69508, 1334, 24, 73, "Input",ExpressionUUID->"14ab4abc-aee4-4579-9007-cecd11b4a5cf"],
Cell[3470446, 69534, 32942, 670, 2353, "Input",ExpressionUUID->"98a00e71-a7ef-4ccc-9bdd-64efe90cbc53"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3503425, 70209, 167, 3, 37, "Subsubsection",ExpressionUUID->"04d43385-89f9-461f-9cac-cce42f12e68a"],
Cell[3503595, 70214, 3919, 104, 430, "Input",ExpressionUUID->"707ce429-7d8c-4b07-97fc-ca8abb4a8c29"],
Cell[3507517, 70320, 128, 3, 30, "Input",ExpressionUUID->"9f6c97b6-a59f-4955-a4ed-2018c2281e9c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3507694, 70329, 160, 3, 54, "Subsection",ExpressionUUID->"9662ae6e-e066-4f3f-a8bb-bcfb567ea6db"],
Cell[3507857, 70334, 33051, 831, 1933, "Input",ExpressionUUID->"ba12b727-8869-46c0-9882-6d91e34817bf"],
Cell[CellGroupData[{
Cell[3540933, 71169, 5247, 114, 249, "Input",ExpressionUUID->"c7fe0972-8223-4257-8847-1491733fbbe9"],
Cell[3546183, 71285, 474880, 8048, 552, "Output",ExpressionUUID->"4c78d88a-62b5-491d-a205-7934926f8a75"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

